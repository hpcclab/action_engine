"```yaml\napiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName:
http-wf-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n    \
\  tasks:\n      - name: t1\n        template: tti-Painting-Art\n        arguments:\n\
\          parameters:\n          - name: prompt\n            value: \"Create a digital
art image of a serene mountain landscape during sunrise.\"\n    \n      - name: t2\n\
\        template: tti-Pastel-Art\n        arguments:\n          parameters:\n   \
\       - name: prompt\n            value: \"Create a pastel art image of the same
mountain landscape during sunset.\"\n        dependencies: [t1]\n    \n      - name:
t3\n        template: tti-Sketching-Art\n        arguments:\n          parameters:\n\
\          - name: prompt\n            value: \"Create a sketching art image of the
mountain landscape at night with a starry sky.\"\n        dependencies: [t1]\n   \
\ \n      - name: t4\n        template: Image-Resizing\n        arguments:\n     \
\     parameters:\n          - name: width\n            value: 1920\n          - name:
height\n            value: 1080\n          - name: file\n            value: \"{{tasks.t1.outputs.artifact}}\"\
\ # Assuming 'artifact' is the output of t1 containing the image file.\n        dependencies:
[t1]\n    \n      - name: t5\n        template: Image-Enhancement\n        arguments:\n\
\          parameters:\n          - name: file\n            value: \"{{tasks.t4.outputs.artifact}}\"\
\ # Assuming 'artifact' is the output of t4 containing the resized image file.\n \
\       dependencies: [t4]\n    \n      - name: t6\n        template: tti-Mosaic-Art\n\
\        arguments:\n          parameters:\n          - name: prompt\n           \
\ value: \"Email the final digital art image of the serene mountain landscape during
sunrise to the client for review.\"\n        dependencies: [t5]\n  \n  templates:\n\
\  - name: tti-Painting-Art\n    inputs:\n      parameters:\n      - name: prompt\n\
\    http:\n      method: POST\n      url: http://your-api-endpoint/tti-Painting-Art\n\
\      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n    \n  - name: tti-Pastel-Art\n    inputs:\n      parameters:\n      - name:
prompt\n    http:\n      method: POST\n      url: http://your-api-endpoint/tti-Pastel-Art\n\
\      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n    \n  - name: tti-Sketching-Art\n    inputs:\n      parameters:\n      -
name: prompt\n    http:\n      method: POST\n      url: http://your-api-endpoint/tti-Sketching-Art\n\
\      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n    \n  - name: Image-Resizing\n    inputs:\n      parameters:\n      - name:
width\n      - name: height\n      - name: file\n    http:\n      method: POST\n \
\     url: http://your-api-endpoint/resize_image/\n      headers:\n        Content-Type:
multipart/form-data\n      body: '{\n          \"width\": \"{{inputs.parameters.width}}\"\
, \n          \"height\": \"{{inputs.parameters.height}}\",\n          \"file\": \"\
{{inputs.parameters.file}}\"\n        }'\n      successCondition: response.statusCode
== 200\n    \n  - name: Image-Enhancement\n    inputs:\n      parameters:\n      -
name: file\n    http:\n      method: POST\n      url: http://your-api-endpoint/image_enhance/\n\
\      headers:\n        Content-Type: multipart/form-data\n      body: '{\"file\"\
: \"{{inputs.parameters.file}}\"}'\n      successCondition: response.statusCode ==
200\n    \n  - name: tti-Mosaic-Art\n    inputs:\n      parameters:\n      - name:
prompt\n    http:\n      method: POST\n      url: http://your-api-endpoint/tti-Mosaic-Art\n\
\      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n```"
