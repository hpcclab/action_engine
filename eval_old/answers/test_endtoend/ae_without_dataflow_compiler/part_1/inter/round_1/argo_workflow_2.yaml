apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  arguments:
    parameters:
    - name: width
    - name: height
    - name: prompt
  entrypoint: main
  templates:
  - name: main
    inputs:
    parameters:
    - name: width
    - name: height
    - name: prompt
    dag:
      tasks:
      - name: t1
        template: tti-charcoal-art
        arguments:
          parameters:
          - name: prompt
            value: '{{inputs.parameters.prompt}}'
        dependencies: []

      - name: t2
        template: image-resizing
        arguments:
          parameters:
          - name: width
            value: '{{inputs.parameters.width}}'
          - name: height
            value: '{{inputs.parameters.height}}'
          - name: file
            value: '{{tasks.t1.outputs.parameters.file}}'
        dependencies: [t1]

      - name: t3
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t2.outputs.parameters.file}}'
        dependencies: [t2]

  - name: tti-charcoal-art
    inputs:
    parameters:
    - name: prompt
    http:
      method: POST
      url: http://localhost:8000/generate_charcoal_image/
      parameters:
      - name: prompt
        value: '{{inputs.parameters.prompt}}'
      successCondition: response.statusCode == 200
      output:
        name: file
        valueFrom: /tmp/generated_img.png

  - name: image-resizing
    inputs:
    parameters:
    - name: width
    - name: height
    - name: file
    http:
      method: POST
      url: http://localhost:8000/resize_image/
      parameters:
      - name: width
        value: '{{inputs.parameters.width}}'
      - name: height
        value: '{{inputs.parameters.height}}'
      - name: file
        value: '{{inputs.parameters.file}}'
      successCondition: response.statusCode == 200
      output:
        name: file
        valueFrom: /tmp/resized_image.png

  - name: image-to-pdf-conversion
    inputs:
    parameters:
    - name: file
    http:
      method: POST
      url: http://localhost:8000/convert_to_pdf/
      parameters:
      - name: file
        value: '{{inputs.parameters.file}}'
      successCondition: response.statusCode == 200
      output:
        name: file
        valueFrom: /tmp/output.pdf
