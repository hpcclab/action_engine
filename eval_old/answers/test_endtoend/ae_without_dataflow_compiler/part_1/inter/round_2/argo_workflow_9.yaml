apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      tasks:
      - name: t1
        template: tti-sketching-art
        arguments:
          parameters:
          - name: prompt
            value: Create a sketch of a castle surrounded by a dense forest.
      - name: t2
        template: image-resizing
        arguments:
          parameters:
          - name: width
            value: 1280
          - name: height
            value: 720
          - name: file
            value: '{{tasks.t1.outputs.result}}'
        dependencies: [t1]
      - name: t3
        template: image-enhancement
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t2.outputs.result}}'
        dependencies: [t2]
      - name: t4
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t3.outputs.result}}'
        dependencies: [t3]
      - name: t5
        template: email-pdf-file
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t4.outputs.result}}'
        dependencies: [t4]

  - name: tti-sketching-art
    inputs:
      parameters:
      - name: prompt
    http:
      method: POST
      url: http://localhost:8000/generate_sketching_image/
      successCondition: response.statusCode == 200

  - name: image-resizing
    inputs:
      parameters:
      - name: width
      - name: height
      - name: file
    http:
      method: POST
      url: http://localhost:8000/resize_image/
      successCondition: response.statusCode == 200

  - name: image-enhancement
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://localhost:8000/image_enhance/
      successCondition: response.statusCode == 200

  - name: image-to-pdf-conversion
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://localhost:8000/convert_to_pdf/
      successCondition: response.statusCode == 200

  - name: email-pdf-file
    inputs:
      parameters:
      - name: file
    script:
      image: python:3.8
      command: [python]
      source: |
        import requests
        import json
        import sys

        file_path = sys.argv[1]
        email_body = {
            "to": "colleague@example.com",
            "subject": "PDF of Enhanced Sketch",
            "body": "Attached is the PDF of the enhanced sketch of the castle surrounded by a dense forest.",
            "attachments": [file_path]
        }

        response = requests.post("http://localhost:8000/send_email/", data=json.dumps(email_body), headers={"Content-Type": "application/json"})

        if response.status_code != 200:
            raise Exception(f"Failed to send email: {response.text}")
      args:
      - '{{inputs.parameters.file}}'
