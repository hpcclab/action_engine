apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      - name: t1
        template: tti_Futuristic_Art
        arguments:
          parameters:
          - name: prompt
            value: Create a digital art piece of a futuristic cityscape at night,
              with neon lights and flying cars.
      - name: t2
        dependencies: [t1]
        template: Image_Resizing
        arguments:
          parameters:
          - name: width
            value: 1920
          - name: height
            value: 1080
          - name: file
            value: '{{tasks.t1.outputs.art}}'
      - name: t3
        dependencies: [t2]
        template: Image_Enhancement
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t2.outputs.resizedImage}}'
      - name: t4
        dependencies: [t3]
        template: image_to_pdf_conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t3.outputs.enhancedImage}}'
      - name: t5
        dependencies: [t4]
        template: send_pdf_to_email
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t4.outputs.pdfFile}}'

  - name: tti_Futuristic_Art
    inputs:
      parameters:
      - name: prompt
    http:
      method: POST
      url: http://your-api-endpoint.com/generate_futuristic_image/
      headers: {}
      body: |
        {
          "prompt": "{{inputs.parameters.prompt}}"
        }
      successCondition: response.statusCode == 200
      output:
        name: art
        format: binary_image_file

  - name: Image_Resizing
    inputs:
      parameters:
      - name: width
      - name: height
      - name: file
    http:
      method: POST
      url: http://your-api-endpoint.com/resize_image/
      headers: {}
      body: |
        {
          "width": "{{inputs.parameters.width}}",
          "height": "{{inputs.parameters.height}}",
          "file": "{{inputs.parameters.file}}"
        }
      successCondition: response.statusCode == 200
      output:
        name: resizedImage
        format: binary_image_file

  - name: Image_Enhancement
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://your-api-endpoint.com/image_enhance/
      headers: {}
      body: |
        {
          "file": "{{inputs.parameters.file}}"
        }
      successCondition: response.statusCode == 200
      output:
        name: enhancedImage
        format: binary_image_file

  - name: image_to_pdf_conversion
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://your-api-endpoint.com/convert_to_pdf/
      headers: {}
      body: |
        {
          "file": "{{inputs.parameters.file}}"
        }
      successCondition: response.statusCode == 200
      output:
        name: pdfFile
        format: binary_image_file

  - name: send_pdf_to_email
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://your-api-endpoint.com/send_email/
      headers: {}
      body: |
        {
          "file": "{{inputs.parameters.file}}",
          "email": "user@example.com"
        }
      successCondition: response.statusCode == 200
