"```yaml\napiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName:
http-wf-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n    \
\  tasks:\n      - name: t1\n        template: tti-Pastel-Art-Generate\n        arguments:\n\
\          parameters:\n          - name: prompt\n            value: \"Create a pastel
art image of a serene beach at sunset with palm trees.\"\n      - name: t2\n     \
\   dependencies: [t1]\n        template: tti-Pastel-Art-Convert\n        arguments:\n\
\          parameters:\n          - name: prompt\n            value: '{{tasks.t1.outputs.result}}'\n\
\      - name: t3\n        dependencies: [t2]\n        template: Image-Resizing\n\
\        arguments:\n          parameters:\n          - name: width\n            value:
1024\n          - name: height\n            value: 768\n          - name: file\n \
\           value: '{{tasks.t2.outputs.result}}'\n      - name: t4\n        dependencies:
[t3]\n        template: Image-Enhancement\n        arguments:\n          parameters:\n\
\          - name: file\n            value: '{{tasks.t3.outputs.result}}'\n      -
name: t5\n        dependencies: [t4]\n        template: send-email\n        arguments:\n\
\          parameters:\n          - name: file\n            value: '{{tasks.t4.outputs.result}}'\n\
\n  templates:\n  - name: tti-Pastel-Art-Generate\n    inputs:\n      parameters:\n\
\      - name: prompt\n    http:\n      method: POST\n      url: \"http://pastel-art-api:8080/generate_pastel_image/\"\
\n      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"\
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n\n  - name: tti-Pastel-Art-Convert\n    inputs:\n      parameters:\n     \
\ - name: prompt\n    http:\n      method: POST\n      url: \"http://pastel-art-api:8080/convert_image/\"\
\n      headers:\n        Content-Type: application/json\n      body: '{\"prompt\"\
: \"{{inputs.parameters.prompt}}\"}'\n      successCondition: response.statusCode
== 200\n\n  - name: Image-Resizing\n    inputs:\n      parameters:\n      - name:
width\n      - name: height\n      - name: file\n    http:\n      method: POST\n \
\     url: \"http://image-resizing-api:8080/resize_image/\"\n      headers:\n    \
\    Content-Type: multipart/form-data\n      form:\n        width: \"{{inputs.parameters.width}}\"\
\n        height: \"{{inputs.parameters.height}}\"\n        file: \"{{inputs.parameters.file}}\"\
\n      successCondition: response.statusCode == 200\n \n  - name: Image-Enhancement\n\
\    inputs:\n      parameters:\n      - name: file\n    http:\n      method: POST\n\
\      url: \"http://image-enhancement-api:8080/image_enhance/\"\n      headers:\n\
\        Content-Type: multipart/form-data\n      form:\n        file: \"{{inputs.parameters.file}}\"\
\n      successCondition: response.statusCode == 200\n\n  - name: send-email\n   \
\ inputs:\n      parameters:\n      - name: file\n    script:\n      image: python:3.8\n\
\      command: [python]\n      source: |\n        import smtplib\n        from email.mime.multipart
import MIMEMultipart\n        from email.mime.base import MIMEBase\n        from email
import encoders\n\n        from urllib import request\n\n        def download_file(url,
file_name):\n            request.urlretrieve(url, file_name)\n\n        file_url =
\"{{inputs.parameters.file}}\"\n        file_name = \"enhanced_image.jpg\"\n     \
\   download_file(file_url, file_name)\n\n        from_addr = \"your_email@example.com\"\
\n        to_addr = \"friend@example.com\"\n        msg = MIMEMultipart()\n      \
\  msg['From'] = from_addr\n        msg['To'] = to_addr\n        msg['Subject'] =
\"Enhanced JPEG Image\"\n\n        part = MIMEBase('application', \"octet-stream\"\
)\n        part.set_payload(open(file_name, \"rb\").read())\n        encoders.encode_base64(part)\n\
\        part.add_header('Content-Disposition', 'attachment; filename=\"{}\"'.format(file_name))\n\
\        msg.attach(part)\n\n        server = smtplib.SMTP('smtp.example.com', 587)\n\
\        server.starttls()\n        server.login(from_addr, \"your_email_password\"\
)\n        server.sendmail(from_addr, to_addr, msg.as_string())\n        server.quit()\n\
```"
