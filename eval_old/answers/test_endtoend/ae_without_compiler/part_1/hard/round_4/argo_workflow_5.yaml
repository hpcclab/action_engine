apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      tasks:
      - name: t1
        template: tti-Futuristic-Art
        arguments:
          parameters:
          - name: prompt
            value: iPhone simulation
        dependencies: []
      - name: t2
        template: tti-Futuristic-Art
        arguments:
          parameters:
          - name: prompt
            value: '{{tasks.t1.outputs.result}}'
        dependencies: [t1]
      - name: t3
        template: image-resizing
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t1.outputs.result}}'  # Assuming the output is a file
          - name: width
            value: 500
          - name: height
            value: 500
        dependencies: [t1]
      - name: t4
        template: image-enhancement
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t1.outputs.result}}'  # Assuming the output is a file
        dependencies: [t1]
      - name: t5
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t4.outputs.result}}'  # Assuming the output is a file
        dependencies: [t2, t3, t4]
      - name: t6
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t5.outputs.result}}'  # Assuming the output is a file
        dependencies: [t5]
      - name: t7
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t5.outputs.result}}'  # Assuming the output is a file
        dependencies: [t5]
      - name: t8
        template: image-to-pdf-conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t5.outputs.result}}'  # Assuming the output is a file
        dependencies: [t5]
  - name: tti-Futuristic-Art
    inputs:
      parameters:
      - name: prompt
    http:
      method: POST
      url: http://example.com/generate_futuristic_image/
      headers: []
      body: '{"prompt": "{{inputs.parameters.prompt}}"}'
      successCondition: response.status == 200
  - name: image-resizing
    inputs:
      parameters:
      - name: width
      - name: height
      - name: file
    http:
      method: POST
      url: http://example.com/resize_image/
      headers: []
      body: '{"width": {{inputs.parameters.width}}, "height": {{inputs.parameters.height}},
        "file": "{{inputs.parameters.file}}"}'
      successCondition: response.status == 200
  - name: image-enhancement
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://example.com/image_enhance/
      headers: []
      body: '{"file": "{{inputs.parameters.file}}"}'
      successCondition: response.status == 200
  - name: image-to-pdf-conversion
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://example.com/convert_to_pdf/
      headers: []
      body: '{"file": "{{inputs.parameters.file}}"}'
      successCondition: response.status == 200
