apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      tasks:
      - name: t1
        template: tti_Futuristic_Art
        arguments:
          parameters:
          - name: prompt
            value: Futuristic cityscape at night
      - name: t2
        dependencies: [t1]
        template: image_to_pdf_conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t1.outputs.artwork}}'
      - name: t3
        dependencies: [t2]
        template: Image_Resizing
        arguments:
          parameters:
          - name: width
            value: '1920'
          - name: height
            value: '1080'
          - name: file
            value: '{{tasks.t2.outputs.pdf}}'
      - name: t4
        dependencies: [t3]
        template: Image_Enhancement
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t3.outputs.resized_image}}'
      - name: t5
        dependencies: [t4]
        template: send_email
        arguments:
          parameters:
          - name: sender
            value: sender@example.com
          - name: receiver
            value: receiver@example.com
          - name: msg_text
            value: Please find the enhanced image attached.
          - name: msg_subject
            value: Enhanced Futuristic Cityscape Image
          - name: file
            value: '{{tasks.t4.outputs.enhanced_image}}'

  - name: tti_Futuristic_Art
    inputs:
      parameters:
      - name: prompt
    http:
      method: POST
      url: http://api-server/tti_Futuristic_Art
      headers:
        Content-Type: application/json
      body: '{"prompt": "{{inputs.parameters.prompt}}"}'
      successCondition: response.statusCode == 200
    outputs:
      parameters:
      - name: artwork
        valueFrom:
          jsonPath: $.artwork_path

  - name: image_to_pdf_conversion
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://api-server/image_to_pdf_conversion
      headers:
        Content-Type: multipart/form-data
      body: '{"file": "{{inputs.parameters.file}}"}'
      successCondition: response.statusCode == 200
    outputs:
      parameters:
      - name: pdf
        valueFrom:
          jsonPath: $.pdf_path

  - name: Image_Resizing
    inputs:
      parameters:
      - name: width
      - name: height
      - name: file
    http:
      method: POST
      url: http://api-server/resize_image
      headers:
        Content-Type: multipart/form-data
      body: '{"width": "{{inputs.parameters.width}}", "height": "{{inputs.parameters.height}}",
        "file": "{{inputs.parameters.file}}"}'
      successCondition: response.statusCode == 200
    outputs:
      parameters:
      - name: resized_image
        valueFrom:
          jsonPath: $.resized_image_path

  - name: Image_Enhancement
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://api-server/image_enhance
      headers:
        Content-Type: multipart/form-data
      body: '{"file": "{{inputs.parameters.file}}"}'
      successCondition: response.statusCode == 200
    outputs:
      parameters:
      - name: enhanced_image
        valueFrom:
          jsonPath: $.enhanced_image_path

  - name: send_email
    inputs:
      parameters:
      - name: sender
      - name: receiver
      - name: msg_text
      - name: msg_subject
      - name: file
    http:
      method: POST
      url: http://api-server/send_email
      headers:
        Content-Type: multipart/form-data
      body: '{"sender": "{{inputs.parameters.sender}}", "receiver": "{{inputs.parameters.receiver}}",
        "msg_text": "{{inputs.parameters.msg_text}}", "msg_subject": "{{inputs.parameters.msg_subject}}",
        "file": "{{inputs.parameters.file}}"}'
      successCondition: response.statusCode == 200
    outputs:
      parameters:
      - name: email_status
        valueFrom:
          jsonPath: $.status
