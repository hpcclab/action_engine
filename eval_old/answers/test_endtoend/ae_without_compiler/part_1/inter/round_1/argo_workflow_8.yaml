apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: http-wf-
spec:
  arguments:
    parameters:
    - name: prompt
    - name: width
    - name: height
  entrypoint: main
  templates:
  - name: main
    inputs:
      parameters:
      - name: prompt
      - name: width
      - name: height
    dag:
      tasks:
      - name: t1
        template: tti_Futuristic_Art
        arguments:
          parameters:
          - name: prompt
            value: '{{inputs.parameters.prompt}}'
        dependencies: []
      - name: t2
        template: Image_Resizing
        arguments:
          parameters:
          - name: width
            value: '{{inputs.parameters.width}}'
          - name: height
            value: '{{inputs.parameters.height}}'
          - name: file
            value: '{{tasks.t1.outputs.result}}'
        dependencies: [t1]
      - name: t3
        template: Image_Enhancement
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t2.outputs.result}}'
        dependencies: [t2]
      - name: t4
        template: image_to_pdf_conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t3.outputs.result}}'
        dependencies: [t3]
      - name: t5
        template: image_to_pdf_conversion
        arguments:
          parameters:
          - name: file
            value: '{{tasks.t4.outputs.result}}'
        dependencies: [t4]

  - name: tti_Futuristic_Art
    inputs:
      parameters:
      - name: prompt
    http:
      method: POST
      url: http://example.com/generate_futuristic_art/
      body: "{ 'prompt': '{{inputs.parameters.prompt}}' }"
      successCondition: response.statusCode == 200

  - name: Image_Resizing
    inputs:
      parameters:
      - name: width
      - name: height
      - name: file
    http:
      method: POST
      url: http://example.com/resize_image/
      body: "{ 'width': '{{inputs.parameters.width}}', 'height': '{{inputs.parameters.height}}',
        'file': '{{inputs.parameters.file}}' }"
      successCondition: response.statusCode == 200

  - name: Image_Enhancement
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://example.com/enhance_image/
      body: "{ 'file': '{{inputs.parameters.file}}' }"
      successCondition: response.statusCode == 200

  - name: image_to_pdf_conversion
    inputs:
      parameters:
      - name: file
    http:
      method: POST
      url: http://example.com/convert_to_pdf/
      body: "{ 'file': '{{inputs.parameters.file}}' }"
      successCondition: response.statusCode == 200
