[
    {
        "Id": 18,
        "Selected_Functions": [
            {
                "name": "Songname2ID",
                "format": "Songname2ID(song_name) -> song_ID",
                "Id": 7,
                "description": "This API is to convert a song's name to song ID.",
                "summary": "This API is to convert a song's name to song ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_name",
                        "description": "the name of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_ID",
                        "description": "the ID of the song",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the song name 'Hey Jude' to a song ID."
            },
            {
                "name": "Playlistname2ID",
                "format": "Playlistname2ID(playlist_name) -> playlist_ID",
                "Id": 2,
                "description": "This API is to convert a playlist name to a playlist ID.",
                "summary": "This API is to convert a playlist name to a playlist ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "playlist_name",
                        "description": "the name of the playlist",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the playlist name 'Classic Disco Hits' to a playlist ID."
            },
            {
                "name": "AddSongToPlaylist",
                "format": "AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",
                "Id": 3,
                "description": "This API is to add a song to a playlist.",
                "summary": "This API is to add a song to a playlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_name",
                        "description": "the name of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_songs",
                        "description": "a list of the songs in the playlist",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the song 'Hey Jude' to Emma's 'Classic Disco Hits' playlist."
            }
        ]
    },
    {
        "Id": 20,
        "Selected_Functions": [
            {
                "name": "ReserveBook",
                "format": "ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",
                "Id": 12,
                "description": "This API is used to reserve a book.",
                "summary": "This API is used to reserve a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "start_date",
                        "description": "the start date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "end_date",
                        "description": "the end date of the reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title 'Moby-Dick' to its ISBN."
            },
            {
                "name": "Title2ISBN",
                "format": "Title2ISBN(title) -> title_ISBN",
                "Id": 10,
                "description": "This API is used to convert a book title to its ISBN.",
                "summary": "This API is used to convert a book title to its ISBN.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "title_ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the username 'sarah_wilson' to an email address."
            },
            {
                "name": "Username2Email",
                "format": "Username2Email(username) -> user_email",
                "Id": 9,
                "description": "This API is used to convert a username to a user's email.",
                "summary": "This API is used to convert a username to a user's email.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Convert the username 'alice' to an email address."
            }
        ]
    },
    {
        "Id": 21,
        "Selected_Functions": [
            {
                "name": "ReserveBook",
                "format": "ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",
                "Id": 12,
                "description": "This API is used to reserve a book.",
                "summary": "This API is used to reserve a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "start_date",
                        "description": "the start date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "end_date",
                        "description": "the end date of the reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title 'Moby-Dick' to its ISBN."
            },
            {
                "name": "Title2ISBN",
                "format": "Title2ISBN(title) -> title_ISBN",
                "Id": 10,
                "description": "This API is used to convert a book title to its ISBN.",
                "summary": "This API is used to convert a book title to its ISBN.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "title_ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the username 'sarah_wilson' to an email address."
            },
            {
                "name": "Username2Email",
                "format": "Username2Email(username) -> user_email",
                "Id": 9,
                "description": "This API is used to convert a username to a user's email.",
                "summary": "This API is used to convert a username to a user's email.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Convert the username 'alice' to an email address."
            }
        ]
    },
    {
        "Id": 22,
        "Selected_Functions": [
            {
                "name": "ReserveBook",
                "format": "ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",
                "Id": 12,
                "description": "This API is used to reserve a book.",
                "summary": "This API is used to reserve a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "start_date",
                        "description": "the start date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "end_date",
                        "description": "the end date of the reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title 'Moby-Dick' to its ISBN."
            },
            {
                "name": "Title2ISBN",
                "format": "Title2ISBN(title) -> title_ISBN",
                "Id": 10,
                "description": "This API is used to convert a book title to its ISBN.",
                "summary": "This API is used to convert a book title to its ISBN.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "title_ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the username 'sarah_wilson' to an email address."
            },
            {
                "name": "Username2Email",
                "format": "Username2Email(username) -> user_email",
                "Id": 9,
                "description": "This API is used to convert a username to a user's email.",
                "summary": "This API is used to convert a username to a user's email.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Convert the username 'alice' to an email address."
            }
        ]
    },
    {
        "Id": 89,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetCity",
                "format": "GetCity(user_ID) -> city",
                "Id": 35,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the city where the hotel reservation is to be made."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a 2-star hotel in the determined city."
            },
            {
                "name": "RecommendHotel",
                "format": "RecommendHotel(city, star_level) -> hotel_name",
                "Id": 34,
                "description": "This API recommends a hotel name based on city and star level.",
                "summary": "This API recommends a hotel name based on city and star level.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for hotel recommendation",
                        "datatype": "String"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a room in the recommended 2-star hotel for Thursday."
            }
        ]
    },
    {
        "Id": 90,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetCity",
                "format": "GetCity(user_ID) -> city",
                "Id": 35,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the city where the hotel reservation is to be made."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a 2-star hotel in the determined city."
            },
            {
                "name": "RecommendHotel",
                "format": "RecommendHotel(city, star_level) -> hotel_name",
                "Id": 34,
                "description": "This API recommends a hotel name based on city and star level.",
                "summary": "This API recommends a hotel name based on city and star level.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for hotel recommendation",
                        "datatype": "String"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a room in the recommended 2-star hotel for Thursday."
            }
        ]
    },
    {
        "Id": 91,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetCity",
                "format": "GetCity(user_ID) -> city",
                "Id": 35,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the city where the hotel reservation is to be made."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a 2-star hotel in the determined city."
            },
            {
                "name": "RecommendHotel",
                "format": "RecommendHotel(city, star_level) -> hotel_name",
                "Id": 34,
                "description": "This API recommends a hotel name based on city and star level.",
                "summary": "This API recommends a hotel name based on city and star level.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for hotel recommendation",
                        "datatype": "String"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a room in the recommended 2-star hotel for Thursday."
            }
        ]
    },
    {
        "Id": 92,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetCity",
                "format": "GetCity(user_ID) -> city",
                "Id": 35,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the city where the hotel reservation is to be made."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a 2-star hotel in the determined city."
            },
            {
                "name": "RecommendHotel",
                "format": "RecommendHotel(city, star_level) -> hotel_name",
                "Id": 34,
                "description": "This API recommends a hotel name based on city and star level.",
                "summary": "This API recommends a hotel name based on city and star level.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for hotel recommendation",
                        "datatype": "String"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a room in the recommended 2-star hotel for Thursday."
            }
        ]
    },
    {
        "Id": 94,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetCity",
                "format": "GetCity(user_ID) -> city",
                "Id": 35,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the city where the hotel reservation is to be made."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a 2-star hotel in the determined city."
            },
            {
                "name": "RecommendHotel",
                "format": "RecommendHotel(city, star_level) -> hotel_name",
                "Id": 34,
                "description": "This API recommends a hotel name based on city and star level.",
                "summary": "This API recommends a hotel name based on city and star level.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for hotel recommendation",
                        "datatype": "String"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a room in the recommended 2-star hotel for Thursday."
            }
        ]
    },
    {
        "Id": 105,
        "Selected_Functions": [
            {
                "name": "AlertBeforeDeparture",
                "format": "AlertBeforeDeparture(event_time, travel_time) -> alert_time",
                "Id": 41,
                "description": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "summary": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_time",
                        "description": "the time of the event",
                        "datatype": "DateTime"
                    },
                    {
                        "name": "travel_time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "alert_time",
                        "description": "the time when the user needs to leave",
                        "datatype": "DateTime"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find out the time of the Music Festival at Golden Beach."
            },
            {
                "name": "QueryEventTime",
                "format": "QueryEvent(event_name) -> time",
                "Id": 31,
                "description": "This API is to query event time.",
                "summary": "This API is to query event time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the start time of the event",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Estimate the travel time by bike from Queen Street to Golden Beach."
            },
            {
                "name": "EstimateTravelTime",
                "format": "EstimateTravelTime(distance, mode_of_transport) -> time",
                "Id": 40,
                "description": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "summary": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "input_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "mode_of_transport",
                        "description": "the mode of transportation",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the distance from Queen Street to Golden Beach."
            },
            {
                "name": "CalculateDistance",
                "format": "CalculateDistance(start_point, end_point) -> distance",
                "Id": 39,
                "description": "This API is to calculate the distance between the start point and end point.",
                "summary": "This API is to calculate the distance between the start point and end point.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_point",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "end_point",
                        "description": "the ending point of the journey",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance between the start point and end point",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Determine the time to leave Queen Street to arrive at the Music Festival on time, considering the travel time and distance."
            }
        ]
    },
    {
        "Id": 106,
        "Selected_Functions": [
            {
                "name": "AlertBeforeDeparture",
                "format": "AlertBeforeDeparture(event_time, travel_time) -> alert_time",
                "Id": 41,
                "description": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "summary": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_time",
                        "description": "the time of the event",
                        "datatype": "DateTime"
                    },
                    {
                        "name": "travel_time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "alert_time",
                        "description": "the time when the user needs to leave",
                        "datatype": "DateTime"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find out the time of the Music Festival at Golden Beach."
            },
            {
                "name": "QueryEventTime",
                "format": "QueryEvent(event_name) -> time",
                "Id": 31,
                "description": "This API is to query event time.",
                "summary": "This API is to query event time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the start time of the event",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Estimate the travel time by bike from Queen Street to Golden Beach."
            },
            {
                "name": "EstimateTravelTime",
                "format": "EstimateTravelTime(distance, mode_of_transport) -> time",
                "Id": 40,
                "description": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "summary": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "input_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "mode_of_transport",
                        "description": "the mode of transportation",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the distance from Queen Street to Golden Beach."
            },
            {
                "name": "CalculateDistance",
                "format": "CalculateDistance(start_point, end_point) -> distance",
                "Id": 39,
                "description": "This API is to calculate the distance between the start point and end point.",
                "summary": "This API is to calculate the distance between the start point and end point.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_point",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "end_point",
                        "description": "the ending point of the journey",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance between the start point and end point",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Determine the time to leave Queen Street to arrive at the Music Festival on time, considering the travel time and distance."
            }
        ]
    },
    {
        "Id": 107,
        "Selected_Functions": [
            {
                "name": "AlertBeforeDeparture",
                "format": "AlertBeforeDeparture(event_time, travel_time) -> alert_time",
                "Id": 41,
                "description": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "summary": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_time",
                        "description": "the time of the event",
                        "datatype": "DateTime"
                    },
                    {
                        "name": "travel_time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "alert_time",
                        "description": "the time when the user needs to leave",
                        "datatype": "DateTime"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find out the time of the Music Festival at Golden Beach."
            },
            {
                "name": "QueryEventTime",
                "format": "QueryEvent(event_name) -> time",
                "Id": 31,
                "description": "This API is to query event time.",
                "summary": "This API is to query event time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the start time of the event",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Estimate the travel time by bike from Queen Street to Golden Beach."
            },
            {
                "name": "EstimateTravelTime",
                "format": "EstimateTravelTime(distance, mode_of_transport) -> time",
                "Id": 40,
                "description": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "summary": "This API is to estimate the travel time based on the distance and mode of transportation.",
                "input_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "mode_of_transport",
                        "description": "the mode of transportation",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the distance from Queen Street to Golden Beach."
            },
            {
                "name": "CalculateDistance",
                "format": "CalculateDistance(start_point, end_point) -> distance",
                "Id": 39,
                "description": "This API is to calculate the distance between the start point and end point.",
                "summary": "This API is to calculate the distance between the start point and end point.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_point",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "end_point",
                        "description": "the ending point of the journey",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance between the start point and end point",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Determine the time to leave Queen Street to arrive at the Music Festival on time, considering the travel time and distance."
            }
        ]
    },
    {
        "Id": 109,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "RecommendRestaurant",
                "format": "RecommendRestaurant(location,star_level) -> restaurant_name",
                "Id": 43,
                "description": "This API returns the name of a restaurant according to location and star_level",
                "summary": "This API returns the name of a restaurant according to location and star_level",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "Location"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend a Mexican restaurant with a 2-star rating available this Monday at 7pm."
            },
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "BookRestaurant",
                "format": "BookRestaurant(restaurant_name, date, time) -> booking status",
                "Id": 42,
                "description": "This API allows the user to book a specific restaurant for a certain date and time",
                "summary": "This API allows the user to book a specific restaurant for a certain date and time",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of restarant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "data",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the recommended restaurant for Ava at 7pm on Monday."
            }
        ]
    },
    {
        "Id": 110,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "RecommendRestaurant",
                "format": "RecommendRestaurant(location,star_level) -> restaurant_name",
                "Id": 43,
                "description": "This API returns the name of a restaurant according to location and star_level",
                "summary": "This API returns the name of a restaurant according to location and star_level",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "Location"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend a Mexican restaurant with a 2-star rating available this Monday at 7pm."
            },
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "BookRestaurant",
                "format": "BookRestaurant(restaurant_name, date, time) -> booking status",
                "Id": 42,
                "description": "This API allows the user to book a specific restaurant for a certain date and time",
                "summary": "This API allows the user to book a specific restaurant for a certain date and time",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of restarant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "data",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the recommended restaurant for Ava at 7pm on Monday."
            }
        ]
    },
    {
        "Id": 111,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "RecommendRestaurant",
                "format": "RecommendRestaurant(location,star_level) -> restaurant_name",
                "Id": 43,
                "description": "This API returns the name of a restaurant according to location and star_level",
                "summary": "This API returns the name of a restaurant according to location and star_level",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "Location"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend a Mexican restaurant with a 2-star rating available this Monday at 7pm."
            },
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "BookRestaurant",
                "format": "BookRestaurant(restaurant_name, date, time) -> booking status",
                "Id": 42,
                "description": "This API allows the user to book a specific restaurant for a certain date and time",
                "summary": "This API allows the user to book a specific restaurant for a certain date and time",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of restarant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "data",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the recommended restaurant for Ava at 7pm on Monday."
            }
        ]
    },
    {
        "Id": 113,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "RecommendRestaurant",
                "format": "RecommendRestaurant(location,star_level) -> restaurant_name",
                "Id": 43,
                "description": "This API returns the name of a restaurant according to location and star_level",
                "summary": "This API returns the name of a restaurant according to location and star_level",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "Location"
                    },
                    {
                        "name": "star_level",
                        "description": "the star level of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend a Mexican restaurant with a 2-star rating available this Monday at 7pm."
            },
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "BookRestaurant",
                "format": "BookRestaurant(restaurant_name, date, time) -> booking status",
                "Id": 42,
                "description": "This API allows the user to book a specific restaurant for a certain date and time",
                "summary": "This API allows the user to book a specific restaurant for a certain date and time",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of restarant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "data",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the recommended restaurant for Ava at 7pm on Monday."
            }
        ]
    },
    {
        "Id": 117,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 118,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 119,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 120,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 121,
        "Selected_Functions": [
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 122,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 123,
        "Selected_Functions": [
            {
                "name": "PlayMusic",
                "format": "PlayMusic(song_title) -> music_status",
                "Id": 50,
                "description": "This API allows the user to play music.",
                "summary": "This API allows the user to play music.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music_status",
                        "description": "the status of the music playing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Sarah's current mood."
            },
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 124,
        "Selected_Functions": [
            {
                "name": "GetUserMood",
                "format": "GetUserMood(user_name) -> user_mood",
                "Id": 52,
                "description": "This API returns the mood of a certain user.",
                "summary": "This API returns the mood of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jack's current mood."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 126,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetStore",
                "format": "GetStore(city, clothingItem) -> storename",
                "Id": 55,
                "description": "This API finds stores where a certain clothing item is available in a given city.",
                "summary": "This API finds stores where a certain clothing item is available in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a store in Beijing where the recommended clothing can be purchased."
            },
            {
                "name": "BuyClothing",
                "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
                "Id": 56,
                "description": "This API is to purchase a clothing item from a certain store.",
                "summary": "This API is to purchase a clothing item from a certain store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchaseStatus",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the recommended clothing from the store."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the current weather information for Beijing to confirm it's sunny."
            }
        ]
    },
    {
        "Id": 127,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetStore",
                "format": "GetStore(city, clothingItem) -> storename",
                "Id": 55,
                "description": "This API finds stores where a certain clothing item is available in a given city.",
                "summary": "This API finds stores where a certain clothing item is available in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a store in Beijing where the recommended clothing can be purchased."
            },
            {
                "name": "BuyClothing",
                "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
                "Id": 56,
                "description": "This API is to purchase a clothing item from a certain store.",
                "summary": "This API is to purchase a clothing item from a certain store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchaseStatus",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the recommended clothing from the store."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the current weather information for Beijing to confirm it's sunny."
            }
        ]
    },
    {
        "Id": 129,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetStore",
                "format": "GetStore(city, clothingItem) -> storename",
                "Id": 55,
                "description": "This API finds stores where a certain clothing item is available in a given city.",
                "summary": "This API finds stores where a certain clothing item is available in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a store in Beijing where the recommended clothing can be purchased."
            },
            {
                "name": "BuyClothing",
                "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
                "Id": 56,
                "description": "This API is to purchase a clothing item from a certain store.",
                "summary": "This API is to purchase a clothing item from a certain store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchaseStatus",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the recommended clothing from the store."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the current weather information for Beijing to confirm it's sunny."
            }
        ]
    },
    {
        "Id": 130,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetStore",
                "format": "GetStore(city, clothingItem) -> storename",
                "Id": 55,
                "description": "This API finds stores where a certain clothing item is available in a given city.",
                "summary": "This API finds stores where a certain clothing item is available in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a store in Beijing where the recommended clothing can be purchased."
            },
            {
                "name": "BuyClothing",
                "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
                "Id": 56,
                "description": "This API is to purchase a clothing item from a certain store.",
                "summary": "This API is to purchase a clothing item from a certain store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchaseStatus",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the recommended clothing from the store."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the current weather information for Beijing to confirm it's sunny."
            }
        ]
    },
    {
        "Id": 131,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetStore",
                "format": "GetStore(city, clothingItem) -> storename",
                "Id": 55,
                "description": "This API finds stores where a certain clothing item is available in a given city.",
                "summary": "This API finds stores where a certain clothing item is available in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a store in Beijing where the recommended clothing can be purchased."
            },
            {
                "name": "BuyClothing",
                "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
                "Id": 56,
                "description": "This API is to purchase a clothing item from a certain store.",
                "summary": "This API is to purchase a clothing item from a certain store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "storename",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "clothingItem",
                        "description": "the clothing item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchaseStatus",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the recommended clothing from the store."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the current weather information for Beijing to confirm it's sunny."
            }
        ]
    },
    {
        "Id": 207,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 208,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 209,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 214,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 215,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 216,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 217,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "GetUserDestination",
                "format": "GetUserDestination(user_ID) -> user_destination",
                "Id": 77,
                "description": "This API will return the user's travel destination based on user ID.",
                "summary": "This API will return the user's travel destination based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_destination",
                        "description": "the travel destination of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a flight to the destination retrieved for the date June 1st."
            },
            {
                "name": "FindFlightByDestination",
                "format": "FindFlightByDestination(destination) -> flight_ID",
                "Id": 76,
                "description": "This API is used to retrieve flight ID by using the flight's destination.",
                "summary": "This API is used to retrieve flight ID by using the flight's destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight for the user 'Steve' to the destination on June 1st."
            }
        ]
    },
    {
        "Id": 376,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 377,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 378,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 379,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 380,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 381,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetRoute",
                "format": "GetRoute(origin_location,destination_location) -> route",
                "Id": 120,
                "description": "This API provides the optimal driving route between two locations.",
                "summary": "This API provides the optimal driving route between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin_location",
                        "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    },
                    {
                        "name": "destination_location",
                        "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "optimal driving route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the current location of Sara."
            },
            {
                "name": "SearchRestaurant",
                "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
                "Id": 118,
                "description": "This API finds a restaurant in a given city and with a certain cuisine.",
                "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "restaurant name",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a recommended Indian restaurant."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the most optimal route for Sara to drive from her current location to the recommended Indian restaurant."
            }
        ]
    },
    {
        "Id": 414,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "SearchMovieByGenre",
                "format": "SearchMovieByGenre(genre) -> movie_ID",
                "Id": 172,
                "description": "This API is used to retrieve a movie ID by using the movie's genre.",
                "summary": "This API is used to retrieve a movie ID by using the movie's genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Sarah's favorite movie genre."
            },
            {
                "name": "GetUserFavoriteGenre",
                "format": "GetUserFavoriteGenre(user_ID) -> user_genre",
                "Id": 173,
                "description": "This API will return the user's favorite movie genre based on user ID.",
                "summary": "This API will return the user's favorite movie genre based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_genre",
                        "description": "the favorite genre of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a movie by Sarah's favorite genre for this Sunday."
            },
            {
                "name": "ReserveMovieTicket",
                "format": "ReserveMovieTicket(movie_ID, date) -> reservation_status",
                "Id": 174,
                "description": "This API reserves a movie ticket for a certain date.",
                "summary": "This API reserves a movie ticket for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the movie ticket reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the movie ticket reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a movie ticket for Sarah for the selected movie on Sunday."
            }
        ]
    },
    {
        "Id": 415,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "BookRestaurantTable",
                "format": "BookRestaurantTable(restaurant_ID, date) -> booking_status",
                "Id": 177,
                "description": "This API books a table at a restaurant for a certain date.",
                "summary": "This API books a table at a restaurant for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the favorite cuisine of the user with the obtained user ID."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetUserFavoriteCuisine",
                "format": "GetUserFavoriteCuisine(user_ID) -> user_cuisine",
                "Id": 176,
                "description": "This API will return the user's favorite cuisine based on user ID.",
                "summary": "This API will return the user's favorite cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the favorite cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the restaurant for this Friday."
            }
        ]
    },
    {
        "Id": 416,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "GetUserPreferredCuisine",
                "format": "GetUserPreferredCuisine(user_ID) -> user_cuisine",
                "Id": 178,
                "description": "This API will return the user's preferred cuisine based on user ID.",
                "summary": "This API will return the user's preferred cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the preferred cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Sara's preferred cuisine type."
            },
            {
                "name": "ReserveTable",
                "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
                "Id": 179,
                "description": "This API reserves a table at a restaurant for a certain date and time.",
                "summary": "This API reserves a table at a restaurant for a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that matches Sara's preferred cuisine type."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            }
        ]
    },
    {
        "Id": 418,
        "Selected_Functions": [
            {
                "name": "CheckCardBalance",
                "format": "CheckCardBalance(card_number) -> card_balance",
                "Id": 184,
                "description": "This API allows the user to check the balance in a card.",
                "summary": "This API allows the user to check the balance in a card.",
                "input_parameters_with_datatype": [
                    {
                        "name": "card_number",
                        "description": "the number of the card",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "card_balance",
                        "description": "the balance in the card",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the card ID '9876' to a card number."
            },
            {
                "name": "OrderProduct",
                "format": "OrderProduct(product_ID, user_ID, quantity) -> order_status",
                "Id": 168,
                "description": "This API allows the user to order a specific product in a certain quantity.",
                "summary": "This API allows the user to order a specific product in a certain quantity.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the balance of the card with the number obtained from the previous step."
            },
            {
                "name": "Card2Number",
                "format": "Card2Number(card_id) -> card_number",
                "Id": 183,
                "description": "This API is to convert card ID to card number.",
                "summary": "This API is to convert card ID to card number.",
                "input_parameters_with_datatype": [
                    {
                        "name": "card_id",
                        "description": "the ID of the card",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "card_number",
                        "description": "the number of the card",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check if the balance is enough to afford the product with the ID 'abc123'."
            },
            {
                "name": "EnoughBalance",
                "format": "EnoughBalance(product_price, card_balance) -> order_status",
                "Id": 185,
                "description": "This API checks if there is sufficient balance in the card for the product order and returns an order status.",
                "summary": "This API checks if there is sufficient balance in the card for the product order and returns an order status.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_price",
                        "description": "the price of the product",
                        "datatype": "Float"
                    },
                    {
                        "name": "card_balance",
                        "description": "the balance in the card",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Order the product with the ID 'abc123' if the balance is sufficient."
            }
        ]
    },
    {
        "Id": 442,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "AddProductToCart",
                "format": "AddProductToCart(product_ID, customer_ID, quantity) -> cart_status",
                "Id": 203,
                "description": "This API adds a certain quantity of a particular product to the customer's cart.",
                "summary": "This API adds a certain quantity of a particular product to the customer's cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the product to be added to the cart",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cart_status",
                        "description": "the status of the cart after adding the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the cart name 'Tech Products' to a cart ID for the user with username 'michael_tech'."
            },
            {
                "name": "Cartname2ID",
                "format": "Cartname2ID(cart_name) -> cart_ID",
                "Id": 219,
                "description": "This API is to convert a cart's name to cart ID.",
                "summary": "This API is to convert a cart's name to cart ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cart_name",
                        "description": "the name of the cart",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cart_ID",
                        "description": "the ID of the cart",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the product with the obtained product ID to Michael's cart using the obtained cart ID."
            }
        ]
    },
    {
        "Id": 450,
        "Selected_Functions": [
            {
                "name": "Studentname2ID",
                "format": "Studentname2ID(student_name) -> student_ID",
                "Id": 239,
                "description": "This API converts a student's name to their ID.",
                "summary": "This API converts a student's name to their ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "student_name",
                        "description": "the name of the student",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "student_ID",
                        "description": "the ID of the student",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the student name 'Alice' to a student ID."
            },
            {
                "name": "EnrollCourse",
                "format": "EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",
                "Id": 64,
                "description": "This API is to enroll a user to a specific course.",
                "summary": "This API is to enroll a user to a specific course.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    },
                    {
                        "name": "semester",
                        "description": "the semester of the enrollment",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Enrollment confirmation",
                        "description": "the confirmation of the enrollment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the course name 'Chemistry' to a course ID."
            },
            {
                "name": "Instructorname2ID",
                "format": "Instructorname2ID(instructor_name) -> instructor_ID",
                "Id": 238,
                "description": "This API converts an instructor's name to their ID.",
                "summary": "This API converts an instructor's name to their ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "instructor_name",
                        "description": "the name of the instructor",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructor_ID",
                        "description": "the ID of the instructor",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the instructor name 'Prof. Cooper' to an instructor ID."
            },
            {
                "name": "Coursename2ID",
                "format": "Coursename2ID(course_name) -> course_ID",
                "Id": 237,
                "description": "This API converts a course name to its ID.",
                "summary": "This API converts a course name to its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "course_name",
                        "description": "the name of the course",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "course_ID",
                        "description": "the ID of the course",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Enroll the student with the obtained student ID in the course with the obtained course ID taught by the instructor with the obtained instructor ID."
            }
        ]
    },
    {
        "Id": 474,
        "Selected_Functions": [
            {
                "name": "GetExerciseRoutine",
                "format": "GetExerciseRoutine(HealthInformation) -> ExerciseRoutine",
                "Id": 287,
                "description": "This API recommends an exercise routine based on the health information.",
                "summary": "This API recommends an exercise routine based on the health information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ExerciseRoutine",
                        "description": "the recommended exercise routine",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Create an exercise routine suitable for a 26-year-old man focusing on overall wellness."
            },
            {
                "name": "GetHealthInformation",
                "format": "GetHealthInformation(age, gender) -> HealthInformation",
                "Id": 285,
                "description": "This API provides general health information based on age and gender.",
                "summary": "This API provides general health information based on age and gender.",
                "input_parameters_with_datatype": [
                    {
                        "name": "age",
                        "description": "the age of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "gender",
                        "description": "the gender of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide health information relevant to a 26-year-old man aiming to improve wellness."
            },
            {
                "name": "GetDietPlan",
                "format": "GetDietPlan(HealthInformation) -> DietPlan",
                "Id": 286,
                "description": "This API generates a diet plan based on the provided health information.",
                "summary": "This API generates a diet plan based on the provided health information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "DietPlan",
                        "description": "the generated diet plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Develop a diet plan tailored for a 26-year-old man to enhance wellness."
            },
            {
                "name": "CreateWellnessPlan",
                "format": "CreateWellnessPlan(DietPlan, ExerciseRoutine) -> WellnessPlan",
                "Id": 288,
                "description": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
                "summary": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "DietPlan",
                        "description": "the generated diet plan",
                        "datatype": "String"
                    },
                    {
                        "name": "ExerciseRoutine",
                        "description": "the recommended exercise routine",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "WellnessPlan",
                        "description": "the comprehensive wellness plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Create a comprehensive wellness plan for a 26-year-old man incorporating exercise, health information, and diet."
            }
        ]
    },
    {
        "Id": 477,
        "Selected_Functions": [
            {
                "name": "CalculateShippingCost",
                "format": "CalculateShippingCost(productID, location) -> ShippingCost",
                "Id": 298,
                "description": "This API calculates the shipping cost for a product to a specific location.",
                "summary": "This API calculates the shipping cost for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ShippingCost",
                        "description": "the calculated shipping cost for the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the inventory for the refrigerator with product ID 54321."
            },
            {
                "name": "EstimateDeliveryTime",
                "format": "EstimateDeliveryTime(productID, location) -> DeliveryTime",
                "Id": 297,
                "description": "This API estimates the delivery time for a product to a specific location.",
                "summary": "This API estimates the delivery time for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "DeliveryTime",
                        "description": "the estimated delivery time for the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the shipping cost for delivering the refrigerator to Texas."
            },
            {
                "name": "CheckInventory",
                "format": "CheckInventory(productID) -> InventoryStatus",
                "Id": 296,
                "description": "This API checks the inventory status of a specific product.",
                "summary": "This API checks the inventory status of a specific product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "InventoryStatus",
                        "description": "the inventory status of the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Estimate the delivery time for the refrigerator to Texas."
            },
            {
                "name": "PlaceOrder",
                "format": "PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",
                "Id": 80,
                "description": "This API places the order for a particular item from a specified supplier.",
                "summary": "This API places the order for a particular item from a specified supplier.",
                "input_parameters_with_datatype": [
                    {
                        "name": "item_ID",
                        "description": "the ID of the item",
                        "datatype": "Integer"
                    },
                    {
                        "name": "supplier_ID",
                        "description": "the ID of the supplier",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the item",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Place an order for the refrigerator with product ID 54321 to be delivered to the user's home in Texas."
            }
        ]
    },
    {
        "Id": 478,
        "Selected_Functions": [
            {
                "name": "GetLuggageFee",
                "format": "GetLuggageFee(luggage, weight) -> fee",
                "Id": 302,
                "description": "This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.",
                "summary": "This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.",
                "input_parameters_with_datatype": [
                    {
                        "name": "luggage",
                        "description": "the luggage allowance of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "weight",
                        "description": "the weight of the luggage",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "fee",
                        "description": "the luggage fee",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a flight from New York to Los Angeles."
            },
            {
                "name": "FindFlight",
                "format": "FindFlight(startPoint, endPoint) -> flight",
                "Id": 299,
                "description": "This API is to find the available flights from one point to another.",
                "summary": "This API is to find the available flights from one point to another.",
                "input_parameters_with_datatype": [
                    {
                        "name": "startPoint",
                        "description": "the starting point of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "endPoint",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the available flight options",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 5,
                "task_description": "Retrieve the flight ID for the selected flight."
            },
            {
                "name": "CheckLuggageAllowance",
                "format": "CheckLuggageAllowance(flight) -> luggage",
                "Id": 301,
                "description": "This API is to check the luggage allowance of a specific flight.",
                "summary": "This API is to check the luggage allowance of a specific flight.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the flight option",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "luggage",
                        "description": "the luggage allowance of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the luggage fee for carrying 50kg of luggage on the flight from New York to Los Angeles."
            }
        ]
    },
    {
        "Id": 479,
        "Selected_Functions": [
            {
                "name": "CalculateVacationCost",
                "format": "CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",
                "Id": 306,
                "description": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "summary": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "input_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    },
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    },
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalCost",
                        "description": "the total cost of the vacation",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of the vacation to Rome, including lodging, dinners, and sightseeing."
            },
            {
                "name": "GetHotelRoomRate",
                "format": "GetHotelRoomRate(city) -> roomRate",
                "Id": 303,
                "description": "This API is to get the rate of a hotel room in a specific city.",
                "summary": "This API is to get the rate of a hotel room in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the hotel room rate for lodging in Rome."
            },
            {
                "name": "GetSightSeeingCost",
                "format": "GetSightSeeingCost(city) -> sightSeeingCost",
                "Id": 305,
                "description": "This API is to get the cost for sightseeing in a specific city.",
                "summary": "This API is to get the cost for sightseeing in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the cost of sightseeing activities in Rome."
            },
            {
                "name": "GetMealCost",
                "format": "GetMealCost(city) -> mealCost",
                "Id": 304,
                "description": "This API is to get the cost of meals in a specific city.",
                "summary": "This API is to get the cost of meals in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the cost of dinners in Rome."
            }
        ]
    },
    {
        "Id": 481,
        "Selected_Functions": [
            {
                "name": "FindRestaurants",
                "format": "FindRestaurants(city, cuisineType) -> restaurants",
                "Id": 310,
                "description": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "summary": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisineType",
                        "description": "the specific cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurants",
                        "description": "the restaurants of the specific cuisine type in the specific city",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Toronto on Wednesday."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "PlanDayOut",
                "format": "PlanDayOut(city, activities, restaurants) -> dayPlan",
                "Id": 311,
                "description": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "summary": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "the restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "dayPlan",
                        "description": "the plan for a day out including outdoor activities and restaurants",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find outdoor activities in Toronto that are suitable for the weather."
            },
            {
                "name": "FindOutdoorActivities",
                "format": "FindOutdoorActivities(city, weatherForecast) -> activities",
                "Id": 309,
                "description": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "summary": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "weatherForecast",
                        "description": "the weather forecast of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities based on the city and weather forecast",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Find an Italian restaurant in Toronto."
            }
        ]
    },
    {
        "Id": 538,
        "Selected_Functions": [
            {
                "name": "RestaurantRecommendations",
                "format": "RestaurantRecommendations(City) -> Recommendations",
                "Id": 329,
                "description": "This API fetches restaurant recommendations for a specific city based on user reviews and ratings.",
                "summary": "This API fetches restaurant recommendations for a specific city based on user reviews and ratings.",
                "input_parameters_with_datatype": [
                    {
                        "name": "City",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Recommendations",
                        "description": "the restaurant recommendations for the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find recommended restaurants in Rome for the weekend."
            },
            {
                "name": "TripAdvisor",
                "format": "TripAdvisor(weather, restaurants, events) -> trip_advice",
                "Id": 438,
                "description": "This API helps in advising your trip by combining weather, restaurants, and events information.",
                "summary": "This API helps in advising your trip by combining weather, restaurants, and events information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast for the city on the specified date",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurants",
                        "description": "a list of recommended restaurants in the city",
                        "datatype": "List"
                    },
                    {
                        "name": "events",
                        "description": "a list of events happening in the city on the specified date",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "trip_advice",
                        "description": "advice for your trip based on the weather, restaurants, and events information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get travel advice and tips for visiting Rome."
            },
            {
                "name": "EventFinder",
                "format": "EventFinder(city, date) -> events",
                "Id": 437,
                "description": "This API provides information about events happening in a city on a certain date.",
                "summary": "This API provides information about events happening in a city on a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for the event search",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "events",
                        "description": "a list of events happening in the city on the specified date",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find events happening in Rome next weekend."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the weather forecast for San Francisco for the dates of the business trip."
            }
        ]
    },
    {
        "Id": 631,
        "Selected_Functions": [
            {
                "name": "RecommendBookByGenre",
                "format": "RecommendBookByGenre(user_ID, genre) -> recommended_book",
                "Id": 469,
                "description": "This API is to recommend a book based on genre.",
                "summary": "This API is to recommend a book based on genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recommended_book",
                        "description": "the recommended book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Edward' to a user ID."
            },
            {
                "name": "GetUserIDByUser",
                "format": "GetUserIDByUser(user_name) -> user_ID",
                "Id": 467,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the book ID for the title 'Moby Dick'."
            },
            {
                "name": "GetBookGenre",
                "format": "GetBookGenre(bookTitle) -> BookGenre",
                "Id": 293,
                "description": "This API provides the genre of a specified book.",
                "summary": "This API provides the genre of a specified book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "bookTitle",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "BookGenre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the genre of the book with the ID obtained for 'Moby Dick'."
            },
            {
                "name": "GetBookIdByTitle",
                "format": "GetBookIdByTitle(book_title) -> book_id",
                "Id": 154,
                "description": "This API finds the book's ID based on its title.",
                "summary": "This API finds the book's ID based on its title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Recommend a book by the genre obtained from 'Moby Dick'."
            }
        ]
    },
    {
        "Id": 632,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetUserFavouriteGenre",
                "format": "GetUserFavouriteGenre(user_ID) -> genre",
                "Id": 470,
                "description": "This API is to get the favourite genre of a user.",
                "summary": "This API is to get the favourite genre of a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the favourite genre of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Alex's favourite movie genre."
            },
            {
                "name": "FindMovieByGenre",
                "format": "FindMovieByGenre(genre) -> movie_ID",
                "Id": 471,
                "description": "This API is to find a movie by genre.",
                "summary": "This API is to find a movie by genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a movie available this Sunday in Alex's favourite genre."
            },
            {
                "name": "BookMovieTicket",
                "format": "BookMovieTicket(movie_name, showtime, number_of_tickets) -> booking confirmation",
                "Id": 449,
                "description": "This API is to book movie tickets for a specific movie at a specific showtime.",
                "summary": "This API is to book movie tickets for a specific movie at a specific showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "number_of_tickets",
                        "description": "the number of tickets to be booked",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking confirmation",
                        "description": "the confirmation of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a ticket for the movie found in Alex's favourite genre for this Sunday."
            }
        ]
    },
    {
        "Id": 633,
        "Selected_Functions": [
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "SearchMovieByGenre",
                "format": "SearchMovieByGenre(genre) -> movie_ID",
                "Id": 172,
                "description": "This API is used to retrieve a movie ID by using the movie's genre.",
                "summary": "This API is used to retrieve a movie ID by using the movie's genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Sarah's favorite movie genre."
            },
            {
                "name": "GetUserFavoriteGenre",
                "format": "GetUserFavoriteGenre(user_ID) -> user_genre",
                "Id": 173,
                "description": "This API will return the user's favorite movie genre based on user ID.",
                "summary": "This API will return the user's favorite movie genre based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_genre",
                        "description": "the favorite genre of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for a movie by Sarah's favorite genre for this Sunday."
            },
            {
                "name": "ReserveMovieTicket",
                "format": "ReserveMovieTicket(movie_ID, date) -> reservation_status",
                "Id": 174,
                "description": "This API reserves a movie ticket for a certain date.",
                "summary": "This API reserves a movie ticket for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the movie ticket reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the movie ticket reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Reserve a movie ticket for Sarah for the selected movie on Sunday."
            }
        ]
    },
    {
        "Id": 636,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "BookRestaurantTable",
                "format": "BookRestaurantTable(restaurant_ID, date) -> booking_status",
                "Id": 177,
                "description": "This API books a table at a restaurant for a certain date.",
                "summary": "This API books a table at a restaurant for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the favorite cuisine of the user with the obtained user ID."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetUserFavoriteCuisine",
                "format": "GetUserFavoriteCuisine(user_ID) -> user_cuisine",
                "Id": 176,
                "description": "This API will return the user's favorite cuisine based on user ID.",
                "summary": "This API will return the user's favorite cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the favorite cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the restaurant for this Friday."
            }
        ]
    },
    {
        "Id": 637,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "BookRestaurantTable",
                "format": "BookRestaurantTable(restaurant_ID, date) -> booking_status",
                "Id": 177,
                "description": "This API books a table at a restaurant for a certain date.",
                "summary": "This API books a table at a restaurant for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the favorite cuisine of the user with the obtained user ID."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetUserFavoriteCuisine",
                "format": "GetUserFavoriteCuisine(user_ID) -> user_cuisine",
                "Id": 176,
                "description": "This API will return the user's favorite cuisine based on user ID.",
                "summary": "This API will return the user's favorite cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the favorite cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the restaurant for this Friday."
            }
        ]
    },
    {
        "Id": 639,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "GetUserPreferredCuisine",
                "format": "GetUserPreferredCuisine(user_ID) -> user_cuisine",
                "Id": 178,
                "description": "This API will return the user's preferred cuisine based on user ID.",
                "summary": "This API will return the user's preferred cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the preferred cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Sara's preferred cuisine type."
            },
            {
                "name": "ReserveTable",
                "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
                "Id": 179,
                "description": "This API reserves a table at a restaurant for a certain date and time.",
                "summary": "This API reserves a table at a restaurant for a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that matches Sara's preferred cuisine type."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            }
        ]
    },
    {
        "Id": 640,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "GetUserPreferredCuisine",
                "format": "GetUserPreferredCuisine(user_ID) -> user_cuisine",
                "Id": 178,
                "description": "This API will return the user's preferred cuisine based on user ID.",
                "summary": "This API will return the user's preferred cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the preferred cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve Sara's preferred cuisine type."
            },
            {
                "name": "ReserveTable",
                "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
                "Id": 179,
                "description": "This API reserves a table at a restaurant for a certain date and time.",
                "summary": "This API reserves a table at a restaurant for a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that matches Sara's preferred cuisine type."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            }
        ]
    },
    {
        "Id": 645,
        "Selected_Functions": [
            {
                "name": "GetUserLocation",
                "format": "GetUserLocation(user_ID) -> user_location",
                "Id": 44,
                "description": "This API returns the location of a certain user ID",
                "summary": "This API returns the location of a certain user ID",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user, please note that it should be number, not character",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user ID",
                        "datatype": "Location"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the location of the user 'RobertBrown'."
            },
            {
                "name": "GetServiceStationNearMe",
                "format": "GetServiceStationNearMe(user_location) -> service_station_id",
                "Id": 473,
                "description": "This API is to get the nearest service station based on user location.",
                "summary": "This API is to get the nearest service station based on user location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "service_station_id",
                        "description": "the ID of the nearest service station",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the nearest service station to the user's location."
            },
            {
                "name": "BookCarService",
                "format": "BookCarService(car_id, service_station_id, user_name) -> booking_status",
                "Id": 474,
                "description": "This API is to book a car service at a service station.",
                "summary": "This API is to book a car service at a service station.",
                "input_parameters_with_datatype": [
                    {
                        "name": "car_id",
                        "description": "the ID of the car",
                        "datatype": "Integer"
                    },
                    {
                        "name": "service_station_id",
                        "description": "the ID of the service station",
                        "datatype": "Integer"
                    },
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Retrieve the car details of the user 'RobertBrown'."
            },
            {
                "name": "GetUserCar",
                "format": "GetUserCar(user_name) -> car_id",
                "Id": 472,
                "description": "This API is to get the car ID of a user.",
                "summary": "This API is to get the car ID of a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "car_id",
                        "description": "the ID of the user's car",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Schedule a service for the user's car at the nearest service station."
            }
        ]
    },
    {
        "Id": 740,
        "Selected_Functions": [
            {
                "name": "BookBusSeat",
                "format": "BookBusSeat(user_name, bus_schedule_info) -> booking_status",
                "Id": 482,
                "description": "This API is to book a bus seat.",
                "summary": "This API is to book a bus seat.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the bus schedule for route '77X' on August 25th at 4 PM to ensure availability."
            },
            {
                "name": "CheckBusSchedule",
                "format": "CheckBusSchedule(location_coordinates, date, time) -> bus_schedule_info",
                "Id": 481,
                "description": "This API is to check the bus schedule.",
                "summary": "This API is to check the bus schedule.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the bus schedule",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the bus schedule",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the user ID '22233' to the user's name."
            },
            {
                "name": "UserIdToname",
                "format": "UserIdToname(userId) -> user_name",
                "Id": 479,
                "description": "This API is to convert user ID to user name.",
                "summary": "This API is to convert user ID to user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "userId",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the bus route '77X' to the location details."
            },
            {
                "name": "RouteToLocation",
                "format": "RouteToLocation(route) -> location_coordinates",
                "Id": 480,
                "description": "This API is to convert route name to location coordinates.",
                "summary": "This API is to convert route name to location coordinates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "the name of the bus route",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a seat on the bus route '77X' for the user with ID '22233' on August 25th at 4 PM."
            }
        ]
    },
    {
        "Id": 741,
        "Selected_Functions": [
            {
                "name": "BookBusSeat",
                "format": "BookBusSeat(user_name, bus_schedule_info) -> booking_status",
                "Id": 482,
                "description": "This API is to book a bus seat.",
                "summary": "This API is to book a bus seat.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the bus schedule for route '77X' on August 25th at 4 PM to ensure availability."
            },
            {
                "name": "CheckBusSchedule",
                "format": "CheckBusSchedule(location_coordinates, date, time) -> bus_schedule_info",
                "Id": 481,
                "description": "This API is to check the bus schedule.",
                "summary": "This API is to check the bus schedule.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the bus schedule",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the bus schedule",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the user ID '22233' to the user's name."
            },
            {
                "name": "UserIdToname",
                "format": "UserIdToname(userId) -> user_name",
                "Id": 479,
                "description": "This API is to convert user ID to user name.",
                "summary": "This API is to convert user ID to user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "userId",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the bus route '77X' to the location details."
            },
            {
                "name": "RouteToLocation",
                "format": "RouteToLocation(route) -> location_coordinates",
                "Id": 480,
                "description": "This API is to convert route name to location coordinates.",
                "summary": "This API is to convert route name to location coordinates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "the name of the bus route",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a seat on the bus route '77X' for the user with ID '22233' on August 25th at 4 PM."
            }
        ]
    },
    {
        "Id": 743,
        "Selected_Functions": [
            {
                "name": "BookBusSeat",
                "format": "BookBusSeat(user_name, bus_schedule_info) -> booking_status",
                "Id": 482,
                "description": "This API is to book a bus seat.",
                "summary": "This API is to book a bus seat.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the bus schedule for route '77X' on August 25th at 4 PM to ensure availability."
            },
            {
                "name": "CheckBusSchedule",
                "format": "CheckBusSchedule(location_coordinates, date, time) -> bus_schedule_info",
                "Id": 481,
                "description": "This API is to check the bus schedule.",
                "summary": "This API is to check the bus schedule.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the bus schedule",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the bus schedule",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bus_schedule_info",
                        "description": "the information of the bus schedule",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the user ID '22233' to the user's name."
            },
            {
                "name": "UserIdToname",
                "format": "UserIdToname(userId) -> user_name",
                "Id": 479,
                "description": "This API is to convert user ID to user name.",
                "summary": "This API is to convert user ID to user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "userId",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the bus route '77X' to the location details."
            },
            {
                "name": "RouteToLocation",
                "format": "RouteToLocation(route) -> location_coordinates",
                "Id": 480,
                "description": "This API is to convert route name to location coordinates.",
                "summary": "This API is to convert route name to location coordinates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "the name of the bus route",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location_coordinates",
                        "description": "the coordinates of the bus route location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a seat on the bus route '77X' for the user with ID '22233' on August 25th at 4 PM."
            }
        ]
    },
    {
        "Id": 776,
        "Selected_Functions": [
            {
                "name": "Venuename2ID",
                "format": "Venuename2ID(venue_name) -> venue_ID",
                "Id": 235,
                "description": "This API converts a venue name to its ID.",
                "summary": "This API converts a venue name to its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "venue_name",
                        "description": "the name of the venue",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "venue_ID",
                        "description": "the ID of the venue",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the venue name 'O2 Arena' to a venue ID."
            },
            {
                "name": "Eventname2ID",
                "format": "Eventname2ID(Event_name) -> Event_ID",
                "Id": 66,
                "description": "This API is to convert event name to event ID.",
                "summary": "This API is to convert event name to event ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the event name 'Beyonce concert' to an event ID."
            },
            {
                "name": "BookEventTicket",
                "format": "BookEventTicket(event_ID, venue_ID, date) -> Booking status",
                "Id": 236,
                "description": "This API books a ticket for a specified event on a specified date at a specified venue.",
                "summary": "This API books a ticket for a specified event on a specified date at a specified venue.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    },
                    {
                        "name": "venue_ID",
                        "description": "the ID of the venue",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event",
                        "datatype": "Datetime"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the date 'March 13, 2023' to a datetime format."
            },
            {
                "name": "StringToDatetime",
                "format": "StringToDatetime(date_string) -> date",
                "Id": 234,
                "description": "This API converts a string to a datetime object.",
                "summary": "This API converts a string to a datetime object.",
                "input_parameters_with_datatype": [
                    {
                        "name": "date_string",
                        "description": "the string representation of the date",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "date",
                        "description": "the datetime object",
                        "datatype": "Datetime"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a ticket for the event using the venue ID, event ID, and the datetime."
            }
        ]
    },
    {
        "Id": 780,
        "Selected_Functions": [
            {
                "name": "Studentname2ID",
                "format": "Studentname2ID(student_name) -> student_ID",
                "Id": 239,
                "description": "This API converts a student's name to their ID.",
                "summary": "This API converts a student's name to their ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "student_name",
                        "description": "the name of the student",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "student_ID",
                        "description": "the ID of the student",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the student name 'Alice' to a student ID."
            },
            {
                "name": "EnrollCourse",
                "format": "EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",
                "Id": 64,
                "description": "This API is to enroll a user to a specific course.",
                "summary": "This API is to enroll a user to a specific course.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    },
                    {
                        "name": "semester",
                        "description": "the semester of the enrollment",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Enrollment confirmation",
                        "description": "the confirmation of the enrollment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the course name 'Chemistry' to a course ID."
            },
            {
                "name": "Instructorname2ID",
                "format": "Instructorname2ID(instructor_name) -> instructor_ID",
                "Id": 238,
                "description": "This API converts an instructor's name to their ID.",
                "summary": "This API converts an instructor's name to their ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "instructor_name",
                        "description": "the name of the instructor",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructor_ID",
                        "description": "the ID of the instructor",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the instructor name 'Prof. Cooper' to an instructor ID."
            },
            {
                "name": "Coursename2ID",
                "format": "Coursename2ID(course_name) -> course_ID",
                "Id": 237,
                "description": "This API converts a course name to its ID.",
                "summary": "This API converts a course name to its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "course_name",
                        "description": "the name of the course",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "course_ID",
                        "description": "the ID of the course",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Enroll the student with the obtained student ID in the course with the obtained course ID taught by the instructor with the obtained instructor ID."
            }
        ]
    },
    {
        "Id": 862,
        "Selected_Functions": [
            {
                "name": "GetExerciseRoutine",
                "format": "GetExerciseRoutine(HealthInformation) -> ExerciseRoutine",
                "Id": 287,
                "description": "This API recommends an exercise routine based on the health information.",
                "summary": "This API recommends an exercise routine based on the health information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ExerciseRoutine",
                        "description": "the recommended exercise routine",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Create an exercise routine suitable for a 26-year-old man focusing on overall wellness."
            },
            {
                "name": "GetHealthInformation",
                "format": "GetHealthInformation(age, gender) -> HealthInformation",
                "Id": 285,
                "description": "This API provides general health information based on age and gender.",
                "summary": "This API provides general health information based on age and gender.",
                "input_parameters_with_datatype": [
                    {
                        "name": "age",
                        "description": "the age of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "gender",
                        "description": "the gender of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide health information relevant to a 26-year-old man aiming to improve wellness."
            },
            {
                "name": "GetDietPlan",
                "format": "GetDietPlan(HealthInformation) -> DietPlan",
                "Id": 286,
                "description": "This API generates a diet plan based on the provided health information.",
                "summary": "This API generates a diet plan based on the provided health information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "HealthInformation",
                        "description": "the general health information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "DietPlan",
                        "description": "the generated diet plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Develop a diet plan tailored for a 26-year-old man to enhance wellness."
            },
            {
                "name": "CreateWellnessPlan",
                "format": "CreateWellnessPlan(DietPlan, ExerciseRoutine) -> WellnessPlan",
                "Id": 288,
                "description": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
                "summary": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "DietPlan",
                        "description": "the generated diet plan",
                        "datatype": "String"
                    },
                    {
                        "name": "ExerciseRoutine",
                        "description": "the recommended exercise routine",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "WellnessPlan",
                        "description": "the comprehensive wellness plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Create a comprehensive wellness plan for a 26-year-old man incorporating exercise, health information, and diet."
            }
        ]
    },
    {
        "Id": 872,
        "Selected_Functions": [
            {
                "name": "CalculateShippingCost",
                "format": "CalculateShippingCost(productID, location) -> ShippingCost",
                "Id": 298,
                "description": "This API calculates the shipping cost for a product to a specific location.",
                "summary": "This API calculates the shipping cost for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ShippingCost",
                        "description": "the calculated shipping cost for the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the inventory for the refrigerator with product ID 54321."
            },
            {
                "name": "EstimateDeliveryTime",
                "format": "EstimateDeliveryTime(productID, location) -> DeliveryTime",
                "Id": 297,
                "description": "This API estimates the delivery time for a product to a specific location.",
                "summary": "This API estimates the delivery time for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "DeliveryTime",
                        "description": "the estimated delivery time for the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the shipping cost for delivering the refrigerator to Texas."
            },
            {
                "name": "CheckInventory",
                "format": "CheckInventory(productID) -> InventoryStatus",
                "Id": 296,
                "description": "This API checks the inventory status of a specific product.",
                "summary": "This API checks the inventory status of a specific product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "InventoryStatus",
                        "description": "the inventory status of the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Estimate the delivery time for the refrigerator to Texas."
            },
            {
                "name": "PlaceOrder",
                "format": "PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",
                "Id": 80,
                "description": "This API places the order for a particular item from a specified supplier.",
                "summary": "This API places the order for a particular item from a specified supplier.",
                "input_parameters_with_datatype": [
                    {
                        "name": "item_ID",
                        "description": "the ID of the item",
                        "datatype": "Integer"
                    },
                    {
                        "name": "supplier_ID",
                        "description": "the ID of the supplier",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the item",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Place an order for the refrigerator with product ID 54321 to be delivered to the user's home in Texas."
            }
        ]
    },
    {
        "Id": 873,
        "Selected_Functions": [
            {
                "name": "CalculateShippingCost",
                "format": "CalculateShippingCost(productID, location) -> ShippingCost",
                "Id": 298,
                "description": "This API calculates the shipping cost for a product to a specific location.",
                "summary": "This API calculates the shipping cost for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ShippingCost",
                        "description": "the calculated shipping cost for the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the inventory for the refrigerator with product ID 54321."
            },
            {
                "name": "EstimateDeliveryTime",
                "format": "EstimateDeliveryTime(productID, location) -> DeliveryTime",
                "Id": 297,
                "description": "This API estimates the delivery time for a product to a specific location.",
                "summary": "This API estimates the delivery time for a product to a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "location",
                        "description": "the location for delivery",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "DeliveryTime",
                        "description": "the estimated delivery time for the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the shipping cost for delivering the refrigerator to Texas."
            },
            {
                "name": "CheckInventory",
                "format": "CheckInventory(productID) -> InventoryStatus",
                "Id": 296,
                "description": "This API checks the inventory status of a specific product.",
                "summary": "This API checks the inventory status of a specific product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "productID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "InventoryStatus",
                        "description": "the inventory status of the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Estimate the delivery time for the refrigerator to Texas."
            },
            {
                "name": "PlaceOrder",
                "format": "PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",
                "Id": 80,
                "description": "This API places the order for a particular item from a specified supplier.",
                "summary": "This API places the order for a particular item from a specified supplier.",
                "input_parameters_with_datatype": [
                    {
                        "name": "item_ID",
                        "description": "the ID of the item",
                        "datatype": "Integer"
                    },
                    {
                        "name": "supplier_ID",
                        "description": "the ID of the supplier",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the item",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Place an order for the refrigerator with product ID 54321 to be delivered to the user's home in Texas."
            }
        ]
    },
    {
        "Id": 877,
        "Selected_Functions": [
            {
                "name": "CalculateVacationCost",
                "format": "CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",
                "Id": 306,
                "description": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "summary": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "input_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    },
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    },
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalCost",
                        "description": "the total cost of the vacation",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of the vacation to Rome, including lodging, dinners, and sightseeing."
            },
            {
                "name": "GetHotelRoomRate",
                "format": "GetHotelRoomRate(city) -> roomRate",
                "Id": 303,
                "description": "This API is to get the rate of a hotel room in a specific city.",
                "summary": "This API is to get the rate of a hotel room in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the hotel room rate for lodging in Rome."
            },
            {
                "name": "GetSightSeeingCost",
                "format": "GetSightSeeingCost(city) -> sightSeeingCost",
                "Id": 305,
                "description": "This API is to get the cost for sightseeing in a specific city.",
                "summary": "This API is to get the cost for sightseeing in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the cost of sightseeing activities in Rome."
            },
            {
                "name": "GetMealCost",
                "format": "GetMealCost(city) -> mealCost",
                "Id": 304,
                "description": "This API is to get the cost of meals in a specific city.",
                "summary": "This API is to get the cost of meals in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the cost of dinners in Rome."
            }
        ]
    },
    {
        "Id": 878,
        "Selected_Functions": [
            {
                "name": "CalculateVacationCost",
                "format": "CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",
                "Id": 306,
                "description": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "summary": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "input_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    },
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    },
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalCost",
                        "description": "the total cost of the vacation",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of the vacation to Rome, including lodging, dinners, and sightseeing."
            },
            {
                "name": "GetHotelRoomRate",
                "format": "GetHotelRoomRate(city) -> roomRate",
                "Id": 303,
                "description": "This API is to get the rate of a hotel room in a specific city.",
                "summary": "This API is to get the rate of a hotel room in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the hotel room rate for lodging in Rome."
            },
            {
                "name": "GetSightSeeingCost",
                "format": "GetSightSeeingCost(city) -> sightSeeingCost",
                "Id": 305,
                "description": "This API is to get the cost for sightseeing in a specific city.",
                "summary": "This API is to get the cost for sightseeing in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the cost of sightseeing activities in Rome."
            },
            {
                "name": "GetMealCost",
                "format": "GetMealCost(city) -> mealCost",
                "Id": 304,
                "description": "This API is to get the cost of meals in a specific city.",
                "summary": "This API is to get the cost of meals in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the cost of dinners in Rome."
            }
        ]
    },
    {
        "Id": 879,
        "Selected_Functions": [
            {
                "name": "CalculateVacationCost",
                "format": "CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",
                "Id": 306,
                "description": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "summary": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
                "input_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    },
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    },
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalCost",
                        "description": "the total cost of the vacation",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of the vacation to Rome, including lodging, dinners, and sightseeing."
            },
            {
                "name": "GetHotelRoomRate",
                "format": "GetHotelRoomRate(city) -> roomRate",
                "Id": 303,
                "description": "This API is to get the rate of a hotel room in a specific city.",
                "summary": "This API is to get the rate of a hotel room in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "roomRate",
                        "description": "the rate of the hotel room",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the hotel room rate for lodging in Rome."
            },
            {
                "name": "GetSightSeeingCost",
                "format": "GetSightSeeingCost(city) -> sightSeeingCost",
                "Id": 305,
                "description": "This API is to get the cost for sightseeing in a specific city.",
                "summary": "This API is to get the cost for sightseeing in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "sightSeeingCost",
                        "description": "the cost for sightseeing",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the cost of sightseeing activities in Rome."
            },
            {
                "name": "GetMealCost",
                "format": "GetMealCost(city) -> mealCost",
                "Id": 304,
                "description": "This API is to get the cost of meals in a specific city.",
                "summary": "This API is to get the cost of meals in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mealCost",
                        "description": "the cost of meals",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Get the cost of dinners in Rome."
            }
        ]
    },
    {
        "Id": 887,
        "Selected_Functions": [
            {
                "name": "FindRestaurants",
                "format": "FindRestaurants(city, cuisineType) -> restaurants",
                "Id": 310,
                "description": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "summary": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisineType",
                        "description": "the specific cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurants",
                        "description": "the restaurants of the specific cuisine type in the specific city",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for London on Friday."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find outdoor activities in London that are suitable for the weather on Friday."
            },
            {
                "name": "PlanDayOut",
                "format": "PlanDayOut(city, activities, restaurants) -> dayPlan",
                "Id": 311,
                "description": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "summary": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "the restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "dayPlan",
                        "description": "the plan for a day out including outdoor activities and restaurants",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a Chinese restaurant in London."
            },
            {
                "name": "FindOutdoorActivities",
                "format": "FindOutdoorActivities(city, weatherForecast) -> activities",
                "Id": 309,
                "description": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "summary": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "weatherForecast",
                        "description": "the weather forecast of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities based on the city and weather forecast",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Plan a day out in London with the recommended outdoor activities and Chinese restaurant."
            }
        ]
    },
    {
        "Id": 889,
        "Selected_Functions": [
            {
                "name": "FindRestaurants",
                "format": "FindRestaurants(city, cuisineType) -> restaurants",
                "Id": 310,
                "description": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "summary": "This API is to find restaurants of a specific cuisine type in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisineType",
                        "description": "the specific cuisine type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurants",
                        "description": "the restaurants of the specific cuisine type in the specific city",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Toronto on Wednesday."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "PlanDayOut",
                "format": "PlanDayOut(city, activities, restaurants) -> dayPlan",
                "Id": 311,
                "description": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "summary": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "the restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "dayPlan",
                        "description": "the plan for a day out including outdoor activities and restaurants",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find outdoor activities in Toronto that are suitable for the weather."
            },
            {
                "name": "FindOutdoorActivities",
                "format": "FindOutdoorActivities(city, weatherForecast) -> activities",
                "Id": 309,
                "description": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "summary": "This API is to find suitable outdoor activities based on the city and weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "weatherForecast",
                        "description": "the weather forecast of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activities",
                        "description": "the suitable outdoor activities based on the city and weather forecast",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Find an Italian restaurant in Toronto."
            }
        ]
    },
    {
        "Id": 972,
        "Selected_Functions": [
            {
                "name": "OpenParks",
                "format": "OpenParks(city, time)",
                "Id": 513,
                "description": "This API is to get the list of open parks in a specific city at the current time.",
                "summary": "This API is to get the list of open parks in a specific city at the current time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "the current time",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "open_parks",
                        "description": "a list of open parks",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Identify which parks in Sydney are currently open."
            },
            {
                "name": "CurrentTime",
                "format": "CurrentTime(city) -> time",
                "Id": 369,
                "description": "This API provides the current time in a specified city.",
                "summary": "This API provides the current time in a specified city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the current time",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the current date and time."
            },
            {
                "name": "FoodFestival",
                "format": "FoodFestival(park)",
                "Id": 512,
                "description": "This API is to get the food festivals currently open in parks in a specific city.",
                "summary": "This API is to get the food festivals currently open in parks in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "park",
                        "description": "the name of the park",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "food_festivals",
                        "description": "a list of food festivals",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find food festivals that are currently open in the identified parks in Sydney."
            }
        ]
    },
    {
        "Id": 1089,
        "Selected_Functions": [
            {
                "name": "GetCityByZip",
                "format": "GetCityByZip(zip_code) -> city",
                "Id": 543,
                "description": "This API retrieves the city given a zip code.",
                "summary": "This API retrieves the city given a zip code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "zip_code",
                        "description": "the zip code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city corresponding to the zip code",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the zip code '02128' to the city name."
            },
            {
                "name": "GetOutfitStore",
                "format": "GetOutfitStore(city, outfit) -> store_name",
                "Id": 544,
                "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which stores are to be found",
                        "datatype": "String"
                    },
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store where the recommended outfit can be purchased",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for next Friday in the city corresponding to zip code '02128'."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Suggest a store where the recommended outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1129,
        "Selected_Functions": [
            {
                "name": "RestaurantPriceRange",
                "format": "RestaurantPriceRange(city, restaurant) -> priceRange",
                "Id": 614,
                "description": "This API gives the price range for a restaurant in the specified city.",
                "summary": "This API gives the price range for a restaurant in the specified city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "priceRange",
                        "description": "the price range of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the price range for dinner at 'Le Bernardin' in New York."
            },
            {
                "name": "TotalDinnerCost",
                "format": "TotalDinnerCost(restaurantPriceRange, transportFare) -> totalCost",
                "Id": 616,
                "description": "This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.",
                "summary": "This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurantPriceRange",
                        "description": "the price range of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "transportFare",
                        "description": "the one-way transportation fare",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalCost",
                        "description": "the total cost of dinner",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the total cost of dinner at 'Le Bernardin' including any additional charges or taxes."
            },
            {
                "name": "TransportFare",
                "format": "TransportFare(city, destination) -> fare",
                "Id": 615,
                "description": "This API gives the one-way transportation fare to the destination in a specified city.",
                "summary": "This API gives the one-way transportation fare to the destination in a specified city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "destination",
                        "description": "the destination",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "fare",
                        "description": "the one-way transportation fare",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Estimate the taxi fare to 'Le Bernardin' in New York."
            }
        ]
    },
    {
        "Id": 1153,
        "Selected_Functions": [
            {
                "name": "BusinessTripPlanner",
                "format": "BusinessTripPlanner(weather, available_cars, conferences) -> business_plan",
                "Id": 667,
                "description": "This API helps in planning your business trip by combining weather, car rental, and conference information.",
                "summary": "This API helps in planning your business trip by combining weather, car rental, and conference information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast for the city on the specified date",
                        "datatype": "String"
                    },
                    {
                        "name": "available_cars",
                        "description": "the information about the availability of rental cars in the city on the specified date",
                        "datatype": "String"
                    },
                    {
                        "name": "conferences",
                        "description": "the information about conferences in the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "business_plan",
                        "description": "the business trip plan combining weather, car rental, and conference information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Plan a business trip to San Francisco in two weeks."
            },
            {
                "name": "CarRentalAvailability",
                "format": "CarRentalAvailability(city, date) -> available_cars",
                "Id": 665,
                "description": "This API provides information about the availability of rental cars in a city on a certain date.",
                "summary": "This API provides information about the availability of rental cars in a city on a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for car rental availability",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "available_cars",
                        "description": "the information about the availability of rental cars in the city on the specified date",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of car rentals in San Francisco for the duration of the business trip."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the weather forecast for San Francisco for the dates of the business trip."
            },
            {
                "name": "ConferenceDetails",
                "format": "ConferenceDetails(city) -> conferences",
                "Id": 666,
                "description": "This API provides information about conferences in a city.",
                "summary": "This API provides information about conferences in a city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "conferences",
                        "description": "the information about conferences in the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Find details of any conferences happening in San Francisco during the business trip dates."
            }
        ]
    },
    {
        "Id": 1168,
        "Selected_Functions": [
            {
                "name": "GetCityByZip",
                "format": "GetCityByZip(zip_code) -> city",
                "Id": 543,
                "description": "This API retrieves the city given a zip code.",
                "summary": "This API retrieves the city given a zip code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "zip_code",
                        "description": "the zip code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city corresponding to the zip code",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the zip code '02128' to the city name."
            },
            {
                "name": "GetOutfitStore",
                "format": "GetOutfitStore(city, outfit) -> store_name",
                "Id": 544,
                "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which stores are to be found",
                        "datatype": "String"
                    },
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store where the recommended outfit can be purchased",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for next Friday in the city corresponding to zip code '02128'."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Suggest a store where the recommended outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1169,
        "Selected_Functions": [
            {
                "name": "GetCityByZip",
                "format": "GetCityByZip(zip_code) -> city",
                "Id": 543,
                "description": "This API retrieves the city given a zip code.",
                "summary": "This API retrieves the city given a zip code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "zip_code",
                        "description": "the zip code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city corresponding to the zip code",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the zip code '02128' to the city name."
            },
            {
                "name": "GetOutfitStore",
                "format": "GetOutfitStore(city, outfit) -> store_name",
                "Id": 544,
                "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which stores are to be found",
                        "datatype": "String"
                    },
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store where the recommended outfit can be purchased",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for next Friday in the city corresponding to zip code '02128'."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Suggest a store where the recommended outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1170,
        "Selected_Functions": [
            {
                "name": "GetCityByZip",
                "format": "GetCityByZip(zip_code) -> city",
                "Id": 543,
                "description": "This API retrieves the city given a zip code.",
                "summary": "This API retrieves the city given a zip code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "zip_code",
                        "description": "the zip code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city corresponding to the zip code",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the zip code '02128' to the city name."
            },
            {
                "name": "GetOutfitStore",
                "format": "GetOutfitStore(city, outfit) -> store_name",
                "Id": 544,
                "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which stores are to be found",
                        "datatype": "String"
                    },
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store where the recommended outfit can be purchased",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for next Friday in the city corresponding to zip code '02128'."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Suggest a store where the recommended outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1171,
        "Selected_Functions": [
            {
                "name": "GetCityByZip",
                "format": "GetCityByZip(zip_code) -> city",
                "Id": 543,
                "description": "This API retrieves the city given a zip code.",
                "summary": "This API retrieves the city given a zip code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "zip_code",
                        "description": "the zip code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city corresponding to the zip code",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the zip code '02128' to the city name."
            },
            {
                "name": "GetOutfitStore",
                "format": "GetOutfitStore(city, outfit) -> store_name",
                "Id": 544,
                "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which stores are to be found",
                        "datatype": "String"
                    },
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store where the recommended outfit can be purchased",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for next Friday in the city corresponding to zip code '02128'."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide clothing advice based on the weather forecast for next Friday."
            },
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Suggest a store where the recommended outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1316,
        "Selected_Functions": [
            {
                "name": "PropertyOwnershipCost",
                "format": "PropertyOwnershipCost(mortgagePayment, tax) -> ownershipCost",
                "Id": 710,
                "description": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
                "summary": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
                "input_parameters_with_datatype": [
                    {
                        "name": "mortgagePayment",
                        "description": "the mortgage payment",
                        "datatype": "Float"
                    },
                    {
                        "name": "tax",
                        "description": "the property tax",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ownershipCost",
                        "description": "the overall cost of property ownership",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of owning a duplex in Seattle, including all associated costs."
            },
            {
                "name": "TaxEstimator",
                "format": "TaxEstimator(propertyPrice, city) -> tax",
                "Id": 709,
                "description": "This API is to estimate the tax based on property price and city.",
                "summary": "This API is to estimate the tax based on property price and city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "city",
                        "description": "the city where the property is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "tax",
                        "description": "the estimated tax",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Estimate the taxes for the duplex in Seattle."
            },
            {
                "name": "RealEstatePrice",
                "format": "RealEstatePrice(city, propertyType) -> propertyPrice",
                "Id": 707,
                "description": "This API is to get the price of a specific type of property in a specific city.",
                "summary": "This API is to get the price of a specific type of property in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the property is located",
                        "datatype": "String"
                    },
                    {
                        "name": "propertyType",
                        "description": "the type of the property",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the specific property",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Determine the real estate price of the duplex in Seattle."
            },
            {
                "name": "MortgageCalculator",
                "format": "MortgageCalculator(propertyPrice, downPayment, interestRate, term) -> mortgagePayment",
                "Id": 708,
                "description": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
                "summary": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
                "input_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "downPayment",
                        "description": "the down payment for the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "interestRate",
                        "description": "the interest rate of the mortgage",
                        "datatype": "Float"
                    },
                    {
                        "name": "term",
                        "description": "the term of the mortgage",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mortgagePayment",
                        "description": "the mortgage payment",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Calculate the mortgage details for a duplex in Seattle with a down payment of $250,000, an interest rate of 3.2%, and a term of 30 years."
            }
        ]
    },
    {
        "Id": 1317,
        "Selected_Functions": [
            {
                "name": "PropertyOwnershipCost",
                "format": "PropertyOwnershipCost(mortgagePayment, tax) -> ownershipCost",
                "Id": 710,
                "description": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
                "summary": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
                "input_parameters_with_datatype": [
                    {
                        "name": "mortgagePayment",
                        "description": "the mortgage payment",
                        "datatype": "Float"
                    },
                    {
                        "name": "tax",
                        "description": "the property tax",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ownershipCost",
                        "description": "the overall cost of property ownership",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the total cost of owning a duplex in Seattle, including all associated costs."
            },
            {
                "name": "TaxEstimator",
                "format": "TaxEstimator(propertyPrice, city) -> tax",
                "Id": 709,
                "description": "This API is to estimate the tax based on property price and city.",
                "summary": "This API is to estimate the tax based on property price and city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "city",
                        "description": "the city where the property is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "tax",
                        "description": "the estimated tax",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Estimate the taxes for the duplex in Seattle."
            },
            {
                "name": "RealEstatePrice",
                "format": "RealEstatePrice(city, propertyType) -> propertyPrice",
                "Id": 707,
                "description": "This API is to get the price of a specific type of property in a specific city.",
                "summary": "This API is to get the price of a specific type of property in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the property is located",
                        "datatype": "String"
                    },
                    {
                        "name": "propertyType",
                        "description": "the type of the property",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the specific property",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Determine the real estate price of the duplex in Seattle."
            },
            {
                "name": "MortgageCalculator",
                "format": "MortgageCalculator(propertyPrice, downPayment, interestRate, term) -> mortgagePayment",
                "Id": 708,
                "description": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
                "summary": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
                "input_parameters_with_datatype": [
                    {
                        "name": "propertyPrice",
                        "description": "the price of the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "downPayment",
                        "description": "the down payment for the property",
                        "datatype": "Float"
                    },
                    {
                        "name": "interestRate",
                        "description": "the interest rate of the mortgage",
                        "datatype": "Float"
                    },
                    {
                        "name": "term",
                        "description": "the term of the mortgage",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "mortgagePayment",
                        "description": "the mortgage payment",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Calculate the mortgage details for a duplex in Seattle with a down payment of $250,000, an interest rate of 3.2%, and a term of 30 years."
            }
        ]
    },
    {
        "Id": 1363,
        "Selected_Functions": [
            {
                "name": "WeatherAPI",
                "format": "WeatherAPI(City) -> WeatherConditions",
                "Id": 700,
                "description": "This API is to get the current weather conditions of a specified city.",
                "summary": "This API is to get the current weather conditions of a specified city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "City",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "WeatherConditions",
                        "description": "the current weather conditions of the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather in Sydney."
            },
            {
                "name": "StoreSearchAPI",
                "format": "StoreSearchAPI(city, clothing_info) -> store_info",
                "Id": 717,
                "description": "This API is to find the store based on city and recommended clothing.",
                "summary": "This API is to find the store based on city and recommended clothing.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "clothing_info",
                        "description": "the information of recommended clothing",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_info",
                        "description": "the information of the store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide clothing recommendations based on the current weather in Sydney."
            },
            {
                "name": "ClothingSuggestionAPI",
                "format": "ClothingSuggestionAPI(weather) -> clothing_info",
                "Id": 716,
                "description": "This API is to recommend clothing based on the weather.",
                "summary": "This API is to recommend clothing based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_info",
                        "description": "the information of recommended clothing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Search for stores where the recommended clothes can be purchased."
            },
            {
                "name": "BuyOnlineAPI",
                "format": "BuyOnlineAPI(store_info) -> purchase_status",
                "Id": 718,
                "description": "This API is to purchase clothing online from the recommended store.",
                "summary": "This API is to purchase clothing online from the recommended store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_info",
                        "description": "the information of the store",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Check if the recommended clothes can be purchased online."
            }
        ]
    },
    {
        "Id": 1423,
        "Selected_Functions": [
            {
                "name": "GetFlightID",
                "format": "GetFlightID(flight_options, weather_status) -> flight_id",
                "Id": 672,
                "description": "This API returns the flight id considering the weather status.",
                "summary": "This API returns the flight id considering the weather status.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_options",
                        "description": "the available flight options",
                        "datatype": "List"
                    },
                    {
                        "name": "weather_status",
                        "description": "the current weather status",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the id of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the current weather in Madrid."
            },
            {
                "name": "CheckWeather",
                "format": "CheckWeather(location) -> weather",
                "Id": 19,
                "description": "This API checks the weather of a specific location.",
                "summary": "This API checks the weather of a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the specific location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather at the specific location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for available flights from Houston to Madrid."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight from Houston to Madrid using the flight ID."
            }
        ]
    },
    {
        "Id": 1424,
        "Selected_Functions": [
            {
                "name": "GetFlightID",
                "format": "GetFlightID(flight_options, weather_status) -> flight_id",
                "Id": 672,
                "description": "This API returns the flight id considering the weather status.",
                "summary": "This API returns the flight id considering the weather status.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_options",
                        "description": "the available flight options",
                        "datatype": "List"
                    },
                    {
                        "name": "weather_status",
                        "description": "the current weather status",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the id of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the current weather in Madrid."
            },
            {
                "name": "CheckWeather",
                "format": "CheckWeather(location) -> weather",
                "Id": 19,
                "description": "This API checks the weather of a specific location.",
                "summary": "This API checks the weather of a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the specific location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather at the specific location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for available flights from Houston to Madrid."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight from Houston to Madrid using the flight ID."
            }
        ]
    },
    {
        "Id": 1468,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetLocalWeather",
                "format": "GetLocalWeather(city) -> weather",
                "Id": 315,
                "description": "This API is to get the current weather conditions of a specific city.",
                "summary": "This API is to get the current weather conditions of a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather conditions",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the latest fashion trends suitable for a conference setting."
            },
            {
                "name": "GenerateOutfit",
                "format": "GenerateOutfit(clothing, fashion) -> outfit",
                "Id": 324,
                "description": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
                "summary": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
                "input_parameters_with_datatype": [
                    {
                        "name": "clothing",
                        "description": "the recommended clothing",
                        "datatype": "String"
                    },
                    {
                        "name": "fashion",
                        "description": "the trending fashion",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit",
                        "description": "the generated outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Generate an outfit recommendation based on the weather forecast and the latest fashion trends."
            },
            {
                "name": "FindTrendingFashion",
                "format": "FindTrendingFashion(city, season) -> fashion",
                "Id": 323,
                "description": "This API is to find the trending fashion in a particular season for a specific city.",
                "summary": "This API is to find the trending fashion in a particular season for a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "season",
                        "description": "the current season",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "fashion",
                        "description": "the trending fashion",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Recommend specific clothing items that align with the generated outfit and are appropriate for a conference in Tokyo."
            }
        ]
    },
    {
        "Id": 1469,
        "Selected_Functions": [
            {
                "name": "RecommendClothing",
                "format": "RecommendClothing(weather) -> clothingItems",
                "Id": 54,
                "description": "This API suggests clothing items to wear based on the current weather.",
                "summary": "This API suggests clothing items to wear based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothingItems",
                        "description": "the suggested clothing items",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the local weather forecast for Tokyo next week to understand the expected weather conditions."
            },
            {
                "name": "GetLocalWeather",
                "format": "GetLocalWeather(city) -> weather",
                "Id": 315,
                "description": "This API is to get the current weather conditions of a specific city.",
                "summary": "This API is to get the current weather conditions of a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather conditions",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the latest fashion trends suitable for a conference setting."
            },
            {
                "name": "GenerateOutfit",
                "format": "GenerateOutfit(clothing, fashion) -> outfit",
                "Id": 324,
                "description": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
                "summary": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
                "input_parameters_with_datatype": [
                    {
                        "name": "clothing",
                        "description": "the recommended clothing",
                        "datatype": "String"
                    },
                    {
                        "name": "fashion",
                        "description": "the trending fashion",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit",
                        "description": "the generated outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Generate an outfit recommendation based on the weather forecast and the latest fashion trends."
            },
            {
                "name": "FindTrendingFashion",
                "format": "FindTrendingFashion(city, season) -> fashion",
                "Id": 323,
                "description": "This API is to find the trending fashion in a particular season for a specific city.",
                "summary": "This API is to find the trending fashion in a particular season for a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "season",
                        "description": "the current season",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "fashion",
                        "description": "the trending fashion",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Recommend specific clothing items that align with the generated outfit and are appropriate for a conference in Tokyo."
            }
        ]
    },
    {
        "Id": 1500,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "NotifyUser",
                "format": "NotifyUser(person_ID, message) -> Notification status",
                "Id": 754,
                "description": "This API is to send a notification to the user.",
                "summary": "This API is to send a notification to the user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "message",
                        "description": "the notification message",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Notification status",
                        "description": "the status of the notification",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the price of the book with ISBN 978-3-16-148410-0."
            },
            {
                "name": "BookPrice",
                "format": "BookPrice(title) -> price",
                "Id": 386,
                "description": "This API gives the price of the specified book title.",
                "summary": "This API gives the price of the specified book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the book",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the ISBN 978-3-16-148410-0 to the book title."
            },
            {
                "name": "ISBN2BookTitle",
                "format": "ISBN2BookTitle(ISBN) -> book_title",
                "Id": 753,
                "description": "This API is to convert an ISBN to its corresponding book title.",
                "summary": "This API is to convert an ISBN to its corresponding book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Send a notification to the user with the user ID obtained, including the price and title of the book."
            }
        ]
    },
    {
        "Id": 1514,
        "Selected_Functions": [
            {
                "name": "User2Age",
                "format": "User2Age(user_name) -> user_age",
                "Id": 771,
                "description": "This API generates the age of a specific user through its user name.",
                "summary": "This API generates the age of a specific user through its user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_age",
                        "description": "the age of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine Jennifer's age to check if she is eligible to buy alcohol."
            },
            {
                "name": "UserPreference",
                "format": "UserPreference(user_name) -> user_preference",
                "Id": 774,
                "description": "This API will provide the preferred type of drink of the specified user.",
                "summary": "This API will provide the preferred type of drink of the specified user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_preference",
                        "description": "the preferred type of drink",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Identify Jennifer's drink preferences."
            },
            {
                "name": "RecommendDrink",
                "format": "RecommendDrink(user_preference) -> drink",
                "Id": 773,
                "description": "This API suggests a type of drink according to user preference.",
                "summary": "This API suggests a type of drink according to user preference.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_preference",
                        "description": "the preference of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "drink",
                        "description": "the suggested drink",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a drink based on Jennifer's preferences."
            },
            {
                "name": "BuyAlcohol",
                "format": "BuyAlcohol(user_age) -> purchase_status",
                "Id": 772,
                "description": "This API allows the user to purchase alcohol if their age is over the legal limit.",
                "summary": "This API allows the user to purchase alcohol if their age is over the legal limit.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_age",
                        "description": "the age of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Proceed with the purchase of the recommended drink if it is alcoholic and Jennifer is eligible."
            }
        ]
    },
    {
        "Id": 1519,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "NotifyUser",
                "format": "NotifyUser(person_ID, message) -> Notification status",
                "Id": 754,
                "description": "This API is to send a notification to the user.",
                "summary": "This API is to send a notification to the user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "message",
                        "description": "the notification message",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Notification status",
                        "description": "the status of the notification",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the price of the book with ISBN 978-3-16-148410-0."
            },
            {
                "name": "BookPrice",
                "format": "BookPrice(title) -> price",
                "Id": 386,
                "description": "This API gives the price of the specified book title.",
                "summary": "This API gives the price of the specified book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the book",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the ISBN 978-3-16-148410-0 to the book title."
            },
            {
                "name": "ISBN2BookTitle",
                "format": "ISBN2BookTitle(ISBN) -> book_title",
                "Id": 753,
                "description": "This API is to convert an ISBN to its corresponding book title.",
                "summary": "This API is to convert an ISBN to its corresponding book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Send a notification to the user with the user ID obtained, including the price and title of the book."
            }
        ]
    },
    {
        "Id": 1520,
        "Selected_Functions": [
            {
                "name": "GetUserLocationByUsername",
                "format": "GetUserLocationByUsername(username) -> user_location",
                "Id": 782,
                "description": "This API is used to get a user's location based on their username.",
                "summary": "This API is used to get a user's location based on their username.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_location",
                        "description": "the location of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the location of the user 'alice'."
            },
            {
                "name": "GetTimeZoneByLocation",
                "format": "GetTimeZoneByLocation(location) -> timezone",
                "Id": 783,
                "description": "This API is used to determine the timezone based on a given location.",
                "summary": "This API is used to determine the timezone based on a given location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "timezone",
                        "description": "the timezone",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the timezone of the location retrieved for user 'alice'."
            },
            {
                "name": "ScheduleMeeting",
                "format": "ScheduleMeeting(user_email, start_time, end_time, timezone) -> meeting_status",
                "Id": 784,
                "description": "This API schedules a meeting.",
                "summary": "This API schedules a meeting.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "start_time",
                        "description": "the start time of the meeting",
                        "datatype": "Time"
                    },
                    {
                        "name": "end_time",
                        "description": "the end time of the meeting",
                        "datatype": "Time"
                    },
                    {
                        "name": "timezone",
                        "description": "the timezone of the meeting",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "meeting_status",
                        "description": "the status of the meeting",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Schedule a meeting for user 'alice' from 2 pm to 3 pm PST."
            },
            {
                "name": "Username2Email",
                "format": "Username2Email(username) -> user_email",
                "Id": 9,
                "description": "This API is used to convert a username to a user's email.",
                "summary": "This API is used to convert a username to a user's email.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Convert the username 'alice' to an email address."
            }
        ]
    },
    {
        "Id": 1525,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "MovieTitle2ID",
                "format": "MovieTitle2ID(movie_title) -> movie_ID",
                "Id": 792,
                "description": "This API converts a movie title to its ID.",
                "summary": "This API converts a movie title to its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_title",
                        "description": "the title of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the movie title 'The Godfather' to a movie ID."
            },
            {
                "name": "AddToWatchlist",
                "format": "AddToWatchlist(user_ID, movie_ID) -> Watchlist status",
                "Id": 793,
                "description": "This API adds a movie to a user's watchlist.",
                "summary": "This API adds a movie to a user's watchlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Watchlist status",
                        "description": "the status of adding the movie to the watchlist",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the movie 'The Godfather' to Nancy's watchlist using her user ID and the movie ID."
            },
            {
                "name": "EmailNotification",
                "format": "EmailNotification(user_ID, message) -> Notification status",
                "Id": 794,
                "description": "This API sends a notification email to the user.",
                "summary": "This API sends a notification email to the user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "message",
                        "description": "the notification message",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Notification status",
                        "description": "the status of sending the notification email",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Send an email notification to Nancy informing her that 'The Godfather' has been added to her watchlist."
            }
        ]
    },
    {
        "Id": 1537,
        "Selected_Functions": [
            {
                "name": "GetTravelTime",
                "format": "GetTravelTime(source,destination) -> travel_time",
                "Id": 562,
                "description": "This API is to get the approximate travel time between two locations.",
                "summary": "This API is to get the approximate travel time between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "source",
                        "description": "the starting location",
                        "datatype": "String"
                    },
                    {
                        "name": "destination",
                        "description": "the destination location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "travel_time",
                        "description": "the approximate travel time between the two locations",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest cinema in New York City that is showing the movie 'Inception'."
            },
            {
                "name": "GetTicketPrice",
                "format": "GetTicketPrice(cinema, movie) -> price",
                "Id": 810,
                "description": "This API is to get the ticket price of a specific movie at a specific cinema.",
                "summary": "This API is to get the ticket price of a specific movie at a specific cinema.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cinema",
                        "description": "the name of the cinema",
                        "datatype": "String"
                    },
                    {
                        "name": "movie",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the ticket price",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the ticket price for the movie 'Inception' at the nearest cinema."
            },
            {
                "name": "CalculateTotalMovieOutingTime",
                "format": "CalculateTotalMovieOutingTime(travelTime, movieLength) -> totalOutingTime",
                "Id": 811,
                "description": "This API is to calculate the total time of the movie outing considering the travel time and the movie length.",
                "summary": "This API is to calculate the total time of the movie outing considering the travel time and the movie length.",
                "input_parameters_with_datatype": [
                    {
                        "name": "travelTime",
                        "description": "the estimated travel time",
                        "datatype": "Time"
                    },
                    {
                        "name": "movieLength",
                        "description": "the length of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "totalOutingTime",
                        "description": "the total time of the movie outing",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the travel time to the nearest cinema from the current location in New York City."
            },
            {
                "name": "FindNearestCinema",
                "format": "FindNearestCinema(movieDetails) -> cinemaLocation",
                "Id": 322,
                "description": "This API is to find the nearest cinema that is currently showing the movie.",
                "summary": "This API is to find the nearest cinema that is currently showing the movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movieDetails",
                        "description": "the details of the movie",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cinemaLocation",
                        "description": "the location of the nearest cinema",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Calculate the total time for the movie outing, including travel time, movie duration, and any additional time needed."
            }
        ]
    },
    {
        "Id": 1542,
        "Selected_Functions": [
            {
                "name": "FetchCity",
                "format": "FetchCity(user_ID) -> city",
                "Id": 815,
                "description": "This API will return the city of the user based on user ID.",
                "summary": "This API will return the city of the user based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Fetch the user's current city."
            },
            {
                "name": "FetchFlightID",
                "format": "FetchFlightID(flight_name) -> flight_ID",
                "Id": 814,
                "description": "This API retrieves the flight ID using the flight name.",
                "summary": "This API retrieves the flight ID using the flight name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_name",
                        "description": "the name of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find available flights from the user's city to New York on May 15th."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book the flight using the flight ID and user ID."
            },
            {
                "name": "FindFlight",
                "format": "FindFlight(startPoint, endPoint) -> flight",
                "Id": 299,
                "description": "This API is to find the available flights from one point to another.",
                "summary": "This API is to find the available flights from one point to another.",
                "input_parameters_with_datatype": [
                    {
                        "name": "startPoint",
                        "description": "the starting point of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "endPoint",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the available flight options",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 5,
                "task_description": "Retrieve the flight ID for the selected flight."
            }
        ]
    },
    {
        "Id": 1545,
        "Selected_Functions": [
            {
                "name": "FindRestaurantByCuisine",
                "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
                "Id": 175,
                "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Emma' to a user ID."
            },
            {
                "name": "BookRestaurantTable",
                "format": "BookRestaurantTable(restaurant_ID, date) -> booking_status",
                "Id": 177,
                "description": "This API books a table at a restaurant for a certain date.",
                "summary": "This API books a table at a restaurant for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the favorite cuisine of the user with the obtained user ID."
            },
            {
                "name": "GetUserID",
                "format": "GetUserID(username) -> user_ID",
                "Id": 37,
                "description": "This API retrieves the user ID by using the user name.",
                "summary": "This API retrieves the user ID by using the user name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a restaurant that serves the user's favorite cuisine."
            },
            {
                "name": "GetUserFavoriteCuisine",
                "format": "GetUserFavoriteCuisine(user_ID) -> user_cuisine",
                "Id": 176,
                "description": "This API will return the user's favorite cuisine based on user ID.",
                "summary": "This API will return the user's favorite cuisine based on user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_cuisine",
                        "description": "the favorite cuisine of the user",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Book a table at the restaurant for this Friday."
            }
        ]
    },
    {
        "Id": 1546,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "PlaySong",
                "format": "PlaySong(user_ID, song_ID) -> play_status",
                "Id": 214,
                "description": "This API plays a song for a particular user.",
                "summary": "This API plays a song for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_ID",
                        "description": "the ID of the song",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "play_status",
                        "description": "the status of the song playback",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Fetch the song list from the user's playlist."
            },
            {
                "name": "FetchUserPlaylist",
                "format": "FetchUserPlaylist(user_id) -> playlist",
                "Id": 822,
                "description": "This API allows the user to fetch a playlist of a certain user.",
                "summary": "This API allows the user to fetch a playlist of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_id",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist",
                        "description": "the playlist of the user",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a song based on the user's song list."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    },
    {
        "Id": 1547,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'mia' to a user ID."
            },
            {
                "name": "PlaySong",
                "format": "PlaySong(user_ID, song_ID) -> play_status",
                "Id": 214,
                "description": "This API plays a song for a particular user.",
                "summary": "This API plays a song for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_ID",
                        "description": "the ID of the song",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "play_status",
                        "description": "the status of the song playback",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Fetch the song list from the user's playlist."
            },
            {
                "name": "FetchUserPlaylist",
                "format": "FetchUserPlaylist(user_id) -> playlist",
                "Id": 822,
                "description": "This API allows the user to fetch a playlist of a certain user.",
                "summary": "This API allows the user to fetch a playlist of a certain user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_id",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist",
                        "description": "the playlist of the user",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend a song based on the user's song list."
            },
            {
                "name": "RecommendSong",
                "format": "RecommendSong(user_mood) -> song_title",
                "Id": 51,
                "description": "This API returns the title of a song according to user's mood.",
                "summary": "This API returns the title of a song according to user's mood.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_mood",
                        "description": "the mood of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the recommended song",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Play the recommended song for the user."
            }
        ]
    }
]