[
    {
        "Id": 42,
        "Selected_Functions": [
            {
                "name": "CheckWeather",
                "format": "CheckWeather(location) -> weather",
                "Id": 19,
                "description": "This API checks the weather of a specific location.",
                "summary": "This API checks the weather of a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the specific location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather at the specific location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the weather forecast for Sydney on the day of the concert."
            },
            {
                "name": "SelectOutfit",
                "format": "SelectOutfit(weather, occasion) -> outfit",
                "Id": 20,
                "description": "This API selects an appropriate outfit based on the weather and occasion.",
                "summary": "This API selects an appropriate outfit based on the weather and occasion.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    },
                    {
                        "name": "occasion",
                        "description": "the occasion",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Select an appropriate outfit for the concert based on the weather forecast."
            } 
        ]
    },
    {
        "Id": 45,
        "Selected_Functions": [
            {
                "name": "CheckWeather",
                "format": "CheckWeather(location) -> weather",
                "Id": 19,
                "description": "This API checks the weather of a specific location.",
                "summary": "This API checks the weather of a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the specific location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather at the specific location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Check the weather forecast for Sydney on the day of the concert."
            },
            {
                "name": "SelectOutfit",
                "format": "SelectOutfit(weather, occasion) -> outfit",
                "Id": 20,
                "description": "This API selects an appropriate outfit based on the weather and occasion.",
                "summary": "This API selects an appropriate outfit based on the weather and occasion.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    },
                    {
                        "name": "occasion",
                        "description": "the occasion",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Select an appropriate outfit for the concert based on the weather forecast."
            }
        ]
    },
    {
        "Id": 51,
        "Selected_Functions": [
            {
                "name": "GetMenu",
                "format": "GetMenu(restaurant_id) -> menu",
                "Id": 22,
                "description": "This API is to get the menu of a specific restaurant.",
                "summary": "This API is to get the menu of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the top Chinese restaurant in San Francisco."
            },
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            }
        ]
    },
    {
        "Id": 52,
        "Selected_Functions": [
            {
                "name": "GetMenu",
                "format": "GetMenu(restaurant_id) -> menu",
                "Id": 22,
                "description": "This API is to get the menu of a specific restaurant.",
                "summary": "This API is to get the menu of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the top Chinese restaurant in San Francisco."
            },
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            }
        ]
    },
    {
        "Id": 54,
        "Selected_Functions": [
            {
                "name": "GetMenu",
                "format": "GetMenu(restaurant_id) -> menu",
                "Id": 22,
                "description": "This API is to get the menu of a specific restaurant.",
                "summary": "This API is to get the menu of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the top Chinese restaurant in San Francisco."
            },
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            }
        ]
    },
    {
        "Id": 74,
        "Selected_Functions": [
            {
                "name": "BuyMovieTicket",
                "format": "BuyMovieTicket(movie_name, theater_name, date, time) -> booking status",
                "Id": 29,
                "description": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "summary": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "theater_name",
                        "description": "the name of the theater",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the movie showing",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the movie showing",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get a list of movie theaters in Miami that are showing 'The Lion King' today at 3 pm."
            },
            {
                "name": "GetMovieTheaters",
                "format": "GetMovieTheaters(city) -> theater_name",
                "Id": 30,
                "description": "This API returns a recommended movie theaters in a given city.",
                "summary": "This API returns a recommended movie theaters in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city name",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "theater_name",
                        "description": "the name of the movie theaters",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve a ticket for the movie 'The Lion King' at the selected theater in Miami for today at 3 pm."
            }
        ]
    },
    {
        "Id": 75,
        "Selected_Functions": [
            {
                "name": "BuyMovieTicket",
                "format": "BuyMovieTicket(movie_name, theater_name, date, time) -> booking status",
                "Id": 29,
                "description": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "summary": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "theater_name",
                        "description": "the name of the theater",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the movie showing",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the movie showing",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get a list of movie theaters in Miami that are showing 'The Lion King' today at 3 pm."
            },
            {
                "name": "GetMovieTheaters",
                "format": "GetMovieTheaters(city) -> theater_name",
                "Id": 30,
                "description": "This API returns a recommended movie theaters in a given city.",
                "summary": "This API returns a recommended movie theaters in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city name",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "theater_name",
                        "description": "the name of the movie theaters",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve a ticket for the movie 'The Lion King' at the selected theater in Miami for today at 3 pm."
            }
        ]
    },
    {
        "Id": 79,
        "Selected_Functions": [
            {
                "name": "BuyMovieTicket",
                "format": "BuyMovieTicket(movie_name, theater_name, date, time) -> booking status",
                "Id": 29,
                "description": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "summary": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "theater_name",
                        "description": "the name of the theater",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the movie showing",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the movie showing",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "Booking success or failure information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get a list of movie theaters in Miami that are showing 'The Lion King' today at 3 pm."
            },
            {
                "name": "GetMovieTheaters",
                "format": "GetMovieTheaters(city) -> theater_name",
                "Id": 30,
                "description": "This API returns a recommended movie theaters in a given city.",
                "summary": "This API returns a recommended movie theaters in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "city name",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "theater_name",
                        "description": "the name of the movie theaters",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve a ticket for the movie 'The Lion King' at the selected theater in Miami for today at 3 pm."
            }
        ]
    },
    {
        "Id": 95,
        "Selected_Functions": [
            {
                "name": "SearchHotel",
                "format": "SearchHotel(city, hotel_preferences) -> hotel_name",
                "Id": 38,
                "description": "This API searches a hotel in a given city based on user preferences.",
                "summary": "This API searches a hotel in a given city based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city name",
                        "datatype": "String"
                    },
                    {
                        "name": "hotel_preferences",
                        "description": "the user preferences for the hotel",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a hotel in Berlin with free Wi-Fi available from 20th November to 25th November."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find nearby hotels in Miami."
            }
        ]
    },
    {
        "Id": 102,
        "Selected_Functions": [
            {
                "name": "SearchHotel",
                "format": "SearchHotel(city, hotel_preferences) -> hotel_name",
                "Id": 38,
                "description": "This API searches a hotel in a given city based on user preferences.",
                "summary": "This API searches a hotel in a given city based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city name",
                        "datatype": "String"
                    },
                    {
                        "name": "hotel_preferences",
                        "description": "the user preferences for the hotel",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a hotel in Berlin with free Wi-Fi available from 20th November to 25th November."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find nearby hotels in Miami."
            }
        ]
    },
    {
        "Id": 132,
        "Selected_Functions": [
            {
                "name": "GetProductPrice",
                "format": "GetProductPrice(store_name, product_name) -> price",
                "Id": 58,
                "description": "This API is to get the price of a specific product in a given store.",
                "summary": "This API is to get the price of a specific product in a given store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest liquor store in Los Angeles."
            },
            {
                "name": "FindNearestStore",
                "format": "FindNearestStore(city, store_type) -> store_name",
                "Id": 57,
                "description": "This API is to find the nearest store based on user location and the preferred product type.",
                "summary": "This API is to find the nearest store based on user location and the preferred product type.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the user is located",
                        "datatype": "String"
                    },
                    {
                        "name": "store_type",
                        "description": "the preferred store type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the nearest store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the cost of French wine at the nearest liquor store found."
            }
        ]
    },
    {
        "Id": 134,
        "Selected_Functions": [
            {
                "name": "GetProductPrice",
                "format": "GetProductPrice(store_name, product_name) -> price",
                "Id": 58,
                "description": "This API is to get the price of a specific product in a given store.",
                "summary": "This API is to get the price of a specific product in a given store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest liquor store in Los Angeles."
            },
            {
                "name": "FindNearestStore",
                "format": "FindNearestStore(city, store_type) -> store_name",
                "Id": 57,
                "description": "This API is to find the nearest store based on user location and the preferred product type.",
                "summary": "This API is to find the nearest store based on user location and the preferred product type.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the user is located",
                        "datatype": "String"
                    },
                    {
                        "name": "store_type",
                        "description": "the preferred store type",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the nearest store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the cost of French wine at the nearest liquor store found."
            }
        ]
    },
    {
        "Id": 193,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 194,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 196,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 198,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 199,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 200,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 202,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 205,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 206,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductAvailability",
                "format": "ProductAvailability(product_id) -> availability",
                "Id": 75,
                "description": "API to check the availability of a product.",
                "summary": "API to check the availability of a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the product",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the availability of the product with the obtained product ID in the store."
            }
        ]
    },
    {
        "Id": 251,
        "Selected_Functions": [
            {
                "name": "FindHotel",
                "format": "FindHotel(city) -> hotel_name",
                "Id": 87,
                "description": "This API returns a recommended hotel in a given city.",
                "summary": "This API returns a recommended hotel in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a hotel in New York for 5 nights."
            },
            {
                "name": "BookRoom",
                "format": "BookRoom(hotel_name, date, number_of_nights) -> booking status",
                "Id": 88,
                "description": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "summary": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the starting date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "number_of_nights",
                        "description": "the number of nights for the booking",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a room in the hotel found for 5 nights."
            }
        ]
    },
    {
        "Id": 253,
        "Selected_Functions": [
            {
                "name": "FindHotel",
                "format": "FindHotel(city) -> hotel_name",
                "Id": 87,
                "description": "This API returns a recommended hotel in a given city.",
                "summary": "This API returns a recommended hotel in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a hotel in New York for 5 nights."
            },
            {
                "name": "BookRoom",
                "format": "BookRoom(hotel_name, date, number_of_nights) -> booking status",
                "Id": 88,
                "description": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "summary": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the starting date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "number_of_nights",
                        "description": "the number of nights for the booking",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a room in the hotel found for 5 nights."
            }
        ]
    },
    {
        "Id": 255,
        "Selected_Functions": [
            {
                "name": "FindHotel",
                "format": "FindHotel(city) -> hotel_name",
                "Id": 87,
                "description": "This API returns a recommended hotel in a given city.",
                "summary": "This API returns a recommended hotel in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the recommended hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a hotel in New York for 5 nights."
            },
            {
                "name": "BookRoom",
                "format": "BookRoom(hotel_name, date, number_of_nights) -> booking status",
                "Id": 88,
                "description": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "summary": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the starting date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "number_of_nights",
                        "description": "the number of nights for the booking",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a room in the hotel found for 5 nights."
            }
        ]
    },
    {
        "Id": 263,
        "Selected_Functions": [
            {
                "name": "RecommendOutfit",
                "format": "RecommendOutfit(weather) -> outfit details",
                "Id": 90,
                "description": "This API recommends an outfit based on the weather conditions.",
                "summary": "This API recommends an outfit based on the weather conditions.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit details",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Tucson on October 22nd."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 264,
        "Selected_Functions": [
            {
                "name": "RecommendOutfit",
                "format": "RecommendOutfit(weather) -> outfit details",
                "Id": 90,
                "description": "This API recommends an outfit based on the weather conditions.",
                "summary": "This API recommends an outfit based on the weather conditions.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit details",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Tucson on October 22nd."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 265,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 267,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 269,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 271,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 273,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 274,
        "Selected_Functions": [
            {
                "name": "BookFinder",
                "format": "BookFinder(genre, author, year) -> book",
                "Id": 91,
                "description": "This API is to find a specific book by genre, author, and year.",
                "summary": "This API is to find a specific book by genre, author, and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year the book was published",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the specific book matching the given criteria",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the title of a horror book by Stephen King that was published in 1983."
            },
            {
                "name": "BookSummary",
                "format": "BookSummary(book_name) -> summary",
                "Id": 92,
                "description": "This API is to get a summary of a particular book.",
                "summary": "This API is to get a summary of a particular book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "summary",
                        "description": "the summary of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a summary of the horror book by Stephen King that was published in 1983."
            }
        ]
    },
    {
        "Id": 282,
        "Selected_Functions": [
            {
                "name": "MovieSuggestion",
                "format": "MovieSuggestion(genre, director, year) -> movie",
                "Id": 95,
                "description": "This API suggests a movie based on the genre, director, and the year.",
                "summary": "This API suggests a movie based on the genre, director, and the year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "director",
                        "description": "the director of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie",
                        "description": "the suggested movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a romance movie directed by Richard Linklater released in 1995."
            },
            {
                "name": "MovieReview",
                "format": "MovieReview(movie_name) -> review",
                "Id": 96,
                "description": "This API provides a review of a particular movie.",
                "summary": "This API provides a review of a particular movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the review of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Show the review of the movie found in the previous step."
            }
        ]
    },
    {
        "Id": 284,
        "Selected_Functions": [
            {
                "name": "MovieSuggestion",
                "format": "MovieSuggestion(genre, director, year) -> movie",
                "Id": 95,
                "description": "This API suggests a movie based on the genre, director, and the year.",
                "summary": "This API suggests a movie based on the genre, director, and the year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "director",
                        "description": "the director of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie",
                        "description": "the suggested movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a romance movie directed by Richard Linklater released in 1995."
            },
            {
                "name": "MovieReview",
                "format": "MovieReview(movie_name) -> review",
                "Id": 96,
                "description": "This API provides a review of a particular movie.",
                "summary": "This API provides a review of a particular movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the review of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Show the review of the movie found in the previous step."
            }
        ]
    },
    {
        "Id": 287,
        "Selected_Functions": [
            {
                "name": "MovieSuggestion",
                "format": "MovieSuggestion(genre, director, year) -> movie",
                "Id": 95,
                "description": "This API suggests a movie based on the genre, director, and the year.",
                "summary": "This API suggests a movie based on the genre, director, and the year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "director",
                        "description": "the director of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie",
                        "description": "the suggested movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a romance movie directed by Richard Linklater released in 1995."
            },
            {
                "name": "MovieReview",
                "format": "MovieReview(movie_name) -> review",
                "Id": 96,
                "description": "This API provides a review of a particular movie.",
                "summary": "This API provides a review of a particular movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the review of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Show the review of the movie found in the previous step."
            }
        ]
    },
    {
        "Id": 291,
        "Selected_Functions": [
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights from Tokyo to Beijing on 30th January."
            },
            {
                "name": "GetFlightDetails",
                "format": "GetFlightDetails(flight_id) -> details",
                "Id": 97,
                "description": "This API is to get detailed information about a specific flight.",
                "summary": "This API is to get detailed information about a specific flight.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "details",
                        "description": "detailed information about the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the details of the flight found from Tokyo to Beijing on 30th January."
            }
        ]
    },
    {
        "Id": 292,
        "Selected_Functions": [
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights from Tokyo to Beijing on 30th January."
            },
            {
                "name": "GetFlightDetails",
                "format": "GetFlightDetails(flight_id) -> details",
                "Id": 97,
                "description": "This API is to get detailed information about a specific flight.",
                "summary": "This API is to get detailed information about a specific flight.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "details",
                        "description": "detailed information about the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the details of the flight found from Tokyo to Beijing on 30th January."
            }
        ]
    },
    {
        "Id": 294,
        "Selected_Functions": [
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights from Tokyo to Beijing on 30th January."
            },
            {
                "name": "GetFlightDetails",
                "format": "GetFlightDetails(flight_id) -> details",
                "Id": 97,
                "description": "This API is to get detailed information about a specific flight.",
                "summary": "This API is to get detailed information about a specific flight.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "details",
                        "description": "detailed information about the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the details of the flight found from Tokyo to Beijing on 30th January."
            }
        ]
    },
    {
        "Id": 296,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 297,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 298,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 299,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 300,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 303,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 305,
        "Selected_Functions": [
            {
                "name": "GetClothingRecommendation",
                "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
                "Id": 98,
                "description": "This API is to get clothing recommendation based on the weather forecast.",
                "summary": "This API is to get clothing recommendation based on the weather forecast.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_info",
                        "description": "the weather forecast information",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_recommendation",
                        "description": "the recommended clothing based on the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Sydney on 25th December."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 339,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 344,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 345,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 346,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 347,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 348,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 349,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in Los Angeles that serves breakfast."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 351,
        "Selected_Functions": [
            {
                "name": "SearchRecipe",
                "format": "SearchRecipe(cuisine, diet, ingredients) -> recipe",
                "Id": 113,
                "description": "This API is to search for recipe based on user preferences.",
                "summary": "This API is to search for recipe based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine preference",
                        "datatype": "String"
                    },
                    {
                        "name": "diet",
                        "description": "the diet preference",
                        "datatype": "String"
                    },
                    {
                        "name": "ingredients",
                        "description": "the list of ingredients",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe",
                        "description": "the searched recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a vegan Chinese recipe that includes tofu and broccoli."
            },
            {
                "name": "GetRecipeInstructions",
                "format": "GetRecipeInstructions(recipe_name) -> instructions",
                "Id": 114,
                "description": "This API is to get the instructions to prepare a specific recipe.",
                "summary": "This API is to get the instructions to prepare a specific recipe.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_name",
                        "description": "the name of the recipe",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructions",
                        "description": "the instructions for the recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the instructions for preparing the vegan Chinese recipe found in the previous step."
            }
        ]
    },
    {
        "Id": 352,
        "Selected_Functions": [
            {
                "name": "SearchRecipe",
                "format": "SearchRecipe(cuisine, diet, ingredients) -> recipe",
                "Id": 113,
                "description": "This API is to search for recipe based on user preferences.",
                "summary": "This API is to search for recipe based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine preference",
                        "datatype": "String"
                    },
                    {
                        "name": "diet",
                        "description": "the diet preference",
                        "datatype": "String"
                    },
                    {
                        "name": "ingredients",
                        "description": "the list of ingredients",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe",
                        "description": "the searched recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a vegan Chinese recipe that includes tofu and broccoli."
            },
            {
                "name": "GetRecipeInstructions",
                "format": "GetRecipeInstructions(recipe_name) -> instructions",
                "Id": 114,
                "description": "This API is to get the instructions to prepare a specific recipe.",
                "summary": "This API is to get the instructions to prepare a specific recipe.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_name",
                        "description": "the name of the recipe",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructions",
                        "description": "the instructions for the recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the instructions for preparing the vegan Chinese recipe found in the previous step."
            }
        ]
    },
    {
        "Id": 355,
        "Selected_Functions": [
            {
                "name": "SearchRecipe",
                "format": "SearchRecipe(cuisine, diet, ingredients) -> recipe",
                "Id": 113,
                "description": "This API is to search for recipe based on user preferences.",
                "summary": "This API is to search for recipe based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine preference",
                        "datatype": "String"
                    },
                    {
                        "name": "diet",
                        "description": "the diet preference",
                        "datatype": "String"
                    },
                    {
                        "name": "ingredients",
                        "description": "the list of ingredients",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe",
                        "description": "the searched recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a vegan Chinese recipe that includes tofu and broccoli."
            },
            {
                "name": "GetRecipeInstructions",
                "format": "GetRecipeInstructions(recipe_name) -> instructions",
                "Id": 114,
                "description": "This API is to get the instructions to prepare a specific recipe.",
                "summary": "This API is to get the instructions to prepare a specific recipe.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_name",
                        "description": "the name of the recipe",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructions",
                        "description": "the instructions for the recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the instructions for preparing the vegan Chinese recipe found in the previous step."
            }
        ]
    },
    {
        "Id": 356,
        "Selected_Functions": [
            {
                "name": "SearchRecipe",
                "format": "SearchRecipe(cuisine, diet, ingredients) -> recipe",
                "Id": 113,
                "description": "This API is to search for recipe based on user preferences.",
                "summary": "This API is to search for recipe based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the cuisine preference",
                        "datatype": "String"
                    },
                    {
                        "name": "diet",
                        "description": "the diet preference",
                        "datatype": "String"
                    },
                    {
                        "name": "ingredients",
                        "description": "the list of ingredients",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe",
                        "description": "the searched recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for a vegan Chinese recipe that includes tofu and broccoli."
            },
            {
                "name": "GetRecipeInstructions",
                "format": "GetRecipeInstructions(recipe_name) -> instructions",
                "Id": 114,
                "description": "This API is to get the instructions to prepare a specific recipe.",
                "summary": "This API is to get the instructions to prepare a specific recipe.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_name",
                        "description": "the name of the recipe",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "instructions",
                        "description": "the instructions for the recipe",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the instructions for preparing the vegan Chinese recipe found in the previous step."
            }
        ]
    },
    {
        "Id": 387,
        "Selected_Functions": [
            {
                "name": "RecommendOutfit",
                "format": "RecommendOutfit(weather) -> outfit details",
                "Id": 90,
                "description": "This API recommends an outfit based on the weather conditions.",
                "summary": "This API recommends an outfit based on the weather conditions.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit details",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Tucson on October 22nd."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 389,
        "Selected_Functions": [
            {
                "name": "RecommendOutfit",
                "format": "RecommendOutfit(weather) -> outfit details",
                "Id": 90,
                "description": "This API recommends an outfit based on the weather conditions.",
                "summary": "This API recommends an outfit based on the weather conditions.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "outfit details",
                        "description": "the recommended outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Tucson on October 22nd."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Recommend an appropriate outfit based on the weather forecast for Tucson on October 22nd."
            }
        ]
    },
    {
        "Id": 572,
        "Selected_Functions": [
            {
                "name": "BookTitle2ISBN",
                "format": "BookTitle2ISBN(book_title) -> ISBN",
                "Id": 458,
                "description": "This API is to convert book title to book ISBN.",
                "summary": "This API is to convert book title to book ISBN.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title '1984' to its ISBN."
            },
            {
                "name": "BuyBook",
                "format": "BuyBook(user_ID, ISBN) -> purchase_status",
                "Id": 459,
                "description": "This API is to purchase a book for a user.",
                "summary": "This API is to purchase a book for a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Purchase 10 copies of the book using the obtained ISBN."
            }
        ]
    },
    {
        "Id": 573,
        "Selected_Functions": [
            {
                "name": "BookTitle2ISBN",
                "format": "BookTitle2ISBN(book_title) -> ISBN",
                "Id": 458,
                "description": "This API is to convert book title to book ISBN.",
                "summary": "This API is to convert book title to book ISBN.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title '1984' to its ISBN."
            },
            {
                "name": "BuyBook",
                "format": "BuyBook(user_ID, ISBN) -> purchase_status",
                "Id": 459,
                "description": "This API is to purchase a book for a user.",
                "summary": "This API is to purchase a book for a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Purchase 10 copies of the book using the obtained ISBN."
            }
        ]
    },
    {
        "Id": 577,
        "Selected_Functions": [
            {
                "name": "FlightDestination2Code",
                "format": "FlightDestination2Code(destination) -> flight_code",
                "Id": 140,
                "description": "This API is to convert flight destination to its corresponding flight code.",
                "summary": "This API is to convert flight destination to its corresponding flight code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_code",
                        "description": "the code of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the flight destination 'Tokyo' to a destination code."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find available flights from Paris to Rome for this Sunday."
            }
        ]
    },
    {
        "Id": 578,
        "Selected_Functions": [
            {
                "name": "FlightDestination2Code",
                "format": "FlightDestination2Code(destination) -> flight_code",
                "Id": 140,
                "description": "This API is to convert flight destination to its corresponding flight code.",
                "summary": "This API is to convert flight destination to its corresponding flight code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_code",
                        "description": "the code of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the flight destination 'Tokyo' to a destination code."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find available flights from Paris to Rome for this Sunday."
            }
        ]
    },
    {
        "Id": 621,
        "Selected_Functions": [
            {
                "name": "Productname2ProductID",
                "format": "Productname2ProductID(product_name) -> product_id",
                "Id": 162,
                "description": "This API converts product name to product id.",
                "summary": "This API converts product name to product id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPad Pro' to a product ID."
            },
            {
                "name": "AddToCart",
                "format": "AddToCart(customer_ID, product_ID) -> Cart status",
                "Id": 86,
                "description": "This API adds a product to a customer's shopping cart.",
                "summary": "This API adds a product to a customer's shopping cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Cart status",
                        "description": "the status of the cart",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Add 2 units of product 654 to Emily Thompson's shopping cart using her customer ID."
            }
        ]
    },
    {
        "Id": 622,
        "Selected_Functions": [
            {
                "name": "Productname2ProductID",
                "format": "Productname2ProductID(product_name) -> product_id",
                "Id": 162,
                "description": "This API converts product name to product id.",
                "summary": "This API converts product name to product id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the Id of the product",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the product name 'iPad Pro' to a product ID."
            },
            {
                "name": "AddToCart",
                "format": "AddToCart(customer_ID, product_ID) -> Cart status",
                "Id": 86,
                "description": "This API adds a product to a customer's shopping cart.",
                "summary": "This API adds a product to a customer's shopping cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Cart status",
                        "description": "the status of the cart",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Add 2 units of product 654 to Emily Thompson's shopping cart using her customer ID."
            }
        ]
    },
    {
        "Id": 692,
        "Selected_Functions": [
            {
                "name": "CustomernameToID",
                "format": "CustomernameToID(customer_name) -> customer_ID",
                "Id": 201,
                "description": "This API is used to convert the name of the customer to customer ID.",
                "summary": "This API is used to convert the name of the customer to customer ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_name",
                        "description": "the name of the customer",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the customer name 'Emily Thompson' to a customer ID."
            },
            {
                "name": "AddToCart",
                "format": "AddToCart(customer_ID, product_ID) -> Cart status",
                "Id": 86,
                "description": "This API adds a product to a customer's shopping cart.",
                "summary": "This API adds a product to a customer's shopping cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Cart status",
                        "description": "the status of the cart",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Add 2 units of product 654 to Emily Thompson's shopping cart using her customer ID."
            }
        ]
    },
    {
        "Id": 785,
        "Selected_Functions": [
            {
                "name": "BookActivity",
                "format": "BookActivity(activity_name, city) -> booking_status",
                "Id": 241,
                "description": "This API allows the user to book a particular indoor activity in a specific city.",
                "summary": "This API allows the user to book a particular indoor activity in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "activity_name",
                        "description": "the name of the indoor activity",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find indoor activities available in Dubai today."
            },
            {
                "name": "FindIndoorActivities",
                "format": "FindIndoorActivities(city) -> activity_name",
                "Id": 240,
                "description": "This API suggests popular indoor activities in a given city.",
                "summary": "This API suggests popular indoor activities in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activity_name",
                        "description": "the name of the suggested indoor activity",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book one of the indoor activities found in Dubai."
            }
        ]
    },
    {
        "Id": 787,
        "Selected_Functions": [
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find nearby hotels in Miami."
            },
            {
                "name": "FindNearbyHotels",
                "format": "FindNearbyHotels(city) -> hotel_name",
                "Id": 243,
                "description": "This API provides the names of nearby hotels in a given city.",
                "summary": "This API provides the names of nearby hotels in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve a room in one of the nearby hotels found."
            }
        ]
    },
    {
        "Id": 790,
        "Selected_Functions": [
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find nearby hotels in Miami."
            },
            {
                "name": "FindNearbyHotels",
                "format": "FindNearbyHotels(city) -> hotel_name",
                "Id": 243,
                "description": "This API provides the names of nearby hotels in a given city.",
                "summary": "This API provides the names of nearby hotels in a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve a room in one of the nearby hotels found."
            }
        ]
    },
    {
        "Id": 816,
        "Selected_Functions": [
            {
                "name": "FoodIngredients",
                "format": "FoodIngredients(dish_name, restaurant_name) -> ingredients",
                "Id": 258,
                "description": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "summary": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "dish_name",
                        "description": "the name of the dish",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ingredients",
                        "description": "the ingredients of the dish",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in San Diego that serves 'Fish Tacos'."
            },
            {
                "name": "FoodFinder",
                "format": "FoodFinder(cuisine, location) -> restaurant_name",
                "Id": 256,
                "description": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "summary": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the type of cuisine",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "List the components or ingredients of the 'Fish Tacos' from the restaurant found."
            }
        ]
    },
    {
        "Id": 817,
        "Selected_Functions": [
            {
                "name": "FoodIngredients",
                "format": "FoodIngredients(dish_name, restaurant_name) -> ingredients",
                "Id": 258,
                "description": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "summary": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "dish_name",
                        "description": "the name of the dish",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ingredients",
                        "description": "the ingredients of the dish",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in San Diego that serves 'Fish Tacos'."
            },
            {
                "name": "FoodFinder",
                "format": "FoodFinder(cuisine, location) -> restaurant_name",
                "Id": 256,
                "description": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "summary": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the type of cuisine",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "List the components or ingredients of the 'Fish Tacos' from the restaurant found."
            }
        ]
    },
    {
        "Id": 818,
        "Selected_Functions": [
            {
                "name": "FoodIngredients",
                "format": "FoodIngredients(dish_name, restaurant_name) -> ingredients",
                "Id": 258,
                "description": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "summary": "This API gives the ingredients of a specific dish from a certain restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "dish_name",
                        "description": "the name of the dish",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ingredients",
                        "description": "the ingredients of the dish",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Mexican restaurant in San Diego that serves 'Fish Tacos'."
            },
            {
                "name": "FoodFinder",
                "format": "FoodFinder(cuisine, location) -> restaurant_name",
                "Id": 256,
                "description": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "summary": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the type of cuisine",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "List the components or ingredients of the 'Fish Tacos' from the restaurant found."
            }
        ]
    },
    {
        "Id": 845,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "BookReservation",
                "format": "BookReservation(restaurantname, partySize, time) -> reservationStatus",
                "Id": 278,
                "description": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "summary": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurantname",
                        "description": "the name of the specific restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "partySize",
                        "description": "the size of the party",
                        "datatype": "Integer"
                    },
                    {
                        "name": "time",
                        "description": "the specific time for the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservationStatus",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a table for 7 people at the restaurant found on February 14th at 7:30 PM."
            }
        ]
    },
    {
        "Id": 847,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "BookReservation",
                "format": "BookReservation(restaurantname, partySize, time) -> reservationStatus",
                "Id": 278,
                "description": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "summary": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurantname",
                        "description": "the name of the specific restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "partySize",
                        "description": "the size of the party",
                        "datatype": "Integer"
                    },
                    {
                        "name": "time",
                        "description": "the specific time for the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservationStatus",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a table for 7 people at the restaurant found on February 14th at 7:30 PM."
            }
        ]
    },
    {
        "Id": 1028,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 1029,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the selected Mexican restaurant for Thursday at 7:30pm."
            }
        ]
    },
    {
        "Id": 1032,
        "Selected_Functions": [
            {
                "name": "OrderMedicine",
                "format": "OrderMedicine(pharmacy, medicine_name, quantity) -> order_confirmation",
                "Id": 399,
                "description": "This API places an order for a particular medicine at a chosen pharmacy.",
                "summary": "This API places an order for a particular medicine at a chosen pharmacy.",
                "input_parameters_with_datatype": [
                    {
                        "name": "pharmacy",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    },
                    {
                        "name": "medicine_name",
                        "description": "the name of the medicine",
                        "datatype": "String"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the medicine to order",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_confirmation",
                        "description": "the confirmation of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Locate a pharmacy in Seattle where Vitamin C is available."
            },
            {
                "name": "PharmacyLocator",
                "format": "PharmacyLocator(city) -> pharmacies",
                "Id": 397,
                "description": "This API locates all the pharmacies in a specific city.",
                "summary": "This API locates all the pharmacies in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "pharmacies",
                        "description": "a list of pharmacies in the city",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Order 3 packs of Vitamin C from the located pharmacy."
            }
        ]
    },
    {
        "Id": 1033,
        "Selected_Functions": [
            {
                "name": "OrderMedicine",
                "format": "OrderMedicine(pharmacy, medicine_name, quantity) -> order_confirmation",
                "Id": 399,
                "description": "This API places an order for a particular medicine at a chosen pharmacy.",
                "summary": "This API places an order for a particular medicine at a chosen pharmacy.",
                "input_parameters_with_datatype": [
                    {
                        "name": "pharmacy",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    },
                    {
                        "name": "medicine_name",
                        "description": "the name of the medicine",
                        "datatype": "String"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the medicine to order",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_confirmation",
                        "description": "the confirmation of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Locate a pharmacy in Seattle where Vitamin C is available."
            },
            {
                "name": "PharmacyLocator",
                "format": "PharmacyLocator(city) -> pharmacies",
                "Id": 397,
                "description": "This API locates all the pharmacies in a specific city.",
                "summary": "This API locates all the pharmacies in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "pharmacies",
                        "description": "a list of pharmacies in the city",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Order 3 packs of Vitamin C from the located pharmacy."
            }
        ]
    },
    {
        "Id": 1047,
        "Selected_Functions": [
            {
                "name": "FlightInfo",
                "format": "FlightInfo(city_from, city_to, date_from, date_to) -> flightDetails",
                "Id": 410,
                "description": "This API retrieves detailed information about flights including its cost.",
                "summary": "This API retrieves detailed information about flights including its cost.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_from",
                        "description": "the city of departure",
                        "datatype": "String"
                    },
                    {
                        "name": "city_to",
                        "description": "the city of arrival",
                        "datatype": "String"
                    },
                    {
                        "name": "date_from",
                        "description": "the start date of the flight",
                        "datatype": "Date"
                    },
                    {
                        "name": "date_to",
                        "description": "the end date of the flight",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flightDetails",
                        "description": "detailed information about flights including its cost",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the cost of a flight from San Francisco to Sydney in June."
            },
            {
                "name": "WeatherEffectPrice",
                "format": "WeatherEffectPrice(city, date, original_price) -> adjustedPrice",
                "Id": 412,
                "description": "This API calculates the potential effects of weather on flight prices.",
                "summary": "This API calculates the potential effects of weather on flight prices.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which weather effects on flight prices are to be calculated",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for which weather effects on flight prices are to be calculated",
                        "datatype": "Date"
                    },
                    {
                        "name": "original_price",
                        "description": "the original price of the flight",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "adjustedPrice",
                        "description": "the potential adjusted price of the flight considering weather effects",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine how the weather conditions in June might affect the flight price from San Francisco to Sydney."
            }
        ]
    },
    {
        "Id": 1049,
        "Selected_Functions": [
            {
                "name": "FlightInfo",
                "format": "FlightInfo(city_from, city_to, date_from, date_to) -> flightDetails",
                "Id": 410,
                "description": "This API retrieves detailed information about flights including its cost.",
                "summary": "This API retrieves detailed information about flights including its cost.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_from",
                        "description": "the city of departure",
                        "datatype": "String"
                    },
                    {
                        "name": "city_to",
                        "description": "the city of arrival",
                        "datatype": "String"
                    },
                    {
                        "name": "date_from",
                        "description": "the start date of the flight",
                        "datatype": "Date"
                    },
                    {
                        "name": "date_to",
                        "description": "the end date of the flight",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flightDetails",
                        "description": "detailed information about flights including its cost",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the cost of a flight from San Francisco to Sydney in June."
            },
            {
                "name": "WeatherEffectPrice",
                "format": "WeatherEffectPrice(city, date, original_price) -> adjustedPrice",
                "Id": 412,
                "description": "This API calculates the potential effects of weather on flight prices.",
                "summary": "This API calculates the potential effects of weather on flight prices.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city for which weather effects on flight prices are to be calculated",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for which weather effects on flight prices are to be calculated",
                        "datatype": "Date"
                    },
                    {
                        "name": "original_price",
                        "description": "the original price of the flight",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "adjustedPrice",
                        "description": "the potential adjusted price of the flight considering weather effects",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine how the weather conditions in June might affect the flight price from San Francisco to Sydney."
            }
        ]
    },
    {
        "Id": 1197,
        "Selected_Functions": [
            {
                "name": "ReserveMedicine",
                "format": "ReserveMedicine(pharmacy_name, drug, patient_name) -> reservation_status",
                "Id": 556,
                "description": "This API allows the user to reserve a medicine in a specific pharmacy.",
                "summary": "This API allows the user to reserve a medicine in a specific pharmacy.",
                "input_parameters_with_datatype": [
                    {
                        "name": "pharmacy_name",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    },
                    {
                        "name": "drug",
                        "description": "the name of the drug",
                        "datatype": "String"
                    },
                    {
                        "name": "patient_name",
                        "description": "the name of the patient",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the reservation status of the medicine",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Locate a pharmacy in Atlanta that stocks metformin."
            },
            {
                "name": "LocatePharmacy",
                "format": "LocatePharmacy(city, drug) -> pharmacy_name",
                "Id": 555,
                "description": "This API locates a pharmacy in a given city that has a certain drug in stock.",
                "summary": "This API locates a pharmacy in a given city that has a certain drug in stock.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "drug",
                        "description": "the name of the drug",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "pharmacy_name",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve metformin at the located pharmacy under the name Robert Brown."
            }
        ]
    },
    {
        "Id": 1198,
        "Selected_Functions": [
            {
                "name": "ReserveMedicine",
                "format": "ReserveMedicine(pharmacy_name, drug, patient_name) -> reservation_status",
                "Id": 556,
                "description": "This API allows the user to reserve a medicine in a specific pharmacy.",
                "summary": "This API allows the user to reserve a medicine in a specific pharmacy.",
                "input_parameters_with_datatype": [
                    {
                        "name": "pharmacy_name",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    },
                    {
                        "name": "drug",
                        "description": "the name of the drug",
                        "datatype": "String"
                    },
                    {
                        "name": "patient_name",
                        "description": "the name of the patient",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the reservation status of the medicine",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Locate a pharmacy in Atlanta that stocks metformin."
            },
            {
                "name": "LocatePharmacy",
                "format": "LocatePharmacy(city, drug) -> pharmacy_name",
                "Id": 555,
                "description": "This API locates a pharmacy in a given city that has a certain drug in stock.",
                "summary": "This API locates a pharmacy in a given city that has a certain drug in stock.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "drug",
                        "description": "the name of the drug",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "pharmacy_name",
                        "description": "the name of the pharmacy",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Reserve metformin at the located pharmacy under the name Robert Brown."
            }
        ]
    },
    {
        "Id": 1212,
        "Selected_Functions": [
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather in San Francisco."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide clothing advice based on the current weather in San Francisco."
            }
        ]
    },
    {
        "Id": 1215,
        "Selected_Functions": [
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather in San Francisco."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide clothing advice based on the current weather in San Francisco."
            }
        ]
    },
    {
        "Id": 1340,
        "Selected_Functions": [
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find available flights from Paris to Rome for this Sunday."
            },
            {
                "name": "FindFlights",
                "format": "FindFlights(city1, city2, date) -> flight",
                "Id": 713,
                "description": "This API is to find flights between two cities on a specific date.",
                "summary": "This API is to find flights between two cities on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city1",
                        "description": "the departure city",
                        "datatype": "String"
                    },
                    {
                        "name": "city2",
                        "description": "the destination city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the flight details",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a flight from the available options found for the trip from Paris to Rome on this Sunday."
            }
        ]
    },
    {
        "Id": 1341,
        "Selected_Functions": [
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find available flights from Paris to Rome for this Sunday."
            },
            {
                "name": "FindFlights",
                "format": "FindFlights(city1, city2, date) -> flight",
                "Id": 713,
                "description": "This API is to find flights between two cities on a specific date.",
                "summary": "This API is to find flights between two cities on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city1",
                        "description": "the departure city",
                        "datatype": "String"
                    },
                    {
                        "name": "city2",
                        "description": "the destination city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the flight details",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a flight from the available options found for the trip from Paris to Rome on this Sunday."
            }
        ]
    },
    {
        "Id": 1384,
        "Selected_Functions": [
            {
                "name": "BookValue",
                "format": "BookValue(ISBN, authorDetails) -> book_value",
                "Id": 719,
                "description": "This API is to get the value of a book.",
                "summary": "This API is to get the value of a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "authorDetails",
                        "description": "the details of the author of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_value",
                        "description": "the value of the book",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the value of the book with ISBN '1029384756'."
            },
            {
                "name": "AuthorDetails",
                "format": "AuthorDetails(book_details) -> author_info",
                "Id": 703,
                "description": "This API is to get the details of an author from a book.",
                "summary": "This API is to get the details of an author from a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_details",
                        "description": "the details of the book",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "author_info",
                        "description": "the information of the author",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get details about the author J.R.R. Tolkien."
            }
        ]
    },
    {
        "Id": 1397,
        "Selected_Functions": [
            {
                "name": "OutfitSuggestion",
                "format": "OutfitSuggestion(WeatherCondition) -> Outfit",
                "Id": 589,
                "description": "This API suggests an outfit based on the weather condition.",
                "summary": "This API suggests an outfit based on the weather condition.",
                "input_parameters_with_datatype": [
                    {
                        "name": "WeatherCondition",
                        "description": "the current weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Outfit",
                        "description": "the suggested outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Paris to understand the weather conditions."
            },
            {
                "name": "WeatherInfo",
                "format": "WeatherInfo(coordinates) -> weather_data",
                "Id": 164,
                "description": "This API retrieves the weather information for a specific location.",
                "summary": "This API retrieves the weather information for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "coordinates",
                        "description": "the geographical coordinates of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_data",
                        "description": "the weather information for the location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Based on the weather information for Paris, suggest an appropriate outfit for the day."
            }
        ]
    },
    {
        "Id": 1399,
        "Selected_Functions": [
            {
                "name": "OutfitSuggestion",
                "format": "OutfitSuggestion(WeatherCondition) -> Outfit",
                "Id": 589,
                "description": "This API suggests an outfit based on the weather condition.",
                "summary": "This API suggests an outfit based on the weather condition.",
                "input_parameters_with_datatype": [
                    {
                        "name": "WeatherCondition",
                        "description": "the current weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Outfit",
                        "description": "the suggested outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Paris to understand the weather conditions."
            },
            {
                "name": "WeatherInfo",
                "format": "WeatherInfo(coordinates) -> weather_data",
                "Id": 164,
                "description": "This API retrieves the weather information for a specific location.",
                "summary": "This API retrieves the weather information for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "coordinates",
                        "description": "the geographical coordinates of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_data",
                        "description": "the weather information for the location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Based on the weather information for Paris, suggest an appropriate outfit for the day."
            }
        ]
    },
    {
        "Id": 1400,
        "Selected_Functions": [
            {
                "name": "BestTravelTime",
                "format": "BestTravelTime(weather_condition, attraction) -> best_time",
                "Id": 725,
                "description": "This API is to get the most favourable time to visit a certain attraction given the weather condition.",
                "summary": "This API is to get the most favourable time to visit a certain attraction given the weather condition.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_condition",
                        "description": "the weather condition of the city where the attraction is located",
                        "datatype": "String"
                    },
                    {
                        "name": "attraction",
                        "description": "the name of the attraction",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "best_time",
                        "description": "the most favourable time to visit the attraction",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine the best time to visit the Statue of Liberty in New York based on general travel recommendations."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide the weather forecast for London on the day of the trip."
            }
        ]
    },
    {
        "Id": 1402,
        "Selected_Functions": [
            {
                "name": "RestaurantSearch",
                "format": "RestaurantSearch(name, city) -> restaurant_id",
                "Id": 363,
                "description": "This API searches for restaurant id for a specific name in a particular city.",
                "summary": "This API searches for restaurant id for a specific name in a particular city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the restaurant is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the top French restaurant in Boston."
            },
            {
                "name": "BookReservation",
                "format": "BookReservation(restaurantname, partySize, time) -> reservationStatus",
                "Id": 278,
                "description": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "summary": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurantname",
                        "description": "the name of the specific restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "partySize",
                        "description": "the size of the party",
                        "datatype": "Integer"
                    },
                    {
                        "name": "time",
                        "description": "the specific time for the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservationStatus",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a table for 7 people at the restaurant found on February 14th at 7:30 PM."
            }
        ]
    },
    {
        "Id": 1405,
        "Selected_Functions": [
            {
                "name": "RestaurantSearch",
                "format": "RestaurantSearch(name, city) -> restaurant_id",
                "Id": 363,
                "description": "This API searches for restaurant id for a specific name in a particular city.",
                "summary": "This API searches for restaurant id for a specific name in a particular city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the restaurant is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the top French restaurant in Boston."
            },
            {
                "name": "BookReservation",
                "format": "BookReservation(restaurantname, partySize, time) -> reservationStatus",
                "Id": 278,
                "description": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "summary": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurantname",
                        "description": "the name of the specific restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "partySize",
                        "description": "the size of the party",
                        "datatype": "Integer"
                    },
                    {
                        "name": "time",
                        "description": "the specific time for the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservationStatus",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a table for 7 people at the restaurant found on February 14th at 7:30 PM."
            }
        ]
    },
    {
        "Id": 1437,
        "Selected_Functions": [
            {
                "name": "FindBook",
                "format": "FindBook(title) -> book",
                "Id": 342,
                "description": "This API is to find a book based on a specified title.",
                "summary": "This API is to find a book based on a specified title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book",
                        "description": "the information of the book",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find 'The Great Gatsby' in the book store."
            },
            {
                "name": "BuyBook",
                "format": "BuyBook(user_ID, ISBN) -> purchase_status",
                "Id": 459,
                "description": "This API is to purchase a book for a user.",
                "summary": "This API is to purchase a book for a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Purchase 10 copies of the book using the obtained ISBN."
            }
        ]
    },
    {
        "Id": 1439,
        "Selected_Functions": [
            {
                "name": "SearchFilm",
                "format": "SearchFilm(title) -> film_id",
                "Id": 681,
                "description": "This API is to find the film id when the user specifies a film title.",
                "summary": "This API is to find the film id when the user specifies a film title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the film",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "film_id",
                        "description": "the id of the film",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the movie 'Jurassic Park' to find available showtimes on Monday evening."
            },
            {
                "name": "BookMovie",
                "format": "BookMovie(film_id, date, show_time) -> booking confirmation",
                "Id": 683,
                "description": "This API is to book movie tickets for a specific film, date and show time.",
                "summary": "This API is to book movie tickets for a specific film, date and show time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "film_id",
                        "description": "the id of the film",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the show",
                        "datatype": "String"
                    },
                    {
                        "name": "show_time",
                        "description": "the show time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking confirmation",
                        "description": "the confirmation of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a ticket for 'Jurassic Park' on Monday evening at the selected showtime."
            }
        ]
    },
    {
        "Id": 1441,
        "Selected_Functions": [
            {
                "name": "SearchFilm",
                "format": "SearchFilm(title) -> film_id",
                "Id": 681,
                "description": "This API is to find the film id when the user specifies a film title.",
                "summary": "This API is to find the film id when the user specifies a film title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the film",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "film_id",
                        "description": "the id of the film",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the movie 'Jurassic Park' to find available showtimes on Monday evening."
            },
            {
                "name": "BookMovie",
                "format": "BookMovie(film_id, date, show_time) -> booking confirmation",
                "Id": 683,
                "description": "This API is to book movie tickets for a specific film, date and show time.",
                "summary": "This API is to book movie tickets for a specific film, date and show time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "film_id",
                        "description": "the id of the film",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the show",
                        "datatype": "String"
                    },
                    {
                        "name": "show_time",
                        "description": "the show time",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking confirmation",
                        "description": "the confirmation of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a ticket for 'Jurassic Park' on Monday evening at the selected showtime."
            }
        ]
    },
    {
        "Id": 1443,
        "Selected_Functions": [
            {
                "name": "GetBookISBN",
                "format": "GetBookISBN(book_title) -> ISBN",
                "Id": 684,
                "description": "This API retrieves the ISBN of a specific book title.",
                "summary": "This API retrieves the ISBN of a specific book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the ISBN for the book 'To Kill a Mockingbird'."
            },
            {
                "name": "BuyBook",
                "format": "BuyBook(user_ID, ISBN) -> purchase_status",
                "Id": 459,
                "description": "This API is to purchase a book for a user.",
                "summary": "This API is to purchase a book for a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Purchase 10 copies of the book using the obtained ISBN."
            }
        ]
    },
    {
        "Id": 1457,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "ReserveTable",
                "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
                "Id": 179,
                "description": "This API reserves a table at a restaurant for a certain date and time.",
                "summary": "This API reserves a table at a restaurant for a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the found Lebanese restaurant for 11am."
            }
        ]
    },
    {
        "Id": 1458,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Lebanese restaurant in Boston."
            },
            {
                "name": "ReserveTable",
                "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
                "Id": 179,
                "description": "This API reserves a table at a restaurant for a certain date and time.",
                "summary": "This API reserves a table at a restaurant for a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the reservation",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Make a reservation at the found Lebanese restaurant for 11am."
            }
        ]
    },
    {
        "Id": 1465,
        "Selected_Functions": [
            {
                "name": "RestaurantDetail",
                "format": "RestaurantDetail(city_name, cuisine_type) -> restaurant_list",
                "Id": 759,
                "description": "This API is to query the restaurant information of a specific cuisine type in a city.",
                "summary": "This API is to query the restaurant information of a specific cuisine type in a city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine_type",
                        "description": "the type of cuisine",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_list",
                        "description": "a list of restaurants",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the details of the bistro 'Le Bouchon' in Chicago to determine its location."
            },
            {
                "name": "DoctorAvailabilityQuery",
                "format": "DoctorAvailabilityQuery(hospital, specialty) -> availability",
                "Id": 733,
                "description": "This API is to check the availability of a doctor at a given hospital.",
                "summary": "This API is to check the availability of a doctor at a given hospital.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hospital",
                        "description": "the name of the hospital",
                        "datatype": "String"
                    },
                    {
                        "name": "specialty",
                        "description": "the specialty of the doctor",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability of the doctor",
                        "datatype": "Boolean"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a hospital near the location of 'Le Bouchon' in Chicago."
            },
            {
                "name": "NearbyHospitalQuery",
                "format": "NearbyHospitalQuery(coordinate_position) -> hospital",
                "Id": 732,
                "description": "This API is to find a hospital near a given location.",
                "summary": "This API is to find a hospital near a given location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "coordinate_position",
                        "description": "the coordinates of the location",
                        "datatype": "Coordinate"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hospital",
                        "description": "the name of the nearby hospital",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the availability of a pediatrician at the hospital found near 'Le Bouchon' in Chicago."
            }
        ]
    },
    {
        "Id": 1491,
        "Selected_Functions": [
            {
                "name": "MusicRecommend",
                "format": "MusicRecommend(artist, genre, year) -> music",
                "Id": 593,
                "description": "This API recommends music based on the certain artist, genre and year.",
                "summary": "This API recommends music based on the certain artist, genre and year.",
                "input_parameters_with_datatype": [
                    {
                        "name": "artist",
                        "description": "the artist of the song",
                        "datatype": "String"
                    },
                    {
                        "name": "genre",
                        "description": "the genre of the song",
                        "datatype": "String"
                    },
                    {
                        "name": "year",
                        "description": "the year of the song",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "music",
                        "description": "the recommended music",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Identify the artist of the 'Fearless' album."
            },
            {
                "name": "AlbumArtist",
                "format": "AlbumArtist(album_name) -> artist",
                "Id": 591,
                "description": "This API is to query the artist who created a certain album.",
                "summary": "This API is to query the artist who created a certain album.",
                "input_parameters_with_datatype": [
                    {
                        "name": "album_name",
                        "description": "the name of the album",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "artist",
                        "description": "the artist who created the album",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest a country song from 2015 by the identified artist."
            }
        ]
    },
    {
        "Id": 1495,
        "Selected_Functions": [
            {
                "name": "RestaurantRecommendation",
                "format": "RestaurantRecommendation(venue) -> restaurant_list",
                "Id": 401,
                "description": "This API recommends restaurants based on the venue.",
                "summary": "This API recommends restaurants based on the venue.",
                "input_parameters_with_datatype": [
                    {
                        "name": "venue",
                        "description": "the name of the venue",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_list",
                        "description": "a list of recommended restaurants",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Create a travel plan for a day trip to London."
            },
            {
                "name": "TravelPlan",
                "format": "TravelPlan(weather, restaurant) -> plan",
                "Id": 610,
                "description": "This API generates a travel plan based on the weather and restaurant recommendation.",
                "summary": "This API generates a travel plan based on the weather and restaurant recommendation.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant",
                        "description": "the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "plan",
                        "description": "the generated travel plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a French cuisine restaurant in London."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide the weather forecast for London on the day of the trip."
            }
        ]
    }
]