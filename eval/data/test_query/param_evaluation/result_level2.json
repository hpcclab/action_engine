[
    {
        "Id": 2,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Mia' to a user ID."
            },
            {
                "name": "Playlistname2ID",
                "format": "Playlistname2ID(playlist_name) -> playlist_ID",
                "Id": 2,
                "description": "This API is to convert a playlist name to a playlist ID.",
                "summary": "This API is to convert a playlist name to a playlist ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "playlist_name",
                        "description": "the name of the playlist",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the playlist name 'Classic Disco Hits' to a playlist ID."
            },
            {
                "name": "AddSongToPlaylist",
                "format": "AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",
                "Id": 3,
                "description": "This API is to add a song to a playlist.",
                "summary": "This API is to add a song to a playlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_name",
                        "description": "the name of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_songs",
                        "description": "a list of the songs in the playlist",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the song 'Sweet Child of Mine' to the playlist."
            }
        ]
    },
    {
        "Id": 4,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Mia' to a user ID."
            },
            {
                "name": "Playlistname2ID",
                "format": "Playlistname2ID(playlist_name) -> playlist_ID",
                "Id": 2,
                "description": "This API is to convert a playlist name to a playlist ID.",
                "summary": "This API is to convert a playlist name to a playlist ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "playlist_name",
                        "description": "the name of the playlist",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the playlist name 'Classic Disco Hits' to a playlist ID."
            },
            {
                "name": "AddSongToPlaylist",
                "format": "AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",
                "Id": 3,
                "description": "This API is to add a song to a playlist.",
                "summary": "This API is to add a song to a playlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_name",
                        "description": "the name of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_songs",
                        "description": "a list of the songs in the playlist",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the song 'Sweet Child of Mine' to the playlist."
            }
        ]
    },
    {
        "Id": 6,
        "Selected_Functions": [
            {
                "name": "Username2ID",
                "format": "Username2ID(user_name) -> user_ID",
                "Id": 1,
                "description": "This API is to convert a username to a user ID.",
                "summary": "This API is to convert a username to a user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Mia' to a user ID."
            },
            {
                "name": "Playlistname2ID",
                "format": "Playlistname2ID(playlist_name) -> playlist_ID",
                "Id": 2,
                "description": "This API is to convert a playlist name to a playlist ID.",
                "summary": "This API is to convert a playlist name to a playlist ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "playlist_name",
                        "description": "the name of the playlist",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the playlist name 'Classic Disco Hits' to a playlist ID."
            },
            {
                "name": "AddSongToPlaylist",
                "format": "AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",
                "Id": 3,
                "description": "This API is to add a song to a playlist.",
                "summary": "This API is to add a song to a playlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "playlist_ID",
                        "description": "the ID of the playlist",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_name",
                        "description": "the name of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "playlist_songs",
                        "description": "a list of the songs in the playlist",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the song 'Sweet Child of Mine' to the playlist."
            }
        ]
    },
    {
        "Id": 37,
        "Selected_Functions": [
            {
                "name": "MovieShowtimes",
                "format": "MovieShowtimes(movie_name, city) -> show_time",
                "Id": 17,
                "description": "This API gives the showtimes for a specified movie in a chosen city.",
                "summary": "This API gives the showtimes for a specified movie in a chosen city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "show_time",
                        "description": "the showtimes for the movie in the chosen city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a drama movie showing in Seattle today."
            },
            {
                "name": "BuyMovieTickets",
                "format": "BuyMovieTickets(show_time, movie_name, seats) -> booking_status",
                "Id": 18,
                "description": "This API buys movie tickets for a specific show time, movie and chosen seats.",
                "summary": "This API buys movie tickets for a specific show time, movie and chosen seats.",
                "input_parameters_with_datatype": [
                    {
                        "name": "show_time",
                        "description": "the show time of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "seats",
                        "description": "the number of seats to buy",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the showtime for the selected drama movie."
            },
            {
                "name": "FindMovie",
                "format": "FindMovie(genre) -> movie_name",
                "Id": 16,
                "description": "This API provides the name of a movie based on the specified genre.",
                "summary": "This API provides the name of a movie based on the specified genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the showtimes for the movie 'Avengers' in Los Angeles."
            }
        ]
    },
    {
        "Id": 138,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the product name 'Samsung Galaxy S21 Ultra' to a product ID."
            },
            {
                "name": "Customername2ID",
                "format": "Customername2ID(customer_name) -> customer_ID",
                "Id": 59,
                "description": "This API is to convert a customer name to a customer ID.",
                "summary": "This API is to convert a customer name to a customer ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_name",
                        "description": "the name of the customer",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the customer name 'Anthony' to a customer ID."
            },
            {
                "name": "PurchaseBook",
                "format": "PurchaseBook(customer_ID, product_ID) -> purchased_books",
                "Id": 61,
                "description": "This API is to process the purchase of books.",
                "summary": "This API is to process the purchase of books.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer,it should be number",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the book,it should be number",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchased_books",
                        "description": "a list of purchased books",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the book using the product ID and customer ID."
            }
        ]
    },
    {
        "Id": 148,
        "Selected_Functions": [
            {
                "name": "EnrollCourse",
                "format": "EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",
                "Id": 64,
                "description": "This API is to enroll a user to a specific course.",
                "summary": "This API is to enroll a user to a specific course.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    },
                    {
                        "name": "semester",
                        "description": "the semester of the enrollment",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Enrollment confirmation",
                        "description": "the confirmation of the enrollment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the email 'tony.stark@avengers.com' to a user ID."
            },
            {
                "name": "Email2ID",
                "format": "Email2ID(email) -> person_ID",
                "Id": 62,
                "description": "This API is to convert user email to user ID.",
                "summary": "This API is to convert user email to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "email",
                        "description": "the email of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the subject name 'Programming' to a subject ID."
            },
            {
                "name": "Subjectname2ID",
                "format": "Subjectname2ID(subject_name) -> subject_ID",
                "Id": 63,
                "description": "This API is to convert subject name to subject ID.",
                "summary": "This API is to convert subject name to subject ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "subject_name",
                        "description": "the name of the subject",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Enroll the user with the obtained user ID in the Programming course for the Winter semester."
            }
        ]
    },
    {
        "Id": 150,
        "Selected_Functions": [
            {
                "name": "EnrollCourse",
                "format": "EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",
                "Id": 64,
                "description": "This API is to enroll a user to a specific course.",
                "summary": "This API is to enroll a user to a specific course.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    },
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    },
                    {
                        "name": "semester",
                        "description": "the semester of the enrollment",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Enrollment confirmation",
                        "description": "the confirmation of the enrollment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the email 'tony.stark@avengers.com' to a user ID."
            },
            {
                "name": "Email2ID",
                "format": "Email2ID(email) -> person_ID",
                "Id": 62,
                "description": "This API is to convert user email to user ID.",
                "summary": "This API is to convert user email to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "email",
                        "description": "the email of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the subject name 'Programming' to a subject ID."
            },
            {
                "name": "Subjectname2ID",
                "format": "Subjectname2ID(subject_name) -> subject_ID",
                "Id": 63,
                "description": "This API is to convert subject name to subject ID.",
                "summary": "This API is to convert subject name to subject ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "subject_name",
                        "description": "the name of the subject",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "subject_ID",
                        "description": "the ID of the subject",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Enroll the user with the obtained user ID in the Programming course for the Winter semester."
            }
        ]
    },
    {
        "Id": 166,
        "Selected_Functions": [
            {
                "name": "Cityname2ID",
                "format": "Cityname2ID(city_name) -> City_ID",
                "Id": 65,
                "description": "This API is to convert city name to city ID.",
                "summary": "This API is to convert city name to city ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "City_ID",
                        "description": "the ID of the city",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the city name 'Los Angeles' to a city ID."
            },
            {
                "name": "ReserveTicket",
                "format": "ReserveTicket(City_ID,Event_ID,date) -> Ticket_confirmation",
                "Id": 67,
                "description": "This API is to reserve a ticket for an event.",
                "summary": "This API is to reserve a ticket for an event.",
                "input_parameters_with_datatype": [
                    {
                        "name": "City_ID",
                        "description": "the ID of the city",
                        "datatype": "Integer"
                    },
                    {
                        "name": "Event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Ticket_confirmation",
                        "description": "the confirmation of the ticket",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the event name 'Film Festival' to an event ID."
            },
            {
                "name": "Eventname2ID",
                "format": "Eventname2ID(Event_name) -> Event_ID",
                "Id": 66,
                "description": "This API is to convert event name to event ID.",
                "summary": "This API is to convert event name to event ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve a ticket for the event with the event ID in Los Angeles on 22nd October."
            }
        ]
    },
    {
        "Id": 173,
        "Selected_Functions": [
            {
                "name": "Cityname2ID",
                "format": "Cityname2ID(city_name) -> City_ID",
                "Id": 65,
                "description": "This API is to convert city name to city ID.",
                "summary": "This API is to convert city name to city ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "City_ID",
                        "description": "the ID of the city",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the city name 'Los Angeles' to a city ID."
            },
            {
                "name": "ReserveTicket",
                "format": "ReserveTicket(City_ID,Event_ID,date) -> Ticket_confirmation",
                "Id": 67,
                "description": "This API is to reserve a ticket for an event.",
                "summary": "This API is to reserve a ticket for an event.",
                "input_parameters_with_datatype": [
                    {
                        "name": "City_ID",
                        "description": "the ID of the city",
                        "datatype": "Integer"
                    },
                    {
                        "name": "Event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Ticket_confirmation",
                        "description": "the confirmation of the ticket",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the event name 'Film Festival' to an event ID."
            },
            {
                "name": "Eventname2ID",
                "format": "Eventname2ID(Event_name) -> Event_ID",
                "Id": 66,
                "description": "This API is to convert event name to event ID.",
                "summary": "This API is to convert event name to event ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Event_ID",
                        "description": "the ID of the event",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve a ticket for the event with the event ID in Los Angeles on 22nd October."
            }
        ]
    },
    {
        "Id": 227,
        "Selected_Functions": [
            {
                "name": "ItemnameToID",
                "format": "ItemnameToID(item_name) -> item_ID",
                "Id": 78,
                "description": "This API is used to convert the name of the item to item ID.",
                "summary": "This API is used to convert the name of the item to item ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "item_name",
                        "description": "the name of the item",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "item_ID",
                        "description": "the ID of the item",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the item name 'coffee mugs' to an item ID."
            },
            {
                "name": "SuppliernameToID",
                "format": "SuppliernameToID(supplier_name) -> supplier_ID",
                "Id": 79,
                "description": "This API is used to convert the name of the supplier to supplier ID.",
                "summary": "This API is used to convert the name of the supplier to supplier ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "supplier_name",
                        "description": "the name of the supplier",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "supplier_ID",
                        "description": "the ID of the supplier",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the supplier name 'KitchenPlus' to a supplier ID."
            },
            {
                "name": "PlaceOrder",
                "format": "PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",
                "Id": 80,
                "description": "This API places the order for a particular item from a specified supplier.",
                "summary": "This API places the order for a particular item from a specified supplier.",
                "input_parameters_with_datatype": [
                    {
                        "name": "item_ID",
                        "description": "the ID of the item",
                        "datatype": "Integer"
                    },
                    {
                        "name": "supplier_ID",
                        "description": "the ID of the supplier",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the item",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Place an order for 50 units of the item using the item ID and supplier ID."
            }
        ]
    },
    {
        "Id": 242,
        "Selected_Functions": [
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the product name 'Samsung Galaxy S21 Ultra' to a product ID."
            },
            {
                "name": "Customername2ID",
                "format": "Customername2ID(customer_name) -> customer_ID",
                "Id": 59,
                "description": "This API is to convert a customer name to a customer ID.",
                "summary": "This API is to convert a customer name to a customer ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_name",
                        "description": "the name of the customer",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the customer name 'Anthony' to a customer ID."
            },
            {
                "name": "AddToCart",
                "format": "AddToCart(customer_ID, product_ID) -> Cart status",
                "Id": 86,
                "description": "This API adds a product to a customer's shopping cart.",
                "summary": "This API adds a product to a customer's shopping cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Cart status",
                        "description": "the status of the cart",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the product with the ID obtained to Anthony's cart."
            }
        ]
    },
    {
        "Id": 307,
        "Selected_Functions": [
            {
                "name": "GetRestaurants",
                "format": "GetRestaurants(city) -> restaurants",
                "Id": 100,
                "description": "This API provides a list of restaurants in a specific city.",
                "summary": "This API provides a list of restaurants in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurants",
                        "description": "list of restaurants",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find restaurants in Los Angeles for the trip next month."
            },
            {
                "name": "GetHotelAvailability",
                "format": "GetHotelAvailability(city, dates) -> hotel",
                "Id": 99,
                "description": "This API checks the availability of hotels in a specific city on specific dates.",
                "summary": "This API checks the availability of hotels in a specific city on specific dates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "dates",
                        "description": "specific dates",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel",
                        "description": "list of available hotels",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check hotel availability in Los Angeles for the trip next month."
            },
            {
                "name": "PlanTrip",
                "format": "PlanTrip(hotel, restaurants) -> trip",
                "Id": 101,
                "description": "This API plans a trip including a hotel stay and restaurants visits.",
                "summary": "This API plans a trip including a hotel stay and restaurants visits.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel",
                        "description": "list of available hotels",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "list of restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "trip",
                        "description": "planned trip details",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Plan a trip to Tokyo on September 15."
            }
        ]
    },
    {
        "Id": 310,
        "Selected_Functions": [
            {
                "name": "CurrentExchangeRate",
                "format": "CurrentExchangeRate(currency) -> exchangeRate",
                "Id": 102,
                "description": "This API is to get the current exchange rate for a specific currency.",
                "summary": "This API is to get the current exchange rate for a specific currency.",
                "input_parameters_with_datatype": [
                    {
                        "name": "currency",
                        "description": "the currency code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "exchangeRate",
                        "description": "the current exchange rate",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current exchange rate for USD to EUR."
            },
            {
                "name": "SuggestDiningOptions",
                "format": "SuggestDiningOptions(localBudget, location) -> diningOptions",
                "Id": 104,
                "description": "This API is to suggest dining options based on the local budget and location.",
                "summary": "This API is to suggest dining options based on the local budget and location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "localBudget",
                        "description": "the budget in local currency",
                        "datatype": "Float"
                    },
                    {
                        "name": "location",
                        "description": "the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "diningOptions",
                        "description": "a list of suggested dining options",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert 300 USD to the local currency (EUR) using the current exchange rate."
            },
            {
                "name": "BudgetInLocalCurrency",
                "format": "BudgetInLocalCurrency(budget, exchangeRate) -> localBudget",
                "Id": 103,
                "description": "This API is to calculate the budget in local currency using the original budget and current exchange rate.",
                "summary": "This API is to calculate the budget in local currency using the original budget and current exchange rate.",
                "input_parameters_with_datatype": [
                    {
                        "name": "budget",
                        "description": "the original budget in USD",
                        "datatype": "Float"
                    },
                    {
                        "name": "exchangeRate",
                        "description": "the current exchange rate",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "localBudget",
                        "description": "the budget in local currency",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest dining options in Paris within the budget in EUR."
            }
        ]
    },
    {
        "Id": 429,
        "Selected_Functions": [
            {
                "name": "CustomernameToID",
                "format": "CustomernameToID(customer_name) -> customer_ID",
                "Id": 201,
                "description": "This API is used to convert the name of the customer to customer ID.",
                "summary": "This API is used to convert the name of the customer to customer ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_name",
                        "description": "the name of the customer",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the customer name 'Jack' to a customer ID."
            },
            {
                "name": "AddProductToCart",
                "format": "AddProductToCart(product_ID, customer_ID, quantity) -> cart_status",
                "Id": 203,
                "description": "This API adds a certain quantity of a particular product to the customer's cart.",
                "summary": "This API adds a certain quantity of a particular product to the customer's cart.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the product to be added to the cart",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cart_status",
                        "description": "the status of the cart after adding the product",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the product name 'iPhone 12' to a product ID."
            },
            {
                "name": "ProductnameToID",
                "format": "ProductnameToID(product_name) -> product_ID",
                "Id": 202,
                "description": "This API is used to convert the name of the product to product ID.",
                "summary": "This API is used to convert the name of the product to product ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add 3 units of the product 'iPhone 12' to Jack's cart using the customer ID and product ID."
            }
        ]
    },
    {
        "Id": 431,
        "Selected_Functions": [
            {
                "name": "UsernameToID",
                "format": "UsernameToID(user_name) -> user_ID",
                "Id": 200,
                "description": "This API is used to convert the name of the user to user ID.",
                "summary": "This API is used to convert the name of the user to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the book name '1984' to a book ID."
            },
            {
                "name": "RentMovie",
                "format": "RentMovie(user_ID, movie_ID, date) -> rental_status",
                "Id": 206,
                "description": "This API rents a movie for a particular user on a specified date.",
                "summary": "This API rents a movie for a particular user on a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of rental",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "rental_status",
                        "description": "the status of the rental",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the movie name 'Inception' to a movie ID."
            },
            {
                "name": "MovienameToID",
                "format": "MovienameToID(movie_name) -> movie_ID",
                "Id": 205,
                "description": "This API is to convert the movie name to movie ID.",
                "summary": "This API is to convert the movie name to movie ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the schedule of the movie 'Avengers: Endgame' at the nearest cinema."
            }
        ]
    },
    {
        "Id": 440,
        "Selected_Functions": [
            {
                "name": "SongTitleToID",
                "format": "SongTitleToID(song_title) -> song_ID",
                "Id": 217,
                "description": "This API is to convert the song title to song ID.",
                "summary": "This API is to convert the song title to song ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "song_title",
                        "description": "the title of the song",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "song_ID",
                        "description": "the ID of the song",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the song title 'Bohemian Rhapsody' to a song ID."
            },
            {
                "name": "PlaySong",
                "format": "PlaySong(user_ID, song_ID) -> play_status",
                "Id": 214,
                "description": "This API plays a song for a particular user.",
                "summary": "This API plays a song for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "song_ID",
                        "description": "the ID of the song",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "play_status",
                        "description": "the status of the song playback",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the username 'George' to a user ID."
            },
            {
                "name": "UsernameToID",
                "format": "UsernameToID(user_name) -> user_ID",
                "Id": 200,
                "description": "This API is used to convert the name of the user to user ID.",
                "summary": "This API is used to convert the name of the user to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the book name '1984' to a book ID."
            }
        ]
    },
    {
        "Id": 447,
        "Selected_Functions": [
            {
                "name": "GetMenu",
                "format": "GetMenu(restaurant_id) -> menu",
                "Id": 22,
                "description": "This API is to get the menu of a specific restaurant.",
                "summary": "This API is to get the menu of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Chinese restaurant in Houston."
            },
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the movie time for 'Inception' at the theatre."
            },
            {
                "name": "RecommendDish",
                "format": "RecommendDish(menu) -> dish",
                "Id": 231,
                "description": "This API recommends a dish from a given menu.",
                "summary": "This API recommends a dish from a given menu.",
                "input_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "dish",
                        "description": "the recommended dish",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Recommend a gluten-free Chinese dish in Los Angeles."
            }
        ]
    },
    {
        "Id": 448,
        "Selected_Functions": [
            {
                "name": "Cityname2WeatherCode",
                "format": "Cityname2WeatherCode(city_name) -> weather_code",
                "Id": 232,
                "description": "This API converts a city name to its weather code.",
                "summary": "This API converts a city name to its weather code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_code",
                        "description": "the weather code of the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the city name 'Tokyo' to a weather code."
            },
            {
                "name": "PlanTrip",
                "format": "PlanTrip(hotel, restaurants) -> trip",
                "Id": 101,
                "description": "This API plans a trip including a hotel stay and restaurants visits.",
                "summary": "This API plans a trip including a hotel stay and restaurants visits.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel",
                        "description": "list of available hotels",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "list of restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "trip",
                        "description": "planned trip details",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Plan a trip to Tokyo on September 15."
            },
            {
                "name": "WeatherCode2Forecast",
                "format": "WeatherCode2Forecast(weather_code, date) -> weather_forecast",
                "Id": 233,
                "description": "This API provides the weather forecast for a specific date based on the weather code.",
                "summary": "This API provides the weather forecast for a specific date based on the weather code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_code",
                        "description": "the weather code of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date for the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_forecast",
                        "description": "the weather forecast for the specific date",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the weather code to a weather forecast for Tokyo on September 15."
            }
        ]
    },
    {
        "Id": 455,
        "Selected_Functions": [
            {
                "name": "GetBookReview",
                "format": "GetBookReview(book_id) -> review",
                "Id": 248,
                "description": "This API gives a review of a book given its ID.",
                "summary": "This API gives a review of a book given its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the review of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the book 'Harry Potter' to find its details."
            },
            {
                "name": "SearchBook",
                "format": "SearchBook(title) -> book_id",
                "Id": 247,
                "description": "This API returns the ID of a book based on a specified title.",
                "summary": "This API returns the ID of a book based on a specified title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the availability of 'The Catcher in the Rye' in the bookstore."
            },
            {
                "name": "ShareReview",
                "format": "ShareReview(review, social_media_platform) -> share_status",
                "Id": 249,
                "description": "This API allows the user to share a review on a specified social media platform.",
                "summary": "This API allows the user to share a review on a specified social media platform.",
                "input_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the review of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "social_media_platform",
                        "description": "the social media platform to share the review",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "share_status",
                        "description": "the status of the sharing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Share the review of 'Harry Potter' on the user's Facebook page."
            }
        ]
    },
    {
        "Id": 468,
        "Selected_Functions": [
            {
                "name": "FindDoctor",
                "format": "FindDoctor(specialty, location) -> doctor",
                "Id": 275,
                "description": "This API is to find a doctor based on specialty and location.",
                "summary": "This API is to find a doctor based on specialty and location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "specialty",
                        "description": "the specialty of the doctor",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location where the doctor is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "doctor",
                        "description": "the information of the doctor",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Create an appointment for Michael Johnson with the ophthalmologist on 5th October at 10:00 AM."
            },
            {
                "name": "ConfirmAppointment",
                "format": "ConfirmAppointment(appointment_id) -> confirmation",
                "Id": 277,
                "description": "This API is to confirm a specific appointment.",
                "summary": "This API is to confirm a specific appointment.",
                "input_parameters_with_datatype": [
                    {
                        "name": "appointment_id",
                        "description": "the ID of the appointment",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "confirmation",
                        "description": "the confirmation status of the appointment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Confirm an appointment with the cardiologist for August 10th."
            },
            {
                "name": "GetAppointment",
                "format": "GetAppointment(doctor_id, date) -> appointment",
                "Id": 276,
                "description": "This API is to get an appointment with a specific doctor on a certain date.",
                "summary": "This API is to get an appointment with a specific doctor on a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "doctor_id",
                        "description": "the ID of the doctor",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the appointment",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "appointment",
                        "description": "the information of the appointment",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Retrieve the details of the confirmed appointment."
            }
        ]
    },
    {
        "Id": 512,
        "Selected_Functions": [
            {
                "name": "ProductLookup",
                "format": "ProductLookup(product_id) -> product_info",
                "Id": 376,
                "description": "This API is to query the product details given a product_id.",
                "summary": "This API is to query the product details given a product_id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_id",
                        "description": "the ID of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_info",
                        "description": "the details of the product",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Look up the product with id 56789 to gather necessary details."
            },
            {
                "name": "ProductRating",
                "format": "ProductRating(purchase_info, number_of_ratings) -> ratings",
                "Id": 378,
                "description": "This API provides product ratings based on purchase history.",
                "summary": "This API provides product ratings based on purchase history.",
                "input_parameters_with_datatype": [
                    {
                        "name": "purchase_info",
                        "description": "the purchase history",
                        "datatype": "Object"
                    },
                    {
                        "name": "number_of_ratings",
                        "description": "the number of ratings to retrieve",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ratings",
                        "description": "the product ratings",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve ten ratings for the product with id 56789."
            },
            {
                "name": "CustomerPurchase",
                "format": "CustomerPurchase(product_info) -> purchase_info",
                "Id": 377,
                "description": "This API fetches the purchase history based on product details.",
                "summary": "This API fetches the purchase history based on product details.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_info",
                        "description": "the details of the product",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_info",
                        "description": "the purchase history",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check if the customer has purchased the product with id 56789."
            }
        ]
    },
    {
        "Id": 532,
        "Selected_Functions": [
            {
                "name": "MovieSchedule",
                "format": "MovieSchedule(movie_id) -> schedule",
                "Id": 424,
                "description": "This API is to get the schedule of a movie.",
                "summary": "This API is to get the schedule of a movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_id",
                        "description": "the id of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "schedule",
                        "description": "the schedule of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the movie name 'Avengers: Endgame' to a movie ID."
            },
            {
                "name": "ClosetCinema",
                "format": "ClosetCinema(schedule) -> cinema_location",
                "Id": 425,
                "description": "This API is to get the nearest cinema playing a movie at a given schedule.",
                "summary": "This API is to get the nearest cinema playing a movie at a given schedule.",
                "input_parameters_with_datatype": [
                    {
                        "name": "schedule",
                        "description": "the schedule of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cinema_location",
                        "description": "the location of the nearest cinema",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the nearest cinema playing the movie with the obtained movie ID."
            },
            {
                "name": "MovienameToID",
                "format": "MovienameToID(movie_name) -> movie_ID",
                "Id": 205,
                "description": "This API is to convert the movie name to movie ID.",
                "summary": "This API is to convert the movie name to movie ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the schedule of the movie 'Avengers: Endgame' at the nearest cinema."
            }
        ]
    },
    {
        "Id": 537,
        "Selected_Functions": [
            {
                "name": "RestaurantByname",
                "format": "RestaurantByname(restaurant_name) -> restaurant_info",
                "Id": 434,
                "description": "This API provides detailed information about a specific restaurant.",
                "summary": "This API provides detailed information about a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_info",
                        "description": "detailed information about the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find 'The Green Leaf' restaurant."
            },
            {
                "name": "BestOrder",
                "format": "BestOrder(restaurant_info, food_list) -> order_info",
                "Id": 436,
                "description": "This API provides the best order suggestion based on the restaurant and diet type.",
                "summary": "This API provides the best order suggestion based on the restaurant and diet type.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_info",
                        "description": "detailed information about the restaurant",
                        "datatype": "Object"
                    },
                    {
                        "name": "food_list",
                        "description": "a list of foods based on the diet type",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_info",
                        "description": "the best order suggestion",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the best order suggestion for a vegan diet at 'The Green Leaf' restaurant."
            },
            {
                "name": "FoodByDietType",
                "format": "FoodByDietType(diet_type) -> food_list",
                "Id": 435,
                "description": "This API provides a list of foods based on a specific diet type.",
                "summary": "This API provides a list of foods based on a specific diet type.",
                "input_parameters_with_datatype": [
                    {
                        "name": "diet_type",
                        "description": "the type of diet",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "food_list",
                        "description": "a list of foods based on the diet type",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "List the food options available for a vegan diet at 'The Green Leaf' restaurant."
            }
        ]
    },
    {
        "Id": 540,
        "Selected_Functions": [
            {
                "name": "FindEventCity",
                "format": "FindEventCity(event_name) -> city name",
                "Id": 442,
                "description": "This API is to find the city where a specific event will take place.",
                "summary": "This API is to find the city where a specific event will take place.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city name",
                        "description": "the name of the city where the event will take place",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the city where the Coachella festival is held."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Compare the current weather in Tokyo with the forecast for the following week."
            },
            {
                "name": "FindEventDate",
                "format": "FindEventDate(event_name) -> date",
                "Id": 443,
                "description": "This API is to find the date when a specific event will take place.",
                "summary": "This API is to find the date when a specific event will take place.",
                "input_parameters_with_datatype": [
                    {
                        "name": "event_name",
                        "description": "the name of the event",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "date",
                        "description": "the date when the event will take place",
                        "datatype": "Date"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the weather forecast for the location of the Coachella festival on its start date."
            }
        ]
    },
    {
        "Id": 560,
        "Selected_Functions": [
            {
                "name": "BookTitle2ID",
                "format": "BookTitle2ID(book_title) -> book_ID",
                "Id": 137,
                "description": "This API is to convert a book title to a book ID.",
                "summary": "This API is to convert a book title to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title 'The Great Gatsby' to a book ID."
            },
            {
                "name": "AddBookToAuthor",
                "format": "AddBookToAuthor(author_ID, book_ID) -> author_books",
                "Id": 138,
                "description": "This API is to add a book to an author's library.",
                "summary": "This API is to add a book to an author's library.",
                "input_parameters_with_datatype": [
                    {
                        "name": "author_ID",
                        "description": "the ID of the author",
                        "datatype": "Integer"
                    },
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "author_books",
                        "description": "the updated library of the author",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the author name 'Harper Lee' to an author ID."
            },
            {
                "name": "Authorname2ID",
                "format": "Authorname2ID(author_name) -> author_ID",
                "Id": 136,
                "description": "This API is to convert an author name to an author ID.",
                "summary": "This API is to convert an author name to an author ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "author_name",
                        "description": "the name of the author",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "author_ID",
                        "description": "the ID of the author",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve the book with the obtained book ID and author ID on 2nd November."
            }
        ]
    },
    {
        "Id": 582,
        "Selected_Functions": [
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the maximum allowable luggage for the selected flight."
            },
            {
                "name": "FlightCode2ID",
                "format": "FlightCode2ID(Flight_code) -> Flight_ID",
                "Id": 142,
                "description": "This API is to convert flight code to flight ID.",
                "summary": "This API is to convert flight code to flight ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Flight_code",
                        "description": "the flight code",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Flight_ID",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the date 'July 15th' to the required format."
            },
            {
                "name": "DateConversion",
                "format": "DateConversion(date) -> standard_date",
                "Id": 143,
                "description": "This API is to convert date in any format to standard format.",
                "summary": "This API is to convert date in any format to standard format.",
                "input_parameters_with_datatype": [
                    {
                        "name": "date",
                        "description": "the date in any format",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "standard_date",
                        "description": "the date in standard format",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a flight using the flight ID and the converted date."
            }
        ]
    },
    {
        "Id": 591,
        "Selected_Functions": [
            {
                "name": "Ingredientname2ID",
                "format": "Ingredientname2ID(ingredient_name) -> ingredient_ID",
                "Id": 461,
                "description": "This API is to convert ingredient name to ingredient ID.",
                "summary": "This API is to convert ingredient name to ingredient ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ingredient_name",
                        "description": "the name of the ingredient",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ingredient_ID",
                        "description": "the ID of the ingredient",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the ingredient name 'Cocoa Powder' to an ingredient ID."
            },
            {
                "name": "Recipename2ID",
                "format": "Recipename2ID(recipe_name) -> recipe_ID",
                "Id": 460,
                "description": "This API is to convert recipe name to recipe ID.",
                "summary": "This API is to convert recipe name to recipe ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_name",
                        "description": "the name of the recipe",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe_ID",
                        "description": "the ID of the recipe",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the recipe name 'Chocolate Cake' to a recipe ID."
            },
            {
                "name": "GetRecipe",
                "format": "GetRecipe(Recipe_ID, Ingredient_ID) -> recipe",
                "Id": 462,
                "description": "This API is to get a recipe.",
                "summary": "This API is to get a recipe.",
                "input_parameters_with_datatype": [
                    {
                        "name": "recipe_ID",
                        "description": "the ID of the recipe",
                        "datatype": "Integer"
                    },
                    {
                        "name": "ingredient_ID",
                        "description": "the ID of the ingredient",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "recipe",
                        "description": "the recipe details",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Retrieve the recipe for 'Chocolate Cake' using the ingredient ID for 'Cocoa Powder' and the recipe ID for 'Chocolate Cake'."
            }
        ]
    },
    {
        "Id": 601,
        "Selected_Functions": [
            {
                "name": "ReserveBook",
                "format": "ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",
                "Id": 12,
                "description": "This API is used to reserve a book.",
                "summary": "This API is used to reserve a book.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "start_date",
                        "description": "the start date of the reservation",
                        "datatype": "Date"
                    },
                    {
                        "name": "end_date",
                        "description": "the end date of the reservation",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book name 'To Kill a Mockingbird' to a book ID."
            },
            {
                "name": "Bookname2ID",
                "format": "Bookname2ID(book_name) -> Book_ID",
                "Id": 146,
                "description": "This API is to convert book name to book ID.",
                "summary": "This API is to convert book name to book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the author name 'Harper Lee' to an author ID."
            },
            {
                "name": "Authorname2ID",
                "format": "Authorname2ID(author_name) -> author_ID",
                "Id": 136,
                "description": "This API is to convert an author name to an author ID.",
                "summary": "This API is to convert an author name to an author ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "author_name",
                        "description": "the name of the author",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "author_ID",
                        "description": "the ID of the author",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve the book with the obtained book ID and author ID on 2nd November."
            }
        ]
    },
    {
        "Id": 605,
        "Selected_Functions": [
            {
                "name": "BorrowBook",
                "format": "BorrowBook(user_ID, book_ID) -> borrow_status",
                "Id": 83,
                "description": "This API borrows a book for a particular user.",
                "summary": "This API borrows a book for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "borrow_status",
                        "description": "the status of the borrowing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Jessica' to a user ID."
            },
            {
                "name": "BookTitle2BookID",
                "format": "BookTitle2BookID(book_title) -> Book_ID",
                "Id": 148,
                "description": "This API converts book title to book ID.",
                "summary": "This API converts book title to book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the email ID 'mike@gmail.com' to a user ID."
            },
            {
                "name": "Email2UserID",
                "format": "Email2UserID(email) -> User_ID",
                "Id": 147,
                "description": "This API is to convert user's email to user ID.",
                "summary": "This API is to convert user's email to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "User_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Borrow the book with the obtained book ID for the user with the obtained user ID."
            }
        ]
    },
    {
        "Id": 625,
        "Selected_Functions": [
            {
                "name": "GenerateWeatherReport",
                "format": "GenerateWeatherReport(weather_data) -> report",
                "Id": 165,
                "description": "This API generates a detailed weather report based on the provided weather data.",
                "summary": "This API generates a detailed weather report based on the provided weather data.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_data",
                        "description": "the weather information for a specific location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "report",
                        "description": "the detailed weather report",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the location 'Paris' to geographical coordinates."
            },
            {
                "name": "Location2Coordinates",
                "format": "Location2Coordinates(location_name) -> coordinates",
                "Id": 163,
                "description": "This API converts the location name to its geographical coordinates.",
                "summary": "This API converts the location name to its geographical coordinates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location_name",
                        "description": "the name of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "coordinates",
                        "description": "the geographical coordinates of the location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the current weather information using the coordinates of Paris."
            },
            {
                "name": "WeatherInfo",
                "format": "WeatherInfo(coordinates) -> weather_data",
                "Id": 164,
                "description": "This API retrieves the weather information for a specific location.",
                "summary": "This API retrieves the weather information for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "coordinates",
                        "description": "the geographical coordinates of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_data",
                        "description": "the weather information for the location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Generate a complete weather report for Paris using the retrieved weather information."
            }
        ]
    },
    {
        "Id": 641,
        "Selected_Functions": [
            {
                "name": "City2Weather",
                "format": "City2Weather(city) -> weather",
                "Id": 181,
                "description": "This API is to get the current weather of a specific city.",
                "summary": "This API is to get the current weather of a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather of the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Jack_Sparrow' to the corresponding city."
            },
            {
                "name": "Username2City",
                "format": "Username2City(username) -> city",
                "Id": 180,
                "description": "This API is to convert username to the city they live in.",
                "summary": "This API is to convert username to the city they live in.",
                "input_parameters_with_datatype": [
                    {
                        "name": "username",
                        "description": "the username of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city the person lives in",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the current weather conditions for the city obtained from the username."
            },
            {
                "name": "Weather2Advice",
                "format": "Weather2Advice(weather) -> advice",
                "Id": 182,
                "description": "This API is to provide advice based on the current weather.",
                "summary": "This API is to provide advice based on the current weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "advice",
                        "description": "advice based on the current weather",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide guidance based on the current weather conditions of the locality."
            }
        ]
    },
    {
        "Id": 670,
        "Selected_Functions": [
            {
                "name": "BookTicket",
                "format": "BookTicket(cinema_name, movie, show_time) -> ticket_status",
                "Id": 198,
                "description": "This API is used to book a movie ticket.",
                "summary": "This API is used to book a movie ticket.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cinema_name",
                        "description": "the name of the cinema",
                        "datatype": "String"
                    },
                    {
                        "name": "movie",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "show_time",
                        "description": "the show time of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ticket_status",
                        "description": "the status of the ticket booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find cinemas in Tokyo that are showing the movie 'Spirited Away'."
            },
            {
                "name": "GetCinema",
                "format": "GetCinema(city, movie) -> cinema_name",
                "Id": 196,
                "description": "This API fetches a cinema playing a given movie in a certain city.",
                "summary": "This API fetches a cinema playing a given movie in a certain city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "movie",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cinema_name",
                        "description": "the name of the cinema",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the available showtimes for 'Spirited Away' at the cinemas found."
            },
            {
                "name": "CheckTime",
                "format": "CheckTime(cinema_name, movie) -> show_time",
                "Id": 197,
                "description": "This API checks the show time of a movie in a certain cinema.",
                "summary": "This API checks the show time of a movie in a certain cinema.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cinema_name",
                        "description": "the name of the cinema",
                        "datatype": "String"
                    },
                    {
                        "name": "movie",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "show_time",
                        "description": "the show time of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve a ticket for 'Spirited Away' at the selected cinema and showtime."
            }
        ]
    },
    {
        "Id": 675,
        "Selected_Functions": [
            {
                "name": "BorrowBook",
                "format": "BorrowBook(user_ID, book_ID) -> borrow_status",
                "Id": 83,
                "description": "This API borrows a book for a particular user.",
                "summary": "This API borrows a book for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "borrow_status",
                        "description": "the status of the borrowing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Jessica' to a user ID."
            },
            {
                "name": "UsernameToID",
                "format": "UsernameToID(user_name) -> user_ID",
                "Id": 200,
                "description": "This API is used to convert the name of the user to user ID.",
                "summary": "This API is used to convert the name of the user to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the book name '1984' to a book ID."
            },
            {
                "name": "BooknameToID",
                "format": "BooknameToID(book_name) -> book_ID",
                "Id": 82,
                "description": "This API is to convert the book name to book ID.",
                "summary": "This API is to convert the book name to book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Borrow the book '1984' for Jessica until the end of this year."
            }
        ]
    },
    {
        "Id": 676,
        "Selected_Functions": [
            {
                "name": "BorrowBook",
                "format": "BorrowBook(user_ID, book_ID) -> borrow_status",
                "Id": 83,
                "description": "This API borrows a book for a particular user.",
                "summary": "This API borrows a book for a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "borrow_status",
                        "description": "the status of the borrowing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the username 'Jessica' to a user ID."
            },
            {
                "name": "UsernameToID",
                "format": "UsernameToID(user_name) -> user_ID",
                "Id": 200,
                "description": "This API is used to convert the name of the user to user ID.",
                "summary": "This API is used to convert the name of the user to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the name of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the book name '1984' to a book ID."
            },
            {
                "name": "BooknameToID",
                "format": "BooknameToID(book_name) -> book_ID",
                "Id": 82,
                "description": "This API is to convert the book name to book ID.",
                "summary": "This API is to convert the book name to book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Borrow the book '1984' for Jessica until the end of this year."
            }
        ]
    },
    {
        "Id": 696,
        "Selected_Functions": [
            {
                "name": "HotelnameToID",
                "format": "HotelnameToID(hotel_name) -> hotel_ID",
                "Id": 209,
                "description": "This API is to convert the hotel name to hotel ID.",
                "summary": "This API is to convert the hotel name to hotel ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_ID",
                        "description": "the ID of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the hotel name 'Sheraton' to a hotel ID."
            },
            {
                "name": "CitynameToID",
                "format": "CitynameToID(city_name) -> city_ID",
                "Id": 208,
                "description": "This API is used to convert the city name to city ID.",
                "summary": "This API is used to convert the city name to city ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "city_ID",
                        "description": "the ID of the city",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the city name 'Boston' to a city ID."
            },
            {
                "name": "BookRoom",
                "format": "BookRoom(hotel_name, date, number_of_nights) -> booking status",
                "Id": 88,
                "description": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "summary": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the starting date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "number_of_nights",
                        "description": "the number of nights for the booking",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a room in the hotel with the obtained hotel ID in the city with the obtained city ID from 10th October to 15th October."
            }
        ]
    },
    {
        "Id": 711,
        "Selected_Functions": [
            {
                "name": "UserEmailToID",
                "format": "UserEmailToID(email_address) -> user_ID",
                "Id": 81,
                "description": "This API is used to convert the user's email address to user ID.",
                "summary": "This API is used to convert the user's email address to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "email_address",
                        "description": "the email address of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the user email 'mike@example.com' to a user ID."
            },
            {
                "name": "ReturnBook",
                "format": "ReturnBook(user_ID, book_name) -> return_status",
                "Id": 216,
                "description": "This API returns a book on behalf of a particular user.",
                "summary": "This API returns a book on behalf of a particular user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "return_status",
                        "description": "the status of the return",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Return the book with ISBN 978-2-34-567890-1 for the user with the obtained user ID."
            },
            {
                "name": "ISBNToBookname",
                "format": "ISBNToBookname(ISBN) -> book_name",
                "Id": 215,
                "description": "This API is used to convert the ISBN of a book to its name.",
                "summary": "This API is used to convert the ISBN of a book to its name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the name of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the ISBN 978-2-34-567890-1 to the book name."
            }
        ]
    },
    {
        "Id": 719,
        "Selected_Functions": [
            {
                "name": "UserEmailToID",
                "format": "UserEmailToID(email_address) -> user_ID",
                "Id": 81,
                "description": "This API is used to convert the user's email address to user ID.",
                "summary": "This API is used to convert the user's email address to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "email_address",
                        "description": "the email address of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the user email 'mike@example.com' to a user ID."
            },
            {
                "name": "ProductToID",
                "format": "ProductToID(product_name) -> product_ID",
                "Id": 218,
                "description": "This API is used to convert the product name to product ID.",
                "summary": "This API is used to convert the product name to product ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the product name 'Google Pixel 6' to a product ID."
            },
            {
                "name": "PurchaseProduct",
                "format": "PurchaseProduct(customer_ID, product_ID, quantity) -> purchase_status",
                "Id": 207,
                "description": "This API executes a product purchase for a particular customer with a specific quantity.",
                "summary": "This API executes a product purchase for a particular customer with a specific quantity.",
                "input_parameters_with_datatype": [
                    {
                        "name": "customer_ID",
                        "description": "the ID of the customer",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the product to purchase",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase the product 'Google Pixel 6' for the user with the obtained user ID."
            }
        ]
    },
    {
        "Id": 727,
        "Selected_Functions": [
            {
                "name": "Moviename2ID",
                "format": "Moviename2ID(movie_name) -> movie_ID",
                "Id": 220,
                "description": "This API is to convert a movie's name to movie ID.",
                "summary": "This API is to convert a movie's name to movie ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the movie name 'Interstellar' to a movie ID."
            },
            {
                "name": "AddMovieToWatchlist",
                "format": "AddMovieToWatchlist(watchlist_ID, movie_ID) -> movie_status",
                "Id": 221,
                "description": "This API is to add a movie to a watchlist.",
                "summary": "This API is to add a movie to a watchlist.",
                "input_parameters_with_datatype": [
                    {
                        "name": "watchlist_ID",
                        "description": "the ID of the watchlist",
                        "datatype": "Integer"
                    },
                    {
                        "name": "movie_ID",
                        "description": "the ID of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_status",
                        "description": "the status of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the watchlist name 'Sci-fi Movies' to a watchlist ID for the user with username 'sarah_sci'."
            },
            {
                "name": "Watchlistname2ID",
                "format": "Watchlistname2ID(watchlist_name) -> watchlist_ID",
                "Id": 222,
                "description": "This API is to convert a watchlist's name to watchlist ID.",
                "summary": "This API is to convert a watchlist's name to watchlist ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "watchlist_name",
                        "description": "the name of the watchlist",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "watchlist_ID",
                        "description": "the ID of the watchlist",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the movie 'Interstellar' to Sarah's watchlist 'Sci-fi Movies' using the movie ID and watchlist ID."
            }
        ]
    },
    {
        "Id": 734,
        "Selected_Functions": [
            {
                "name": "BookTitle2ID",
                "format": "BookTitle2ID(book_title) -> book_ID",
                "Id": 137,
                "description": "This API is to convert a book title to a book ID.",
                "summary": "This API is to convert a book title to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the book title 'The Great Gatsby' to a book ID."
            },
            {
                "name": "ReadingListname2ID",
                "format": "ReadingListname2ID(readinglist_name) -> readinglist_ID",
                "Id": 477,
                "description": "This API is to convert reading list name to reading list ID.",
                "summary": "This API is to convert reading list name to reading list ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "readinglist_name",
                        "description": "the name of the reading list",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "readinglist_ID",
                        "description": "the ID of the reading list",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the reading list name 'Modern Classics' to a reading list ID for the user with username 'john_reads'."
            },
            {
                "name": "AddBookToReadingList",
                "format": "AddBookToReadingList(user_name, book_title) -> reading_list",
                "Id": 135,
                "description": "This API is to add a book to a user's reading list.",
                "summary": "This API is to add a book to a user's reading list.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_name",
                        "description": "the username of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reading_list",
                        "description": "the updated reading list",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Add the book with the obtained book ID to the reading list with the obtained reading list ID."
            }
        ]
    },
    {
        "Id": 748,
        "Selected_Functions": [
            {
                "name": "Address2Coordinates",
                "format": "Address2Coordinates(address) -> coordinates",
                "Id": 483,
                "description": "This API is to convert address to coordinates.",
                "summary": "This API is to convert address to coordinates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "address",
                        "description": "the address of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "coordinates",
                        "description": "the coordinates of the location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the address 'Las Vegas Strip, Nevada' to coordinates."
            },
            {
                "name": "Restaurantname2ID",
                "format": "Restaurantname2ID(restaurant_name) -> restaurant_ID",
                "Id": 125,
                "description": "This API is to convert a restaurant name to a specific restaurant ID.",
                "summary": "This API is to convert a restaurant name to a specific restaurant ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_ID",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the restaurant name 'Red Lobster' to a restaurant ID."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a table for 3 people at the selected Italian restaurant for 8 pm."
            }
        ]
    },
    {
        "Id": 753,
        "Selected_Functions": [
            {
                "name": "Book2Author",
                "format": "Book2Author(book_title) -> author_name",
                "Id": 226,
                "description": "This API is used to convert a book title to an author name.",
                "summary": "This API is used to convert a book title to an author name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "author_name",
                        "description": "the name of the author",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Identify the book title associated with the ISBN 978-3-16-148410-0."
            },
            {
                "name": "ISBN2Book",
                "format": "ISBN2Book(isbn) -> book_title",
                "Id": 225,
                "description": "This API is used to convert an ISBN to a book title.",
                "summary": "This API is used to convert an ISBN to a book title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "isbn",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the author of the book identified in the previous step."
            },
            {
                "name": "ScheduleDiscussion",
                "format": "ScheduleDiscussion(user_ID, author_name, date_time) -> schedule_status",
                "Id": 228,
                "description": "This API is used to schedule a book discussion with the author.",
                "summary": "This API is used to schedule a book discussion with the author.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "String"
                    },
                    {
                        "name": "author_name",
                        "description": "the name of the author",
                        "datatype": "String"
                    },
                    {
                        "name": "date_time",
                        "description": "the date and time of the book discussion",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "schedule_status",
                        "description": "the schedule status of the book discussion",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Schedule a book discussion with the author on 25th of October at 6pm for user789."
            }
        ]
    },
    {
        "Id": 759,
        "Selected_Functions": [
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Tokyo."
            },
            {
                "name": "LocateCity",
                "format": "LocateCity(city) -> Coordinates",
                "Id": 229,
                "description": "This API returns the coordinates of a given city.",
                "summary": "This API returns the coordinates of a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Coordinates",
                        "description": "the coordinates of the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for New York for this weekend."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest appropriate clothing based on the weather forecast for Chicago tomorrow."
            }
        ]
    },
    {
        "Id": 774,
        "Selected_Functions": [
            {
                "name": "Cityname2WeatherCode",
                "format": "Cityname2WeatherCode(city_name) -> weather_code",
                "Id": 232,
                "description": "This API converts a city name to its weather code.",
                "summary": "This API converts a city name to its weather code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_code",
                        "description": "the weather code of the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the city name 'Tokyo' to a weather code."
            },
            {
                "name": "PlanTrip",
                "format": "PlanTrip(hotel, restaurants) -> trip",
                "Id": 101,
                "description": "This API plans a trip including a hotel stay and restaurants visits.",
                "summary": "This API plans a trip including a hotel stay and restaurants visits.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel",
                        "description": "list of available hotels",
                        "datatype": "List"
                    },
                    {
                        "name": "restaurants",
                        "description": "list of restaurants",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "trip",
                        "description": "planned trip details",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Plan a trip to Tokyo on September 15."
            },
            {
                "name": "WeatherCode2Forecast",
                "format": "WeatherCode2Forecast(weather_code, date) -> weather_forecast",
                "Id": 233,
                "description": "This API provides the weather forecast for a specific date based on the weather code.",
                "summary": "This API provides the weather forecast for a specific date based on the weather code.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_code",
                        "description": "the weather code of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date for the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_forecast",
                        "description": "the weather forecast for the specific date",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Convert the weather code to a weather forecast for Tokyo on September 15."
            }
        ]
    },
    {
        "Id": 805,
        "Selected_Functions": [
            {
                "name": "GetShowtimes",
                "format": "GetShowtimes(movie_title, city) -> showtime",
                "Id": 250,
                "description": "This API gives the showtime for a given movie in a specific city.",
                "summary": "This API gives the showtime for a given movie in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_title",
                        "description": "the title of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the showtime is requested",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie in the specified city",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the movie 'Avengers' in Los Angeles."
            },
            {
                "name": "FindMovie",
                "format": "FindMovie(genre) -> movie_name",
                "Id": 16,
                "description": "This API provides the name of a movie based on the specified genre.",
                "summary": "This API provides the name of a movie based on the specified genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the showtimes for the movie 'Avengers' in Los Angeles."
            },
            {
                "name": "ReserveTickets",
                "format": "ReserveTickets(showtime, number_of_tickets) -> reservation_status",
                "Id": 251,
                "description": "This API allows the user to reserve a certain number of tickets for a specific showtime.",
                "summary": "This API allows the user to reserve a certain number of tickets for a specific showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie",
                        "datatype": "Time"
                    },
                    {
                        "name": "number_of_tickets",
                        "description": "the number of tickets to be reserved",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_status",
                        "description": "the status of the ticket reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve four tickets for the earliest showtime of the selected romance movie."
            }
        ]
    },
    {
        "Id": 821,
        "Selected_Functions": [
            {
                "name": "CheckAvailability",
                "format": "CheckAvailability(ISBN,start_date,end_date) -> availability_status",
                "Id": 11,
                "description": "This API checks the availability of a book based on its ISBN and a given date range.",
                "summary": "This API checks the availability of a book based on its ISBN and a given date range.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ISBN",
                        "description": "the ISBN of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "start_date",
                        "description": "the start date of the range",
                        "datatype": "Date"
                    },
                    {
                        "name": "end_date",
                        "description": "the end date of the range",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability_status",
                        "description": "the availability status of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest bookstore in Boston."
            },
            {
                "name": "FindNearestBookStore",
                "format": "FindNearestBookStore(city) -> store_name",
                "Id": 259,
                "description": "This API is to find the nearest bookstore based on the user's location.",
                "summary": "This API is to find the nearest bookstore based on the user's location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the user is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the nearest bookstore",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for the book 'The Catcher in the Rye' in the bookstore found."
            },
            {
                "name": "SearchBook",
                "format": "SearchBook(title) -> book_id",
                "Id": 247,
                "description": "This API returns the ID of a book based on a specified title.",
                "summary": "This API returns the ID of a book based on a specified title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the availability of 'The Catcher in the Rye' in the bookstore."
            }
        ]
    },
    {
        "Id": 823,
        "Selected_Functions": [
            {
                "name": "GetPlayReviews",
                "format": "GetPlayReviews(play_name) -> reviews",
                "Id": 491,
                "description": "This API is to get the reviews for a specific play.",
                "summary": "This API is to get the reviews for a specific play.",
                "input_parameters_with_datatype": [
                    {
                        "name": "play_name",
                        "description": "the name of the play",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reviews",
                        "description": "the reviews for the play",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest theater in London."
            },
            {
                "name": "GetLocalTheater",
                "format": "GetLocalTheater(city) -> theater_name",
                "Id": 489,
                "description": "This API is to get the nearest theater in a specific city.",
                "summary": "This API is to get the nearest theater in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "theater_name",
                        "description": "the name of the theater",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the list of current plays being performed at the nearest theater found."
            },
            {
                "name": "GetCurrentPlays",
                "format": "GetCurrentPlays(theater_name) -> play_name",
                "Id": 490,
                "description": "This API is to get the currently performed plays at a specific theater.",
                "summary": "This API is to get the currently performed plays at a specific theater.",
                "input_parameters_with_datatype": [
                    {
                        "name": "theater_name",
                        "description": "the name of the theater",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "play_name",
                        "description": "the name of the play",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find reviews for the play currently being performed at the nearest theater."
            }
        ]
    },
    {
        "Id": 824,
        "Selected_Functions": [
            {
                "name": "GetAlbumReviews",
                "format": "GetAlbumReviews(album_name) -> reviews",
                "Id": 494,
                "description": "This API is to get the reviews for a specific album.",
                "summary": "This API is to get the reviews for a specific album.",
                "input_parameters_with_datatype": [
                    {
                        "name": "album_name",
                        "description": "the name of the album",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reviews",
                        "description": "the reviews for the album",
                        "datatype": "List of Strings"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the nearest music store in Toronto."
            },
            {
                "name": "GetLocalMusicStore",
                "format": "GetLocalMusicStore(city) -> store_name",
                "Id": 492,
                "description": "This API is to get the nearest music store in a specific city.",
                "summary": "This API is to get the nearest music store in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the music store",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Identify the album currently being played at the nearest music store."
            },
            {
                "name": "GetCurrentAlbums",
                "format": "GetCurrentAlbums(store_name) -> album_name",
                "Id": 493,
                "description": "This API is to get the currently playing albums at a music store.",
                "summary": "This API is to get the currently playing albums at a music store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the music store",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "album_name",
                        "description": "the name of the album",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Retrieve reviews for the identified album."
            }
        ]
    },
    {
        "Id": 830,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the movie time for 'Inception' at the theatre."
            },
            {
                "name": "OrderFood",
                "format": "OrderFood(dish_name, restaurant_name) -> order_status",
                "Id": 13,
                "description": "This API allows the user to order a specific food from a specified restaurant.",
                "summary": "This API allows the user to order a specific food from a specified restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "dish_name",
                        "description": "the name of the dish",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the menu of the selected American restaurant to check for steak options."
            },
            {
                "name": "GetRestaurantMenu",
                "format": "GetRestaurantMenu(restaurant_id) -> menu_id",
                "Id": 263,
                "description": "This API is to get the menu from a specific restaurant.",
                "summary": "This API is to get the menu from a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu_id",
                        "description": "the ID of the menu",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the menu of the restaurant to confirm the availability of dumplings."
            }
        ]
    },
    {
        "Id": 898,
        "Selected_Functions": [
            {
                "name": "GetStockPrice",
                "format": "GetStockPrice(stockId) -> price",
                "Id": 318,
                "description": "This API is to get the current price of a specific stock.",
                "summary": "This API is to get the current price of a specific stock.",
                "input_parameters_with_datatype": [
                    {
                        "name": "stockId",
                        "description": "the ID of the stock",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the current price of the stock",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the current market value of Netflix shares."
            },
            {
                "name": "SuggestStockAction",
                "format": "SuggestStockAction(stockId, currentPrice, futurePrice) -> action",
                "Id": 320,
                "description": "This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.",
                "summary": "This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.",
                "input_parameters_with_datatype": [
                    {
                        "name": "stockId",
                        "description": "the ID of the stock",
                        "datatype": "String"
                    },
                    {
                        "name": "currentPrice",
                        "description": "the current price of the stock",
                        "datatype": "Float"
                    },
                    {
                        "name": "futurePrice",
                        "description": "the predicted future price of the stock",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "action",
                        "description": "the suggested action for the stock (buy, sell, or hold)",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a suggestion on whether to augment, relinquish, or hold Netflix shares based on the current market value."
            },
            {
                "name": "PredictFutureStockPrice",
                "format": "PredictFutureStockPrice(stockId, currentPrice) -> futurePrice",
                "Id": 319,
                "description": "This API predicts the future price of a stock based on its current price.",
                "summary": "This API predicts the future price of a stock based on its current price.",
                "input_parameters_with_datatype": [
                    {
                        "name": "stockId",
                        "description": "the ID of the stock",
                        "datatype": "String"
                    },
                    {
                        "name": "currentPrice",
                        "description": "the current price of the stock",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "futurePrice",
                        "description": "the predicted future price of the stock",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Predict the future stock price of Netflix to aid in making an informed decision."
            }
        ]
    },
    {
        "Id": 910,
        "Selected_Functions": [
            {
                "name": "TrackSpending",
                "format": "TrackSpending(Username) -> SpendingReport",
                "Id": 326,
                "description": "This API is used to track the spending of a specific user.",
                "summary": "This API is used to track the spending of a specific user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Username",
                        "description": "the username of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "SpendingReport",
                        "description": "the spending report of the user",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Track Sarah's expenditures to understand her spending patterns."
            },
            {
                "name": "CalculateSavings",
                "format": "CalculateSavings(SpendingReport) -> Savings",
                "Id": 327,
                "description": "This API calculates the possible savings based on the spending report of a user.",
                "summary": "This API calculates the possible savings based on the spending report of a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "SpendingReport",
                        "description": "the spending report of the user",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Savings",
                        "description": "the possible savings of the user",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate Sarah's savings based on her income and expenditures."
            },
            {
                "name": "SuggestInvestment",
                "format": "SuggestInvestment(Savings) -> InvestmentPlan",
                "Id": 328,
                "description": "This API suggests an investment plan based on the savings of a user.",
                "summary": "This API suggests an investment plan based on the savings of a user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Savings",
                        "description": "the possible savings of the user",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "InvestmentPlan",
                        "description": "the suggested investment plan for the user",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest investment options for Sarah's savings."
            }
        ]
    },
    {
        "Id": 920,
        "Selected_Functions": [
            {
                "name": "RecommendDish",
                "format": "RecommendDish(menu) -> dish",
                "Id": 231,
                "description": "This API recommends a dish from a given menu.",
                "summary": "This API recommends a dish from a given menu.",
                "input_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "dish",
                        "description": "the recommended dish",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Recommend a gluten-free Chinese dish in Los Angeles."
            }
        ]
    },
    {
        "Id": 933,
        "Selected_Functions": [
            {
                "name": "GetMenu",
                "format": "GetMenu(restaurant_id) -> menu",
                "Id": 22,
                "description": "This API is to get the menu of a specific restaurant.",
                "summary": "This API is to get the menu of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a Chinese restaurant in Houston."
            },
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the movie time for 'Inception' at the theatre."
            },
            {
                "name": "SuggestFood",
                "format": "SuggestFood(menu, dietary_preferences) -> food_suggestion",
                "Id": 339,
                "description": "This API is to suggest food from the menu based on dietary preferences.",
                "summary": "This API is to suggest food from the menu based on dietary preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "dietary_preferences",
                        "description": "the dietary preferences",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "food_suggestion",
                        "description": "the suggested food",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest a lactose-free dish from the menu of the Chinese restaurant."
            }
        ]
    },
    {
        "Id": 945,
        "Selected_Functions": [
            {
                "name": "MovieSearch",
                "format": "MovieSearch(city, genre) -> movie",
                "Id": 389,
                "description": "This API finds the most popular movie in the specified city of the given genre.",
                "summary": "This API finds the most popular movie in the specified city of the given genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie",
                        "description": "the most popular movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for the movie 'Dunkirk' by Christopher Nolan to get more details."
            },
            {
                "name": "MovieRatings",
                "format": "MovieRatings(movie_id) -> ratingScores",
                "Id": 347,
                "description": "This API finds the rating scores for a specific movie id.",
                "summary": "This API finds the rating scores for a specific movie id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_id",
                        "description": "the id of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ratingScores",
                        "description": "the rating scores of the movie",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the ratings for the movie 'The Dark Knight'."
            },
            {
                "name": "AverageRating",
                "format": "AverageRating(ratingScores) -> average_rating",
                "Id": 510,
                "description": "This API is to calculate the average rating of a movie.",
                "summary": "This API is to calculate the average rating of a movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ratingScores",
                        "description": "the ratings of the movie",
                        "datatype": "List of Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "average_rating",
                        "description": "the average rating of the movie",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the average rating for the movie 'The Dark Knight' based on the retrieved ratings."
            }
        ]
    },
    {
        "Id": 952,
        "Selected_Functions": [
            {
                "name": "MovieRating",
                "format": "MovieRating(movie_id) -> rating_scores",
                "Id": 350,
                "description": "This API retrieves all the rating scores for a specific movie id.",
                "summary": "This API retrieves all the rating scores for a specific movie id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_id",
                        "description": "the id of the movie",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "rating_scores",
                        "description": "the rating scores for the movie",
                        "datatype": "List of Floats"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Look up the movie 'Titanic' to get its details."
            },
            {
                "name": "HighestRating",
                "format": "HighestRating(rating_scores) -> highest_rating",
                "Id": 351,
                "description": "This API retrieves the highest rating score from a list of rating scores.",
                "summary": "This API retrieves the highest rating score from a list of rating scores.",
                "input_parameters_with_datatype": [
                    {
                        "name": "rating_scores",
                        "description": "the rating scores for the movie",
                        "datatype": "List of Floats"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "highest_rating",
                        "description": "the highest rating score",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find the highest rating score for the movie 'Titanic'."
            },
            {
                "name": "MovieLookup",
                "format": "MovieLookup(movie_name) -> movie_id",
                "Id": 349,
                "description": "This API retrieves the movie id of a specific movie name.",
                "summary": "This API retrieves the movie id of a specific movie name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_id",
                        "description": "the id of the movie",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Retrieve the rating score for the movie 'Titanic'."
            }
        ]
    },
    {
        "Id": 959,
        "Selected_Functions": [
            {
                "name": "SeatSelection",
                "format": "SeatSelection(flight_id) -> seats",
                "Id": 353,
                "description": "This API checks the seat availability for a specific flight id.",
                "summary": "This API checks the seat availability for a specific flight id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "seats",
                        "description": "the available seats for the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the flight to Paris on 30th November."
            },
            {
                "name": "FlightSearch",
                "format": "FlightSearch(destination, date) -> flight_id",
                "Id": 352,
                "description": "This API searches for flight id for a specific destination on a particular date.",
                "summary": "This API searches for flight id for a specific destination on a particular date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights from Singapore to San Francisco."
            },
            {
                "name": "UpgradeAvailability",
                "format": "UpgradeAvailability(seats) -> upgradeOptions",
                "Id": 354,
                "description": "This API checks if there is any seat upgrade options available for the given seat.",
                "summary": "This API checks if there is any seat upgrade options available for the given seat.",
                "input_parameters_with_datatype": [
                    {
                        "name": "seats",
                        "description": "the seats to check for upgrade options",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "upgradeOptions",
                        "description": "the available seat upgrade options",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Select and upgrade the seat for the flight to Paris on 30th November if available."
            }
        ]
    },
    {
        "Id": 961,
        "Selected_Functions": [
            {
                "name": "FlightSearch",
                "format": "FlightSearch(destination, date) -> flight_id",
                "Id": 352,
                "description": "This API searches for flight id for a specific destination on a particular date.",
                "summary": "This API searches for flight id for a specific destination on a particular date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the ID of the flight",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights from Singapore to San Francisco."
            },
            {
                "name": "BestSeatClass",
                "format": "BestSeatClass(seat_classes) -> bestSeatClass",
                "Id": 356,
                "description": "This API finds the best seat class available among the given seat class options.",
                "summary": "This API finds the best seat class available among the given seat class options.",
                "input_parameters_with_datatype": [
                    {
                        "name": "seat_classes",
                        "description": "the available seat classes",
                        "datatype": "List"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bestSeatClass",
                        "description": "the best seat class",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the best premium seat class for the flight from Singapore to San Francisco."
            },
            {
                "name": "SeatClassAvailability",
                "format": "SeatClassAvailability(flight_id) -> seat_classes",
                "Id": 355,
                "description": "This API checks the seat class availability for a specific flight id.",
                "summary": "This API checks the seat class availability for a specific flight id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_id",
                        "description": "the id of the flight",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "seat_classes",
                        "description": "the available seat classes",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the availability of the premium seat class for the flight from Singapore to San Francisco."
            }
        ]
    },
    {
        "Id": 967,
        "Selected_Functions": [
            {
                "name": "BookStoreAvailability",
                "format": "BookStoreAvailability(book_id) -> store_ids",
                "Id": 361,
                "description": "This API checks for the store availability for a specific book id.",
                "summary": "This API checks for the store availability for a specific book id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_ids",
                        "description": "the IDs of the stores where the book is available",
                        "datatype": "List of Integers"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the book 'To Kill a Mockingbird' by Harper Lee to check its availability in bookstores."
            },
            {
                "name": "BookSearch",
                "format": "BookSearch(title, author) -> book_id",
                "Id": 360,
                "description": "This API searches for book id for a specific title and author.",
                "summary": "This API searches for book id for a specific title and author.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the book '1984' by George Orwell in the library catalog."
            },
            {
                "name": "NearestStore",
                "format": "NearestStore(store_ids, user_location) -> nearest_store",
                "Id": 362,
                "description": "This API finds the nearest store among the given store options based on the user's location.",
                "summary": "This API finds the nearest store among the given store options based on the user's location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_ids",
                        "description": "the IDs of the stores",
                        "datatype": "List of Integers"
                    },
                    {
                        "name": "user_location",
                        "description": "the location of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "nearest_store",
                        "description": "the ID of the nearest store",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Identify the nearest bookstore in New York where the book is available."
            }
        ]
    },
    {
        "Id": 1011,
        "Selected_Functions": [
            {
                "name": "AuthorBio",
                "format": "AuthorBio(author) -> authorData",
                "Id": 380,
                "description": "This API provides information about an author.",
                "summary": "This API provides information about an author.",
                "input_parameters_with_datatype": [
                    {
                        "name": "author",
                        "description": "the name of the author",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "authorData",
                        "description": "the information about the author",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Provide a brief biography of the author Jane Austen."
            },
            {
                "name": "ReviewGenerator",
                "format": "ReviewGenerator(bookdetails, authorData) -> review",
                "Id": 381,
                "description": "This API generates a review based on the book and its author details.",
                "summary": "This API generates a review based on the book and its author details.",
                "input_parameters_with_datatype": [
                    {
                        "name": "bookdetails",
                        "description": "the details of the book",
                        "datatype": "Object"
                    },
                    {
                        "name": "authorData",
                        "description": "the information about the author",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review",
                        "description": "the generated review",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Generate a review for the book 'Pride and Prejudice' by Jane Austen."
            },
            {
                "name": "BookInfo",
                "format": "BookInfo(title) -> bookdetails",
                "Id": 379,
                "description": "This API provides details about a book based on its title.",
                "summary": "This API provides details about a book based on its title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bookdetails",
                        "description": "the details of the book",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide basic information about the book 'Pride and Prejudice' by Jane Austen."
            }
        ]
    },
    {
        "Id": 1037,
        "Selected_Functions": [
            {
                "name": "RestaurantRecommendation",
                "format": "RestaurantRecommendation(venue) -> restaurant_list",
                "Id": 401,
                "description": "This API recommends restaurants based on the venue.",
                "summary": "This API recommends restaurants based on the venue.",
                "input_parameters_with_datatype": [
                    {
                        "name": "venue",
                        "description": "the name of the venue",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_list",
                        "description": "a list of recommended restaurants",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Recommend a restaurant in Tokyo, considering the user's interest in seeing a sumo match."
            },
            {
                "name": "GetMovie",
                "format": "GetMovie(show) -> movie_info",
                "Id": 400,
                "description": "This API is to get the information about a specific movie show.",
                "summary": "This API is to get the information about a specific movie show.",
                "input_parameters_with_datatype": [
                    {
                        "name": "show",
                        "description": "the name of the movie show",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_info",
                        "description": "the information about the movie, including the venue",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get information about the new Harry Potter movie showing tomorrow night."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a table for 3 people at the selected Italian restaurant for 8 pm."
            }
        ]
    },
    {
        "Id": 1044,
        "Selected_Functions": [
            {
                "name": "TaxCostCalculator",
                "format": "TaxCostCalculator(price, tax_rate) -> taxCost",
                "Id": 409,
                "description": "This API calculates the tax cost of a certain price.",
                "summary": "This API calculates the tax cost of a certain price.",
                "input_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the item",
                        "datatype": "Float"
                    },
                    {
                        "name": "tax_rate",
                        "description": "the tax rate to be applied",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "taxCost",
                        "description": "the calculated tax cost",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Calculate the tax cost for purchasing an Audi Q7 in Italy."
            },
            {
                "name": "CarInfo",
                "format": "CarInfo(car_name, country) -> carDetails",
                "Id": 407,
                "description": "This API retrieves detailed information about a car including its price.",
                "summary": "This API retrieves detailed information about a car including its price.",
                "input_parameters_with_datatype": [
                    {
                        "name": "car_name",
                        "description": "the name of the car",
                        "datatype": "String"
                    },
                    {
                        "name": "country",
                        "description": "the country where the car is being purchased",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "carDetails",
                        "description": "detailed information about the car including its price",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve information about the Audi Q7."
            },
            {
                "name": "CountryTaxRate",
                "format": "CountryTaxRate(country) -> taxRate",
                "Id": 408,
                "description": "This API returns the tax rate in a certain country.",
                "summary": "This API returns the tax rate in a certain country.",
                "input_parameters_with_datatype": [
                    {
                        "name": "country",
                        "description": "the country for which the tax rate is being retrieved",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "taxRate",
                        "description": "the tax rate in the specified country",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the tax rate applicable in Italy for car purchases."
            }
        ]
    },
    {
        "Id": 1061,
        "Selected_Functions": [
            {
                "name": "RestaurantSearch",
                "format": "RestaurantSearch(name, city) -> restaurant_id",
                "Id": 363,
                "description": "This API searches for restaurant id for a specific name in a particular city.",
                "summary": "This API searches for restaurant id for a specific name in a particular city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the restaurant is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find out events happening in New York on April 15."
            },
            {
                "name": "RestaurantReview",
                "format": "RestaurantReview(restaurant_name) -> review_report",
                "Id": 426,
                "description": "This API is to provide the recent reviews of a specific restaurant.",
                "summary": "This API is to provide the recent reviews of a specific restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "review_report",
                        "description": "the recent reviews of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get reviews for the restaurant found to ensure it is well-regarded."
            },
            {
                "name": "CuisineRecommendations",
                "format": "CuisineRecommendations(review_report, dietary_preferences) -> cuisine",
                "Id": 427,
                "description": "This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.",
                "summary": "This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.",
                "input_parameters_with_datatype": [
                    {
                        "name": "review_report",
                        "description": "the recent reviews of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "dietary_preferences",
                        "description": "the dietary preferences of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cuisine",
                        "description": "the recommended cuisine",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Recommend gluten-free dishes available at the restaurant."
            }
        ]
    },
    {
        "Id": 1067,
        "Selected_Functions": [
            {
                "name": "BookTickets",
                "format": "BookTickets(movie_name, showtime, number_of_tickets) -> booking_status",
                "Id": 441,
                "description": "This API is to book a specified number of tickets for a movie at a certain showtime.",
                "summary": "This API is to book a specified number of tickets for a movie at a certain showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "showtime",
                        "description": "the showtime for which tickets are booked",
                        "datatype": "String"
                    },
                    {
                        "name": "number_of_tickets",
                        "description": "the number of tickets to be booked",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for drama movies available in Chicago."
            },
            {
                "name": "CheckShowtimes",
                "format": "CheckShowtimes(movie_name, date) -> showtime_details",
                "Id": 440,
                "description": "This API is to check the showtimes for a specified movie on a certain date.",
                "summary": "This API is to check the showtimes for a specified movie on a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for which showtimes are checked",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showtime_details",
                        "description": "the details of the showtimes",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the showtimes for the selected drama movie on Sunday at 6pm."
            },
            {
                "name": "SearchMovie",
                "format": "SearchMovie(genre, location) -> movie_details",
                "Id": 439,
                "description": "This API is to search a movie of a specified genre at a specific location.",
                "summary": "This API is to search a movie of a specified genre at a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location where the movie is searched",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_details",
                        "description": "the details of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book 5 tickets for the selected drama movie at the 6pm showtime on Sunday in Chicago."
            }
        ]
    },
    {
        "Id": 1075,
        "Selected_Functions": [
            {
                "name": "FindRoomType",
                "format": "FindRoomType(hotelname, guestNumber) -> room type",
                "Id": 444,
                "description": "This API is used to find suitable room type in a hotel for specific number of guests.",
                "summary": "This API is used to find suitable room type in a hotel for specific number of guests.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotelname",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "guestNumber",
                        "description": "the number of guests",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "room type",
                        "description": "the type of the hotel room",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine the type of room suitable for five people in a 4-star hotel."
            },
            {
                "name": "SearchHotel",
                "format": "SearchHotel(city, hotel_preferences) -> hotel_name",
                "Id": 38,
                "description": "This API searches a hotel in a given city based on user preferences.",
                "summary": "This API searches a hotel in a given city based on user preferences.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city name",
                        "datatype": "String"
                    },
                    {
                        "name": "hotel_preferences",
                        "description": "the user preferences for the hotel",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for a 4-star hotel in Seattle with availability from 15th September to 22nd September."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a hotel in Tokyo."
            }
        ]
    },
    {
        "Id": 1080,
        "Selected_Functions": [
            {
                "name": "CreateAppointment",
                "format": "CreateAppointment(doctorId, patientId, date, time) -> appointment status",
                "Id": 445,
                "description": "This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.",
                "summary": "This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "doctorId",
                        "description": "the ID of the doctor",
                        "datatype": "Integer"
                    },
                    {
                        "name": "patientId",
                        "description": "the ID of the patient",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date",
                        "description": "the date of the appointment",
                        "datatype": "String"
                    },
                    {
                        "name": "time",
                        "description": "the time of the appointment",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "appointment status",
                        "description": "the status of the appointment",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the patient record for Michael Johnson."
            },
            {
                "name": "FindPatient",
                "format": "FindPatient(patientname) -> patient id",
                "Id": 446,
                "description": "This API is used to find a patient based on patient name.",
                "summary": "This API is used to find a patient based on patient name.",
                "input_parameters_with_datatype": [
                    {
                        "name": "patientname",
                        "description": "the name of the patient",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "patient id",
                        "description": "the ID of the patient",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find an available ophthalmologist for the appointment."
            },
            {
                "name": "FindDoctor",
                "format": "FindDoctor(specialty, location) -> doctor",
                "Id": 275,
                "description": "This API is to find a doctor based on specialty and location.",
                "summary": "This API is to find a doctor based on specialty and location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "specialty",
                        "description": "the specialty of the doctor",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location where the doctor is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "doctor",
                        "description": "the information of the doctor",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Create an appointment for Michael Johnson with the ophthalmologist on 5th October at 10:00 AM."
            }
        ]
    },
    {
        "Id": 1088,
        "Selected_Functions": [
            {
                "name": "FindMovie",
                "format": "FindMovie(genre) -> movie_name",
                "Id": 16,
                "description": "This API provides the name of a movie based on the specified genre.",
                "summary": "This API provides the name of a movie based on the specified genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the showtimes for the movie 'Avengers' in Los Angeles."
            },
            {
                "name": "BookMovieTicket",
                "format": "BookMovieTicket(movie_name, showtime, number_of_tickets) -> booking confirmation",
                "Id": 449,
                "description": "This API is to book movie tickets for a specific movie at a specific showtime.",
                "summary": "This API is to book movie tickets for a specific movie at a specific showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "number_of_tickets",
                        "description": "the number of tickets to be booked",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking confirmation",
                        "description": "the confirmation of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a suitable showtime for the selected movie for 6 people."
            },
            {
                "name": "FindShowtime",
                "format": "FindShowtime(movie_name, location, date) -> showtime",
                "Id": 448,
                "description": "This API is to find the showtime for a specific movie in a given location on a specific date.",
                "summary": "This API is to find the showtime for a specific movie in a given location on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location where the movie is available",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date for which the showtime is required",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book 6 tickets for the selected movie and showtime."
            }
        ]
    },
    {
        "Id": 1093,
        "Selected_Functions": [
            {
                "name": "BookMovieTickets",
                "format": "BookMovieTickets(showtime) -> ticket",
                "Id": 550,
                "description": "This API is to book movie tickets for a specific showtime.",
                "summary": "This API is to book movie tickets for a specific showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime for the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ticket",
                        "description": "the ticket for the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find a highly rated thriller movie."
            },
            {
                "name": "GetMovieTimes",
                "format": "GetMovieTimes(movie_name) -> showtimes",
                "Id": 549,
                "description": "This API is to get the showtimes for a specific movie.",
                "summary": "This API is to get the showtimes for a specific movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showtimes",
                        "description": "the showtimes for the movie",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the available movie times for the selected thriller movie."
            },
            {
                "name": "FindMovie",
                "format": "FindMovie(genre) -> movie_name",
                "Id": 16,
                "description": "This API provides the name of a movie based on the specified genre.",
                "summary": "This API provides the name of a movie based on the specified genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the showtimes for the movie 'Avengers' in Los Angeles."
            }
        ]
    },
    {
        "Id": 1097,
        "Selected_Functions": [
            {
                "name": "FlightStatus",
                "format": "FlightStatus(airline, flight_number, date) -> flight_status",
                "Id": 372,
                "description": "This API is used to get the status of a specific flight on a certain date.",
                "summary": "This API is used to get the status of a specific flight on a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "airline",
                        "description": "the name of the airline",
                        "datatype": "String"
                    },
                    {
                        "name": "flight_number",
                        "description": "the flight number",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_status",
                        "description": "the status of the flight, including time",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the person name 'John' to a person ID."
            },
            {
                "name": "Personname2ID",
                "format": "Personname2ID(person_name) -> person_ID",
                "Id": 121,
                "description": "This API is to convert user name to user ID.",
                "summary": "This API is to convert user name to user ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_name",
                        "description": "the name of the person",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the flight number associated with the person ID obtained for John."
            },
            {
                "name": "GetFlightNumber",
                "format": "GetFlightNumber(person_ID) -> flight_number",
                "Id": 557,
                "description": "This API retrieves the flight number a certain person booked.",
                "summary": "This API retrieves the flight number a certain person booked.",
                "input_parameters_with_datatype": [
                    {
                        "name": "person_ID",
                        "description": "the ID of the person",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_number",
                        "description": "the number of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the status of the flight using the flight number obtained."
            }
        ]
    },
    {
        "Id": 1112,
        "Selected_Functions": [
            {
                "name": "FindRestaurant",
                "format": "FindRestaurant(location, type, rating) -> restaurant",
                "Id": 21,
                "description": "This API is to find a restaurant based on location, type and rating.",
                "summary": "This API is to find a restaurant based on location, type and rating.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "type",
                        "description": "the type of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "rating",
                        "description": "the rating of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the restaurant found",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the movie time for 'Inception' at the theatre."
            },
            {
                "name": "MakeReservation",
                "format": "MakeReservation(open_hours, number_of_people, date_time) -> reservation_info",
                "Id": 268,
                "description": "This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.",
                "summary": "This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "open_hours",
                        "description": "the opening hours of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "number_of_people",
                        "description": "the number of people for the reservation",
                        "datatype": "Integer"
                    },
                    {
                        "name": "date_time",
                        "description": "the date and time for the reservation",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "reservation_info",
                        "description": "information about the reservation",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a restaurant near the theatre showing 'Inception'."
            },
            {
                "name": "GetMovieTime",
                "format": "GetMovieTime(movie_name) -> ShowTime",
                "Id": 578,
                "description": "This API gets the showtime for a specific movie.",
                "summary": "This API gets the showtime for a specific movie.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ShowTime",
                        "description": "the showtime for the movie",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Make a reservation at the restaurant found near the theatre."
            }
        ]
    },
    {
        "Id": 1117,
        "Selected_Functions": [
            {
                "name": "ReadingTime",
                "format": "ReadingTime(Pages) -> Time",
                "Id": 588,
                "description": "This API estimates the time it will take to read a book based on the number of pages.",
                "summary": "This API estimates the time it will take to read a book based on the number of pages.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Pages",
                        "description": "the number of pages in the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Time",
                        "description": "the estimated time to read the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the title of the book with ISBN 123456789."
            },
            {
                "name": "BookTitle",
                "format": "BookTitle(author, genre) -> title",
                "Id": 385,
                "description": "This API retrieves the title of a book given the author and genre.",
                "summary": "This API retrieves the title of a book given the author and genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "genre",
                        "description": "the genre of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the page count of the book with ISBN 123456789."
            },
            {
                "name": "PageCount",
                "format": "PageCount(Title) -> Pages",
                "Id": 587,
                "description": "This API fetches the number of pages in a book using its title.",
                "summary": "This API fetches the number of pages in a book using its title.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Title",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Pages",
                        "description": "the number of pages in the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the reading time for the book with ISBN 123456789 based on its page count."
            }
        ]
    },
    {
        "Id": 1118,
        "Selected_Functions": [
            {
                "name": "Shop",
                "format": "Shop(Outfit) -> Stores",
                "Id": 590,
                "description": "This API finds stores that have the suggested outfit in stock.",
                "summary": "This API finds stores that have the suggested outfit in stock.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Outfit",
                        "description": "the suggested outfit",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Stores",
                        "description": "the stores that have the suggested outfit in stock",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Los Angeles."
            },
            {
                "name": "OutfitSuggestion",
                "format": "OutfitSuggestion(WeatherCondition) -> Outfit",
                "Id": 589,
                "description": "This API suggests an outfit based on the weather condition.",
                "summary": "This API suggests an outfit based on the weather condition.",
                "input_parameters_with_datatype": [
                    {
                        "name": "WeatherCondition",
                        "description": "the current weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Outfit",
                        "description": "the suggested outfit",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest an appropriate outfit based on the current weather in Los Angeles."
            },
            {
                "name": "Weather",
                "format": "Weather(city) -> condition",
                "Id": 391,
                "description": "This API gives the current weather conditions for the given city.",
                "summary": "This API gives the current weather conditions for the given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "condition",
                        "description": "the current weather conditions",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find a store in Los Angeles where the suggested outfit can be purchased."
            }
        ]
    },
    {
        "Id": 1132,
        "Selected_Functions": [
            {
                "name": "RoutePlanner",
                "format": "RoutePlanner(origin, destination, distance, time) -> route",
                "Id": 623,
                "description": "This API provides a travel route plan from origin to destination with distance and estimated time.",
                "summary": "This API provides a travel route plan from origin to destination with distance and estimated time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "destination",
                        "description": "the destination point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "the travel route plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Plan the driving route from San Francisco to Los Angeles."
            },
            {
                "name": "CalculateTime",
                "format": "CalculateTime(distance, speed) -> time",
                "Id": 622,
                "description": "This API calculates the travel time based on distance and speed.",
                "summary": "This API calculates the travel time based on distance and speed.",
                "input_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "speed",
                        "description": "the average speed of the journey",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the distance of the route from San Francisco to Los Angeles."
            },
            {
                "name": "CalculateDistance",
                "format": "CalculateDistance(start_point, end_point) -> distance",
                "Id": 39,
                "description": "This API is to calculate the distance between the start point and end point.",
                "summary": "This API is to calculate the distance between the start point and end point.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_point",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "end_point",
                        "description": "the ending point of the journey",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance between the start point and end point",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the time it would take to drive from San Francisco to Los Angeles at an average speed of 55 miles per hour."
            }
        ]
    },
    {
        "Id": 1165,
        "Selected_Functions": [
            {
                "name": "FetchStockData",
                "format": "FetchStockData(stock_symbol) -> stock_data",
                "Id": 686,
                "description": "This API is to retrieve real-time stock data for a given stock symbol.",
                "summary": "This API is to retrieve real-time stock data for a given stock symbol.",
                "input_parameters_with_datatype": [
                    {
                        "name": "stock_symbol",
                        "description": "the symbol of the stock",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "stock_data",
                        "description": "the real-time stock data",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Fetch the stock data for 'AAPL'."
            },
            {
                "name": "GenerateReport",
                "format": "GenerateReport(analyzed_data, template) -> report",
                "Id": 688,
                "description": "This API generates a stock analysis report based on the analyzed data and a specific template.",
                "summary": "This API generates a stock analysis report based on the analyzed data and a specific template.",
                "input_parameters_with_datatype": [
                    {
                        "name": "analyzed_data",
                        "description": "the analyzed stock data",
                        "datatype": "Object"
                    },
                    {
                        "name": "template",
                        "description": "the specific template for the report",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "report",
                        "description": "the generated stock analysis report",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Perform basic data analysis on the fetched 'AAPL' stock data."
            },
            {
                "name": "BasicDataAnalysis",
                "format": "BasicDataAnalysis(stock_data) -> analyzed_data",
                "Id": 687,
                "description": "This API performs a basic data analysis on the input stock data.",
                "summary": "This API performs a basic data analysis on the input stock data.",
                "input_parameters_with_datatype": [
                    {
                        "name": "stock_data",
                        "description": "the real-time stock data",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "analyzed_data",
                        "description": "the analyzed stock data",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Generate a report using the 'basic_analysis' template based on the analyzed data."
            }
        ]
    },
    {
        "Id": 1176,
        "Selected_Functions": [
            {
                "name": "UserEmail2ID",
                "format": "UserEmail2ID(user_email) -> user_ID",
                "Id": 171,
                "description": "This API generates the ID of a specific user through the user email.",
                "summary": "This API generates the ID of a specific user through the user email.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_email",
                        "description": "the email of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Convert the email 'john@example.com' to a user ID."
            },
            {
                "name": "Productname2ID",
                "format": "Productname2ID(book_name) -> product_ID",
                "Id": 60,
                "description": "This API is to convert a book name to a book ID.",
                "summary": "This API is to convert a book name to a book ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_name",
                        "description": "the title of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "product_ID",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Convert the product name 'Samsung Galaxy S21 Ultra' to a product ID."
            },
            {
                "name": "PurchaseItem",
                "format": "PurchaseItem(user_ID, product_ID, quantity) -> purchase_status",
                "Id": 548,
                "description": "This API is to purchase a product.",
                "summary": "This API is to purchase a product.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_ID",
                        "description": "the ID of the user",
                        "datatype": "Integer"
                    },
                    {
                        "name": "product_ID",
                        "description": "the ID of the product",
                        "datatype": "Integer"
                    },
                    {
                        "name": "quantity",
                        "description": "the quantity of the product to purchase",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "purchase_status",
                        "description": "the status of the purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase 2 units of the product for the user with the obtained user ID."
            }
        ]
    },
    {
        "Id": 1190,
        "Selected_Functions": [
            {
                "name": "GetClothingAdvice",
                "format": "GetClothingAdvice(weather) -> clothing_advice",
                "Id": 230,
                "description": "This API gives clothing advice based on the weather.",
                "summary": "This API gives clothing advice based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothing_advice",
                        "description": "the clothing advice",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Tokyo."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the population data for Tokyo."
            },
            {
                "name": "GetCityLocation",
                "format": "GetCityLocation(city_name) -> latitude, longitude",
                "Id": 551,
                "description": "This API is to find the geographical location of a city.",
                "summary": "This API is to find the geographical location of a city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city_name",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "latitude",
                        "description": "the latitude of the city",
                        "datatype": "Float"
                    },
                    {
                        "name": "longitude",
                        "description": "the longitude of the city",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Get the geographical location of Tokyo."
            }
        ]
    },
    {
        "Id": 1209,
        "Selected_Functions": [
            {
                "name": "GetExchangeRate",
                "format": "GetExchangeRate(from_currency, to_currency) -> exchange_rate",
                "Id": 560,
                "description": "This API is to get the exchange rate from one currency to another.",
                "summary": "This API is to get the exchange rate from one currency to another.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_currency",
                        "description": "the currency to convert from",
                        "datatype": "String"
                    },
                    {
                        "name": "to_currency",
                        "description": "the currency to convert to",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "exchange_rate",
                        "description": "the exchange rate from the from_currency to the to_currency",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the price of the product with ID '22222' in Brazilian Real."
            },
            {
                "name": "CalculateCost",
                "format": "CalculateCost(price, exchange_rate) -> cost",
                "Id": 561,
                "description": "This API is to calculate the cost of a product in a different currency.",
                "summary": "This API is to calculate the cost of a product in a different currency.",
                "input_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the product",
                        "datatype": "Float"
                    },
                    {
                        "name": "exchange_rate",
                        "description": "the exchange rate from the currency of the price to the desired currency",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cost",
                        "description": "the cost of the product in the desired currency",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the exchange rate from Brazilian Real to Chinese Yuan."
            },
            {
                "name": "GetProductPrice",
                "format": "GetProductPrice(store_name, product_name) -> price",
                "Id": 58,
                "description": "This API is to get the price of a specific product in a given store.",
                "summary": "This API is to get the price of a specific product in a given store.",
                "input_parameters_with_datatype": [
                    {
                        "name": "store_name",
                        "description": "the name of the store",
                        "datatype": "String"
                    },
                    {
                        "name": "product_name",
                        "description": "the name of the product",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of the product",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the cost of the product in Chinese Yuan using the exchange rate."
            }
        ]
    },
    {
        "Id": 1225,
        "Selected_Functions": [
            {
                "name": "SearchFlight",
                "format": "SearchFlight(from_location, to_location, date) -> flight_details",
                "Id": 46,
                "description": "This API generates flight details from one location to another at a specified date.",
                "summary": "This API generates flight details from one location to another at a specified date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "from_location",
                        "description": "the location from where the flight will depart",
                        "datatype": "String"
                    },
                    {
                        "name": "to_location",
                        "description": "the location where the flight will arrive",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the flight",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available flights to Tokyo."
            },
            {
                "name": "BookFlight",
                "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
                "Id": 48,
                "description": "This API books a flight using the flight details and the user's preferred flight class.",
                "summary": "This API books a flight using the flight details and the user's preferred flight class.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flight_details",
                        "description": "the details of the flight",
                        "datatype": "String"
                    },
                    {
                        "name": "preferred_flight_class",
                        "description": "the preferred flight class of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the maximum allowable luggage for the selected flight."
            },
            {
                "name": "CheckBaggageAllowance",
                "format": "CheckBaggageAllowance(airline) -> baggage_allowance",
                "Id": 558,
                "description": "This API is to check the baggage allowance of a specific airline.",
                "summary": "This API is to check the baggage allowance of a specific airline.",
                "input_parameters_with_datatype": [
                    {
                        "name": "airline",
                        "description": "the specific airline",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "baggage_allowance",
                        "description": "the baggage allowance of the airline",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Reserve the flight to Tokyo with the maximum allowable luggage."
            }
        ]
    },
    {
        "Id": 1227,
        "Selected_Functions": [
            {
                "name": "GetShowtimes",
                "format": "GetShowtimes(movie_title, city) -> showtime",
                "Id": 250,
                "description": "This API gives the showtime for a given movie in a specific city.",
                "summary": "This API gives the showtime for a given movie in a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movie_title",
                        "description": "the title of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the showtime is requested",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie in the specified city",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the movie 'Avengers' in Los Angeles."
            },
            {
                "name": "FindMovie",
                "format": "FindMovie(genre) -> movie_name",
                "Id": 16,
                "description": "This API provides the name of a movie based on the specified genre.",
                "summary": "This API provides the name of a movie based on the specified genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie_name",
                        "description": "the name of the movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the showtimes for the movie 'Avengers' in Los Angeles."
            },
            {
                "name": "BuyTickets",
                "format": "BuyTickets(showtime, number_of_tickets) -> ticket_confirmation",
                "Id": 567,
                "description": "This API is to buy a specified number of tickets for a specified showtime.",
                "summary": "This API is to buy a specified number of tickets for a specified showtime.",
                "input_parameters_with_datatype": [
                    {
                        "name": "showtime",
                        "description": "the showtime of the movie",
                        "datatype": "String"
                    },
                    {
                        "name": "number_of_tickets",
                        "description": "the number of tickets to buy",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ticket_confirmation",
                        "description": "the confirmation of the ticket purchase",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Purchase 4 tickets for the movie 'Avengers' in Los Angeles."
            }
        ]
    },
    {
        "Id": 1236,
        "Selected_Functions": [
            {
                "name": "BookSearch",
                "format": "BookSearch(title, author) -> book_id",
                "Id": 360,
                "description": "This API searches for book id for a specific title and author.",
                "summary": "This API searches for book id for a specific title and author.",
                "input_parameters_with_datatype": [
                    {
                        "name": "title",
                        "description": "the title of the book",
                        "datatype": "String"
                    },
                    {
                        "name": "author",
                        "description": "the author of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the book '1984' by George Orwell in the library catalog."
            },
            {
                "name": "BookLocation",
                "format": "BookLocation(book_availability) -> location",
                "Id": 696,
                "description": "This API is to find the location of a book in the library.",
                "summary": "This API is to find the location of a book in the library.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_availability",
                        "description": "the availability status of the book",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the book in the library",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Determine the location of the book '1984' by George Orwell within the library."
            },
            {
                "name": "BookAvailability",
                "format": "BookAvailability(book_id) -> availability",
                "Id": 695,
                "description": "This API is to check the availability of a book by its ID.",
                "summary": "This API is to check the availability of a book by its ID.",
                "input_parameters_with_datatype": [
                    {
                        "name": "book_id",
                        "description": "the ID of the book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "availability",
                        "description": "the availability status of the book",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the availability status of the book '1984' by George Orwell in the library."
            }
        ]
    },
    {
        "Id": 1250,
        "Selected_Functions": [
            {
                "name": "EventSearch",
                "format": "EventSearch(city, date) -> event",
                "Id": 608,
                "description": "This API provides details on events happening in the specified city on a given date.",
                "summary": "This API provides details on events happening in the specified city on a given date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "event",
                        "description": "the details of the event",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest a good French restaurant in New York."
            },
            {
                "name": "TicketBooking",
                "format": "TicketBooking(eventDetails, num_of_tickets) -> booking confirmation.",
                "Id": 698,
                "description": "This API is to book tickets for an event.",
                "summary": "This API is to book tickets for an event.",
                "input_parameters_with_datatype": [
                    {
                        "name": "eventDetails",
                        "description": "the details of the event",
                        "datatype": "String"
                    },
                    {
                        "name": "num_of_tickets",
                        "description": "the number of tickets to book",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking confirmation",
                        "description": "the confirmation of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for events in Sydney on 1st of January, considering the weather conditions."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest appropriate clothing based on the weather forecast for Chicago tomorrow."
            }
        ]
    },
    {
        "Id": 1255,
        "Selected_Functions": [
            {
                "name": "CinemaFinder",
                "format": "CinemaFinder(movieDetails) -> cinemaLocations",
                "Id": 573,
                "description": "This API finds the cinemas where the searched movie is being shown.",
                "summary": "This API finds the cinemas where the searched movie is being shown.",
                "input_parameters_with_datatype": [
                    {
                        "name": "movieDetails",
                        "description": "the details of the movie",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "cinemaLocations",
                        "description": "the locations of the cinemas",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find cinemas where the movie 'Dunkirk' by Christopher Nolan is being shown."
            },
            {
                "name": "MovieSearch",
                "format": "MovieSearch(city, genre) -> movie",
                "Id": 389,
                "description": "This API finds the most popular movie in the specified city of the given genre.",
                "summary": "This API finds the most popular movie in the specified city of the given genre.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "genre",
                        "description": "the genre of the movie",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "movie",
                        "description": "the most popular movie",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for the movie 'Dunkirk' by Christopher Nolan to get more details."
            },
            {
                "name": "ShowtimeCheck",
                "format": "ShowtimeCheck(cinemaLocations, movieDetails) -> showTimes",
                "Id": 574,
                "description": "This API checks the showtimes for a specific movie at the found cinemas.",
                "summary": "This API checks the showtimes for a specific movie at the found cinemas.",
                "input_parameters_with_datatype": [
                    {
                        "name": "cinemaLocations",
                        "description": "the locations of the cinemas",
                        "datatype": "Object"
                    },
                    {
                        "name": "movieDetails",
                        "description": "the details of the movie",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "showTimes",
                        "description": "the showtimes of the movie at the cinemas",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Check the showtimes for the movie 'Dunkirk' at the cinemas found."
            }
        ]
    },
    {
        "Id": 1259,
        "Selected_Functions": [
            {
                "name": "ReservationBooking",
                "format": "ReservationBooking(hotelDetails, restaurantLocations) -> booking status",
                "Id": 699,
                "description": "This API is to book a hotel and a restaurant.",
                "summary": "This API is to book a hotel and a restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotelDetails",
                        "description": "the details of the hotel",
                        "datatype": "Object"
                    },
                    {
                        "name": "restaurantLocations",
                        "description": "the locations of the restaurants",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for available hotels in Miami for August 25th."
            },
            {
                "name": "HotelSearch",
                "format": "HotelSearch(city, check_in_date, check_out_date) -> hotel_id",
                "Id": 357,
                "description": "This API searches for hotel id for a specific city between check-in and check-out dates.",
                "summary": "This API searches for hotel id for a specific city between check-in and check-out dates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "check_in_date",
                        "description": "the check-in date",
                        "datatype": "Date"
                    },
                    {
                        "name": "check_out_date",
                        "description": "the check-out date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_id",
                        "description": "the ID of the hotel",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Search for available restaurants in Miami for August 25th."
            },
            {
                "name": "RestaurantLocator",
                "format": "RestaurantLocator(city, cuisine) -> restaurant",
                "Id": 253,
                "description": "This API is to find a specific restaurant by city and cuisine.",
                "summary": "This API is to find a specific restaurant by city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city where the restaurant is located",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the type of cuisine the restaurant serves",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the details of the restaurant",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a hotel and a restaurant in Miami for August 25th."
            }
        ]
    },
    {
        "Id": 1267,
        "Selected_Functions": [
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the population data for Tokyo."
            },
            {
                "name": "FindClothing",
                "format": "FindClothing(WeatherStatus) -> ClothingRecommendation",
                "Id": 579,
                "description": "This API recommends the clothing based on the weather status.",
                "summary": "This API recommends the clothing based on the weather status.",
                "input_parameters_with_datatype": [
                    {
                        "name": "WeatherStatus",
                        "description": "the weather status",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ClothingRecommendation",
                        "description": "the recommended clothing",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Find a suitable dress based on the current weather in Miami."
            },
            {
                "name": "FindStore",
                "format": "FindStore(ClothingType, location) -> store_list",
                "Id": 531,
                "description": "This API is to find the stores where the clothing type can be purchased.",
                "summary": "This API is to find the stores where the clothing type can be purchased.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ClothingType",
                        "description": "the recommended clothing type",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the name of the location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "store_list",
                        "description": "a list of stores where the clothing type can be purchased",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Locate a store in Miami where the selected dress can be purchased."
            }
        ]
    },
    {
        "Id": 1294,
        "Selected_Functions": [
            {
                "name": "ActivitySuggestion",
                "format": "ActivitySuggestion(weather_condition) -> activity_type",
                "Id": 660,
                "description": "This API suggests suitable activities based on the weather condition.",
                "summary": "This API suggests suitable activities based on the weather condition.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather_condition",
                        "description": "the weather condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activity_type",
                        "description": "the suggested activity type",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Determine the geographical location based on the IP address 192.168.0.254."
            },
            {
                "name": "IPGeolocation",
                "format": "IPGeolocation(ip) -> location",
                "Id": 702,
                "description": "This API is to get the location based on the IP address.",
                "summary": "This API is to get the location based on the IP address.",
                "input_parameters_with_datatype": [
                    {
                        "name": "ip",
                        "description": "the IP address",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location of the IP address",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for the location determined from the IP address for July 23rd."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest appropriate clothing based on the weather forecast for Chicago tomorrow."
            }
        ]
    },
    {
        "Id": 1298,
        "Selected_Functions": [
            {
                "name": "CompareWeather",
                "format": "CompareWeather(current_weather, weather_forecast) -> weather_comparison",
                "Id": 606,
                "description": "This API compares the current weather with the forecasted weather.",
                "summary": "This API compares the current weather with the forecasted weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "current_weather",
                        "description": "the current weather for a location",
                        "datatype": "String"
                    },
                    {
                        "name": "weather_forecast",
                        "description": "the weather forecast for the next seven days for a location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_comparison",
                        "description": "the comparison result of the current weather with the forecasted weather",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the current weather information for Tokyo."
            },
            {
                "name": "GetCurrentWeather",
                "format": "GetCurrentWeather(location) -> current_weather",
                "Id": 605,
                "description": "This API retrieves the current weather for a given location.",
                "summary": "This API retrieves the current weather for a given location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location for which to retrieve the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "current_weather",
                        "description": "the current weather for the given location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for Tokyo for the following week."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Compare the current weather in Tokyo with the forecast for the following week."
            }
        ]
    },
    {
        "Id": 1300,
        "Selected_Functions": [
            {
                "name": "CompareWeather",
                "format": "CompareWeather(current_weather, weather_forecast) -> weather_comparison",
                "Id": 606,
                "description": "This API compares the current weather with the forecasted weather.",
                "summary": "This API compares the current weather with the forecasted weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "current_weather",
                        "description": "the current weather for a location",
                        "datatype": "String"
                    },
                    {
                        "name": "weather_forecast",
                        "description": "the weather forecast for the next seven days for a location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather_comparison",
                        "description": "the comparison result of the current weather with the forecasted weather",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the current weather information for Tokyo."
            },
            {
                "name": "GetCurrentWeather",
                "format": "GetCurrentWeather(location) -> current_weather",
                "Id": 605,
                "description": "This API retrieves the current weather for a given location.",
                "summary": "This API retrieves the current weather for a given location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location for which to retrieve the current weather",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "current_weather",
                        "description": "the current weather for the given location",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the weather forecast for Tokyo for the following week."
            },
            {
                "name": "GetWeatherForecast",
                "format": "GetWeatherForecast(city, date) -> weather report",
                "Id": 89,
                "description": "This API returns the weather forecast of a specified city on a specific date.",
                "summary": "This API returns the weather forecast of a specified city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the specific date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather report",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Compare the current weather in Tokyo with the forecast for the following week."
            }
        ]
    },
    {
        "Id": 1304,
        "Selected_Functions": [
            {
                "name": "RestaurantSearch",
                "format": "RestaurantSearch(name, city) -> restaurant_id",
                "Id": 363,
                "description": "This API searches for restaurant id for a specific name in a particular city.",
                "summary": "This API searches for restaurant id for a specific name in a particular city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "city",
                        "description": "the city where the restaurant is located",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_id",
                        "description": "the ID of the restaurant",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find out events happening in New York on April 15."
            },
            {
                "name": "CityGuide",
                "format": "CityGuide(restaurant, event) -> guide",
                "Id": 609,
                "description": "This API creates a guide containing restaurant and event information.",
                "summary": "This API creates a guide containing restaurant and event information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the details of the restaurant",
                        "datatype": "Object"
                    },
                    {
                        "name": "event",
                        "description": "the details of the event",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "guide",
                        "description": "the guide containing restaurant and event information",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide a city guide for New York."
            },
            {
                "name": "EventSearch",
                "format": "EventSearch(city, date) -> event",
                "Id": 608,
                "description": "This API provides details on events happening in the specified city on a given date.",
                "summary": "This API provides details on events happening in the specified city on a given date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "event",
                        "description": "the details of the event",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest a good French restaurant in New York."
            }
        ]
    },
    {
        "Id": 1319,
        "Selected_Functions": [
            {
                "name": "ClothingSuggestion",
                "format": "ClothingSuggestion(weather) -> clothes",
                "Id": 617,
                "description": "This API suggests suitable clothing based on the weather.",
                "summary": "This API suggests suitable clothing based on the weather.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather forecast",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "clothes",
                        "description": "the suggested clothing based on the weather",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the weather forecast for Chicago for tomorrow."
            },
            {
                "name": "WeatherForecast",
                "format": "WeatherForecast(location) -> temperature",
                "Id": 115,
                "description": "This API is to get the temperature for a specific location.",
                "summary": "This API is to get the temperature for a specific location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "temperature",
                        "description": "the temperature",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Suggest appropriate clothing based on the weather forecast for Chicago tomorrow."
            },
            {
                "name": "FashionStore",
                "format": "FashionStore(clothes, location) -> price",
                "Id": 618,
                "description": "This API gives the price of suggested clothing in the local stores of the given location.",
                "summary": "This API gives the price of suggested clothing in the local stores of the given location.",
                "input_parameters_with_datatype": [
                    {
                        "name": "clothes",
                        "description": "the suggested clothing",
                        "datatype": "String"
                    },
                    {
                        "name": "location",
                        "description": "the location for which price is required",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "price",
                        "description": "the price of suggested clothing in the local stores",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find the cost of the suggested clothing items from a fashion store."
            }
        ]
    },
    {
        "Id": 1322,
        "Selected_Functions": [
            {
                "name": "RoutePlanner",
                "format": "RoutePlanner(origin, destination, distance, time) -> route",
                "Id": 623,
                "description": "This API provides a travel route plan from origin to destination with distance and estimated time.",
                "summary": "This API provides a travel route plan from origin to destination with distance and estimated time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "origin",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "destination",
                        "description": "the destination point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "route",
                        "description": "the travel route plan",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Plan the driving route from San Francisco to Los Angeles."
            },
            {
                "name": "CalculateTime",
                "format": "CalculateTime(distance, speed) -> time",
                "Id": 622,
                "description": "This API calculates the travel time based on distance and speed.",
                "summary": "This API calculates the travel time based on distance and speed.",
                "input_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance of the journey",
                        "datatype": "Float"
                    },
                    {
                        "name": "speed",
                        "description": "the average speed of the journey",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "time",
                        "description": "the estimated travel time",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the distance of the route from San Francisco to Los Angeles."
            },
            {
                "name": "CalculateDistance",
                "format": "CalculateDistance(start_point, end_point) -> distance",
                "Id": 39,
                "description": "This API is to calculate the distance between the start point and end point.",
                "summary": "This API is to calculate the distance between the start point and end point.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_point",
                        "description": "the starting point of the journey",
                        "datatype": "String"
                    },
                    {
                        "name": "end_point",
                        "description": "the ending point of the journey",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "distance",
                        "description": "the distance between the start point and end point",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the time it would take to drive from San Francisco to Los Angeles at an average speed of 55 miles per hour."
            }
        ]
    },
    {
        "Id": 1351,
        "Selected_Functions": [
            {
                "name": "MenuGetter",
                "format": "MenuGetter(restaurant) -> menu",
                "Id": 630,
                "description": "This API is used to get the menu from a specified restaurant.",
                "summary": "This API is used to get the menu from a specified restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "menu",
                        "description": "the menu of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find an American restaurant in New York City that serves steak."
            },
            {
                "name": "OrderFood",
                "format": "OrderFood(dish_name, restaurant_name) -> order_status",
                "Id": 13,
                "description": "This API allows the user to order a specific food from a specified restaurant.",
                "summary": "This API allows the user to order a specific food from a specified restaurant.",
                "input_parameters_with_datatype": [
                    {
                        "name": "dish_name",
                        "description": "the name of the dish",
                        "datatype": "String"
                    },
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "order_status",
                        "description": "the status of the order",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the menu of the selected American restaurant to check for steak options."
            },
            {
                "name": "RestaurantFinder",
                "format": "RestaurantFinder(Cityname, CuisineType) -> Restaurantname",
                "Id": 526,
                "description": "This API is to find a restaurant based on the city name and cuisine type.",
                "summary": "This API is to find a restaurant based on the city name and cuisine type.",
                "input_parameters_with_datatype": [
                    {
                        "name": "Cityname",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "CuisineType",
                        "description": "the type of cuisine",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "Restaurantname",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Order a steak from the selected American restaurant."
            }
        ]
    },
    {
        "Id": 1354,
        "Selected_Functions": [
            {
                "name": "GameSchedule",
                "format": "GameSchedule(team_info) -> game_schedule",
                "Id": 632,
                "description": "This API provides a schedule for the team's games based on the team information.",
                "summary": "This API provides a schedule for the team's games based on the team information.",
                "input_parameters_with_datatype": [
                    {
                        "name": "team_info",
                        "description": "the detailed information of the football team",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "game_schedule",
                        "description": "the schedule for the team's games",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find the schedule of FC Barcelona games."
            },
            {
                "name": "TicketPrice",
                "format": "TicketPrice(game_schedule) -> ticket_price",
                "Id": 633,
                "description": "This API calculates the ticket price based on the game schedule.",
                "summary": "This API calculates the ticket price based on the game schedule.",
                "input_parameters_with_datatype": [
                    {
                        "name": "game_schedule",
                        "description": "the schedule for the team's games",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "ticket_price",
                        "description": "the price for watching the team's games",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the ticket price for a FC Barcelona game."
            },
            {
                "name": "FootballTeamInfo",
                "format": "FootballTeamInfo(team_name) -> team_info",
                "Id": 631,
                "description": "This API is to query the detailed information of the football team.",
                "summary": "This API is to query the detailed information of the football team.",
                "input_parameters_with_datatype": [
                    {
                        "name": "team_name",
                        "description": "the name of the football team",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "team_info",
                        "description": "the detailed information of the football team",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Provide information about the FC Barcelona football team."
            }
        ]
    },
    {
        "Id": 1359,
        "Selected_Functions": [
            {
                "name": "ActivityPlanning",
                "format": "ActivityPlanning(hotel_reservation, destination) -> activity_plan",
                "Id": 715,
                "description": "This API is to plan activities.",
                "summary": "This API is to plan activities.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_reservation",
                        "description": "Information of the hotel reservation",
                        "datatype": "Object"
                    },
                    {
                        "name": "destination",
                        "description": "The destination of the trip",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "activity_plan",
                        "description": "Plan of activities at the destination",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find flight options to Tokyo for the travel date of 15th September."
            },
            {
                "name": "HotelBooking",
                "format": "HotelBooking(destination, check_in_date, check_out_date) -> hotel_booking",
                "Id": 428,
                "description": "This API books a hotel in the specific location for the given dates.",
                "summary": "This API books a hotel in the specific location for the given dates.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination city",
                        "datatype": "String"
                    },
                    {
                        "name": "check_in_date",
                        "description": "the check-in date",
                        "datatype": "Date"
                    },
                    {
                        "name": "check_out_date",
                        "description": "the check-out date",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotel_booking",
                        "description": "the booking details of the hotel",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a hotel in Tokyo for the stay starting from 15th September."
            },
            {
                "name": "FlightDetails",
                "format": "FlightDetails(destination, departure_date) -> flight_info",
                "Id": 714,
                "description": "This API is to get the flight details.",
                "summary": "This API is to get the flight details.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "The destination of the trip",
                        "datatype": "String"
                    },
                    {
                        "name": "departure_date",
                        "description": "The departure date of the flight",
                        "datatype": "Date"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight_info",
                        "description": "Information of the flight to the destination on the specified date",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Plan activities to do in Tokyo during the visit starting from 15th September."
            }
        ]
    },
    {
        "Id": 1367,
        "Selected_Functions": [
            {
                "name": "RestaurantRecommendation",
                "format": "RestaurantRecommendation(venue) -> restaurant_list",
                "Id": 401,
                "description": "This API recommends restaurants based on the venue.",
                "summary": "This API recommends restaurants based on the venue.",
                "input_parameters_with_datatype": [
                    {
                        "name": "venue",
                        "description": "the name of the venue",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_list",
                        "description": "a list of recommended restaurants",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Recommend a restaurant in Tokyo, considering the user's interest in seeing a sumo match."
            },
            {
                "name": "HotelReservation",
                "format": "HotelReservation(city, date) -> hotelInfo",
                "Id": 639,
                "description": "This API returns information about hotel reservations in a certain city on a particular date.",
                "summary": "This API returns information about hotel reservations in a certain city on a particular date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the hotel reservation",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "hotelInfo",
                        "description": "information about hotel reservations",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Confirm the user's stay at the Park Hyatt in Tokyo for next weekend."
            },
            {
                "name": "EventSuggestions",
                "format": "EventSuggestions(city, date) -> eventDetails",
                "Id": 640,
                "description": "This API provides suggestions for events happening in a certain city on a specific date.",
                "summary": "This API provides suggestions for events happening in a certain city on a specific date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the event suggestions",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "eventDetails",
                        "description": "suggestions for events happening in the city",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Suggest events related to sumo matches happening in Tokyo next weekend."
            }
        ]
    },
    {
        "Id": 1380,
        "Selected_Functions": [
            {
                "name": "WeatherImpactOnPopulation",
                "format": "WeatherImpactOnPopulation(weather, population) -> impact",
                "Id": 644,
                "description": "This API estimates the impact of weather conditions on the population.",
                "summary": "This API estimates the impact of weather conditions on the population.",
                "input_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the current weather conditions",
                        "datatype": "String"
                    },
                    {
                        "name": "population",
                        "description": "the population of the city",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "impact",
                        "description": "the estimated impact of weather conditions on the population",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Get the current weather information for Tokyo."
            },
            {
                "name": "GetWeather",
                "format": "GetWeather(city) -> weather",
                "Id": 53,
                "description": "This API retrieves the weather information for a given city.",
                "summary": "This API retrieves the weather information for a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "weather",
                        "description": "the weather information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Retrieve the population data for Tokyo."
            },
            {
                "name": "CityPopulation",
                "format": "CityPopulation(city) -> population",
                "Id": 643,
                "description": "This API retrieves the population of a given city.",
                "summary": "This API retrieves the population of a given city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "population",
                        "description": "the population of the city",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Analyze the impact of the current weather on the population in Tokyo."
            }
        ]
    },
    {
        "Id": 1425,
        "Selected_Functions": [
            {
                "name": "SearchFare",
                "format": "SearchFare(src, dest, date) -> fare_id",
                "Id": 673,
                "description": "This API is used to search for the fare between source and destination on a particular date.",
                "summary": "This API is used to search for the fare between source and destination on a particular date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "src",
                        "description": "the source location",
                        "datatype": "String"
                    },
                    {
                        "name": "dest",
                        "description": "the destination location",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of travel",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "fare_id",
                        "description": "the ID of the fare",
                        "datatype": "Integer"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Search for the fare of a flight from New York to Los Angeles on 13th June."
            },
            {
                "name": "CheckDiscount",
                "format": "CheckDiscount(coupon, fare_id) -> discount_amount",
                "Id": 674,
                "description": "This API is used to check the discount available on a particular fare using a coupon.",
                "summary": "This API is used to check the discount available on a particular fare using a coupon.",
                "input_parameters_with_datatype": [
                    {
                        "name": "coupon",
                        "description": "the coupon code",
                        "datatype": "String"
                    },
                    {
                        "name": "fare_id",
                        "description": "the ID of the fare",
                        "datatype": "Integer"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "discount_amount",
                        "description": "the amount of discount",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Check the discount available with the code 'SUMMER50'."
            },
            {
                "name": "CalculateFinalFare",
                "format": "CalculateFinalFare(fare_id, discount_amount) -> final_fare",
                "Id": 675,
                "description": "This API calculates the final fare after applying the discount.",
                "summary": "This API calculates the final fare after applying the discount.",
                "input_parameters_with_datatype": [
                    {
                        "name": "fare_id",
                        "description": "the ID of the fare",
                        "datatype": "Integer"
                    },
                    {
                        "name": "discount_amount",
                        "description": "the amount of discount",
                        "datatype": "Float"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "final_fare",
                        "description": "the final fare after applying the discount",
                        "datatype": "Float"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Calculate the final fare after applying the discount to the original fare."
            }
        ]
    },
    {
        "Id": 1459,
        "Selected_Functions": [
            {
                "name": "CheckFlights",
                "format": "CheckFlights(source, destination) -> flight",
                "Id": 269,
                "description": "This API checks available flights from source to destination.",
                "summary": "This API checks available flights from source to destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "source",
                        "description": "the source location",
                        "datatype": "String"
                    },
                    {
                        "name": "destination",
                        "description": "the destination location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "flight",
                        "description": "the available flight details",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Locate a flight from Chicago to Tokyo."
            },
            {
                "name": "BookHotel",
                "format": "BookHotel(hotel_name, date) -> booking_status",
                "Id": 36,
                "description": "This API books a hotel for a certain date.",
                "summary": "This API books a hotel for a certain date.",
                "input_parameters_with_datatype": [
                    {
                        "name": "hotel_name",
                        "description": "the name of the hotel",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking_status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Book a hotel in Tokyo."
            },
            {
                "name": "PlanItinerary",
                "format": "PlanItinerary(location, interests) -> itinerary",
                "Id": 270,
                "description": "This API plans an itinerary based on the location and the user's interests.",
                "summary": "This API plans an itinerary based on the location and the user's interests.",
                "input_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location for the itinerary",
                        "datatype": "String"
                    },
                    {
                        "name": "interests",
                        "description": "the user's interests",
                        "datatype": "String"
                    },
                    {
                        "name": "flight",
                        "description": "the flight details",
                        "datatype": "Object"
                    },
                    {
                        "name": "hotel",
                        "description": "the hotel details",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "itinerary",
                        "description": "the planned itinerary",
                        "datatype": "Object"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Create a schedule in Tokyo that focuses on technology-related activities and attractions."
            }
        ]
    },
    {
        "Id": 1509,
        "Selected_Functions": [
            {
                "name": "GetRestaurant",
                "format": "GetRestaurant(city,cuisine) -> restaurant_name",
                "Id": 112,
                "description": "This API the name of the restaurant recommended based on city and cuisine.",
                "summary": "This API the name of the restaurant recommended based on city and cuisine.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the city to search for restaurants",
                        "datatype": "String"
                    },
                    {
                        "name": "cuisine",
                        "description": "the cuisine to search for restaurants",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the recommended restaurant",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Find an Italian restaurant in New York City that can accommodate 3 people for dinner at 8 pm."
            },
            {
                "name": "GetDirections",
                "format": "GetDirections(destination) -> direction_information",
                "Id": 566,
                "description": "This API is to generate directions to a specified destination.",
                "summary": "This API is to generate directions to a specified destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination to get directions to",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "direction_information",
                        "description": "information about the directions",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Provide directions from Manhattan to the selected Italian restaurant."
            },
            {
                "name": "BookTable",
                "format": "BookTable(restaurant_name, date, time) -> booking status",
                "Id": 111,
                "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "restaurant_name",
                        "description": "the name of the restaurant",
                        "datatype": "String"
                    },
                    {
                        "name": "date",
                        "description": "the date of the booking",
                        "datatype": "Date"
                    },
                    {
                        "name": "time",
                        "description": "the time of the booking",
                        "datatype": "Time"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "booking status",
                        "description": "the status of the booking",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Book a table for 3 people at the selected Italian restaurant for 8 pm."
            }
        ]
    },
    {
        "Id": 1532,
        "Selected_Functions": [
            {
                "name": "RetrieveLocalTrafficInfo",
                "format": "RetrieveLocalTrafficInfo(city) -> traffic_info",
                "Id": 801,
                "description": "This API is to get real-time traffic information on the roads of a specific city.",
                "summary": "This API is to get real-time traffic information on the roads of a specific city.",
                "input_parameters_with_datatype": [
                    {
                        "name": "city",
                        "description": "the name of the city",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "traffic_info",
                        "description": "the real-time traffic information",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve current traffic information between Times Square and Wall Street."
            },
            {
                "name": "CalculateTravelTime",
                "format": "CalculateTravelTime(flightTimes, trafficDelay) -> travelTime",
                "Id": 25,
                "description": "This API is to estimate the travel time accounting for flight times and possible traffic delays.",
                "summary": "This API is to estimate the travel time accounting for flight times and possible traffic delays.",
                "input_parameters_with_datatype": [
                    {
                        "name": "flightTimes",
                        "description": "the departure and arrival times for flights",
                        "datatype": "List"
                    },
                    {
                        "name": "trafficDelay",
                        "description": "the current traffic scenario and any possible delays",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "travelTime",
                        "description": "the estimated travel time",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Calculate the travel time from Times Square to Wall Street considering the current traffic conditions."
            },
            {
                "name": "FetchNextBus",
                "format": "FetchNextBus(travel_time, bus_route) -> bus_info",
                "Id": 802,
                "description": "This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.",
                "summary": "This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.",
                "input_parameters_with_datatype": [
                    {
                        "name": "travel_time",
                        "description": "the calculated travel time",
                        "datatype": "Time"
                    },
                    {
                        "name": "bus_route",
                        "description": "the specific bus route",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "bus_info",
                        "description": "the timing of the next bus on the specific route",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Fetch the next available bus schedule from Times Square to Wall Street."
            }
        ]
    },
    {
        "Id": 1535,
        "Selected_Functions": [
            {
                "name": "CheckTraffic",
                "format": "CheckTraffic(destination) -> traffic_condition",
                "Id": 272,
                "description": "This API checks the current traffic condition to a specific destination.",
                "summary": "This API checks the current traffic condition to a specific destination.",
                "input_parameters_with_datatype": [
                    {
                        "name": "destination",
                        "description": "the destination to check traffic condition",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "traffic_condition",
                        "description": "the current traffic condition to the destination",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 1,
                "task_description": "Retrieve the user's next appointment from the calendar."
            },
            {
                "name": "GetEventCalendar",
                "format": "GetEventCalendar(user_id) -> event",
                "Id": 806,
                "description": "This API retrieves the user's event calendar based on their user id.",
                "summary": "This API retrieves the user's event calendar based on their user id.",
                "input_parameters_with_datatype": [
                    {
                        "name": "user_id",
                        "description": "the id of the user",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "event",
                        "description": "the user's event calendar",
                        "datatype": "List"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 2,
                "task_description": "Get the location of the next appointment."
            },
            {
                "name": "FindTravelTime",
                "format": "FindTravelTime(start_location, end_location) -> travel_time",
                "Id": 807,
                "description": "This API finds the estimated travel time between two locations.",
                "summary": "This API finds the estimated travel time between two locations.",
                "input_parameters_with_datatype": [
                    {
                        "name": "start_location",
                        "description": "the starting location",
                        "datatype": "String"
                    },
                    {
                        "name": "end_location",
                        "description": "the ending location",
                        "datatype": "String"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "travel_time",
                        "description": "the estimated travel time",
                        "datatype": "Time"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 3,
                "task_description": "Find the travel time to the location of the next appointment."
            },
            {
                "name": "GetLocation",
                "format": "GetLocation(product) -> location",
                "Id": 677,
                "description": "This API is to fetch the location where the product is available.",
                "summary": "This API is to fetch the location where the product is available.",
                "input_parameters_with_datatype": [
                    {
                        "name": "product",
                        "description": "the product details",
                        "datatype": "Object"
                    }
                ],
                "output_parameters_with_datatype": [
                    {
                        "name": "location",
                        "description": "the location where the product is available",
                        "datatype": "String"
                    }
                ],
                "url": null,
                "method": null,
                "task_num": 4,
                "task_description": "Check the current traffic conditions for the route to the next appointment."
            }
        ]
    }
]