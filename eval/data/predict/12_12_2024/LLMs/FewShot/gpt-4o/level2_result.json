[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: playlistname2id\n        template: playlistname2id\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getplaylistid\n        template: getplaylistid\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getplaylistid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.getplaylistid.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: songname2id\n        template: songname2id\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - songname2id\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtimes\n        template: getshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ inputs.parameters.cinema }}'\n          - name: showtimes\n            value: '{{ tasks.getshowtimes.result }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.getshowtimes.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getshowtimes\n    http:\n      url: \"http://example.com/api/movieshowtimes\"\n      method: \"GET\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: checkavailability\n    http:\n      url: \"http://example.com/api/ticketavailability\"\n      method: \"GET\"\n      parameters:\n      - name: cinema\n        value: '{{ inputs.parameters.cinema }}'\n      - name: showtimes\n        value: '{{ tasks.getshowtimes.result }}'\n  - name: booktickets\n    http:\n      url: \"http://example.com/api/booktickets\"\n      method: \"POST\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: showtime\n        value: '{{ tasks.getshowtimes.result }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-459-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'"}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-64-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2studentid\n        template: email2studentid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: coursename2subjectid\n        template: coursename2subjectid\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - email2studentid\n        - coursename2subjectid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.email2studentid.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2subjectid.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: studentname2id\n        template: studentname2id\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ tasks.email2username.result }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.studentname2id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getconcerts\n        template: getconcerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - getconcerts\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.getconcerts.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: getconcerts\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: http://example.com/api/musicconcerts\n      method: GET\n      parameters:\n      - name: venue\n        value: '{{ inputs.parameters.venue }}'\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: http://example.com/api/bookeventticket\n      method: POST\n      parameters:\n      - name: event_ID\n        value: '{{ inputs.parameters.event_ID }}'\n      - name: venue_ID\n        value: '{{ inputs.parameters.venue_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovietheaters\n        template: getmovietheaters\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: ticketavailability\n        template: ticketavailability\n        dependencies:\n        - getmovietheaters\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ tasks.getmovietheaters.result }}'\n          - name: showtimes\n            value: '{{ inputs.parameters.showtimes }}'\n      - name: buymovieticket\n        template: buymovieticket\n        dependencies:\n        - ticketavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: theater_name\n            value: '{{ tasks.getmovietheaters.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: getmovietheaters\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/getmovietheaters\"\n      method: \"GET\"\n  - name: ticketavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: \"http://example.com/ticketavailability\"\n      method: \"GET\"\n  - name: buymovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: theater_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/buymovieticket\"\n      method: \"POST\""}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemid\n        template: getitemid\n        arguments:\n          parameters:\n          - name: item_name\n            value: '{{ inputs.parameters.item_name }}'\n      - name: getsupplierid\n        template: getsupplierid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{ inputs.parameters.supplier_name }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - getitemid\n        - getsupplierid\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ tasks.getitemid.result }}'\n          - name: supplier_ID\n            value: '{{ tasks.getsupplierid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-86-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{ inputs.parameters.customer_name }}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: addtocart\n        template: addtocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'"}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: travelplan\n        template: travelplan\n        dependencies:\n        - getweather\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: restaurant\n            value: '{{ tasks.getrestaurant.result }}'"}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: suggestdiningoptions\n    http:\n      url: \"http://example.com/suggestdiningoptions\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"localBudget\": \"{{ inputs.parameters.localBudget }}\",\n          \"location\": \"{{ inputs.parameters.location }}\"\n        }\n    outputs:\n      parameters:\n      - name: diningOptions\n        valueFrom:\n          jsonPath: \"$.diningOptions\"\n  arguments:\n    parameters:\n    - name: localBudget\n      value: '300'\n    - name: location\n      value: 'Paris'"}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone12-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{ inputs.parameters.customer_name }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getproductid\n        - getcustomerid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-206-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: rentmovie\n        template: rentmovie\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.getmovieid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: songnametoid\n        template: songnametoid\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - getuserid\n        - songnametoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songnametoid.result }}'\n  - name: getuserid\n    http:\n      url: http://example.com/getuserid\n      method: GET\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: songnametoid\n    http:\n      url: http://example.com/songnametoid\n      method: GET\n      parameters:\n      - name: song_name\n        value: '{{ inputs.parameters.song_name }}'\n  - name: playsong\n    http:\n      url: http://example.com/playsong\n      method: POST\n      parameters:\n      - name: user_ID\n        value: '{{ tasks.getuserid.result }}'\n      - name: song_ID\n        value: '{{ tasks.songnametoid.result }}'"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - findpopulardishes\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.findpopulardishes.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.getrestaurant.result }}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/findpopulardishes\"\n      method: \"GET\"\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: \"http://example.com/getrestaurant\"\n      method: \"GET\"\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: \"http://example.com/foodingredients\"\n      method: \"GET\""}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getactivities\n        template: getactivities\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - getweather\n        - getactivities\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.getweather.result }}'\n          - name: activities\n            value: '{{ tasks.getactivities.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.getrestaurant.result }}'"}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-share-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getreview\n        template: getreview\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{ inputs.parameters.bookname }}'\n      - name: sharereview\n        template: sharereview\n        dependencies:\n        - getreview\n        arguments:\n          parameters:\n          - name: review\n            value: '{{ tasks.getreview.result }}'\n          - name: social_media_platform\n            value: '{{ inputs.parameters.social_media_platform }}'\n  - name: getreview\n    http:\n      url: \"http://example.com/getreview\"\n      method: \"GET\"\n      parameters:\n      - name: bookname\n        value: '{{ inputs.parameters.bookname }}'\n  - name: sharereview\n    http:\n      url: \"http://example.com/sharereview\"\n      method: \"POST\"\n      parameters:\n      - name: review\n        value: '{{ tasks.getreview.result }}'\n      - name: social_media_platform\n        value: '{{ inputs.parameters.social_media_platform }}'"}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-confirmation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: getappointment\n        template: getappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{ tasks.finddoctor.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - getappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.getappointment.result }}'"}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpurchaseinfo\n        template: getpurchaseinfo\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: productrating\n        template: productrating\n        dependencies:\n        - getpurchaseinfo\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{ tasks.getpurchaseinfo.result }}'\n          - name: number_of_ratings\n            value: '{{ inputs.parameters.number_of_ratings }}'\n  - name: getpurchaseinfo\n    http:\n      url: http://example.com/getpurchaseinfo\n      method: GET\n      parameters:\n      - name: product_id\n        value: '{{ inputs.parameters.product_id }}'\n  - name: productrating\n    http:\n      url: http://example.com/productrating\n      method: GET\n      parameters:\n      - name: purchase_info\n        value: '{{ inputs.parameters.purchase_info }}'\n      - name: number_of_ratings\n        value: '{{ inputs.parameters.number_of_ratings }}'"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: cinema-finder-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findnearestcinema\n    http:\n      url: http://example.com/findnearestcinema\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"movieDetails\": \"{{ inputs.parameters.movieDetails }}\"}'\n    outputs:\n      parameters:\n      - name: cinemaLocation\n        valueFrom:\n          jsonPath: \"$.cinemaLocation\""}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-vegandine-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantinfo\n        template: getrestaurantinfo\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n      - name: getveganfoodlist\n        template: getveganfoodlist\n        arguments:\n          parameters:\n          - name: diet_type\n            value: '{{ inputs.parameters.diet_type }}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - getrestaurantinfo\n        - getveganfoodlist\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ tasks.getrestaurantinfo.result }}'\n          - name: food_list\n            value: '{{ tasks.getveganfoodlist.result }}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - bestorder\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.bestorder.result }}'\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcoachellacity\n        template: getcoachellacity\n      - name: getcoachelladate\n        template: getcoachelladate\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcoachellacity\n        - getcoachelladate\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcoachellacity.result }}'\n          - name: date\n            value: '{{ tasks.getcoachelladate.result }}'"}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-library-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: booknametoid\n        template: booknametoid\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n      - name: addbooktoauthor\n        template: addbooktoauthor\n        dependencies:\n        - getauthorid\n        - booknametoid\n        arguments:\n          parameters:\n          - name: author_ID\n            value: '{{ tasks.getauthorid.result }}'\n          - name: book_ID\n            value: '{{ tasks.booknametoid.result }}'\n  - name: getauthorid\n    http:\n      url: http://example.com/get-author-id\n      method: GET\n      parameters:\n      - name: bookTitle\n        value: '{{ inputs.parameters.bookTitle }}'\n  - name: booknametoid\n    http:\n      url: http://example.com/book-name-to-id\n      method: GET\n      parameters:\n      - name: book_name\n        value: '{{ inputs.parameters.book_name }}'\n  - name: addbooktoauthor\n    http:\n      url: http://example.com/add-book-to-author\n      method: POST\n      parameters:\n      - name: author_ID\n        value: '{{ inputs.parameters.author_ID }}'\n      - name: book_ID\n        value: '{{ inputs.parameters.book_ID }}'"}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1112-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflightavailability\n        template: checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_code\n            value: '{{ inputs.parameters.flight_code }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.checkflightavailability.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recipe-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recipename2id\n        template: recipename2id\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{ inputs.parameters.recipe_name }}'\n      - name: getingredients\n        template: getingredients\n        dependencies:\n        - recipename2id\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{ tasks.recipename2id.result }}'\n      - name: getrecipe\n        template: getrecipe\n        dependencies:\n        - recipename2id\n        - getingredients\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{ tasks.recipename2id.result }}'\n          - name: ingredient_ID\n            value: '{{ tasks.getingredients.result }}'\n  - name: recipename2id\n    inputs:\n      parameters:\n      - name: recipe_name\n    http:\n      url: http://example.com/recipename2id\n      method: POST\n      body: '{\"recipe_name\": \"{{ inputs.parameters.recipe_name }}\"}'\n  - name: getingredients\n    inputs:\n      parameters:\n      - name: recipe_ID\n    http:\n      url: http://example.com/getingredients\n      method: POST\n      body: '{\"recipe_ID\": \"{{ inputs.parameters.recipe_ID }}\"}'\n  - name: getrecipe\n    inputs:\n      parameters:\n      - name: recipe_ID\n      - name: ingredient_ID\n    http:\n      url: http://example.com/getrecipe\n      method: POST\n      body: '{\"recipe_ID\": \"{{ inputs.parameters.recipe_ID }}\", \"ingredient_ID\": \"{{ inputs.parameters.ingredient_ID }}\"}'"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-463-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{ tasks.getauthordetails.result }}'\n          - name: author_ID\n            value: '{{ tasks.getauthordetails.result }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - locatebook\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: ISBN\n            value: '{{ tasks.locatebook.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: takebook\n        template: takebook\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ tasks.email2username.result }}'\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n  - name: email2username\n    http:\n      url: \"http://example.com/api/email2username\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"email\": \"{{ inputs.parameters.email }}\"}'\n  - name: takebook\n    http:\n      url: \"http://example.com/api/takebook\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_name\": \"{{ tasks.email2username.result }}\", \"book_title\": \"{{ inputs.parameters.book_title }}\"}'\n  arguments:\n    parameters:\n    - name: email\n      value: 'mike@gmail.com'\n    - name: book_title\n      value: 'The Catcher in the Rye'"}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalweather\n        template: getlocalweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: generateweatherreport\n        template: generateweatherreport\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{ tasks.getlocalweather.result }}'\n  - name: getlocalweather\n    http:\n      url: \"http://example.com/getlocalweather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: generateweatherreport\n    http:\n      url: \"http://example.com/generateweatherreport\"\n      method: \"POST\"\n      parameters:\n      - name: weather_data\n        value: '{{ inputs.parameters.weather_data }}'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: getlocalweather\n        template: getlocalweather\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.fetchcity.result }}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getlocalweather.result }}'\n          - name: population\n            value: '{{ inputs.parameters.population }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getlocalweather.result }}'"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcinema\n        template: getcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: ticketavailability\n        template: ticketavailability\n        dependencies:\n        - getcinema\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ tasks.getcinema.result }}'\n          - name: showtimes\n            value: '{{ inputs.parameters.showtimes }}'\n      - name: bookmovietickets\n        template: bookmovietickets\n        dependencies:\n        - ticketavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getcinema\n    inputs:\n      parameters:\n      - name: city\n      - name: movie\n    http:\n      url: http://example.com/getcinema\n      method: GET\n  - name: ticketavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: http://example.com/ticketavailability\n      method: GET\n  - name: bookmovietickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: http://example.com/bookmovietickets\n      method: POST"}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-478-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2bookid\n        template: title2bookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2bookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2bookid.result }}'\n      - name: getduedate\n        template: getduedate\n        dependencies:\n        - borrowbook\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2bookid.result }}'"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2userid\n        template: username2userid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2bookid\n        template: title2bookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - username2userid\n        - title2bookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2userid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2bookid.result }}'\n          - name: due_date\n            value: '{{ inputs.parameters.due_date }}'"}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: date\n            value: '{{ inputs.parameters.check_in_date }}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: number_of_rooms\n            value: '1'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'"}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: return-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: isbn2title\n        template: isbn2title\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: returnbook\n        template: returnbook\n        dependencies:\n        - isbn2title\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: book_name\n            value: '{{ tasks.isbn2title.result }}'"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - getuserid\n        - getproductid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: getuserid\n    http:\n      url: http://example.com/getuserid\n      method: GET\n      parameters:\n      - name: email\n        value: '{{ inputs.parameters.email }}'\n  - name: getproductid\n    http:\n      url: http://example.com/getproductid\n      method: GET\n      parameters:\n      - name: product_name\n        value: '{{ inputs.parameters.product_name }}'\n  - name: purchaseitem\n    http:\n      url: http://example.com/purchaseitem\n      method: POST\n      parameters:\n      - name: user_ID\n        value: '{{ tasks.getuserid.result }}'\n      - name: product_ID\n        value: '{{ tasks.getproductid.result }}'\n      - name: quantity\n        value: '{{ inputs.parameters.quantity }}'"}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-793-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: movienametoid\n        template: movienametoid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - movienametoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.movienametoid.result }}'"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-135-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: addbooktoreadinglist\n        template: addbooktoreadinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n  - name: addbooktoreadinglist\n    http:\n      url: \"http://example.com/api/addbooktoreadinglist\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_name\": \"{{ inputs.parameters.user_name }}\",\n          \"book_title\": \"{{ inputs.parameters.book_title }}\"\n        }\n    outputs:\n      parameters:\n      - name: reading_list\n        valueFrom:\n          jsonPath: \"$.reading_list\""}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktable\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: booktable\n    http:\n      url: \"http://example.com/booktable\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{ inputs.parameters.restaurant_name }}\",\n          \"date\": \"{{ inputs.parameters.date }}\",\n          \"time\": \"{{ inputs.parameters.time }}\"\n        }\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: 'Red Lobster'\n    - name: date\n      value: '2023-05-05'\n    - name: time\n      value: '18:00'"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthordetails.result }}'\n      - name: schedulediscussion\n        template: schedulediscussion\n        dependencies:\n        - checkauthoravailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthordetails.result }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: getauthordetails\n    inputs:\n      parameters:\n      - name: bookTitle\n    container:\n      image: author-details-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"author_name\\\": \\\"Author Name\\\"}'\"]\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: author-availability-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"availability_status\\\": \\\"Available\\\"}'\"]\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: schedule-discussion-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"schedule_status\\\": \\\"Scheduled\\\"}'\"]"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.checkweather.result }}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - outfitrecommender\n        arguments:\n          parameters:\n          - name: event\n            value: '{{ inputs.parameters.event }}'\n          - name: outfit\n            value: '{{ tasks.outfitrecommender.result }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: suggestapparel\n        template: suggestapparel\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'\n      - name: recommendattire\n        template: recommendattire\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: clothingsuggestion\n        template: clothingsuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: getclothing\n        template: getclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrange-transportation\n        template: arrange-transportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: event-suggestions\n        template: event-suggestions\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: find-hotel\n        template: find-hotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: trip-planner\n        template: trip-planner\n        dependencies:\n        - arrange-transportation\n        - event-suggestions\n        - find-hotel\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.arrange-transportation.result }}'\n          - name: activities\n            value: '{{ tasks.event-suggestions.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.find-hotel.result }}'\n  - name: arrange-transportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/arrange-transportation\"\n      method: \"POST\"\n  - name: event-suggestions\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/event-suggestions\"\n      method: \"POST\"\n  - name: find-hotel\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/find-hotel\"\n      method: \"POST\"\n  - name: trip-planner\n    inputs:\n      parameters:\n      - name: weather_forecast\n      - name: activities\n      - name: suggested_restaurant\n    http:\n      url: \"http://example.com/trip-planner\"\n      method: \"POST\"\n  arguments:\n    parameters:\n    - name: city\n      value: 'Tokyo'\n    - name: date\n      value: '2023-09-15'"}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findromancemovie\n        template: findromancemovie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'romance'\n      - name: getshowtimes\n        template: getshowtimes\n        dependencies:\n        - findromancemovie\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ tasks.findromancemovie.result }}'\n          - name: city\n            value: 'San Francisco'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.findromancemovie.result }}'\n          - name: showtime\n            value: '{{ tasks.getshowtimes.result }}'\n          - name: number_of_tickets\n            value: '4'"}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-565-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: bookstore_location\n            value: '{{ tasks.findbookstore.result }}'\n\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findnearestbookstore\n      method: GET\n\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    http:\n      url: http://example.com/findbookstore\n      method: GET\n\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: bookstore_location\n    http:\n      url: http://example.com/checkavailability\n      method: GET"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-514-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocaltheater\n        template: getlocaltheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentplays\n        template: getcurrentplays\n        dependencies:\n        - getlocaltheater\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{ tasks.getlocaltheater.result }}'\n      - name: getplayreviews\n        template: getplayreviews\n        dependencies:\n        - getcurrentplays\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{ tasks.getcurrentplays.result }}'"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-494-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalmusicstore\n        template: getlocalmusicstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentalbums\n        template: getcurrentalbums\n        dependencies:\n        - getlocalmusicstore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ tasks.getlocalmusicstore.result }}'\n      - name: getalbumreviews\n        template: getalbumreviews\n        dependencies:\n        - getcurrentalbums\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{ tasks.getcurrentalbums.result }}'"}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-dumplings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercuisinepreference\n        template: getusercuisinepreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - getusercuisinepreference\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ tasks.getusercuisinepreference.result }}'\n      - name: foodorder\n        template: foodorder\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: restaurant_ID\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: food_item\n            value: 'dumplings'"}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-decision-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstockprice\n        template: getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n      - name: predictfuturestockprice\n        template: predictfuturestockprice\n        dependencies:\n        - getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n      - name: suggeststockaction\n        template: suggeststockaction\n        dependencies:\n        - predictfuturestockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n          - name: futurePrice\n            value: '{{ tasks.predictfuturestockprice.result }}'"}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-savings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: trackspending\n        template: trackspending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{ inputs.parameters.username }}'\n      - name: calculatesavings\n        template: calculatesavings\n        dependencies:\n        - trackspending\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{ tasks.trackspending.result }}'\n      - name: suggestinvestment\n        template: suggestinvestment\n        dependencies:\n        - calculatesavings\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{ tasks.calculatesavings.result }}'"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: foodbydiettype\n        template: foodbydiettype\n        arguments:\n          parameters:\n          - name: diet_type\n            value: '{{ inputs.parameters.diet_type }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - findpopulardishes\n        - foodbydiettype\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.findpopulardishes.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/findpopulardishes\"\n      method: \"GET\"\n  - name: foodbydiettype\n    inputs:\n      parameters:\n      - name: diet_type\n    http:\n      url: \"http://example.com/foodbydiettype\"\n      method: \"GET\"\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: \"http://example.com/suggestfood\"\n      method: \"GET\""}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: filterrestaurantbydietaryrestrictions\n        template: filterrestaurantbydietaryrestrictions\n        dependencies:\n        - suggestdiningoptions\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.suggestdiningoptions.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: recommenddish\n        template: recommenddish\n        dependencies:\n        - filterrestaurantbydietaryrestrictions\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.filterrestaurantbydietaryrestrictions.result }}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - recommenddish\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.recommenddish.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurantbydietaryrestrictions.result }}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - foodingredients\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.recommenddish.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurantbydietaryrestrictions.result }}'\n  - name: suggestdiningoptions\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    http:\n      url: http://example.com/suggestdiningoptions\n      method: POST\n  - name: filterrestaurantbydietaryrestrictions\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterrestaurantbydietaryrestrictions\n      method: POST\n  - name: recommenddish\n    inputs:\n      parameters:\n      - name: menu\n    http:\n      url: http://example.com/recommenddish\n      method: POST\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: http://example.com/foodingredients\n      method: POST\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: http://example.com/orderfood\n      method: POST"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: movieratings\n        template: movieratings\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.getmovieratings.result }}'\n      - name: averagerating\n        template: averagerating\n        dependencies:\n        - movieratings\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{ tasks.movieratings.result }}'"}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-584-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: movierating\n        template: movierating\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.getmovieratings.result }}'\n      - name: highestrating\n        template: highestrating\n        dependencies:\n        - movierating\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{ tasks.movierating.result }}'"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: upgrade-seat-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: seatselection\n        template: seatselection\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.searchflight.result }}'\n      - name: upgradeavailability\n        template: upgradeavailability\n        dependencies:\n        - seatselection\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{ tasks.seatselection.result }}'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-355-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.startPoint }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.endPoint }}'\n      - name: seatclassavailability\n        template: seatclassavailability\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.findflight.result }}'\n      - name: bestseatclass\n        template: bestseatclass\n        dependencies:\n        - seatclassavailability\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{ tasks.seatclassavailability.result }}'\n  - name: findflight\n    http:\n      url: \"http://example.com/findflight\"\n      method: \"POST\"\n      body: \"{\\\"startPoint\\\": \\\"{{ inputs.parameters.startPoint }}\\\", \\\"endPoint\\\": \\\"{{ inputs.parameters.endPoint }}\\\"}\"\n  - name: seatclassavailability\n    http:\n      url: \"http://example.com/seatclassavailability\"\n      method: \"POST\"\n      body: \"{\\\"flight_id\\\": \\\"{{ tasks.findflight.result }}\\\"}\"\n  - name: bestseatclass\n    http:\n      url: \"http://example.com/bestseatclass\"\n      method: \"POST\"\n      body: \"{\\\"seat_classes\\\": \\\"{{ tasks.seatclassavailability.result }}\\\"}\"\n  inputs:\n    parameters:\n    - name: startPoint\n    - name: endPoint"}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-565-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbookstore\n        template: findbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'\n      - name: bookstorelocator\n        template: bookstorelocator\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-999-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemprice\n        template: getitemprice\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{ inputs.parameters.item_id }}'\n      - name: getconversionrate\n        template: getconversionrate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'EUR'\n          - name: to_currency\n            value: 'JPY'\n      - name: calculateprice\n        template: calculateprice\n        dependencies:\n        - getitemprice\n        - getconversionrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getitemprice.result }}'\n          - name: conversion_rate\n            value: '{{ tasks.getconversionrate.result }}'\n  - name: getitemprice\n    http:\n      url: http://example.com/api/itemprice\n      method: GET\n      parameters:\n      - name: item_id\n        value: '{{ inputs.parameters.item_id }}'\n  - name: getconversionrate\n    http:\n      url: http://example.com/api/currencyconversion\n      method: GET\n      parameters:\n      - name: from_currency\n        value: 'EUR'\n      - name: to_currency\n        value: 'JPY'\n  - name: calculateprice\n    http:\n      url: http://example.com/api/calculateprice\n      method: POST\n      parameters:\n      - name: price\n        value: '{{ tasks.getitemprice.result }}'\n      - name: conversion_rate\n        value: '{{ tasks.getconversionrate.result }}'"}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookdetails\n        template: getbookdetails\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{ inputs.parameters.bookname }}'\n      - name: getauthordata\n        template: getauthordata\n        arguments:\n          parameters:\n          - name: authorname\n            value: '{{ inputs.parameters.authorname }}'\n      - name: reviewgenerator\n        template: reviewgenerator\n        dependencies:\n        - getbookdetails\n        - getauthordata\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{ tasks.getbookdetails.result }}'\n          - name: authorData\n            value: '{{ tasks.getauthordata.result }}'"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-night-dinner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{ tasks.recommendreataurant.result }}'\n          - name: partySize\n            value: '{{ inputs.parameters.partySize }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: recommendrestaurant\n    http:\n      url: http://restaurant-recommendation-api/recommend\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n  - name: bookreservation\n    http:\n      url: http://book-reservation-api/book\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"restaurantname\": \"{{ tasks.recommendreataurant.result }}\", \"partySize\": \"{{ inputs.parameters.partySize }}\", \"time\": \"{{ inputs.parameters.time }}\"}'\n  arguments:\n    parameters:\n    - name: venue\n      value: 'Harry Potter Cinema'\n    - name: partySize\n      value: '8'\n    - name: time\n      value: '18:00'"}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcountrytaxrate\n        template: getcountrytaxrate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: getcarinfo\n        template: getcarinfo\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{ inputs.parameters.car_name }}'\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: calculatecarcost\n        template: calculatecarcost\n        dependencies:\n        - getcountrytaxrate\n        - getcarinfo\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getcarinfo.result.price }}'\n          - name: tax_rate\n            value: '{{ tasks.getcountrytaxrate.result }}'"}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ inputs.parameters.food_preference }}'\n      - name: cuisinerecommendations\n        template: cuisinerecommendations\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: review_report\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - cuisinerecommendations\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: food_list\n            value: '{{ tasks.cuisinerecommendations.result }}'"}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovietheaters\n        template: getmovietheaters\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: bookmovietickets\n        template: bookmovietickets\n        dependencies:\n        - getmovietheaters\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getmovietheaters\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/getmovietheaters\"\n      method: \"GET\"\n  - name: bookmovietickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookmovietickets\"\n      method: \"POST\""}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findroomtype\n        template: findroomtype\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: guestNumber\n            value: '{{ inputs.parameters.guestNumber }}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - findroomtype\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: number_of_rooms\n            value: '{{ tasks.findroomtype.result }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n  - name: findroomtype\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: guestNumber\n    http:\n      url: http://example.com/findroomtype\n      method: GET\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: http://example.com/roombooking\n      method: POST"}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: createappointment\n        template: createappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{ tasks.finddoctor.result }}'\n          - name: patientId\n            value: '{{ inputs.parameters.patientId }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - createappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.createappointment.result }}'"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovietheaters\n        template: getmovietheaters\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: movieshowtimes\n        template: movieshowtimes\n        dependencies:\n        - getmovietheaters\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: ticketavailability\n        template: ticketavailability\n        dependencies:\n        - movieshowtimes\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ tasks.getmovietheaters.result }}'\n          - name: showtimes\n            value: '{{ tasks.movieshowtimes.result }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - ticketavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.movieshowtimes.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getmovietheaters\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/getmovietheaters\"\n      method: \"GET\"\n  - name: movieshowtimes\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: city\n    http:\n      url: \"http://example.com/movieshowtimes\"\n      method: \"GET\"\n  - name: ticketavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: \"http://example.com/ticketavailability\"\n      method: \"GET\"\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\""}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhighlyratedthriller\n        template: findhighlyratedthriller\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findhighlyratedthriller\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.findhighlyratedthriller.result }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-flight-status-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightnumber\n        template: getflightnumber\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ inputs.parameters.person_ID }}'\n      - name: checkflightstatus\n        template: checkflightstatus\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{ tasks.getflightnumber.result }}'\n  - name: getflightnumber\n    http:\n      url: http://example.com/getflightnumber\n      method: GET\n      parameters:\n      - name: person_ID\n        value: '{{ inputs.parameters.person_ID }}'\n  - name: checkflightstatus\n    http:\n      url: http://example.com/checkflightstatus\n      method: GET\n      parameters:\n      - name: flight_number\n        value: '{{ tasks.getflightnumber.result }}'"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gettheater\n        template: gettheater\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: resturantnearcinema\n        template: resturantnearcinema\n        dependencies:\n        - gettheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cinema_name\n            value: '{{ tasks.gettheater.result }}'\n      - name: reservationmaker\n        template: reservationmaker\n        dependencies:\n        - resturantnearcinema\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.resturantnearcinema.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: gettheater\n    http:\n      url: \"http://example.com/gettheater\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"movie_name\": \"{{ inputs.parameters.movie_name }}\"}'\n  - name: resturantnearcinema\n    http:\n      url: \"http://example.com/resturantnearcinema\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"city\": \"{{ inputs.parameters.city }}\", \"cinema_name\": \"{{ tasks.gettheater.result }}\"}'\n  - name: reservationmaker\n    http:\n      url: \"http://example.com/reservationmaker\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"restaurant_name\": \"{{ tasks.resturantnearcinema.result }}\", \"time\": \"{{ inputs.parameters.time }}\"}'\n  arguments:\n    parameters:\n    - name: movie_name\n    - name: city\n    - name: time"}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookpages\n        template: getbookpages\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: readingtime\n        template: readingtime\n        dependencies:\n        - getbookpages\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{ tasks.getbookpages.result }}'"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: OutfitRecommender\n        template: OutfitRecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getroute\n        template: getroute\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ inputs.parameters.destination_location }}'\n      - name: calculatedistances\n        template: calculatedistances\n        arguments:\n          parameters:\n          - name: city_from\n            value: '{{ inputs.parameters.city_from }}'\n          - name: city_to\n            value: '{{ inputs.parameters.city_to }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - calculatedistances\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculatedistances.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    http:\n      url: \"http://example.com/getroute\"\n      method: \"GET\"\n  - name: calculatedistances\n    inputs:\n      parameters:\n      - name: city_from\n      - name: city_to\n    http:\n      url: \"http://example.com/calculatedistances\"\n      method: \"GET\"\n  - name: calculatetime\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    http:\n      url: \"http://example.com/calculatetime\"\n      method: \"GET\""}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchstockdata\n        template: fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{ inputs.parameters.stock_symbol }}'\n      - name: basicdataanalysis\n        template: basicdataanalysis\n        dependencies:\n        - fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{ tasks.fetchstockdata.result }}'\n      - name: generatereport\n        template: generatereport\n        dependencies:\n        - basicdataanalysis\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{ tasks.basicdataanalysis.result }}'\n          - name: template\n            value: '{{ inputs.parameters.template }}'"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - email2userid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: user_email\n    http:\n      url: http://example.com/api/UserEmail2UserId\n      method: POST\n      body: '{\"user_email\": \"{{ inputs.parameters.user_email }}\"}'\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    http:\n      url: http://example.com/api/PurchaseItem\n      method: POST\n      body: '{\"user_ID\": \"{{ inputs.parameters.user_ID }}\", \"product_ID\": \"{{ inputs.parameters.product_ID }}\", \"quantity\": \"{{ inputs.parameters.quantity }}\"}'"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-outfit-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Tokyo\"\n      method: GET\n  - name: suggestoutfit\n    http:\n      url: \"http://outfitapi.com/suggestOutfit\"\n      method: POST\n      body:\n        weather: '{{ inputs.parameters.weather }}'"}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22222-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductprice\n        template: getproductprice\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: getconversionrate\n        template: getconversionrate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'BRL'\n          - name: to_currency\n            value: 'CNY'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - getproductprice\n        - getconversionrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getproductprice.result }}'\n          - name: exchange_rate\n            value: '{{ tasks.getconversionrate.result }}'\n  - name: getproductprice\n    http:\n      url: \"http://example.com/getproductprice\"\n      method: \"GET\"\n      parameters:\n      - name: product_id\n        value: '{{ inputs.parameters.product_id }}'\n  - name: getconversionrate\n    http:\n      url: \"http://example.com/getconversionrate\"\n      method: \"GET\"\n      parameters:\n      - name: from_currency\n        value: 'BRL'\n      - name: to_currency\n        value: 'CNY'\n  - name: calculatecost\n    http:\n      url: \"http://example.com/calculatecost\"\n      method: \"POST\"\n      parameters:\n      - name: price\n        value: '{{ tasks.getproductprice.result }}'\n      - name: exchange_rate\n        value: '{{ tasks.getconversionrate.result }}'"}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findcheapestflight\n        template: findcheapestflight\n        arguments:\n          parameters:\n          - name: flights\n            value: '{{ inputs.parameters.flights }}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - findcheapestflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findcheapestflight.result }}'\n      - name: suggestluggage\n        template: suggestluggage\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: baggage_allowance\n            value: '{{ tasks.checkluggageallowance.result }}'\n          - name: trip_duration\n            value: '{{ inputs.parameters.trip_duration }}'\n      - name: reserveairporttransport\n        template: reserveairporttransport\n        dependencies:\n        - findcheapestflight\n        arguments:\n          parameters:\n          - name: flightDetails\n            value: '{{ tasks.findcheapestflight.result }}'\n          - name: hotelConfirmation\n            value: '{{ inputs.parameters.hotelConfirmation }}'"}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-purchase-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkavailability\n        template: checkavailability\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ inputs.parameters.cinema }}'\n          - name: showtimes\n            value: '{{ inputs.parameters.showtimes }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{ inputs.parameters.book_ID }}'\n          - name: author_ID\n            value: '{{ tasks.getauthordetails.result }}'"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchweather\n        template: fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: searchevents\n        template: searchevents\n        dependencies:\n        - fetchweather\n        arguments:\n          parameters:\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: weather\n            value: '{{ tasks.fetchweather.result }}'\n      - name: bookticket\n        template: bookticket\n        dependencies:\n        - searchevents\n        arguments:\n          parameters:\n          - name: event_id\n            value: '{{ tasks.searchevents.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: fetchweather\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/query\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: \"{{ inputs.parameters.city }}\"\n      - name: date\n        value: \"{{ inputs.parameters.date }}\"\n  - name: searchevents\n    inputs:\n      parameters:\n      - name: date\n      - name: weather\n    http:\n      url: \"http://eventsapi.com/search\"\n      method: \"GET\"\n      parameters:\n      - name: date\n        value: \"{{ inputs.parameters.date }}\"\n      - name: weather\n        value: \"{{ inputs.parameters.weather }}\"\n  - name: bookticket\n    inputs:\n      parameters:\n      - name: event_id\n      - name: number_of_tickets\n    http:\n      url: \"http://ticketsapi.com/book\"\n      method: \"POST\"\n      parameters:\n      - name: event_id\n        value: \"{{ inputs.parameters.event_id }}\"\n      - name: number_of_tickets\n        value: \"{{ inputs.parameters.number_of_tickets }}\""}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: getshowtimes\n        template: getshowtimes\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n          - name: city\n            value: '{{ tasks.findnearestcinema.result }}'"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethoteldetails\n        template: gethoteldetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: restaurantrecommendation\n        template: restaurantrecommendation\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.city }}'\n      - name: reservationbooking\n        template: reservationbooking\n        dependencies:\n        - gethoteldetails\n        - restaurantrecommendation\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ tasks.gethoteldetails.result }}'\n          - name: restaurantLocations\n            value: '{{ tasks.restaurantrecommendation.result }}'"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - dresssuggestion\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: weatherinquiry\n        template: weatherinquiry\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.ip_address }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - weatherinquiry\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.weatherinquiry.result }}'\n  - name: weatherinquiry\n    inputs:\n      parameters:\n      - name: location\n      - name: date\n    http:\n      url: \"http://weatherapi.example.com/inquire\"\n      method: \"GET\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: \"{ 'location': '{{ inputs.parameters.location }}', 'date': '{{ inputs.parameters.date }}' }\"\n  - name: suggestactivity\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: \"http://activityapi.example.com/suggest\"\n      method: \"GET\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: \"{ 'weather': '{{ inputs.parameters.weather }}' }\""}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'\n  - name: getcurrentweather\n    http:\n      url: \"http://weatherapi.com/current?city={{ inputs.parameters.city }}\"\n      method: GET\n  - name: getweatherforecast\n    http:\n      url: \"http://weatherapi.com/forecast?city={{ inputs.parameters.city }}&date={{ inputs.parameters.date }}\"\n      method: GET\n  - name: compareweather\n    http:\n      url: \"http://weatherapi.com/compare\"\n      method: POST\n      body: '{\"current_weather\": \"{{ inputs.parameters.current_weather }}\", \"weather_forecast\": \"{{ inputs.parameters.weather_forecast }}\"}'\n  arguments:\n    parameters:\n    - name: city\n      value: \"New York\"\n    - name: date\n      value: \"{{ inputs.parameters.date }}\""}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'\n  - name: getcurrentweather\n    http:\n      url: \"http://weatherapi.com/current?city={{ inputs.parameters.city }}\"\n      method: GET\n  - name: getweatherforecast\n    http:\n      url: \"http://weatherapi.com/forecast?city={{ inputs.parameters.city }}&date={{ inputs.parameters.date }}\"\n      method: GET\n  - name: compareweather\n    http:\n      url: \"http://compareweatherapi.com/compare\"\n      method: POST\n      body: '{\"current_weather\": \"{{ inputs.parameters.current_weather }}\", \"weather_forecast\": \"{{ inputs.parameters.weather_forecast }}\"}'\n  arguments:\n    parameters:\n    - name: city\n    - name: date"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ inputs.parameters.food_preference }}'\n  - name: findpopulardishes\n    http:\n      url: http://example.com/findpopulardishes\n      method: GET\n  - name: searchrestaurant\n    http:\n      url: http://example.com/searchrestaurant\n      method: GET\n  - name: restaurantsuggestion\n    http:\n      url: http://example.com/restaurantsuggestion\n      method: GET"}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: OutfitRecommender\n        template: OutfitRecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.checkweather.result }}'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - OutfitRecommender\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.OutfitRecommender.result }}'"}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getroute\n        template: getroute\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ inputs.parameters.destination_location }}'\n      - name: findtraveltime\n        template: findtraveltime\n        dependencies:\n        - getroute\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: end_location\n            value: '{{ inputs.parameters.destination_location }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getroute\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.getroute.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n  - name: getroute\n    http:\n      url: \"http://example.com/getroute\"\n      method: \"GET\"\n  - name: findtraveltime\n    http:\n      url: \"http://example.com/findtraveltime\"\n      method: \"GET\"\n  - name: calculatetime\n    http:\n      url: \"http://example.com/calculatetime\"\n      method: \"GET\""}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-steak-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopularsteak\n        template: FindPopularDishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestrestaurant\n        template: RestaurantSuggestion\n        dependencies:\n        - findpopularsteak\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ tasks.findpopularsteak.result }}'"}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-fcbarcelona-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getgameschedule\n        template: getgameschedule\n        arguments:\n          parameters:\n          - name: team\n            value: '{{ inputs.parameters.team }}'\n      - name: ticketprice\n        template: ticketprice\n        dependencies:\n        - getgameschedule\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{ tasks.getgameschedule.result }}'\n  - name: getgameschedule\n    http:\n      url: http://example.com/getgameschedule\n      method: GET\n      parameters:\n      - name: team\n        value: '{{ inputs.parameters.team }}'\n  - name: ticketprice\n    http:\n      url: http://example.com/ticketprice\n      method: GET\n      parameters:\n      - name: game_schedule\n        value: '{{ inputs.parameters.game_schedule }}'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: cityArrival\n            value: '{{ inputs.parameters.cityArrival }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflight\n        - findhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflight.result }}'\n          - name: hotel\n            value: '{{ tasks.findhotel.result }}'\n      - name: findindooractivities\n        template: findindooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: placerecommender\n        template: placerecommender\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: activity_type\n            value: '{{ tasks.findindooractivities.result }}'\n      - name: itineraryplanner\n        template: itineraryplanner\n        dependencies:\n        - booktrip\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.booktrip.result }}'\n          - name: hotel_booking\n            value: '{{ tasks.booktrip.result }}'"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n  - name: recommendrestaurant\n    http:\n      url: http://example.com/RestaurantRecommendation\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n    outputs:\n      parameters:\n      - name: restaurant_list\n        valueFrom:\n          jsonPath: \"$.restaurant_list\""}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getcurrentweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: population\n            value: '{{ inputs.parameters.population }}'\n  - name: getcurrentweather\n    http:\n      url: \"http://example.com/getcurrentweather\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: '{{ inputs.parameters.city }}'\n  - name: weatherimpactonpopulation\n    http:\n      url: \"http://example.com/weatherimpactonpopulation\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{ tasks.getcurrentweather.result }}'\n      - name: population\n        value: '{{ inputs.parameters.population }}'"}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-295-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: booksbyauthor\n        template: booksbyauthor\n        dependencies:\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{ tasks.getauthordetails.result }}'\n  - name: getauthordetails\n    http:\n      url: http://example.com/getauthordetails\n      method: POST\n      body: '{\"bookTitle\": \"{{ inputs.parameters.bookTitle }}\"}'\n  - name: booksbyauthor\n    http:\n      url: http://example.com/booksbyauthor\n      method: POST\n      body: '{\"author_id\": \"{{ tasks.getauthordetails.result }}\"}'\n  arguments:\n    parameters:\n    - name: bookTitle\n      value: 'The Hobbit'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightinfo\n        template: getflightinfo\n        arguments:\n          parameters:\n          - name: city_from\n            value: '{{ inputs.parameters.city_from }}'\n          - name: city_to\n            value: '{{ inputs.parameters.city_to }}'\n          - name: date_from\n            value: '{{ inputs.parameters.date_from }}'\n          - name: date_to\n            value: '{{ inputs.parameters.date_to }}'\n      - name: findcheapestflight\n        template: findcheapestflight\n        dependencies:\n        - getflightinfo\n        arguments:\n          parameters:\n          - name: flights\n            value: '{{ tasks.getflightinfo.result }}'\n      - name: getflightprice\n        template: getflightprice\n        dependencies:\n        - findcheapestflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findcheapestflight.result }}'\n      - name: calculatefinalfare\n        template: calculatefinalfare\n        dependencies:\n        - getflightprice\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{ tasks.getflightprice.result }}'\n          - name: discount_amount\n            value: '{{ inputs.parameters.discount_amount }}'"}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-planning-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.city1 }}'\n          - name: city2\n            value: '{{ inputs.parameters.city2 }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findindooractivities\n        template: findindooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: placesrecommender\n        template: placesrecommender\n        dependencies:\n        - findindooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: activity_type\n            value: '{{ tasks.findindooractivities.result }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflights\n        - findhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflights.result }}'\n          - name: hotel\n            value: '{{ tasks.findhotel.result }}'"}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ tasks.findpopulardishes.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantlocator\n        template: restaurantlocator\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getrestaurants\n        template: getrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findpopulardishes-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }}\"]\n  - name: restaurantsuggestion\n    inputs:\n      parameters:\n      - name: city\n      - name: food_preference\n    container:\n      image: restaurantsuggestion-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }} {{ inputs.parameters.food_preference }}\"]\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}\"]\n  - name: restaurantlocator\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: restaurantlocator-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}\"]\n  - name: getrestaurants\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: getrestaurants-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }}\"]\n  - name: suggestdiningoptions\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    container:\n      image: suggestdiningoptions-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.localBudget }} {{ inputs.parameters.location }}\"]"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrenttime\n        template: getcurrenttime\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.start_location }}'\n      - name: findtraveltime\n        template: findtraveltime\n        dependencies:\n        - gettrafficupdate\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{ inputs.parameters.start_location }}'\n          - name: end_location\n            value: '{{ inputs.parameters.end_location }}'\n      - name: fetchnextbus\n        template: fetchnextbus\n        dependencies:\n        - findtraveltime\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{ tasks.findtraveltime.result }}'\n          - name: bus_route\n            value: '{{ inputs.parameters.bus_route }}'\n  - name: getcurrenttime\n    http:\n      url: http://api.example.com/currenttime\n      method: GET\n  - name: gettrafficupdate\n    http:\n      url: http://api.example.com/trafficupdate\n      method: GET\n  - name: findtraveltime\n    http:\n      url: http://api.example.com/findtraveltime\n      method: GET\n  - name: fetchnextbus\n    http:\n      url: http://api.example.com/fetchnextbus\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: start_location\n      value: 'Times Square'\n    - name: end_location\n      value: 'Wall Street'\n    - name: bus_route\n      value: 'Times Square to Wall Street'"}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: confirmappointment\n        template: confirmappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ inputs.parameters.appointment_id }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - confirmappointment\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ inputs.parameters.destination_location }}'\n      - name: trafficestimator\n        template: trafficestimator\n        dependencies:\n        - getroute\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.getroute.result }}'\n      - name: checktraffic\n        template: checktraffic\n        dependencies:\n        - trafficestimator\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'"}]