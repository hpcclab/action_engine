[{"Id": 18, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: songname2id\n        template: songname2id\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - songname2id\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'"}, {"Id": 20, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-294-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 21, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    http:\n      url: http://example.com/username2email\n      method: GET\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: http://example.com/title2isbn\n      method: GET\n      parameters:\n      - name: title\n        value: '{{ inputs.parameters.title }}'\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    http:\n      url: http://example.com/reservebook\n      method: POST\n      parameters:\n      - name: user_email\n        value: '{{ inputs.parameters.user_email }}'\n      - name: ISBN\n        value: '{{ inputs.parameters.ISBN }}'\n      - name: start_date\n        value: '{{ inputs.parameters.start_date }}'\n      - name: end_date\n        value: '{{ inputs.parameters.end_date }}'"}, {"Id": 22, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 89, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-hotel-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_level\n            value: '3'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    http:\n      url: http://example.com/getuserid\n      method: GET\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    http:\n      url: http://example.com/recommendhotel\n      method: GET\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: http://example.com/bookhotel\n      method: POST"}, {"Id": 90, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcity\n        template: getcity\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: checkvacancy\n        template: checkvacancy\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 91, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-2starhotel-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findcity\n        template: findcity\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - findcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.findcity.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 92, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendhotel\n        template: recommendhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_level\n            value: '5'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    http:\n      url: http://example.com/recommendhotel\n      method: GET\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: http://example.com/bookhotel\n      method: POST"}, {"Id": 94, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_rating\n            value: '{{ inputs.parameters.star_rating }}'\n      - name: checkvacancy\n        template: checkvacancy\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.findhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.findhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 105, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-travel-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getconcerts\n        template: getconcerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: findtaxi\n        template: findtaxi\n        dependencies:\n        - getconcerts\n        arguments:\n          parameters:\n          - name: ArrivalTime\n            value: '{{ tasks.getconcerts.result }}'\n  - name: getconcerts\n    http:\n      url: http://example.com/api/musicconcert\n      method: GET\n      parameters:\n      - name: venue\n        value: '{{ inputs.parameters.venue }}'\n  - name: findtaxi\n    http:\n      url: http://example.com/api/findtaxi\n      method: GET\n      parameters:\n      - name: ArrivalTime\n        value: '{{ inputs.parameters.ArrivalTime }}'"}, {"Id": 106, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: meeting-transportation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusernextmeeting\n        template: getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: meeting2timezone\n        template: meeting2timezone\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: meeting\n            value: '{{ tasks.getusernextmeeting.result }}'\n      - name: findtaxi\n        template: findtaxi\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: ArrivalTime\n            value: '{{ tasks.getusernextmeeting.result }}'\n      - name: schedulemeeting\n        template: schedulemeeting\n        dependencies:\n        - meeting2timezone\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: start_time\n            value: '{{ tasks.getusernextmeeting.result }}'\n          - name: end_time\n            value: '{{ inputs.parameters.end_time }}'\n          - name: timezone\n            value: '{{ tasks.meeting2timezone.result }}'"}, {"Id": 107, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-738-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getrestaurantrecommendations\n        template: getrestaurantrecommendations\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: optimaltraveldatetime\n        template: optimaltraveldatetime\n        dependencies:\n        - getweather\n        - getrestaurantrecommendations\n        arguments:\n          parameters:\n          - name: WeatherForecast\n            value: '{{ tasks.getweather.result }}'\n          - name: RestaurantRecommendations\n            value: '{{ tasks.getrestaurantrecommendations.result }}'\n      - name: besttraveltime\n        template: besttraveltime\n        dependencies:\n        - optimaltraveldatetime\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.getweather.result }}'\n          - name: attraction\n            value: '{{ inputs.parameters.attraction }}'"}, {"Id": 109, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getrestaurantlevel\n        template: getrestaurantlevel\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendrecommendation.result }}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - getrestaurantlevel\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{ tasks.getrestaurantlevel.result }}'\n          - name: partySize\n            value: '{{ inputs.parameters.partySize }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: http://restaurant-recommendation-api/recommend\n      method: POST\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n  - name: getrestaurantlevel\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: http://restaurant-level-api/get\n      method: POST\n      body: '{\"restaurant_name\": \"{{ inputs.parameters.restaurant_name }}\"}'\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    http:\n      url: http://book-reservation-api/book\n      method: POST\n      body: '{\"restaurantname\": \"{{ inputs.parameters.restaurantname }}\", \"partySize\": {{ inputs.parameters.partySize }}, \"time\": \"{{ inputs.parameters.time }}\"}'"}, {"Id": 110, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: restaurantrecommendations\n        template: restaurantrecommendations\n        arguments:\n          parameters:\n          - name: City\n            value: '{{ inputs.parameters.city }}'\n      - name: getrestaurantlevel\n        template: getrestaurantlevel\n        dependencies:\n        - restaurantrecommendations\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.restaurantrecommendations.result }}'\n      - name: reservationmaker\n        template: reservationmaker\n        dependencies:\n        - getrestaurantlevel\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getrestaurantlevel.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: restaurantrecommendations\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/restaurantrecommendations\n      method: GET\n  - name: getrestaurantlevel\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: http://example.com/getrestaurantlevel\n      method: GET\n  - name: reservationmaker\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: time\n    http:\n      url: http://example.com/reservationmaker\n      method: POST"}, {"Id": 111, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getrestaurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/getrestaurant\n      method: GET\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: http://example.com/booktable\n      method: POST"}, {"Id": 113, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantrecommendations\n        template: getrestaurantrecommendations\n        arguments:\n          parameters:\n          - name: City\n            value: '{{ inputs.parameters.city }}'\n      - name: getcuisinerecommendation\n        template: getcuisinerecommendation\n        dependencies:\n        - getrestaurantrecommendations\n        arguments:\n          parameters:\n          - name: restaurant_review\n            value: '{{ tasks.getrestaurantrecommendations.result }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - getcuisinerecommendation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ tasks.getcuisinerecommendation.result }}'\n      - name: getrestaurantrating\n        template: getrestaurantrating\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.restaurantsuggestion.result }}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - getrestaurantrating\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: partySize\n            value: '2'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: getrestaurantrecommendations\n    inputs:\n      parameters:\n      - name: City\n    http:\n      url: http://example.com/getrestaurantrecommendations\n      method: GET\n  - name: getcuisinerecommendation\n    inputs:\n      parameters:\n      - name: restaurant_review\n    http:\n      url: http://example.com/getcuisinerecommendation\n      method: GET\n  - name: restaurantsuggestion\n    inputs:\n      parameters:\n      - name: city\n      - name: food_preference\n    http:\n      url: http://example.com/restaurantsuggestion\n      method: GET\n  - name: getrestaurantrating\n    inputs:\n      parameters:\n      - name: restaurant\n    http:\n      url: http://example.com/getrestaurantrating\n      method: GET\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    http:\n      url: http://example.com/bookreservation\n      method: POST"}, {"Id": 117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-51-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: song_ID\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-matching-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 119, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-51-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 120, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-51-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - recommendsong\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: song_ID\n            value: '{{ tasks.songtitletoid.result }}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 121, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recommend-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: recommendmood\n        template: recommendmood\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - recommendmood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.recommendmood.result }}'\n      - name: songname2id\n        template: songname2id\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ tasks.recommendsong.result }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songname2id.result }}'"}, {"Id": 122, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 123, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songtitletoid\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songtitletoid.result }}'"}, {"Id": 124, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: suggest-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'"}, {"Id": 126, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestapparel\n        template: suggestapparel\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.getweather.result }}'"}, {"Id": 127, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: clothingsuggestion\n        template: clothingsuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location={{ inputs.parameters.location }}\"\n      method: \"GET\"\n  - name: clothingsuggestion\n    http:\n      url: \"http://clothingapi.com/suggestClothing?weather={{ tasks.checkweather.result }}\"\n      method: \"GET\"\n  arguments:\n    parameters:\n    - name: location\n      value: 'Tokyo'"}, {"Id": 129, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-rome-outfit-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 130, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestapparel\n        template: suggestapparel\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ inputs.parameters.weather_status }}'\n\n  - name: suggestapparel\n    http:\n      url: \"http://example.com/suggestapparel\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"weather_status\": \"{{ inputs.parameters.weather_status }}\"}'\n    outputs:\n      parameters:\n      - name: apparel\n        valueFrom:\n          jsonPath: \"$.apparel\""}, {"Id": 131, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestclothing\n        template: suggestclothing\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ inputs.parameters.weather }}'\n  - name: suggestclothing\n    http:\n      url: \"http://example.com/suggestclothing\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\"}'\n    outputs:\n      parameters:\n      - name: clothes\n        valueFrom:\n          jsonPath: \"$.clothes\""}, {"Id": 207, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-417-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchdestination\n        template: fetchdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.origin }}'\n          - name: city2\n            value: '{{ tasks.fetchdestination.result }}'\n          - name: date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflights.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 208, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-418-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflight\n        template: findflight\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ tasks.fetchcity.result }}'\n          - name: city2\n            value: '{{ inputs.parameters.destination }}'\n          - name: date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflight.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: emma-travel-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.startPoint }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.endPoint }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflight.result }}'\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - booktrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.booktrip.result }}'\n          - name: accommodation\n            value: '{{ inputs.parameters.accommodation }}'\n  - name: findflight\n    http:\n      url: \"http://example.com/findflight\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"startPoint\": \"{{ inputs.parameters.startPoint }}\", \"endPoint\": \"{{ inputs.parameters.endPoint }}\"}'\n  - name: booktrip\n    http:\n      url: \"http://example.com/booktrip\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"flight\": \"{{ tasks.findflight.result }}\", \"hotel\": \"{{ inputs.parameters.hotel }}\"}'\n  - name: createtravelplan\n    http:\n      url: \"http://example.com/createtravelplan\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"flight\": \"{{ tasks.booktrip.result }}\", \"accommodation\": \"{{ inputs.parameters.accommodation }}\"}'"}, {"Id": 214, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflight\n        template: findflight\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ tasks.fetchcity.result }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.destination }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflight.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 215, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-713-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchdestination\n        template: fetchdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.city1 }}'\n          - name: city2\n            value: '{{ tasks.fetchdestination.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflights.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 216, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-712-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchdestination\n        template: fetchdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.origin }}'\n          - name: city2\n            value: '{{ tasks.fetchdestination.result }}'\n          - name: date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflights.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.fetchdestination.result }}'\n          - name: date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - bookflight\n        - bookhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.bookflight.result }}'\n          - name: hotel\n            value: '{{ tasks.bookhotel.result }}'"}, {"Id": 217, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-417-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdestination\n        template: getdestination\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: flightdetails\n        template: flightdetails\n        dependencies:\n        - getdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getdestination.result }}'\n          - name: departure_date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: findcheapestflight\n        template: findcheapestflight\n        dependencies:\n        - flightdetails\n        arguments:\n          parameters:\n          - name: flights\n            value: '{{ tasks.flightdetails.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findcheapestflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findcheapestflight.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 376, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-quickest-route-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcity\n        template: getcity\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: food_preference\n            value: '{{ inputs.parameters.food_preference }}'\n      - name: getquickestroute\n        template: getquickestroute\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: current_location\n            value: '{{ inputs.parameters.current_location }}'"}, {"Id": 377, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantselection\n        template: restaurantselection\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: location\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 378, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestrestaurant\n        template: findnearestrestaurant\n        arguments:\n          parameters:\n          - name: geolocation\n            value: '{{ inputs.parameters.geolocation }}'\n          - name: cuisine_type\n            value: 'French'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - findnearestrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ tasks.findnearestrestaurant.result }}'"}, {"Id": 379, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ tasks.getrestaurant.result }}'"}, {"Id": 380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-401-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: type\n            value: 'French'\n          - name: rating\n            value: 'top-rated'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ tasks.findrestaurant.result }}'"}, {"Id": 381, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: findrestaurant\n        template: findrestaurant\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: type\n            value: '{{ inputs.parameters.type }}'\n          - name: rating\n            value: '{{ inputs.parameters.rating }}'\n      - name: restaurantselection\n        template: restaurantselection\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - restaurantselection\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ tasks.restaurantselection.result }}'\n          - name: food_list\n            value: '{{ inputs.parameters.food_list }}'"}, {"Id": 414, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getfavoritegenre\n        template: getfavoritegenre\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: movierecommender\n        template: movierecommender\n        dependencies:\n        - getfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getfavoritegenre.result }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - movierecommender\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.movierecommender.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 415, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercuisinepreference\n        template: getusercuisinepreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - getusercuisinepreference\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getusercuisinepreference.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 416, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getfavoriterestaurant\n        template: getfavoriterestaurant\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - getfavoriterestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getfavoriterestaurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: getfavoriterestaurant\n    http:\n      url: http://example.com/api/getfavoriterestaurant\n      method: GET\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: reservetable\n    http:\n      url: http://example.com/api/reservetable\n      method: POST\n      parameters:\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'"}, {"Id": 418, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-9876-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: card2number\n        template: card2number\n        arguments:\n          parameters:\n          - name: card_id\n            value: '{{ inputs.parameters.card_id }}'\n      - name: productid2cost\n        template: productid2cost\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: checkcardbalance\n        template: checkcardbalance\n        dependencies:\n        - card2number\n        arguments:\n          parameters:\n          - name: card_number\n            value: '{{ tasks.card2number.result }}'\n      - name: enoughbalance\n        template: enoughbalance\n        dependencies:\n        - checkcardbalance\n        - productid2cost\n        arguments:\n          parameters:\n          - name: product_price\n            value: '{{ tasks.productid2cost.result }}'\n          - name: card_balance\n            value: '{{ tasks.checkcardbalance.result }}'"}, {"Id": 442, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone12-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: productname2productid\n        template: productname2productid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: cartname2id\n        template: cartname2id\n        arguments:\n          parameters:\n          - name: cart_name\n            value: '{{ inputs.parameters.cart_name }}'\n      - name: addtocart\n        template: addtocart\n        dependencies:\n        - getuserid\n        - productname2productid\n        - cartname2id\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: product_ID\n            value: '{{ tasks.productname2productid.result }}'\n          - name: cart_ID\n            value: '{{ tasks.cartname2id.result }}'\n  - name: getuserid\n    http:\n      url: http://example.com/getuserid\n      method: GET\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: productname2productid\n    http:\n      url: http://example.com/productname2productid\n      method: GET\n      parameters:\n      - name: product_name\n        value: '{{ inputs.parameters.product_name }}'\n  - name: cartname2id\n    http:\n      url: http://example.com/cartname2id\n      method: GET\n      parameters:\n      - name: cart_name\n        value: '{{ inputs.parameters.cart_name }}'\n  - name: addtocart\n    http:\n      url: http://example.com/addtocart\n      method: POST\n      parameters:\n      - name: customer_ID\n        value: '{{ tasks.getuserid.result }}'\n      - name: product_ID\n        value: '{{ tasks.productname2productid.result }}'\n      - name: cart_ID\n        value: '{{ tasks.cartname2id.result }}'\n  inputs:\n    parameters:\n    - name: username\n    - name: product_name\n    - name: cart_name"}, {"Id": 450, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstudentid\n        template: studentname2id\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ inputs.parameters.student_name }}'\n      - name: getcourseid\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: getinstructorid\n        template: instructorname2id\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{ inputs.parameters.instructor_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - getstudentid\n        - getcourseid\n        - getinstructorid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.getstudentid.result }}'\n          - name: subject_ID\n            value: '{{ tasks.getcourseid.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'\n  - name: studentname2id\n    inputs:\n      parameters:\n      - name: student_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '123'\"]\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '456'\"]\n  - name: instructorname2id\n    inputs:\n      parameters:\n      - name: instructor_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '789'\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Enrollment confirmed'\"]"}, {"Id": 474, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{ inputs.parameters.age }}'\n          - name: gender\n            value: '{{ inputs.parameters.gender }}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getdietplan\n        - getexerciseroutine\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{ tasks.getdietplan.result }}'\n          - name: ExerciseRoutine\n            value: '{{ tasks.getexerciseroutine.result }}'\n  - name: gethealthinformation\n    inputs:\n      parameters:\n      - name: age\n      - name: gender\n    http:\n      url: http://example.com/gethealthinformation\n      method: POST\n      body: '{\"age\": {{ inputs.parameters.age }}, \"gender\": \"{{ inputs.parameters.gender }}\"}'\n  - name: getdietplan\n    inputs:\n      parameters:\n      - name: HealthInformation\n    http:\n      url: http://example.com/getdietplan\n      method: POST\n      body: '{\"HealthInformation\": \"{{ inputs.parameters.HealthInformation }}\"}'\n  - name: getexerciseroutine\n    inputs:\n      parameters:\n      - name: HealthInformation\n    http:\n      url: http://example.com/getexerciseroutine\n      method: POST\n      body: '{\"HealthInformation\": \"{{ inputs.parameters.HealthInformation }}\"}'\n  - name: createwellnessplan\n    inputs:\n      parameters:\n      - name: DietPlan\n      - name: ExerciseRoutine\n    http:\n      url: http://example.com/createwellnessplan\n      method: POST\n      body: '{\"DietPlan\": \"{{ inputs.parameters.DietPlan }}\", \"ExerciseRoutine\": \"{{ inputs.parameters.ExerciseRoutine }}\"}'"}, {"Id": 477, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-television-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: orderproduct\n        template: orderproduct\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 478, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: flightinfo\n        template: flightinfo\n        arguments:\n          parameters:\n          - name: city_from\n            value: '{{ inputs.parameters.city_from }}'\n          - name: city_to\n            value: '{{ inputs.parameters.city_to }}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - flightinfo\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.flightinfo.result }}'\n      - name: getluggagefee\n        template: getluggagefee\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: luggage\n            value: '{{ tasks.checkluggageallowance.result }}'\n          - name: weight\n            value: '{{ inputs.parameters.weight }}'"}, {"Id": 479, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - getmealcost\n        - getsightseeingcost\n        - findhotel\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.findhotel.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  - name: getmealcost\n    http:\n      url: \"http://example.com/getmealcost\"\n      method: \"GET\"\n  - name: getsightseeingcost\n    http:\n      url: \"http://example.com/getsightseeingcost\"\n      method: \"GET\"\n  - name: findhotel\n    http:\n      url: \"http://example.com/findhotel\"\n      method: \"GET\"\n  - name: calculatevacationcost\n    http:\n      url: \"http://example.com/calculatevacationcost\"\n      method: \"POST\""}, {"Id": 481, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planner-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - suggestactivity\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.checkweather.result }}'\n          - name: activities\n            value: '{{ tasks.suggestactivity.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.restaurantrecommend.result }}'"}, {"Id": 538, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findactivities\n        template: findactivities\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.getweather.result }}'\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - getweather\n        - findactivities\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.getweather.result }}'\n          - name: activities\n            value: '{{ tasks.findactivities.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.findrestaurant.result }}'"}, {"Id": 631, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-295-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookgenre\n        template: getbookgenre\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: getsimilarbooks\n        template: getsimilarbooks\n        dependencies:\n        - getbookgenre\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: BookGenre\n            value: '{{ tasks.getbookgenre.result }}'\n          - name: AuthorDetails\n            value: '{{ tasks.getauthordetails.result }}'"}, {"Id": 632, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-movie-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getfavouritegenre\n        template: getfavouritegenre\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: movierecommendation\n        template: movierecommendation\n        dependencies:\n        - getfavouritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getfavouritegenre.result }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - movierecommendation\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.movierecommendation.result }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 633, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getfavoritegenre\n        template: getfavoritegenre\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: movierecommender\n        template: movierecommender\n        dependencies:\n        - getfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getfavoritegenre.result }}'\n      - name: reservemovieticket\n        template: reservemovieticket\n        dependencies:\n        - movierecommender\n        arguments:\n          parameters:\n          - name: movie_ID\n            value: '{{ tasks.movierecommender.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 636, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-521-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercuisinepreference\n        template: getusercuisinepreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        dependencies:\n        - getusercuisinepreference\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - suggestdiningoptions\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.suggestdiningoptions.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 637, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercuisinepreference\n        template: getusercuisinepreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        dependencies:\n        - getusercuisinepreference\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getusercuisinepreference.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - suggestdiningoptions\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.suggestdiningoptions.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 639, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchfavorite\n        template: fetchfavorite\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - fetchfavorite\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.fetchfavorite.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: fetchfavorite\n    http:\n      url: http://example.com/api/fetchfavorite\n      method: GET\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: booktable\n    http:\n      url: http://example.com/api/booktable\n      method: POST\n      parameters:\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'"}, {"Id": 640, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpreferredrestaurant\n        template: getpreferredrestaurant\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - getpreferredrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getpreferredrestaurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 645, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-475-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getservicestationnearme\n        template: getservicestationnearme\n        arguments:\n          parameters:\n          - name: user_location\n            value: '{{ inputs.parameters.user_location }}'\n      - name: bookcarservice\n        template: bookcarservice\n        dependencies:\n        - getservicestationnearme\n        arguments:\n          parameters:\n          - name: car_id\n            value: '{{ inputs.parameters.car_id }}'\n          - name: service_station_id\n            value: '{{ tasks.getservicestationnearme.result }}'\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'"}, {"Id": 740, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-482-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkbusschedule\n        template: checkbusschedule\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ inputs.parameters.location_coordinates }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - checkbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkbusschedule.result }}'"}, {"Id": 741, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33344-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkbusschedule\n        template: checkbusschedule\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ inputs.parameters.location_coordinates }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - checkbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkbusschedule.result }}'"}, {"Id": 743, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkbusschedule\n        template: checkbusschedule\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ inputs.parameters.location_coordinates }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - checkbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkbusschedule.result }}'"}, {"Id": 776, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-236-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: geteventid\n        template: geteventid\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: getvenueid\n        template: getvenueid\n        arguments:\n          parameters:\n          - name: venue_name\n            value: '{{ inputs.parameters.venue_name }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - geteventid\n        - getvenueid\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.geteventid.result }}'\n          - name: venue_ID\n            value: '{{ tasks.getvenueid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 780, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstudentid\n        template: getstudentid\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ inputs.parameters.student_name }}'\n      - name: getcourseid\n        template: getcourseid\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: getinstructorid\n        template: getinstructorid\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{ inputs.parameters.instructor_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - getstudentid\n        - getcourseid\n        - getinstructorid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.getstudentid.result }}'\n          - name: subject_ID\n            value: '{{ tasks.getcourseid.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'\n  - name: getstudentid\n    inputs:\n      parameters:\n      - name: student_name\n    http:\n      url: http://example.com/studentname2id\n      method: GET\n      parameters:\n      - name: student_name\n        value: '{{ inputs.parameters.student_name }}'\n  - name: getcourseid\n    inputs:\n      parameters:\n      - name: course_name\n    http:\n      url: http://example.com/coursename2id\n      method: GET\n      parameters:\n      - name: course_name\n        value: '{{ inputs.parameters.course_name }}'\n  - name: getinstructorid\n    inputs:\n      parameters:\n      - name: instructor_name\n    http:\n      url: http://example.com/instructorname2id\n      method: GET\n      parameters:\n      - name: instructor_name\n        value: '{{ inputs.parameters.instructor_name }}'\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    http:\n      url: http://example.com/enrollcourse\n      method: POST\n      parameters:\n      - name: person_ID\n        value: '{{ inputs.parameters.person_ID }}'\n      - name: subject_ID\n        value: '{{ inputs.parameters.subject_ID }}'\n      - name: semester\n        value: '{{ inputs.parameters.semester }}'"}, {"Id": 862, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{ inputs.parameters.age }}'\n          - name: gender\n            value: '{{ inputs.parameters.gender }}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getexerciseroutine\n        - getdietplan\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{ tasks.getdietplan.result }}'\n          - name: ExerciseRoutine\n            value: '{{ tasks.getexerciseroutine.result }}'\n  - name: gethealthinformation\n    inputs:\n      parameters:\n      - name: age\n      - name: gender\n    http:\n      url: http://example.com/gethealthinformation\n      method: POST\n      body: '{\"age\": {{ inputs.parameters.age }}, \"gender\": \"{{ inputs.parameters.gender }}\"}'\n  - name: getexerciseroutine\n    inputs:\n      parameters:\n      - name: HealthInformation\n    http:\n      url: http://example.com/getexerciseroutine\n      method: POST\n      body: '{\"HealthInformation\": \"{{ inputs.parameters.HealthInformation }}\"}'\n  - name: getdietplan\n    inputs:\n      parameters:\n      - name: HealthInformation\n    http:\n      url: http://example.com/getdietplan\n      method: POST\n      body: '{\"HealthInformation\": \"{{ inputs.parameters.HealthInformation }}\"}'\n  - name: createwellnessplan\n    inputs:\n      parameters:\n      - name: DietPlan\n      - name: ExerciseRoutine\n    http:\n      url: http://example.com/createwellnessplan\n      method: POST\n      body: '{\"DietPlan\": \"{{ inputs.parameters.DietPlan }}\", \"ExerciseRoutine\": \"{{ inputs.parameters.ExerciseRoutine }}\"}'"}, {"Id": 872, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-laptop-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findelectronicsstores\n        template: findelectronicsstores\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - findelectronicsstores\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n      - name: calculateshippingcost\n        template: calculateshippingcost\n        dependencies:\n        - purchaseitem\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: estimatedeliverytime\n        template: estimatedeliverytime\n        dependencies:\n        - calculateshippingcost\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: findelectronicsstores\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: \"http://example.com/findelectronicsstores\"\n      method: \"GET\"\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    http:\n      url: \"http://example.com/purchaseitem\"\n      method: \"POST\"\n  - name: calculateshippingcost\n    inputs:\n      parameters:\n      - name: productID\n      - name: location\n    http:\n      url: \"http://example.com/calculateshippingcost\"\n      method: \"GET\"\n  - name: estimatedeliverytime\n    inputs:\n      parameters:\n      - name: productID\n      - name: location\n    http:\n      url: \"http://example.com/estimatedeliverytime\"\n      method: \"GET\"\n"}, {"Id": 873, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-refrigerator-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: suppliernametoid\n        template: suppliernametoid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{ inputs.parameters.supplier_name }}'\n      - name: orderproduct\n        template: orderproduct\n        dependencies:\n        - getuserid\n        - suppliernametoid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n          - name: supplier_ID\n            value: '{{ tasks.suppliernametoid.result }}'"}, {"Id": 877, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - findhotel\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.findhotel.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  - name: findhotel\n    http:\n      url: http://example.com/findhotel\n      method: GET\n  - name: getmealcost\n    http:\n      url: http://example.com/getmealcost\n      method: GET\n  - name: getsightseeingcost\n    http:\n      url: http://example.com/getsightseeingcost\n      method: GET\n  - name: calculatevacationcost\n    http:\n      url: http://example.com/calculatevacationcost\n      method: POST"}, {"Id": 878, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: holiday-planning-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserbudget\n        template: getuserbudget\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n      - name: findaccommodation\n        template: findaccommodation\n        dependencies:\n        - getuserbudget\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: budget\n            value: '{{ tasks.getuserbudget.result }}'\n      - name: gethoteldetails\n        template: gethoteldetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - findaccommodation\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ inputs.parameters.roomRate }}'\n          - name: mealCost\n            value: '{{ inputs.parameters.mealCost }}'\n          - name: sightSeeingCost\n            value: '{{ inputs.parameters.sightSeeingCost }}'"}, {"Id": 879, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getuserbudget\n        template: getuserbudget\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n      - name: findaccommodation\n        template: findaccommodation\n        dependencies:\n        - getuserbudget\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.city }}'\n          - name: budget\n            value: '{{ tasks.getuserbudget.result }}'\n      - name: restaurantpricerange\n        template: restaurantpricerange\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: restaurant\n            value: '{{ inputs.parameters.restaurant }}'\n      - name: totaldinnercost\n        template: totaldinnercost\n        dependencies:\n        - restaurantpricerange\n        arguments:\n          parameters:\n          - name: restaurantPriceRange\n            value: '{{ tasks.restaurantpricerange.result }}'\n          - name: transportFare\n            value: '{{ inputs.parameters.transportFare }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - findaccommodation\n        - totaldinnercost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.findaccommodation.result }}'\n          - name: mealCost\n            value: '{{ tasks.totaldinnercost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'"}, {"Id": 887, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - suggestactivity\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.getweather.result }}'\n          - name: activities\n            value: '{{ tasks.suggestactivity.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.recommendrecommendrestaurant.result }}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/get\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: suggestactivity\n    http:\n      url: \"http://activitysuggestionapi.com/suggest\"\n      method: \"GET\"\n      parameters:\n      - name: weather\n        value: '{{ inputs.parameters.weather }}'\n  - name: recommendrestaurant\n    http:\n      url: \"http://restaurantrecommendapi.com/recommend\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cuisine\n        value: '{{ inputs.parameters.cuisine }}'\n      - name: weather\n        value: '{{ inputs.parameters.weather }}'\n  - name: tripplanner\n    http:\n      url: \"http://tripplannerapi.com/plan\"\n      method: \"GET\"\n      parameters:\n      - name: weather_forecast\n        value: '{{ inputs.parameters.weather_forecast }}'\n      - name: activities\n        value: '{{ inputs.parameters.activities }}'\n      - name: suggested_restaurant\n        value: '{{ inputs.parameters.suggested_restaurant }}'"}, {"Id": 889, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-670-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: outdooractivityrecommend\n        template: outdooractivityrecommend\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - outdooractivityrecommend\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ tasks.checkweather.result }}'\n          - name: activities\n            value: '{{ tasks.outdooractivityrecommend.result }}'\n          - name: suggested_restaurant\n            value: '{{ tasks.restaurantrecommend.result }}'"}, {"Id": 972, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-festival-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: openparks\n        template: openparks\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: foodfestival\n        template: foodfestival\n        dependencies:\n        - openparks\n        arguments:\n          parameters:\n          - name: park\n            value: '{{ tasks.openparks.result }}'\n  - name: openparks\n    http:\n      url: \"http://example.com/openparks\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'\n  - name: foodfestival\n    http:\n      url: \"http://example.com/foodfestival\"\n      method: \"GET\"\n      parameters:\n      - name: park\n        value: '{{ tasks.openparks.result }}'"}, {"Id": 1089, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-10001-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{ inputs.parameters.zipcode }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: findstore\n        template: findstore\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.suggestoutfit.result }}'"}, {"Id": 1129, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-cost-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findtaxi\n        template: findtaxi\n        arguments:\n          parameters:\n          - name: ArrivalTime\n            value: '{{ inputs.parameters.ArrivalTime }}'\n      - name: restaurantpricerange\n        template: restaurantpricerange\n        arguments:\n          parameters:\n          - name: city\n            value: 'New York'\n          - name: restaurant\n            value: 'Le Bernardin'\n      - name: calculatefare\n        template: calculatefare\n        dependencies:\n        - findtaxi\n        arguments:\n          parameters:\n          - name: TaxiInfo\n            value: '{{ tasks.findtaxi.result }}'\n          - name: destination\n            value: 'Le Bernardin'\n      - name: totaldinnercost\n        template: totaldinnercost\n        dependencies:\n        - restaurantpricerange\n        - calculatefare\n        arguments:\n          parameters:\n          - name: restaurantPriceRange\n            value: '{{ tasks.restaurantpricerange.result }}'\n          - name: transportFare\n            value: '{{ tasks.calculatefare.result }}'"}, {"Id": 1153, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: business-trip-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getavailablecars\n        template: getavailablecars\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getconferences\n        template: getconferences\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: planbusinesstrip\n        template: planbusinesstrip\n        dependencies:\n        - getweather\n        - getavailablecars\n        - getconferences\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: available_cars\n            value: '{{ tasks.getavailablecars.result }}'\n          - name: conferences\n            value: '{{ tasks.getconferences.result }}'"}, {"Id": 1168, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-80014-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{ inputs.parameters.zipcode }}'\n          - name: day\n            value: '{{ inputs.parameters.day }}'\n      - name: getsuitableclothing\n        template: getsuitableclothing\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weatherForecast\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - getsuitableclothing\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getsuitableclothing.result }}'"}, {"Id": 1169, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-60629-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{ inputs.parameters.zipcode }}'\n      - name: suggestapparel\n        template: suggestapparel\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.getweather.result }}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - suggestapparel\n        arguments:\n          parameters:\n          - name: apparel\n            value: '{{ tasks.suggestapparel.result }}'"}, {"Id": 1170, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-60629-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{ inputs.parameters.zipcode }}'\n          - name: day\n            value: '{{ inputs.parameters.day }}'\n      - name: suggestapparel\n        template: suggestapparel\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.getweather.result }}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - suggestapparel\n        arguments:\n          parameters:\n          - name: apparel\n            value: '{{ tasks.suggestapparel.result }}'"}, {"Id": 1171, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-outfit-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{ inputs.parameters.zipcode }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: findstore\n        template: findstore\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.suggestoutfit.result }}'"}, {"Id": 1316, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-708-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpropertyprice\n        template: getpropertyprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: propertyType\n            value: '{{ inputs.parameters.propertyType }}'\n      - name: mortgagecalculator\n        template: mortgagecalculator\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getpropertyprice.result }}'\n          - name: downPayment\n            value: '{{ inputs.parameters.downPayment }}'\n          - name: interestRate\n            value: '{{ inputs.parameters.interestRate }}'\n          - name: term\n            value: '{{ inputs.parameters.term }}'\n      - name: propertyownershipcost\n        template: propertyownershipcost\n        dependencies:\n        - mortgagecalculator\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{ tasks.mortgagecalculator.result }}'\n          - name: tax\n            value: '{{ inputs.parameters.tax }}'"}, {"Id": 1317, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-708-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getaveragehouseprice\n        template: getaveragehouseprice\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: mortgagecalculator\n        template: mortgagecalculator\n        dependencies:\n        - getaveragehouseprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getaveragehouseprice.result }}'\n          - name: downPayment\n            value: '{{ inputs.parameters.downPayment }}'\n          - name: interestRate\n            value: '{{ inputs.parameters.interestRate }}'\n          - name: term\n            value: '{{ inputs.parameters.term }}'\n      - name: propertyownershipcost\n        template: propertyownershipcost\n        dependencies:\n        - mortgagecalculator\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{ tasks.mortgagecalculator.result }}'\n          - name: tax\n            value: '{{ inputs.parameters.tax }}'"}, {"Id": 1363, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: ClothingSuggestion\n        template: ClothingSuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: RecommendClothing\n        template: RecommendClothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: GetRecommendedClothing\n        template: GetRecommendedClothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: GetClothing\n        template: GetClothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'\n      - name: SuggestApparel\n        template: SuggestApparel\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'\n      - name: OutfitRecommender\n        template: OutfitRecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.checkweather.result }}'\n      - name: SuggestOutfit\n        template: SuggestOutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: ClothingRecommendation\n        template: ClothingRecommendation\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weatherForecast\n            value: '{{ tasks.checkweather.result }}'\n      - name: DressSuggestion\n        template: DressSuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: GetSuitableClothing\n        template: GetSuitableClothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weatherForecast\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1423, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalweather\n        template: getlocalweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: reserveflight\n        template: reserveflight\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: departure_city\n            value: '{{ inputs.parameters.departure_city }}'\n          - name: arrival_city\n            value: '{{ inputs.parameters.arrival_city }}'\n          - name: weather_condition\n            value: '{{ tasks.getlocalweather.result }}'\n  - name: getlocalweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/getlocalweather\"\n      method: \"GET\"\n      headers:\n        Content-Type: application/json\n      body: \"{ \\\"city\\\": \\\"{{ inputs.parameters.city }}\\\" }\"\n  - name: reserveflight\n    inputs:\n      parameters:\n      - name: departure_city\n      - name: arrival_city\n      - name: weather_condition\n    http:\n      url: \"http://flightapi.com/reserve\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: \"{ \\\"departure_city\\\": \\\"{{ inputs.parameters.departure_city }}\\\", \\\"arrival_city\\\": \\\"{{ inputs.parameters.arrival_city }}\\\", \\\"weather_condition\\\": \\\"{{ inputs.parameters.weather_condition }}\\\" }\""}, {"Id": 1424, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-391-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: cityDeparture\n            value: '{{ inputs.parameters.cityDeparture }}'\n          - name: cityArrival\n            value: '{{ inputs.parameters.cityArrival }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n"}, {"Id": 1468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: event\n            value: '{{ inputs.parameters.event }}'\n          - name: outfit\n            value: '{{ tasks.suggestoutfit.result }}'"}, {"Id": 1469, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-334-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: suggestoutfit\n        template: SuggestOutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: planoutfit\n        template: PlanOutfit\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: event\n            value: '{{ inputs.parameters.event }}'\n          - name: outfit\n            value: '{{ tasks.suggestoutfit.result }}'"}, {"Id": 1500, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: notify-user-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuseremail\n        template: getuseremail\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getbookprice\n        template: getbookprice\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: sendnotification\n        template: sendnotification\n        dependencies:\n        - getuseremail\n        - getbookprice\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.getuseremail.result }}'\n          - name: book_price\n            value: '{{ tasks.getbookprice.result }}'\n  templates:\n  - name: getuseremail\n    http:\n      url: \"http://example.com/api/getuseremail\"\n      method: \"GET\"\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: getbookprice\n    http:\n      url: \"http://example.com/api/getbookprice\"\n      method: \"GET\"\n      parameters:\n      - name: ISBN\n        value: '{{ inputs.parameters.ISBN }}'\n  - name: sendnotification\n    http:\n      url: \"http://example.com/api/sendnotification\"\n      method: \"POST\"\n      parameters:\n      - name: user_email\n        value: '{{ inputs.parameters.user_email }}'\n      - name: book_price\n        value: '{{ inputs.parameters.book_price }}'\n  arguments:\n    parameters:\n    - name: username\n      value: 'booklover'\n    - name: ISBN\n      value: '978-3-16-148410-0'"}, {"Id": 1514, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-773-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: userpreference\n        template: userpreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommenddrink\n        template: recommenddrink\n        dependencies:\n        - userpreference\n        arguments:\n          parameters:\n          - name: user_preference\n            value: '{{ tasks.userpreference.result }}'"}, {"Id": 1519, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: notify-user-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuseremail\n        template: getuseremail\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getbookprice\n        template: getbookprice\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: sendnotification\n        template: sendnotification\n        dependencies:\n        - getuseremail\n        - getbookprice\n        arguments:\n          parameters:\n          - name: contact_info\n            value: '{{ tasks.getuseremail.result }}'\n          - name: review\n            value: 'The price of the book with ISBN {{ inputs.parameters.ISBN }} is {{ tasks.getbookprice.result }}.'\n  - name: getuseremail\n    inputs:\n      parameters:\n      - name: username\n    http:\n      url: http://example.com/getuseremail\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"username\": \"{{ inputs.parameters.username }}\"}'\n  - name: getbookprice\n    inputs:\n      parameters:\n      - name: ISBN\n    http:\n      url: http://example.com/getbookprice\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"ISBN\": \"{{ inputs.parameters.ISBN }}\"}'\n  - name: sendnotification\n    inputs:\n      parameters:\n      - name: contact_info\n      - name: review\n    http:\n      url: http://example.com/sendnotification\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"contact_info\": \"{{ inputs.parameters.contact_info }}\", \"review\": \"{{ inputs.parameters.review }}\"}'"}, {"Id": 1520, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: schedule-meeting-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusernextmeeting\n        template: getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: schedulemeeting\n        template: schedulemeeting\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.getusernextmeeting.result }}'\n          - name: start_time\n            value: '{{ inputs.parameters.start_time }}'\n          - name: end_time\n            value: '{{ inputs.parameters.end_time }}'\n          - name: timezone\n            value: '{{ inputs.parameters.timezone }}'\n  - name: getusernextmeeting\n    inputs:\n      parameters:\n      - name: user_name\n    http:\n      url: \"http://example.com/getusernextmeeting\"\n      method: \"GET\"\n      parameters:\n      - name: user_name\n        value: '{{ inputs.parameters.user_name }}'\n  - name: schedulemeeting\n    inputs:\n      parameters:\n      - name: user_email\n      - name: start_time\n      - name: end_time\n      - name: timezone\n    http:\n      url: \"http://example.com/schedulemeeting\"\n      method: \"POST\"\n      parameters:\n      - name: user_email\n        value: '{{ inputs.parameters.user_email }}'\n      - name: start_time\n        value: '{{ inputs.parameters.start_time }}'\n      - name: end_time\n        value: '{{ inputs.parameters.end_time }}'\n      - name: timezone\n        value: '{{ inputs.parameters.timezone }}'"}, {"Id": 1525, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2userid\n        template: username2userid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: movietitle2id\n        template: movietitle2id\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - username2userid\n        - movietitle2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2userid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.movietitle2id.result }}'\n      - name: notifyuser\n        template: notifyuser\n        dependencies:\n        - addtowatchlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2userid.result }}'\n          - name: message\n            value: 'The movie has been added to your watchlist.'"}, {"Id": 1537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-outing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtimes\n        template: getshowtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ inputs.parameters.cinema }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie_title }}'\n      - name: calculatetotalmovieoutingtime\n        template: calculatetotalmovieoutingtime\n        arguments:\n          parameters:\n          - name: travelTime\n            value: '{{ inputs.parameters.travelTime }}'\n          - name: movieLength\n            value: '{{ inputs.parameters.movieLength }}'\n  - name: getshowtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    http:\n      url: \"http://example.com/getshowtimes\"\n      method: \"GET\"\n  - name: getticketprice\n    inputs:\n      parameters:\n      - name: cinema\n      - name: movie\n    http:\n      url: \"http://example.com/getticketprice\"\n      method: \"GET\"\n  - name: calculatetotalmovieoutingtime\n    inputs:\n      parameters:\n      - name: travelTime\n      - name: movieLength\n    http:\n      url: \"http://example.com/calculatetotalmovieoutingtime\"\n      method: \"GET\""}, {"Id": 1542, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1542-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: cityDeparture\n            value: '{{ tasks.fetchcity.result }}'\n          - name: cityArrival\n            value: '{{ inputs.parameters.cityArrival }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - fetchflightid\n        arguments:\n          parameters:\n          - name: flight_ID\n            value: '{{ tasks.fetchflightid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchflightid\n        template: fetchflightid\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_name\n            value: '{{ tasks.findflight.result }}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'"}, {"Id": 1545, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-187-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserfavoritefood\n        template: getuserfavoritefood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - getuserfavoritefood\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ tasks.getuserfavoritefood.result }}'\n      - name: reservationmaker\n        template: reservationmaker\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.restaurantsuggestion.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 1546, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-593-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavouritegenre\n        template: getuserfavouritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getuserfavouritegenre\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ inputs.parameters.user_mood }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 1547, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-playlist-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavouritegenre\n        template: getuserfavouritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: musicrecommend\n        template: musicrecommend\n        dependencies:\n        - getuserfavouritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getuserfavouritegenre.result }}'\n          - name: artist\n            value: '{{ inputs.parameters.artist }}'\n          - name: year\n            value: '{{ inputs.parameters.year }}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - musicrecommend\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.musicrecommend.result }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songtitletoid.result }}'"}]