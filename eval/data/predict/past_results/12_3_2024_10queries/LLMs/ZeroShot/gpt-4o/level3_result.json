[{"Id": 18, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: add-song-to-playlist\n  templates:\n  - name: add-song-to-playlist\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: get-playlist-id\n        template: get-playlist-id\n        dependencies: [get-user-id]\n      - name: add-song\n        template: add-song\n        dependencies: [get-playlist-id]\n\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: user_name\n        value: '{{ inputs.parameters.user_name }}'\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n\n  - name: get-playlist-id\n    inputs:\n      parameters:\n      - name: playlist_name\n        value: '{{ inputs.parameters.playlist_name }}'\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n\n  - name: add-song\n    inputs:\n      parameters:\n      - name: user_ID\n        value: '{{ tasks.get-user-id.outputs.result }}'\n      - name: playlist_ID\n        value: '{{ tasks.get-playlist-id.outputs.result }}'\n      - name: song_name\n        value: '{{ inputs.parameters.song_name }}'\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Adding song {{ inputs.parameters.song_name }} to playlist {{ inputs.parameters.playlist_ID }} for user {{ inputs.parameters.user_ID }}\"]\n"}, {"Id": 20, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-\nspec:\n  entrypoint: reserve-book\n  templates:\n  - name: reserve-book\n    dag:\n      tasks:\n      - name: identify-book\n        template: identify-book\n      - name: reserve-book\n        template: reserve-book\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: ISBN\n            value: '{{ tasks.identify-book.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: identify-book\n    http:\n      url: \"http://example.com/api/IdentifyBook\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"title\": \"{{ inputs.parameters.book_title }}\"}'\n  - name: reserve-book\n    http:\n      url: \"http://example.com/api/ReserveBook\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"user_email\": \"{{ inputs.parameters.user_email }}\", \"ISBN\": \"{{ tasks.identify-book.result }}\", \"start_date\": \"{{ inputs.parameters.start_date }}\", \"end_date\": \"{{ inputs.parameters.end_date }}\"}'\n  arguments:\n    parameters:\n    - name: user_email\n      value: 'emily_davis'\n    - name: book_title\n      value: 'The Great Gatsby'\n    - name: start_date\n      value: '2023-07-02'\n    - name: end_date\n      value: '2023-07-16'"}, {"Id": 21, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-\nspec:\n  entrypoint: reserve-book\n  templates:\n  - name: reserve-book\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    dag:\n      tasks:\n      - name: reserve-book\n        template: reserve-book-task\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: reserve-book-task\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; \\nprint(requests.post('http://example.com/reserve', json={'user_email': '{{ inputs.parameters.user_email }}', 'ISBN': '{{ inputs.parameters.ISBN }}', 'start_date': '{{ inputs.parameters.start_date }}', 'end_date': '{{ inputs.parameters.end_date }}'}).text)\"]\n"}, {"Id": 22, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-\nspec:\n  entrypoint: reserve-book\n  templates:\n  - name: reserve-book\n    dag:\n      tasks:\n      - name: reserve-book\n        template: reserve-book-task\n\n  - name: reserve-book-task\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    http:\n      url: \"http://example.com/api/reserveBook\"\n      method: POST\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: |\n        {\n          \"user_email\": \"{{ inputs.parameters.user_email }}\",\n          \"ISBN\": \"{{ inputs.parameters.ISBN }}\",\n          \"start_date\": \"{{ inputs.parameters.start_date }}\",\n          \"end_date\": \"{{ inputs.parameters.end_date }}\"\n        }\n    outputs:\n      parameters:\n      - name: reservation_status\n        valueFrom:\n          jsonPath: \"$.reservation_status\"\n  \n  arguments:\n    parameters:\n    - name: user_email\n      value: 'sarah_wilson@example.com'\n    - name: ISBN\n      value: '978-0-14-243724-7'\n    - name: start_date\n      value: '2023-09-12'\n    - name: end_date\n      value: '2023-09-26'"}, {"Id": 89, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-hotel-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-hotel\n        template: recommend-hotel\n      - name: book-hotel\n        template: book-hotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommend-hotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: recommend-hotel\n    http:\n      url: \"http://example.com/recommendHotel\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: star_level\n        value: '3'\n  - name: book-hotel\n    http:\n      url: \"http://example.com/bookHotel\"\n      method: \"POST\"\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: date\n      value: '2023-10-14'"}, {"Id": 90, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-hotel\n        template: recommend-hotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_level\n            value: '4'\n      - name: check-vacancy\n        template: check-vacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.recommend-hotel.outputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-room\n        template: book-room\n        when: '{{ tasks.check-vacancy.outputs.parameters.roomAvailable }} == true'\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommend-hotel.outputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: number_of_nights\n            value: '1'\n  - name: recommend-hotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    outputs:\n      parameters:\n      - name: hotel_name\n        valueFrom:\n          path: /tmp/hotel_name\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        def recommend_hotel(city, star_level):\n            # Mock implementation\n            return \"Hotel ABC\"\n        hotel_name = recommend_hotel('{{ inputs.parameters.city }}', {{ inputs.parameters.star_level }})\n        with open('/tmp/hotel_name', 'w') as f:\n            f.write(hotel_name)\n  - name: check-vacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    outputs:\n      parameters:\n      - name: roomAvailable\n        valueFrom:\n          path: /tmp/roomAvailable\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        def check_vacancy(hotelname, date):\n            # Mock implementation\n            return True\n        room_available = check_vacancy('{{ inputs.parameters.hotelname }}', '{{ inputs.parameters.date }}')\n        with open('/tmp/roomAvailable', 'w') as f:\n            f.write(json.dumps(room_available))\n  - name: book-room\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        def book_room(hotel_name, date, number_of_nights):\n            # Mock implementation\n            return \"Booking Confirmed\"\n        booking_status = book_room('{{ inputs.parameters.hotel_name }}', '{{ inputs.parameters.date }}', {{ inputs.parameters.number_of_nights }})\n        print(booking_status)\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: date\n      value: '2023-11-12'"}, {"Id": 91, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-hotel-\nspec:\n  entrypoint: book-hotel\n  templates:\n  - name: book-hotel\n    dag:\n      tasks:\n      - name: recommend-hotel\n        template: recommend-hotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_level\n            value: '2'\n      - name: book-hotel\n        template: book-hotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommend-hotel.outputs.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: recommend-hotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    http:\n      url: http://example.com/recommend-hotel\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"city\": \"{{ inputs.parameters.city }}\",\n          \"star_level\": {{ inputs.parameters.star_level }}\n        }\n  - name: book-hotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: http://example.com/book-hotel\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"hotel_name\": \"{{ inputs.parameters.hotel_name }}\",\n          \"date\": \"{{ inputs.parameters.date }}\"\n        }\n  arguments:\n    parameters:\n    - name: city\n    - name: date"}, {"Id": 92, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-hotel\n        template: recommend-hotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: book-hotel\n        template: book-hotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommend-hotel.outputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: recommend-hotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    http:\n      url: http://example.com/recommendhotel\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: star_level\n        value: '{{ inputs.parameters.star_level }}'\n  - name: book-hotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: http://example.com/bookhotel\n      method: POST\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  arguments:\n    parameters:\n    - name: city\n      value: \"{{ inputs.parameters.city }}\"\n    - name: star_level\n      value: \"5\"\n    - name: date\n      value: \"Sunday\""}, {"Id": 94, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-hotel\n        template: recommend-hotel\n      - name: check-vacancy\n        template: check-vacancy\n        dependencies: [recommend-hotel]\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.recommend-hotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-hotel\n        template: book-hotel\n        dependencies: [check-vacancy]\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommend-hotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: recommend-hotel\n    http:\n      url: \"http://example.com/recommendhotel\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: star_level\n        value: '{{ inputs.parameters.star_level }}'\n  - name: check-vacancy\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: GET\n      parameters:\n      - name: hotelname\n        value: '{{ inputs.parameters.hotelname }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: book-hotel\n    http:\n      url: \"http://example.com/bookhotel\"\n      method: POST\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'CityName'\n    - name: star_level\n      value: '2'\n    - name: date\n      value: 'Thursday'"}, {"Id": 105, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-travel-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-concerts\n        template: get-concerts\n      - name: find-taxi\n        template: find-taxi\n        dependencies: [get-concerts]\n        arguments:\n          parameters:\n          - name: ArrivalTime\n            value: '{{ tasks.get-concerts.result }}'\n  - name: get-concerts\n    http:\n      url: \"http://api.example.com/musicconcert?venue=Central%20Park\"\n      method: GET\n  - name: find-taxi\n    http:\n      url: \"http://api.example.com/findtaxi\"\n      method: POST\n      body:\n        ArrivalTime: '{{ inputs.parameters.ArrivalTime }}'\n    inputs:\n      parameters:\n      - name: ArrivalTime"}]