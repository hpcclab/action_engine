[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: playlistname2id\n        template: playlistname2id\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: playlistname2id\n        template: playlistname2id\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  arguments:\n    parameters:\n    - name: username\n      value: 'Mia'\n    - name: playlist_name\n      value: 'Classic Disco Hits'\n    - name: song_name\n      value: 'Sweet Child of Mine'"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"GET\"\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\""}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getbookidbytitle\n        template: getbookidbytitle\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - getbookidbytitle\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: ISBN\n            value: '{{ tasks.getbookidbytitle.result }}'"}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - email2userid\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: user_email\n    http:\n      url: http://example.com/api/email2userid\n      method: POST\n      body: '{\"email\": \"{{ inputs.parameters.user_email }}\"}'\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    http:\n      url: http://example.com/api/coursename2id\n      method: POST\n      body: '{\"course_name\": \"{{ inputs.parameters.course_name }}\"}'\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    http:\n      url: http://example.com/api/enrollcourse\n      method: POST\n      body: '{\"person_ID\": \"{{ inputs.parameters.person_ID }}\", \"subject_ID\": \"{{ inputs.parameters.subject_ID }}\", \"semester\": \"{{ inputs.parameters.semester }}\"}'"}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-64-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: studentname2id\n        template: studentname2id\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ tasks.email2username.result }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.studentname2id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-738-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: musicconcert\n        template: musicconcert\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - musicconcert\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.musicconcert.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: musicconcert\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: \"http://musicconcert.api/venue={{inputs.parameters.venue}}\"\n      method: GET\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: \"http://bookeventticket.api/event_ID={{inputs.parameters.event_ID}}&venue_ID={{inputs.parameters.venue_ID}}&date={{inputs.parameters.date}}\"\n      method: POST"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-ff-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.findshowtime.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: getsupplierid\n        template: getsupplierid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{ inputs.parameters.supplier_name }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - getproductid\n        - getsupplierid\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: supplier_ID\n            value: '{{ tasks.getsupplierid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{ inputs.parameters.customer_name }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getproductid\n        - getcustomerid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.city1 }}'\n          - name: city2\n            value: '{{ inputs.parameters.city2 }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflights.result }}'\n          - name: accommodation\n            value: '{{ tasks.plantrip.result }}'\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    http:\n      url: \"http://example.com/findflights\"\n      method: \"GET\"\n  - name: plantrip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    http:\n      url: \"http://example.com/plantrip\"\n      method: \"POST\"\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    http:\n      url: \"http://example.com/createtravelplan\"\n      method: \"POST\""}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: suggestdiningoptions\n    http:\n      url: http://example.com/suggestdiningoptions\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"localBudget\": \"{{ inputs.parameters.localBudget }}\",\n          \"location\": \"{{ inputs.parameters.location }}\"\n        }\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    outputs:\n      parameters:\n      - name: diningOptions\n        valueFrom:\n          jsonPath: \"$.diningOptions\""}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: productname\n            value: '{{ inputs.parameters.productname }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-206-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: rentmovie\n        template: rentmovie\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.getmovieid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: getmovieid\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Simulating movie ID retrieval\n  - name: rentmovie\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Rental successful'\"] # Simulating movie rental"}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: songtitletoid\n        template: songtitletoid\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ inputs.parameters.song_title }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - getuserid\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songtitletoid.result }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: songtitletoid\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Playing song'\"]"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.findrestaurant.result }}'\n      - name: recommenddish\n        template: recommenddish\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommenditems.result }}'"}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{ inputs.parameters.city1 }}'\n          - name: city2\n            value: '{{ inputs.parameters.city2 }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: hotelreservation\n        template: hotelreservation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - hotelreservation\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ tasks.hotelreservation.result }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - findflights\n        - plantrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflights.result }}'\n          - name: accommodation\n            value: '{{ tasks.plantrip.result }}'"}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookreview\n        template: getbookreview\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{ inputs.parameters.bookname }}'\n      - name: sharereview\n        template: sharereview\n        dependencies:\n        - getbookreview\n        arguments:\n          parameters:\n          - name: review\n            value: '{{ tasks.getbookreview.result }}'\n          - name: social_media_platform\n            value: '{{ inputs.parameters.social_media_platform }}'\n  - name: getbookreview\n    inputs:\n      parameters:\n      - name: bookname\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching review for {{inputs.parameters.bookname}}'\"]\n  - name: sharereview\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Sharing review on {{inputs.parameters.social_media_platform}}'\"]"}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-appointment-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: getappointment\n        template: getappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{ tasks.finddoctor.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - getappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.getappointment.result }}'"}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpurchaseinfo\n        template: getpurchaseinfo\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: getproductrating\n        template: getproductrating\n        dependencies:\n        - getpurchaseinfo\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{ tasks.getpurchaseinfo.result }}'\n          - name: number_of_ratings\n            value: '{{ inputs.parameters.number_of_ratings }}'\n  - name: getpurchaseinfo\n    http:\n      url: http://example.com/getpurchaseinfo\n      method: GET\n      parameters:\n      - name: product_id\n        value: '{{ inputs.parameters.product_id }}'\n  - name: getproductrating\n    http:\n      url: http://example.com/getproductrating\n      method: GET\n      parameters:\n      - name: purchase_info\n        value: '{{ inputs.parameters.purchase_info }}'\n      - name: number_of_ratings\n        value: '{{ inputs.parameters.number_of_ratings }}'"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: cinema-finder-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findnearestcinema\n    http:\n      url: http://example.com/findnearestcinema\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"movieDetails\": \"{{ inputs.parameters.movieDetails }}\"}'\n    outputs:\n      parameters:\n      - name: cinemaLocation\n        valueFrom:\n          jsonPath: \"$.cinemaLocation\""}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-vegan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmenu\n        template: getmenu\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ inputs.parameters.restaurant }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - getmenu\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.getmenu.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ inputs.parameters.restaurant_info }}'\n          - name: food_list\n            value: '{{ tasks.suggestfood.result }}'"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcoachellacoordinates\n        template: getcoachellacoordinates\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: getstartdate\n        template: getstartdate\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: predictweather\n        template: predictweather\n        dependencies:\n        - getcoachellacoordinates\n        - getstartdate\n        arguments:\n          parameters:\n          - name: coordinates\n            value: '{{ tasks.getcoachellacoordinates.result }}'\n          - name: date\n            value: '{{ tasks.getstartdate.result }}'"}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-library-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: author_name\n            value: '{{ inputs.parameters.author_name }}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: addbooktoauthor\n        template: addbooktoauthor\n        dependencies:\n        - getauthorid\n        - getbookid\n        arguments:\n          parameters:\n          - name: author_ID\n            value: '{{ tasks.getauthorid.result }}'\n          - name: book_ID\n            value: '{{ tasks.getbookid.result }}'"}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1112-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflightavailability\n        template: checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_code\n            value: '{{ inputs.parameters.flight_code }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.checkflightavailability.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  - name: checkflightavailability\n    inputs:\n      parameters:\n      - name: flight_code\n      - name: date\n    http:\n      url: \"http://example.com/checkflightavailability\"\n      method: \"GET\"\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    http:\n      url: \"http://example.com/bookflight\"\n      method: \"POST\""}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recipe-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrecipe\n        template: findrecipe\n        arguments:\n          parameters:\n          - name: dish\n            value: '{{ inputs.parameters.dish }}'\n      - name: ingredientname2id\n        template: ingredientname2id\n        arguments:\n          parameters:\n          - name: ingredient_name\n            value: '{{ inputs.parameters.ingredient_name }}'\n      - name: recipename2id\n        template: recipename2id\n        dependencies:\n        - findrecipe\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{ tasks.findrecipe.result }}'\n      - name: getrecipe\n        template: getrecipe\n        dependencies:\n        - recipename2id\n        - ingredientname2id\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{ tasks.recipename2id.result }}'\n          - name: ingredient_ID\n            value: '{{ tasks.ingredientname2id.result }}'"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - title2isbn\n        - username2email\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: booktitle2id\n        template: booktitle2id\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - email2userid\n        - booktitle2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: book_ID\n            value: '{{ tasks.booktitle2id.result }}'\n  templates:\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    http:\n      url: \"http://example.com/api/email2userid\"\n      method: \"POST\"\n      body: \"{ 'email': '{{ inputs.parameters.email }}' }\"\n  - name: booktitle2id\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: \"http://example.com/api/booktitle2id\"\n      method: \"POST\"\n      body: \"{ 'book_title': '{{ inputs.parameters.book_title }}' }\"\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    http:\n      url: \"http://example.com/api/borrowbook\"\n      method: \"POST\"\n      body: \"{ 'user_ID': '{{ inputs.parameters.user_ID }}', 'book_ID': '{{ inputs.parameters.book_ID }}' }\""}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherinfo\n        template: getweatherinfo\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: generateweatherreport\n        template: generateweatherreport\n        dependencies:\n        - getweatherinfo\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{ tasks.getweatherinfo.result }}'\n  - name: getweatherinfo\n    http:\n      url: \"http://weatherapi.com/getweatherinfo\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: generateweatherreport\n    http:\n      url: \"http://weatherapi.com/generateweatherreport\"\n      method: \"POST\"\n      parameters:\n      - name: weather_data\n        value: '{{ inputs.parameters.weather_data }}'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-391-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercurrentweather\n        template: getusercurrentweather\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: weather2advice\n        template: weather2advice\n        dependencies:\n        - getusercurrentweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getusercurrentweather.result }}'\n  - name: getusercurrentweather\n    http:\n      url: http://example.com/getusercurrentweather\n      method: GET\n      parameters:\n      - name: user_name\n        value: '{{ inputs.parameters.user_name }}'\n  - name: weather2advice\n    http:\n      url: http://example.com/weather2advice\n      method: GET\n      parameters:\n      - name: weather\n        value: '{{ inputs.parameters.weather }}'"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getmovietheater\n        template: getmovietheater\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findshowtime\n        - getmovietheater\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-83-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - getbookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_ID\n            value: '{{ tasks.getbookid.result }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - getbookid\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ tasks.getbookid.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2isbn.result }}'\n  templates:\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    http:\n      url: http://example.com/getuserid\n      method: GET\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"username\": \"{{ inputs.parameters.username }}\"}'\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: http://example.com/title2isbn\n      method: GET\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"title\": \"{{ inputs.parameters.title }}\"}'\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    http:\n      url: http://example.com/borrowbook\n      method: POST\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"user_ID\": \"{{ inputs.parameters.user_ID }}\", \"book_ID\": \"{{ inputs.parameters.book_ID }}\"}'"}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: date\n            value: '{{ inputs.parameters.check_in_date }}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: number_of_rooms\n            value: '{{ inputs.parameters.number_of_rooms }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: \"GET\"\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/roombooking\"\n      method: \"POST\""}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-216-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n      - name: isbn2bookname\n        template: isbn2bookname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: returnbook\n        template: returnbook\n        dependencies:\n        - getuserid\n        - isbn2bookname\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_name\n            value: '{{ tasks.isbn2bookname.result }}'"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n      - name: productname2id\n        template: productname2id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: purchaseproduct\n        template: purchaseproduct\n        dependencies:\n        - email2userid\n        - productname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: product_ID\n            value: '{{ tasks.productname2id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: user_email\n    http:\n      url: \"http://example.com/api/email2userid\"\n      method: \"POST\"\n      body: \"{ 'email': '{{ inputs.parameters.user_email }}' }\"\n  - name: productname2id\n    inputs:\n      parameters:\n      - name: product_name\n    http:\n      url: \"http://example.com/api/productname2id\"\n      method: \"POST\"\n      body: \"{ 'product_name': '{{ inputs.parameters.product_name }}' }\"\n  - name: purchaseproduct\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    http:\n      url: \"http://example.com/api/purchaseproduct\"\n      method: \"POST\"\n      body: \"{ 'user_ID': '{{ inputs.parameters.user_ID }}', 'product_ID': '{{ inputs.parameters.product_ID }}', 'quantity': '{{ inputs.parameters.quantity }}' }\""}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: moviename2id\n        template: moviename2id\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - moviename2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.moviename2id.result }}'"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-135-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: addbooktoreadinglist\n        template: addbooktoreadinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n  - name: addbooktoreadinglist\n    http:\n      url: http://example.com/api/AddBookToReadingList\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_name\": \"{{ inputs.parameters.user_name }}\",\n          \"book_title\": \"{{ inputs.parameters.book_title }}\"\n        }\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'john_reads'\n    - name: book_title\n      value: 'The Great Gatsby'"}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurantid\n        template: findrestaurantid\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - findrestaurantid\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: findrestaurantid\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: location\n    http:\n      url: http://example.com/findrestaurantid\n      method: GET\n      parameters:\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n  - name: reservetable\n    inputs:\n      parameters:\n      - name: restaurant_ID\n      - name: date\n      - name: time\n    http:\n      url: http://example.com/reservetable\n      method: POST\n      parameters:\n      - name: restaurant_ID\n        value: '{{ inputs.parameters.restaurant_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorname\n        template: getauthorname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - getauthorname\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthorname.result }}'\n      - name: schedulediscussion\n        template: schedulediscussion\n        dependencies:\n        - checkauthoravailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthorname.result }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: getauthorname\n    inputs:\n      parameters:\n      - name: ISBN\n    http:\n      url: http://example.com/getauthorname\n      method: GET\n      parameters:\n      - name: ISBN\n        value: '{{ inputs.parameters.ISBN }}'\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    http:\n      url: http://example.com/checkauthoravailability\n      method: GET\n      parameters:\n      - name: user_ID\n        value: '{{ inputs.parameters.user_ID }}'\n      - name: author_name\n        value: '{{ inputs.parameters.author_name }}'\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    http:\n      url: http://example.com/schedulediscussion\n      method: POST\n      parameters:\n      - name: user_ID\n        value: '{{ inputs.parameters.user_ID }}'\n      - name: author_name\n        value: '{{ inputs.parameters.author_name }}'\n      - name: date_time\n        value: '{{ inputs.parameters.date_time }}'"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: reservehotel\n        template: reservehotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: weather_status\n            value: '{{ tasks.getweather.result }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - searchflight\n        - reservehotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.searchflight.result }}'\n          - name: accommodation\n            value: '{{ tasks.reservehotel.result }}'\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchmovie\n        template: searchmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - searchmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.searchmovie.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: reservetickets\n        template: reservetickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  templates:\n  - name: searchmovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    http:\n      url: \"http://example.com/api/searchmovie\"\n      method: \"GET\"\n      parameters:\n      - name: genre\n        value: \"{{ inputs.parameters.genre }}\"\n      - name: location\n        value: \"{{ inputs.parameters.location }}\"\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/api/findshowtime\"\n      method: \"GET\"\n      parameters:\n      - name: movie_name\n        value: \"{{ inputs.parameters.movie_name }}\"\n      - name: location\n        value: \"{{ inputs.parameters.location }}\"\n      - name: date\n        value: \"{{ inputs.parameters.date }}\"\n  - name: reservetickets\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/api/reservetickets\"\n      method: \"POST\"\n      parameters:\n      - name: showtime\n        value: \"{{ inputs.parameters.showtime }}\"\n      - name: number_of_tickets\n        value: \"{{ inputs.parameters.number_of_tickets }}\""}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-verify-book-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: bookstore_location\n            value: '{{ tasks.findbookstore.result }}'\n          - name: product_name\n            value: '{{ inputs.parameters.book_information }}'\n  templates:\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findnearestbookstore\n      method: GET\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    http:\n      url: http://example.com/findbookstore\n      method: GET\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: bookstore_location\n      - name: product_name\n    http:\n      url: http://example.com/checkavailability\n      method: GET"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-491-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocaltheater\n        template: getlocaltheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentplays\n        template: getcurrentplays\n        dependencies:\n        - getlocaltheater\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{ tasks.getlocaltheater.result }}'\n      - name: getplayreviews\n        template: getplayreviews\n        dependencies:\n        - getcurrentplays\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{ tasks.getcurrentplays.result }}'\n  templates:\n  - name: getlocaltheater\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/getlocaltheater\n      method: GET\n  - name: getcurrentplays\n    inputs:\n      parameters:\n      - name: theater_name\n    http:\n      url: http://example.com/getcurrentplays\n      method: GET\n  - name: getplayreviews\n    inputs:\n      parameters:\n      - name: play_name\n    http:\n      url: http://example.com/getplayreviews\n      method: GET"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-492-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalmusicstore\n        template: getlocalmusicstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentalbums\n        template: getcurrentalbums\n        dependencies:\n        - getlocalmusicstore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ tasks.getlocalmusicstore.result }}'\n      - name: getalbumreviews\n        template: getalbumreviews\n        dependencies:\n        - getcurrentalbums\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{ tasks.getcurrentalbums.result }}'\n  - name: getlocalmusicstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/getlocalmusicstore\"\n      method: \"GET\"\n  - name: getcurrentalbums\n    inputs:\n      parameters:\n      - name: store_name\n    http:\n      url: \"http://example.com/getcurrentalbums\"\n      method: \"GET\"\n  - name: getalbumreviews\n    inputs:\n      parameters:\n      - name: album_name\n    http:\n      url: \"http://example.com/getalbumreviews\"\n      method: \"GET\""}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-dumplings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ inputs.parameters.dish_name }}'\n          - name: restaurant_name\n            value: '{{ tasks.findrestaurant.result }}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/findrestaurant\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cuisine\n        value: '{{ inputs.parameters.cuisine }}'\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: http://example.com/orderfood\n      method: POST\n      parameters:\n      - name: dish_name\n        value: '{{ inputs.parameters.dish_name }}'\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'"}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-decision-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstockprice\n        template: getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n      - name: predictfuturestockprice\n        template: predictfuturestockprice\n        dependencies:\n        - getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n      - name: suggeststockaction\n        template: suggeststockaction\n        dependencies:\n        - predictfuturestockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n          - name: futurePrice\n            value: '{{ tasks.predictfuturestockprice.result }}'"}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-savings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: trackspending\n        template: trackspending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{ inputs.parameters.username }}'\n      - name: calculatesavings\n        template: calculatesavings\n        dependencies:\n        - trackspending\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{ tasks.trackspending.result }}'\n      - name: suggestinvestment\n        template: suggestinvestment\n        dependencies:\n        - calculatesavings\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{ tasks.calculatesavings.result }}'"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisineType\n            value: '{{ inputs.parameters.cuisineType }}'\n      - name: filterrestaurant\n        template: filterrestaurant\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.findrestaurant.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - filterrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurant.result }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommenditems.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisineType\n    http:\n      url: http://example.com/findrestaurant\n      method: GET\n  - name: filterrestaurant\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterrestaurant\n      method: GET\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: http://example.com/recommenditems\n      method: GET\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestfood\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Los Angeles'\n    - name: cuisineType\n      value: 'Chinese'\n    - name: restrictions\n      value: 'gluten intolerant'\n    - name: dietary_preferences\n      value: 'gluten intolerant'"}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurants\n        template: findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisineType\n            value: '{{ inputs.parameters.cuisineType }}'\n      - name: filterrestaurantbydietaryrestrictions\n        template: filterrestaurantbydietaryrestrictions\n        dependencies:\n        - findrestaurants\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.findrestaurants.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: menudetails\n        template: menudetails\n        dependencies:\n        - filterrestaurantbydietaryrestrictions\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurantbydietaryrestrictions.result }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - menudetails\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.menudetails.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.suggestfood.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurantbydietaryrestrictions.result }}'"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-movie-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: averagerating\n        template: averagerating\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{ tasks.getmovieratings.result }}'\n  - name: getmovieratings\n    inputs:\n      parameters:\n      - name: movie\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '[4.5, 4.7, 4.8]' # Simulated API call\"]\n  - name: averagerating\n    inputs:\n      parameters:\n      - name: ratingScores\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '4.67' # Simulated API call\"]"}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n      - name: getratings\n        template: getratings\n        dependencies:\n        - getmovieid\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.getmovieid.result }}'\n      - name: highestrating\n        template: highestrating\n        dependencies:\n        - getratings\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{ tasks.getratings.result }}'\n  templates:\n  - name: getmovieid\n    http:\n      url: http://example.com/api/MovieTitle2ID\n      method: POST\n      body: '{\"movie_title\": \"{{ inputs.parameters.movie_title }}\"}'\n  - name: getratings\n    http:\n      url: http://example.com/api/MovieRating\n      method: POST\n      body: '{\"movie_id\": \"{{ tasks.getmovieid.result }}\"}'\n  - name: highestrating\n    http:\n      url: http://example.com/api/HighestRating\n      method: POST\n      body: '{\"rating_scores\": \"{{ tasks.getratings.result }}\"}'\n  arguments:\n    parameters:\n    - name: movie_title\n      value: 'Titanic'"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: upgrade-seat-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightid\n        template: getflightid\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: seatselection\n        template: seatselection\n        dependencies:\n        - getflightid\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.getflightid.result }}'\n      - name: upgradeavailability\n        template: upgradeavailability\n        dependencies:\n        - seatselection\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{ tasks.seatselection.result }}'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-356-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.startPoint }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.endPoint }}'\n      - name: seatclassavailability\n        template: seatclassavailability\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.findflight.result }}'\n      - name: bestseatclass\n        template: bestseatclass\n        dependencies:\n        - seatclassavailability\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{ tasks.seatclassavailability.result }}'\n  templates:\n  - name: findflight\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    http:\n      url: http://example.com/findflight\n      method: GET\n  - name: seatclassavailability\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: http://example.com/seatclassavailability\n      method: GET\n  - name: bestseatclass\n    inputs:\n      parameters:\n      - name: seat_classes\n    http:\n      url: http://example.com/bestseatclass\n      method: GET"}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: bookstore-locator-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'\n      - name: bookstorelocator\n        template: bookstorelocator\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-999-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemprice\n        template: getitemprice\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{ inputs.parameters.item_id }}'\n      - name: getconversionrate\n        template: getconversionrate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'EUR'\n          - name: to_currency\n            value: 'JPY'\n      - name: calculateprice\n        template: calculateprice\n        dependencies:\n        - getitemprice\n        - getconversionrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getitemprice.result }}'\n          - name: conversion_rate\n            value: '{{ tasks.getconversionrate.result }}'\n  templates:\n  - name: getitemprice\n    http:\n      url: \"http://example.com/api/itemprice\"\n      method: \"GET\"\n      parameters:\n      - name: item_id\n        value: '{{ inputs.parameters.item_id }}'\n  - name: getconversionrate\n    http:\n      url: \"http://example.com/api/currencyconversion\"\n      method: \"GET\"\n      parameters:\n      - name: from_currency\n        value: 'EUR'\n      - name: to_currency\n        value: 'JPY'\n  - name: calculateprice\n    http:\n      url: \"http://example.com/api/calculateprice\"\n      method: \"POST\"\n      parameters:\n      - name: price\n        value: '{{ tasks.getitemprice.result }}'\n      - name: conversion_rate\n        value: '{{ tasks.getconversionrate.result }}'"}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookdetails\n        template: getbookdetails\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.title }}'\n      - name: reviewgenerator\n        template: reviewgenerator\n        dependencies:\n        - getbookdetails\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{ tasks.getbookdetails.result }}'\n          - name: authorData\n            value: '{{ tasks.getauthordetails.result }}'\n  templates:\n  - name: getbookdetails\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: http://example.com/api/bookdetails\n      method: GET\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"title\": \"{{ inputs.parameters.title }}\"}'\n  - name: getauthordetails\n    inputs:\n      parameters:\n      - name: bookTitle\n    http:\n      url: http://example.com/api/authordetails\n      method: GET\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"bookTitle\": \"{{ inputs.parameters.bookTitle }}\"}'\n  - name: reviewgenerator\n    inputs:\n      parameters:\n      - name: bookdetails\n      - name: authorData\n    http:\n      url: http://example.com/api/reviewgenerator\n      method: POST\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: '{\"bookdetails\": {{ inputs.parameters.bookdetails }}, \"authorData\": {{ inputs.parameters.authorData }} }'"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendrecommendation.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://api.example.com/findshowtime\"\n      method: \"GET\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: star_level\n    http:\n      url: \"http://api.example.com/recommendrecommendation\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n      - name: star_level\n        value: '{{ inputs.parameters.star_level }}'\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://api.example.com/bookrestaurant\"\n      method: \"POST\"\n      parameters:\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://api.example.com/bookmovieticket\"\n      method: \"POST\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-409-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcarinfo\n        template: getcarinfo\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{ inputs.parameters.car_name }}'\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: gettaxrate\n        template: gettaxrate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: calculateTaxCost\n        template: calculateTaxCost\n        dependencies:\n        - getcarinfo\n        - gettaxrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getcarinfo.result.price }}'\n          - name: tax_rate\n            value: '{{ tasks.gettaxrate.result }}'\n  - name: getcarinfo\n    inputs:\n      parameters:\n      - name: car_name\n      - name: country\n    http:\n      url: http://carinfo.api/get\n      method: GET\n      parameters:\n      - name: car_name\n        value: '{{ inputs.parameters.car_name }}'\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: gettaxrate\n    inputs:\n      parameters:\n      - name: country\n    http:\n      url: http://countrytaxrate.api/get\n      method: GET\n      parameters:\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: calculateTaxCost\n    inputs:\n      parameters:\n      - name: price\n      - name: tax_rate\n    http:\n      url: http://taxcostcalculator.api/calculate\n      method: POST\n      parameters:\n      - name: price\n        value: '{{ inputs.parameters.price }}'\n      - name: tax_rate\n        value: '{{ inputs.parameters.tax_rate }}'"}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        dependencies:\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ tasks.findpopulardishes.result }}'\n          - name: weather\n            value: '{{ inputs.parameters.weather }}'\n      - name: menuselection\n        template: menuselection\n        dependencies:\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: restaurantInfo\n            value: '{{ tasks.restaurantrecommend.result }}'\n          - name: cuisineRec\n            value: '{{ tasks.findpopulardishes.result }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - menuselection\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.menuselection.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'"}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtime\n        template: getshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - getshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.getshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: city\n    http:\n      url: \"http://example.com/getshowtime\"\n      method: GET\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: POST\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: star_rating\n            value: '{{ inputs.parameters.star_rating }}'\n      - name: checkvacancy\n        template: checkvacancy\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.findhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.check_in_date }}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.findhotel.result }}'\n          - name: number_of_rooms\n            value: '{{ inputs.parameters.number_of_rooms }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n  - name: findhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_rating\n    http:\n      url: \"http://example.com/findhotel\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: star_rating\n        value: '{{ inputs.parameters.star_rating }}'\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: \"GET\"\n      parameters:\n      - name: hotelname\n        value: '{{ inputs.parameters.hotelname }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/roombooking\"\n      method: \"POST\"\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n      - name: number_of_rooms\n        value: '{{ inputs.parameters.number_of_rooms }}'\n      - name: check_in_date\n        value: '{{ inputs.parameters.check_in_date }}'\n      - name: check_out_date\n        value: '{{ inputs.parameters.check_out_date }}'"}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: createappointment\n        template: createappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{ tasks.finddoctor.result }}'\n          - name: patientId\n            value: '{{ inputs.parameters.patientId }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - createappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.createappointment.result }}'\n  templates:\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: http://finddoctor.api\n      method: GET\n  - name: createappointment\n    inputs:\n      parameters:\n      - name: doctorId\n      - name: patientId\n      - name: date\n      - name: time\n    http:\n      url: http://createappointment.api\n      method: POST\n  - name: confirmappointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: http://confirmappointment.api\n      method: POST"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchmovie\n        template: searchmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - searchmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.searchmovie.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.searchmovie.result }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: searchmovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    http:\n      url: http://example.com/api/searchmovie\n      method: GET\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: http://example.com/api/findshowtime\n      method: GET\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: http://example.com/api/booktickets\n      method: POST"}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendmovie\n        template: recommendmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - recommendmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.recommendmovie.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.recommendmovie.result }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: recommendmovie\n    inputs:\n      parameters:\n      - name: genre\n    http:\n      url: http://example.com/recommendmovie\n      method: GET\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: http://example.com/findshowtime\n      method: GET\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: http://example.com/booktickets\n      method: POST"}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-242-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpersonid\n        template: getpersonid\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getflightnumber\n        template: getflightnumber\n        dependencies:\n        - getpersonid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.getpersonid.result }}'\n      - name: checkflightstatus\n        template: checkflightstatus\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{ tasks.getflightnumber.result }}'"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: resturantnearcinema\n        template: resturantnearcinema\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cinema_name\n            value: '{{ tasks.findnearestcinema.result }}'\n      - name: reservationmaker\n        template: reservationmaker\n        dependencies:\n        - resturantnearcinema\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.resturantnearcinema.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-readtime-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbooktitle\n        template: getbooktitle\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: pagecount\n        template: pagecount\n        dependencies:\n        - getbooktitle\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{ tasks.getbooktitle.result }}'\n      - name: readingtime\n        template: readingtime\n        dependencies:\n        - pagecount\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{ tasks.pagecount.result }}'\n  - name: getbooktitle\n    inputs:\n      parameters:\n      - name: ISBN\n    http:\n      url: http://example.com/api/ISBN2Title\n      method: GET\n      parameters:\n      - name: ISBN\n        value: '{{ inputs.parameters.ISBN }}'\n  - name: pagecount\n    inputs:\n      parameters:\n      - name: Title\n    http:\n      url: http://example.com/api/PageCount\n      method: GET\n      parameters:\n      - name: Title\n        value: '{{ inputs.parameters.Title }}'\n  - name: readingtime\n    inputs:\n      parameters:\n      - name: Pages\n    http:\n      url: http://example.com/api/ReadingTime\n      method: GET\n      parameters:\n      - name: Pages\n        value: '{{ inputs.parameters.Pages }}'"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: shoppingassistant\n        template: shoppingassistant\n        dependencies:\n        - findclothes\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.findclothes.result }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-623-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: calculatedistance\n        template: calculatedistance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.origin }}'\n          - name: end_point\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - calculatedistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculatedistance.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - calculatedistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.calculatedistance.result }}'\n          - name: time\n            value: '{{ tasks.calculatetime.result }}'"}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchstockdata\n        template: fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{ inputs.parameters.stock_symbol }}'\n      - name: basicdataanalysis\n        template: basicdataanalysis\n        dependencies:\n        - fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{ tasks.fetchstockdata.result }}'\n      - name: generatereport\n        template: generatereport\n        dependencies:\n        - basicdataanalysis\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{ tasks.basicdataanalysis.result }}'\n          - name: template\n            value: '{{ inputs.parameters.template }}'\n  - name: fetchstockdata\n    inputs:\n      parameters:\n      - name: stock_symbol\n    container:\n      image: stock-data-fetcher\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"stock_data\\\": \\\"sample_data\\\"}'\"]\n  - name: basicdataanalysis\n    inputs:\n      parameters:\n      - name: stock_data\n    container:\n      image: data-analyzer\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"analyzed_data\\\": \\\"sample_analysis\\\"}'\"]\n  - name: generatereport\n    inputs:\n      parameters:\n      - name: analyzed_data\n      - name: template\n    container:\n      image: report-generator\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"report\\\": \\\"sample_report\\\"}'\"]"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - email2userid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: email2userid-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.email }}\"]\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: purchaseitem-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_ID }} {{ inputs.parameters.product_ID }} {{ inputs.parameters.quantity }}\"]"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22222-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpricebyid\n        template: getpricebyid\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: getexchangerate\n        template: getexchangerate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'BRL'\n          - name: to_currency\n            value: 'CNY'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - getpricebyid\n        - getexchangerate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getpricebyid.result }}'\n          - name: exchange_rate\n            value: '{{ tasks.getexchangerate.result }}'"}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.searchflight.result }}'\n      - name: suggestluggage\n        template: suggestluggage\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: baggage_allowance\n            value: '{{ tasks.checkluggageallowance.result }}'\n          - name: trip_duration\n            value: '{{ inputs.parameters.trip_duration }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.searchflight.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtimes\n        template: getshowtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: bookmovietickets\n        template: bookmovietickets\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.getshowtimes.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: getshowtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    http:\n      url: \"http://example.com/getshowtimes\"\n      method: \"GET\"\n  - name: bookmovietickets\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookmovietickets\"\n      method: \"POST\""}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookidbytitle\n        template: getbookidbytitle\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: booksearch\n        template: booksearch\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - getbookidbytitle\n        - booksearch\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{ tasks.getbookidbytitle.result }}'\n          - name: author_ID\n            value: '{{ tasks.booksearch.result }}'"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-2023-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchweather\n        template: fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: searchevents\n        template: searchevents\n        dependencies:\n        - fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: planactivities\n        template: planactivities\n        dependencies:\n        - fetchweather\n        - searchevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.fetchweather.result }}'\n          - name: events\n            value: '{{ tasks.searchevents.result }}'\n      - name: bookticket\n        template: bookticket\n        dependencies:\n        - planactivities\n        arguments:\n          parameters:\n          - name: eventDetails\n            value: '{{ tasks.planactivities.result }}'\n          - name: num_of_tickets\n            value: '1'"}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findcinemas\n        template: findcinemas\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: checkshowtimes\n        template: checkshowtimes\n        dependencies:\n        - findcinemas\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{ tasks.findcinemas.result }}'\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findcinemas\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo finding cinemas for {{ inputs.parameters.movieDetails }}\"]\n  - name: checkshowtimes\n    inputs:\n      parameters:\n      - name: cinemaLocations\n      - name: movieDetails\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo checking showtimes for {{ inputs.parameters.movieDetails }} at {{ inputs.parameters.cinemaLocations }}\"]"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethoteldetails\n        template: gethoteldetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - gethoteldetails\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.gethoteldetails.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: reservationbooking\n        template: reservationbooking\n        dependencies:\n        - bookhotel\n        - bookrestaurant\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ tasks.bookhotel.result }}'\n          - name: restaurantLocations\n            value: '{{ tasks.bookrestaurant.result }}'"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - dresssuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: outfit\n            value: '{{ tasks.dresssuggestion.result }}'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.getweather.result }}'\n  - name: getweather\n    http:\n      url: http://weatherapi.example.com/forecast\n      method: GET\n      parameters:\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: suggestactivity\n    http:\n      url: http://activityapi.example.com/suggest\n      method: GET\n      parameters:\n      - name: weather_condition\n        value: '{{ inputs.parameters.weather_condition }}'\n  arguments:\n    parameters:\n    - name: location\n      value: '192.168.0.254'\n    - name: date\n      value: '2023-07-23'"}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'"}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/current?city={{inputs.parameters.city}}\"\n      method: GET\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/forecast?city={{inputs.parameters.city}}&date={{inputs.parameters.date}}\"\n      method: GET\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: \"http://compareweatherapi.com/compare?current={{inputs.parameters.current_weather}}&forecast={{inputs.parameters.weather_forecast}}\"\n      method: GET"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: eventsuggestions\n        template: eventsuggestions\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ inputs.parameters.weather }}'\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: tablereservation\n        template: tablereservation\n        dependencies:\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: weatherDetails\n            value: '{{ inputs.parameters.weather }}'\n          - name: restaurantDetails\n            value: '{{ tasks.restaurantrecommend.result }}'\n          - name: num_of_people\n            value: '{{ inputs.parameters.num_of_people }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: eventsuggestions\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/eventsuggestions\"\n      method: \"GET\"\n  - name: restaurantrecommend\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    http:\n      url: \"http://example.com/restaurantrecommend\"\n      method: \"GET\"\n  - name: suggestdiningoptions\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    http:\n      url: \"http://example.com/suggestdiningoptions\"\n      method: \"GET\"\n  - name: tablereservation\n    inputs:\n      parameters:\n      - name: weatherDetails\n      - name: restaurantDetails\n      - name: num_of_people\n      - name: date\n    http:\n      url: \"http://example.com/tablereservation\"\n      method: \"POST\""}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: fashionstore\n        template: fashionstore\n        dependencies:\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: clothes\n            value: '{{ tasks.getclothingadvice.result }}'\n          - name: location\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-623-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdrivingdistance\n        template: getdrivingdistance\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.origin }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getdrivingdistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.getdrivingdistance.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - getdrivingdistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.getdrivingdistance.result }}'\n          - name: time\n            value: '{{ tasks.calculatetime.result }}'\n  arguments:\n    parameters:\n    - name: origin\n      value: 'San Francisco'\n    - name: destination\n      value: 'Los Angeles'\n    - name: speed\n      value: '55'"}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-steak-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: 'steak'\n          - name: restaurant_name\n            value: '{{ tasks.searchrestaurant.result }}'\n  templates:\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/api/searchrestaurant\n      method: GET\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/api/restaurantlocation\n      method: GET\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: http://example.com/api/orderfood\n      method: POST"}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-fcbarcelona-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: footballteaminfo\n        template: footballteaminfo\n        arguments:\n          parameters:\n          - name: team_name\n            value: '{{ inputs.parameters.team_name }}'\n      - name: gameschedule\n        template: gameschedule\n        dependencies:\n        - footballteaminfo\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{ tasks.footballteaminfo.result }}'\n      - name: ticketprice\n        template: ticketprice\n        dependencies:\n        - gameschedule\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{ tasks.gameschedule.result }}'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n      - name: findoutdooractivities\n        template: findoutdooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: weatherForecast\n            value: '{{ inputs.parameters.weatherForecast }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - searchflight\n        - bookhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.searchflight.result }}'\n          - name: accommodation\n            value: '{{ tasks.bookhotel.result }}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - findoutdooractivities\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ inputs.parameters.weatherForecast }}'\n          - name: activities\n            value: '{{ tasks.findoutdooractivities.result }}'\n          - name: suggested_restaurant\n            value: '{{ inputs.parameters.suggested_restaurant }}'"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-401-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: restaurantrecommendation\n        template: restaurantrecommendation\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_list\n            value: '{{ tasks.recommendrecommendation.result }}'"}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getpopulation\n        template: getpopulation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getweather\n        - getpopulation\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: population\n            value: '{{ tasks.getpopulation.result }}'\n  templates:\n  - name: getweather\n    http:\n      url: http://weatherapi.com/get?city={{ inputs.parameters.city }}\n      method: GET\n  - name: getpopulation\n    http:\n      url: http://populationapi.com/get?city={{ inputs.parameters.city }}\n      method: GET\n  - name: weatherimpactonpopulation\n    http:\n      url: http://weatherimpactapi.com/calculate\n      method: POST\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\", \"population\": \"{{ inputs.parameters.population }}\"}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Tokyo'"}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: authorofbook\n        template: authorofbook\n        dependencies:\n        - getbookid\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{ tasks.getbookid.result }}'\n      - name: booksbyauthor\n        template: booksbyauthor\n        dependencies:\n        - authorofbook\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{ tasks.authorofbook.result }}'\n  templates:\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: http://example.com/getbookid\n      method: GET\n      headers:\n      - name: Content-Type\n        value: application/json\n      body: '{\"book_title\": \"{{ inputs.parameters.book_title }}\"}'\n  - name: authorofbook\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: http://example.com/authorofbook\n      method: GET\n      headers:\n      - name: Content-Type\n        value: application/json\n      body: '{\"book_id\": \"{{ inputs.parameters.book_id }}\"}'\n  - name: booksbyauthor\n    inputs:\n      parameters:\n      - name: author_id\n    http:\n      url: http://example.com/booksbyauthor\n      method: GET\n      headers:\n      - name: Content-Type\n        value: application/json\n      body: '{\"author_id\": \"{{ inputs.parameters.author_id }}\"}'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchfare\n        template: searchfare\n        arguments:\n          parameters:\n          - name: src\n            value: '{{ inputs.parameters.src }}'\n          - name: dest\n            value: '{{ inputs.parameters.dest }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: checkdiscount\n        template: checkdiscount\n        dependencies:\n        - searchfare\n        arguments:\n          parameters:\n          - name: coupon\n            value: '{{ inputs.parameters.coupon }}'\n          - name: fare_id\n            value: '{{ tasks.searchfare.result }}'\n      - name: calculatefinalfare\n        template: calculatefinalfare\n        dependencies:\n        - checkdiscount\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{ tasks.searchfare.result }}'\n          - name: discount_amount\n            value: '{{ tasks.checkdiscount.result }}'\n  - name: searchfare\n    inputs:\n      parameters:\n      - name: src\n      - name: dest\n      - name: date\n    http:\n      url: \"http://example.com/searchfare\"\n      method: \"POST\"\n  - name: checkdiscount\n    inputs:\n      parameters:\n      - name: coupon\n      - name: fare_id\n    http:\n      url: \"http://example.com/checkdiscount\"\n      method: \"POST\"\n  - name: calculatefinalfare\n    inputs:\n      parameters:\n      - name: fare_id\n      - name: discount_amount\n    http:\n      url: \"http://example.com/calculatefinalfare\"\n      method: \"POST\""}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n      - name: planitinerary\n        template: planitinerary\n        dependencies:\n        - searchflight\n        - bookhotel\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: interests\n            value: '{{ inputs.parameters.interests }}'\n          - name: flight\n            value: '{{ tasks.searchflight.result }}'\n          - name: hotel\n            value: '{{ tasks.bookhotel.result }}'"}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: dinnerreservation\n        template: dinnerreservation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.searchrestaurant.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: findroute\n        template: findroute\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{ inputs.parameters.start_location }}'\n          - name: end_location\n            value: '{{ tasks.restaurantlocation.result }}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/searchrestaurant\n      method: GET\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/restaurantlocation\n      method: GET\n  - name: dinnerreservation\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: time\n    http:\n      url: http://example.com/dinnerreservation\n      method: POST\n  - name: findroute\n    inputs:\n      parameters:\n      - name: start_location\n      - name: end_location\n    http:\n      url: http://example.com/findroute\n      method: GET\n"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: timecalculator\n        template: timecalculator\n        dependencies:\n        - gettrafficupdate\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{ tasks.gettrafficupdate.result }}'\n          - name: modeOfTransport\n            value: 'bus'\n      - name: fetchnextbus\n        template: fetchnextbus\n        dependencies:\n        - timecalculator\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{ tasks.timecalculator.result }}'\n          - name: bus_route\n            value: '{{ inputs.parameters.bus_route }}'"}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusernextmeeting\n        template: getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: checktraffic\n        template: checktraffic\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getusernextmeeting.result }}'"}]