[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: get-playlist-id\n        template: get-playlist-id\n        dependencies: [get-user-id]\n      - name: add-song-to-playlist\n        template: add-song-to-playlist\n        dependencies: [get-playlist-id]\n\n  - name: get-user-id\n    http:\n      url: \"http://example.com/getUserID?username=Tom\"\n      method: GET\n\n  - name: get-playlist-id\n    http:\n      url: \"http://example.com/getPlaylistID?playlist_name=Latin%20Fiesta\"\n      method: GET\n\n  - name: add-song-to-playlist\n    inputs:\n      parameters:\n      - name: user_ID\n        value: '{{ tasks.get-user-id.result }}'\n      - name: playlist_ID\n        value: '{{ tasks.get-playlist-id.result }}'\n      - name: song_name\n        value: 'Dancing Queen'\n    http:\n      url: \"http://example.com/addSongToPlaylist\"\n      method: POST\n      body: |\n        {\n          \"user_ID\": \"{{ inputs.parameters.user_ID }}\",\n          \"playlist_ID\": \"{{ inputs.parameters.playlist_ID }}\",\n          \"song_name\": \"{{ inputs.parameters.song_name }}\"\n        }"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-playlist-id\n        template: get-playlist-id\n      - name: add-song-to-playlist\n        dependencies: [get-playlist-id]\n        template: add-song-to-playlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: playlist_ID\n            value: '{{ tasks.get-playlist-id.result }}'\n          - name: song_name\n            value: 'Space Oddity'\n  - name: get-playlist-id\n    http:\n      url: \"http://example.com/api/Playlistname2ID\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"playlist_name\": \"Rock Ballads\"}'\n  - name: add-song-to-playlist\n    http:\n      url: \"http://example.com/api/AddSongToPlaylist\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": {{ inputs.parameters.user_ID }}, \"playlist_ID\": {{ tasks.get-playlist-id.result }}, \"song_name\": \"Space Oddity\"}'\n  arguments:\n    parameters:\n    - name: user_ID\n      value: 123"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-playlist-id\n        template: get-playlist-id\n      - name: add-song-to-playlist\n        template: add-song-to-playlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: playlist_ID\n            value: '{{ tasks.get-playlist-id.outputs.result }}'\n          - name: song_name\n            value: 'Sweet Child of Mine'\n  - name: get-playlist-id\n    http:\n      url: \"http://example.com/api/Playlistname2ID\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"playlist_name\": \"Classic Disco Hits\"}'\n  - name: add-song-to-playlist\n    http:\n      url: \"http://example.com/api/AddSongToPlaylist\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": {{ inputs.parameters.user_ID }}, \"playlist_ID\": {{ tasks.get-playlist-id.outputs.result }}, \"song_name\": \"Sweet Child of Mine\"}'\n  arguments:\n    parameters:\n    - name: user_ID\n      value: '{{ inputs.parameters.user_ID }}'"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-showtime\n        template: find-showtime\n      - name: book-tickets\n        template: book-tickets\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.find-showtime.result }}'\n          - name: number_of_tickets\n            value: '2'\n  - name: find-showtime\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movie_name\": \"drama\",\n          \"location\": \"Seattle\",\n          \"date\": \"{{ inputs.parameters.date }}\"\n        }\n    inputs:\n      parameters:\n      - name: date\n  - name: book-tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movie_name\": \"drama\",\n          \"showtime\": \"{{ inputs.parameters.showtime }}\",\n          \"number_of_tickets\": \"{{ inputs.parameters.number_of_tickets }}\"\n        }\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets"}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-book-\nspec:\n  entrypoint: purchase-book-dag\n  templates:\n  - name: purchase-book-dag\n    dag:\n      tasks:\n      - name: get-book-id\n        template: get-book-id\n      - name: buy-book\n        template: buy-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: ISBN\n            value: '{{ tasks.get-book-id.result }}'\n  - name: get-book-id\n    http:\n      url: \"http://example.com/api/GetBookIdByTitle\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"book_title\": \"Artificial Intelligence: A Modern Approach\"}'\n  - name: buy-book\n    http:\n      url: \"http://example.com/api/BuyBook\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": \"{{ inputs.parameters.user_ID }}\", \"ISBN\": \"{{ tasks.get-book-id.result }}\"}'\n  arguments:\n    parameters:\n    - name: user_ID\n      value: \"jennifer123\""}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-person-id\n        template: email-to-id\n        arguments:\n          parameters:\n          - name: email\n            value: \"johndoe@gmail.com\"\n      - name: get-course-id\n        template: course-name-to-id\n        arguments:\n          parameters:\n          - name: course_name\n            value: \"Microeconomics\"\n      - name: enroll-course\n        template: enroll-course\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.get-person-id.outputs.result }}'\n          - name: subject_ID\n            value: '{{ tasks.get-course-id.outputs.result }}'\n          - name: semester\n            value: \"Fall\"\n  - name: email-to-id\n    inputs:\n      parameters:\n      - name: email\n    http:\n      url: \"http://example.com/api/email2id\"\n      method: POST\n      body:\n        email: \"{{ inputs.parameters.email }}\"\n  - name: course-name-to-id\n    inputs:\n      parameters:\n      - name: course_name\n    http:\n      url: \"http://example.com/api/coursename2id\"\n      method: POST\n      body:\n        course_name: \"{{ inputs.parameters.course_name }}\"\n  - name: enroll-course\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    http:\n      url: \"http://example.com/api/enrollcourse\"\n      method: POST\n      body:\n        person_ID: \"{{ inputs.parameters.person_ID }}\"\n        subject_ID: \"{{ inputs.parameters.subject_ID }}\"\n        semester: \"{{ inputs.parameters.semester }}\""}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-student-id\n        template: studentname2id\n        arguments:\n          parameters:\n          - name: student_name\n            value: 'tony.stark@avengers.com'\n      - name: get-course-id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: 'Programming'\n      - name: enroll-course\n        template: enrollcourse\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.get-student-id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.get-course-id.result }}'\n          - name: semester\n            value: 'Winter'\n  - name: studentname2id\n    inputs:\n      parameters:\n      - name: student_name\n    http:\n      url: http://example.com/studentname2id\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"student_name\": \"{{ inputs.parameters.student_name }}\"}'\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    http:\n      url: http://example.com/coursename2id\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"course_name\": \"{{ inputs.parameters.course_name }}\"}'\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    http:\n      url: http://example.com/enrollcourse\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"person_ID\": {{ inputs.parameters.person_ID }}, \"subject_ID\": {{ inputs.parameters.subject_ID }}, \"semester\": \"{{ inputs.parameters.semester }}\"}'"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-concerts\n        template: find-concerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: book-ticket\n        template: book-ticket\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.find-concerts.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: find-concerts\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: \"http://example.com/api/musicconcerts?venue={{inputs.parameters.venue}}\"\n      method: GET\n  - name: book-ticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: \"http://example.com/api/bookeventticket?event_ID={{inputs.parameters.event_ID}}&venue_ID={{inputs.parameters.venue_ID}}&date={{inputs.parameters.date}}\"\n      method: POST\n  arguments:\n    parameters:\n    - name: venue\n      value: 'San Francisco'\n    - name: venue_ID\n      value: '123'  # Example venue ID\n    - name: date\n      value: '2023-09-15'"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-film-festival-ticket-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: book-event-ticket\n        template: book-event-ticket\n\n  - name: book-event-ticket\n    inputs:\n      parameters:\n      - name: event_ID\n        value: '{{ inputs.parameters.event_ID }}'\n      - name: venue_ID\n        value: '{{ inputs.parameters.venue_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n    http:\n      url: \"http://example.com/bookEventTicket\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"event_ID\": {{ inputs.parameters.event_ID }},\n          \"venue_ID\": {{ inputs.parameters.venue_ID }},\n          \"date\": \"{{ inputs.parameters.date }}\"\n        }\n    outputs:\n      parameters:\n      - name: booking_status\n        valueFrom:\n          jsonPath: \"$.booking_status\"\n  \n  arguments:\n    parameters:\n    - name: event_ID\n      value: '123'  # Example event ID for Film Festival\n    - name: venue_ID\n      value: '456'  # Example venue ID for Los Angeles\n    - name: date\n      value: '2023-10-22'"}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-coffee-mugs-\nspec:\n  entrypoint: order-coffee-mugs\n  templates:\n  - name: order-coffee-mugs\n    dag:\n      tasks:\n      - name: place-order\n        template: place-order\n\n  - name: place-order\n    inputs:\n      parameters:\n      - name: item_ID\n        value: '{{ inputs.parameters.item_ID }}'\n      - name: supplier_ID\n        value: '{{ inputs.parameters.supplier_ID }}'\n      - name: quantity\n        value: '{{ inputs.parameters.quantity }}'\n    http:\n      url: \"http://example.com/placeorder\"\n      method: \"POST\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"item_ID\": {{ inputs.parameters.item_ID }},\n          \"supplier_ID\": {{ inputs.parameters.supplier_ID }},\n          \"quantity\": {{ inputs.parameters.quantity }}\n        }\n    outputs:\n      parameters:\n      - name: order_status\n        valueFrom:\n          jsonPath: \"$.order_status\"\n  \n  arguments:\n    parameters:\n    - name: item_ID\n      value: '123'  # Assuming 123 is the product ID for coffee mugs\n    - name: supplier_ID\n      value: '456'  # Assuming 456 is the supplier ID for KitchenPlus\n    - name: quantity\n      value: '50'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-product-to-cart-\nspec:\n  entrypoint: add-product-to-cart\n  templates:\n  - name: add-product-to-cart\n    dag:\n      tasks:\n      - name: add-product-to-cart\n        template: add-product-to-cart-task\n\n  - name: add-product-to-cart-task\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    http:\n      url: \"http://example.com/AddProductToCart\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"product_ID\": {{ inputs.parameters.product_ID }},\n          \"customer_ID\": {{ inputs.parameters.customer_ID }},\n          \"quantity\": {{ inputs.parameters.quantity }}\n        }\n    outputs:\n      parameters:\n      - name: cart_status\n        valueFrom:\n          jsonPath: \"$.cart_status\""}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-\nspec:\n  entrypoint: plan-trip\n  templates:\n  - name: plan-trip\n    dag:\n      tasks:\n      - name: plan-trip\n        template: plan-trip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n\n  - name: plan-trip\n    http:\n      url: \"http://example.com/PlanTrip\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"hotel\": {{ inputs.parameters.hotel }},\n          \"restaurants\": {{ inputs.parameters.restaurants }}\n        }\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    outputs:\n      parameters:\n      - name: trip\n        valueFrom:\n          jsonPath: \"$.trip\""}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggest-dining-options\n        template: suggest-dining-options\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n\n  - name: suggest-dining-options\n    http:\n      url: \"http://example.com/suggest-dining-options\"\n      method: \"POST\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"localBudget\": {{ inputs.parameters.localBudget }},\n          \"location\": \"{{ inputs.parameters.location }}\"\n        }\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n  \n  arguments:\n    parameters:\n    - name: localBudget\n      value: 300\n    - name: location\n      value: \"Paris\""}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-iphone-to-cart-\nspec:\n  entrypoint: add-to-cart\n  templates:\n  - name: add-to-cart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    dag:\n      tasks:\n      - name: add-product-to-cart\n        template: add-product-to-cart\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: customer_ID\n            value: '{{ inputs.parameters.customer_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: add-product-to-cart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    http:\n      url: \"http://example.com/api/AddProductToCart\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"product_ID\": \"{{ inputs.parameters.product_ID }}\",\n          \"customer_ID\": \"{{ inputs.parameters.customer_ID }}\",\n          \"quantity\": \"{{ inputs.parameters.quantity }}\"\n        }"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: rent-movie-\nspec:\n  entrypoint: rent-movie-dag\n  templates:\n  - name: rent-movie-dag\n    dag:\n      tasks:\n      - name: rent-movie\n        template: rent-movie\n\n  - name: rent-movie\n    inputs:\n      parameters:\n      - name: user_ID\n        value: '{{ inputs.parameters.user_ID }}'\n      - name: movie_ID\n        value: '{{ inputs.parameters.movie_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n    http:\n      url: \"http://example.com/rentMovie\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_ID\": {{ inputs.parameters.user_ID }},\n          \"movie_ID\": {{ inputs.parameters.movie_ID }},\n          \"date\": \"{{ inputs.parameters.date }}\"\n        }\n    outputs:\n      parameters:\n      - name: rental_status\n        valueFrom:\n          jsonPath: \"$.rental_status\""}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: play-song\n  templates:\n  - name: play-song\n    dag:\n      tasks:\n      - name: get-song-id\n        template: songname-to-id\n        arguments:\n          parameters:\n          - name: song_name\n            value: 'Bohemian Rhapsody'\n      - name: play-song\n        template: play-song\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: song_ID\n            value: '{{ tasks.get-song-id.outputs.parameters.song_ID }}'\n\n  - name: songname-to-id\n    inputs:\n      parameters:\n      - name: song_name\n    outputs:\n      parameters:\n      - name: song_ID\n        valueFrom:\n          path: /tmp/song_ID\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        import requests\n\n        song_name = '{{ inputs.parameters.song_name }}'\n        response = requests.post('http://example.com/songname-to-id', json={'song_name': song_name})\n        song_ID = response.json().get('song_ID')\n\n        with open('/tmp/song_ID', 'w') as f:\n          f.write(song_ID)\n\n  - name: play-song\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        import requests\n\n        user_ID = '{{ inputs.parameters.user_ID }}'\n        song_ID = '{{ inputs.parameters.song_ID }}'\n        response = requests.post('http://example.com/play-song', json={'user_ID': user_ID, 'song_ID': song_ID})\n        play_status = response.json().get('play_status')\n\n        print(play_status)\n"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: indian-dish-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-popular-dishes\n        template: find-popular-dishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-restaurant\n        template: get-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: 'Indian'\n      - name: recommend-items\n        template: recommend-items\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.get-restaurant.outputs.parameters.restaurant_name }}'\n      - name: recommend-dish\n        template: recommend-dish\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommend-items.outputs.parameters.recommend_items }}'\n  - name: find-popular-dishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | FindPopularDishes\"]\n  - name: get-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}' | GetRestaurant\"]\n  - name: recommend-items\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }}' | RecommendItems\"]\n  - name: recommend-dish\n    inputs:\n      parameters:\n      - name: menu\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.menu }}' | RecommendDish\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Chicago'"}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-\nspec:\n  entrypoint: trip-planning\n  templates:\n  - name: trip-planning\n    dag:\n      tasks:\n      - name: arrange-transportation\n        template: arrange-transportation\n      - name: plan-trip\n        template: plan-trip\n        dependencies: [arrange-transportation]\n      - name: create-travel-plan\n        template: create-travel-plan\n        dependencies: [arrange-transportation, plan-trip]\n  - name: arrange-transportation\n    http:\n      url: \"http://example.com/arrangeTransportation\"\n      method: \"POST\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"city\": \"Paris\",\n          \"date\": \"2023-06-12\"\n        }\n  - name: plan-trip\n    http:\n      url: \"http://example.com/planTrip\"\n      method: \"POST\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"hotel\": [\"Hotel A\", \"Hotel B\"],\n          \"restaurants\": [\"Restaurant X\", \"Restaurant Y\"]\n        }\n  - name: create-travel-plan\n    http:\n      url: \"http://example.com/createTravelPlan\"\n      method: \"POST\"\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"flight\": \"{{ tasks.arrange-transportation.result }}\",\n          \"accommodation\": \"{{ tasks.plan-trip.result }}\"\n        }"}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-share-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-review\n        template: get-review\n      - name: share-review\n        template: share-review\n        arguments:\n          parameters:\n          - name: review\n            value: '{{ tasks.get-review.result }}'\n          - name: social_media_platform\n            value: '{{ inputs.parameters.social_media_platform }}'\n  - name: get-review\n    http:\n      url: \"http://example.com/getReview\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"bookname\": \"Harry Potter\"}'\n  - name: share-review\n    http:\n      url: \"http://example.com/shareReview\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"review\": \"{{ inputs.parameters.review }}\", \"social_media_platform\": \"Facebook\"}'\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n  arguments:\n    parameters:\n    - name: social_media_platform\n      value: \"Facebook\""}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: confirm-appointment-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-doctor\n        template: find-doctor\n      - name: get-appointment\n        template: get-appointment\n        dependencies: [find-doctor]\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{ tasks.find-doctor.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: confirm-appointment\n        template: confirm-appointment\n        dependencies: [get-appointment]\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.get-appointment.result }}'\n  - name: find-doctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: \"http://example.com/findDoctor\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"specialty\": \"{{ inputs.parameters.specialty }}\", \"location\": \"{{ inputs.parameters.location }}\"}'\n  - name: get-appointment\n    inputs:\n      parameters:\n      - name: doctor_id\n      - name: date\n    http:\n      url: \"http://example.com/getAppointment\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"doctor_id\": {{ inputs.parameters.doctor_id }}, \"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: confirm-appointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: \"http://example.com/confirmAppointment\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"appointment_id\": {{ inputs.parameters.appointment_id }}}'\n  arguments:\n    parameters:\n    - name: specialty\n      value: \"cardiologist\"\n    - name: location\n      value: \"New York\"\n    - name: date\n      value: \"2023-08-10\""}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-product-ratings\n        template: product-rating\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{ inputs.parameters.purchase_info }}'\n          - name: number_of_ratings\n            value: '10'\n  - name: product-rating\n    inputs:\n      parameters:\n      - name: purchase_info\n      - name: number_of_ratings\n    http:\n      url: \"http://example.com/api/ProductRating\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"purchase_info\": {{ inputs.parameters.purchase_info }},\n          \"number_of_ratings\": {{ inputs.parameters.number_of_ratings }}\n        }"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: find-nearest-cinema-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-nearest-cinema\n        template: find-nearest-cinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: find-nearest-cinema\n    inputs:\n      parameters:\n      - name: movieDetails\n    http:\n      url: \"http://example.com/findNearestCinema\"\n      method: POST\n      headers:\n        - name: Content-Type\n          value: application/json\n      body: |\n        {\n          \"movieDetails\": {{ inputs.parameters.movieDetails }}\n        }"}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vegan-dining-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-menu\n        template: get-menu\n      - name: suggest-food\n        template: suggest-food\n        dependencies: [get-menu]\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.get-menu.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: best-order\n        template: best-order\n        dependencies: [suggest-food]\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ inputs.parameters.restaurant_info }}'\n          - name: food_list\n            value: '{{ tasks.suggest-food.result }}'\n  - name: get-menu\n    http:\n      url: \"http://example.com/api/FoodMenuQuery\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"restaurant\": \"{{ inputs.parameters.restaurant_name }}\"}'\n  - name: suggest-food\n    http:\n      url: \"http://example.com/api/SuggestFood\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"menu\": \"{{ inputs.parameters.menu }}\", \"dietary_preferences\": \"{{ inputs.parameters.dietary_preferences }}\"}'\n  - name: best-order\n    http:\n      url: \"http://example.com/api/BestOrder\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"restaurant_info\": \"{{ inputs.parameters.restaurant_info }}\", \"food_list\": \"{{ inputs.parameters.food_list }}\"}'\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: 'The Green Leaf'\n    - name: dietary_preferences\n      value: 'vegan'\n    - name: restaurant_info\n      value: '{\"name\": \"The Green Leaf\", \"location\": \"unknown\"}'"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather-forecast\n        template: get-weather-forecast\n\n  - name: get-weather-forecast\n    inputs:\n      parameters:\n      - name: coordinates\n        value: '{{ inputs.parameters.coordinates }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n    http:\n      url: \"http://api.example.com/predictweather\"\n      method: \"GET\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"coordinates\": {{ inputs.parameters.coordinates }},\n          \"date\": \"{{ inputs.parameters.date }}\"\n        }\n    outputs:\n      parameters:\n      - name: weather-conditions\n        valueFrom:\n          jsonPath: \"$.weather_conditions\""}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-library-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: add-book-to-author\n        template: add-book-to-author\n\n  - name: add-book-to-author\n    inputs:\n      parameters:\n      - name: author_ID\n        value: '{{ inputs.parameters.author_ID }}'\n      - name: book_ID\n        value: '{{ inputs.parameters.book_ID }}'\n    http:\n      url: \"http://example.com/api/AddBookToAuthor\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"author_ID\": \"{{ inputs.parameters.author_ID }}\",\n          \"book_ID\": \"{{ inputs.parameters.book_ID }}\"\n        }\n    outputs:\n      parameters:\n      - name: author_books\n        valueFrom:\n          jsonPath: \"$.author_books\""}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: check-flight-availability\n        template: check-flight-availability\n      - name: book-flight\n        template: book-flight\n        dependencies: [check-flight-availability]\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.check-flight-availability.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  - name: check-flight-availability\n    http:\n      url: \"http://example.com/check-flight-availability\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"flight_code\": \"LH 1112\",\n          \"date\": \"2023-07-15\"\n        }\n  - name: book-flight\n    http:\n      url: \"http://example.com/book-flight\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"flight_details\": \"{{ inputs.parameters.flight_details }}\",\n          \"preferred_flight_class\": \"{{ inputs.parameters.preferred_flight_class }}\"\n        }\n  arguments:\n    parameters:\n    - name: preferred_flight_class\n      value: \"Economy\""}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: chocolate-cake-recipe-\nspec:\n  entrypoint: chocolate-cake-recipe\n  templates:\n  - name: chocolate-cake-recipe\n    dag:\n      tasks:\n      - name: find-recipe\n        template: find-recipe\n        arguments:\n          parameters:\n          - name: dish\n            value: 'Chocolate Cake'\n      - name: get-ingredients\n        template: get-ingredients\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{ tasks.find-recipe.result }}'\n      - name: check-pantry\n        template: check-pantry\n        arguments:\n          parameters:\n          - name: recipe\n            value: '{{ tasks.find-recipe.result }}'\n      - name: grocery-list\n        template: grocery-list\n        arguments:\n          parameters:\n          - name: available_ingredients\n            value: '{{ tasks.check-pantry.result }}'\n          - name: recipe\n            value: '{{ tasks.find-recipe.result }}'\n  - name: find-recipe\n    inputs:\n      parameters:\n      - name: dish\n    http:\n      url: \"http://api.example.com/findRecipe\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"dish\": \"{{ inputs.parameters.dish }}\"}'\n  - name: get-ingredients\n    inputs:\n      parameters:\n      - name: recipe_name\n    http:\n      url: \"http://api.example.com/getIngredients\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"recipe_name\": \"{{ inputs.parameters.recipe_name }}\"}'\n  - name: check-pantry\n    inputs:\n      parameters:\n      - name: recipe\n    http:\n      url: \"http://api.example.com/checkPantry\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"recipe\": \"{{ inputs.parameters.recipe }}\"}'\n  - name: grocery-list\n    inputs:\n      parameters:\n      - name: available_ingredients\n      - name: recipe\n    http:\n      url: \"http://api.example.com/groceryList\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"available_ingredients\": {{ inputs.parameters.available_ingredients }}, \"recipe\": \"{{ inputs.parameters.recipe }}\"}'"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-\nspec:\n  entrypoint: reserve-book\n  templates:\n  - name: reserve-book\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    dag:\n      tasks:\n      - name: reserve-book\n        template: reserve-book-task\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: reserve-book-task\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    container:\n      image: python:3.8\n      command: [python]\n      args: ['-c', \"import requests; response = requests.post('http://example.com/reserve', json={'user_email': '{{inputs.parameters.user_email}}', 'ISBN': '{{inputs.parameters.ISBN}}', 'start_date': '{{inputs.parameters.start_date}}', 'end_date': '{{inputs.parameters.end_date}}'}); print(response.json())\"]"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: email-to-user-id\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: get-book-id\n        template: book-name-to-id\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n      - name: borrow-book\n        template: borrow-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.outputs.parameters.user_ID }}'\n          - name: book_ID\n            value: '{{ tasks.get-book-id.outputs.parameters.book_ID }}'\n  - name: email-to-user-id\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.email }} | some-command-to-get-user-id\"]\n  - name: book-name-to-id\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.book_name }} | some-command-to-get-book-id\"]\n  - name: borrow-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_ID }} {{ inputs.parameters.book_ID }} | some-command-to-borrow-book\"]\n  arguments:\n    parameters:\n    - name: email\n      value: 'mike@gmail.com'\n    - name: book_name\n      value: 'The Catcher in the Rye'"}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather-info\n        template: get-weather-info\n      - name: generate-weather-report\n        template: generate-weather-report\n        dependencies: [get-weather-info]\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{ tasks.get-weather-info.result }}'\n  - name: get-weather-info\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: GET\n      headers:\n        - name: city\n          value: '{{ inputs.parameters.city }}'\n  - name: generate-weather-report\n    http:\n      url: \"http://weatherapi.com/generateReport\"\n      method: POST\n      body: '{\"weather_data\": \"{{ inputs.parameters.weather_data }}\"}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Paris'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-advice-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: weather2advice\n        template: weather2advice\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.example.com/current?user=Jack_Sparrow\"\n      method: GET\n  - name: weather2advice\n    http:\n      url: \"http://adviceapi.example.com/weather2advice\"\n      method: POST\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\"}'\n      inputs:\n        parameters:\n        - name: weather"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-showtime\n        template: find-showtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: 'Spirited Away'\n          - name: location\n            value: 'Tokyo'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-movie-ticket\n        template: book-movie-ticket\n        arguments:\n          parameters:\n          - name: movie_name\n            value: 'Spirited Away'\n          - name: showtime\n            value: '{{ tasks.find-showtime.outputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: find-showtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    outputs:\n      parameters:\n      - name: showtime\n        valueFrom:\n          path: /tmp/showtime\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import requests\n        import json\n        \n        movie_name = '{{ inputs.parameters.movie_name }}'\n        location = '{{ inputs.parameters.location }}'\n        date = '{{ inputs.parameters.date }}'\n        \n        # Simulate API call\n        response = requests.get(f\"https://api.example.com/findshowtime?movie_name={movie_name}&location={location}&date={date}\")\n        showtime = response.json().get('showtime')\n        \n        with open('/tmp/showtime', 'w') as f:\n            f.write(showtime)\n  - name: book-movie-ticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import requests\n        import json\n        \n        movie_name = '{{ inputs.parameters.movie_name }}'\n        showtime = '{{ inputs.parameters.showtime }}'\n        number_of_tickets = '{{ inputs.parameters.number_of_tickets }}'\n        \n        # Simulate API call\n        response = requests.post(\"https://api.example.com/bookmovieticket\", json={\n            \"movie_name\": movie_name,\n            \"showtime\": showtime,\n            \"number_of_tickets\": number_of_tickets\n        })\n        booking_confirmation = response.json().get('booking confirmation')\n        \n        print(booking_confirmation)"}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: borrow-book-dag\n  templates:\n  - name: borrow-book-dag\n    dag:\n      tasks:\n      - name: find-book\n        template: find-book\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: check-library-availability\n        template: check-library-availability\n        arguments:\n          parameters:\n          - name: bookDetails\n            value: '{{ tasks.find-book.outputs.result }}'\n      - name: borrow-book\n        template: borrow-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: book_ID\n            value: '{{ tasks.find-book.outputs.result.book_ID }}'\n  - name: find-book\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: library-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"title\\\": \\\"{{inputs.parameters.title}}\\\"}' http://library-api/findBook\"]\n  - name: check-library-availability\n    inputs:\n      parameters:\n      - name: bookDetails\n    container:\n      image: library-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"bookDetails\\\": {{inputs.parameters.bookDetails}}}' http://library-api/checkLibraryAvailability\"]\n  - name: borrow-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: library-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"user_ID\\\": {{inputs.parameters.user_ID}}, \\\"book_ID\\\": {{inputs.parameters.book_ID}}}' http://library-api/borrowBook\"]\n  arguments:\n    parameters:\n    - name: title\n      value: 'To Kill a Mockingbird'\n    - name: user_ID\n      value: '123'"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: borrow-book-dag\n  templates:\n  - name: borrow-book-dag\n    dag:\n      tasks:\n      - name: check-availability\n        template: check-availability\n      - name: borrow-book\n        template: borrow-book\n        dependencies: [check-availability]\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: book_ID\n            value: '{{ inputs.parameters.book_ID }}'\n  - name: check-availability\n    http:\n      url: \"http://example.com/checkavailability\"\n      method: \"GET\"\n      parameters:\n      - name: ISBN\n        value: '{{ inputs.parameters.ISBN }}'\n      - name: start_date\n        value: '{{ inputs.parameters.start_date }}'\n      - name: end_date\n        value: '{{ inputs.parameters.end_date }}'\n  - name: borrow-book\n    http:\n      url: \"http://example.com/borrowbook\"\n      method: \"POST\"\n      parameters:\n      - name: user_ID\n        value: '{{ inputs.parameters.user_ID }}'\n      - name: book_ID\n        value: '{{ inputs.parameters.book_ID }}'\n  arguments:\n    parameters:\n    - name: user_ID\n      value: 123  # Example user ID for Jessica\n    - name: book_ID\n      value: 456  # Example book ID for \"1984\"\n    - name: ISBN\n      value: \"9780451524935\"  # Example ISBN for \"1984\"\n    - name: start_date\n      value: \"2023-10-01\"\n    - name: end_date\n      value: \"2023-12-31\""}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-\nspec:\n  entrypoint: book-hotel\n  templates:\n  - name: book-hotel\n    dag:\n      tasks:\n      - name: search-hotel\n        template: hotel-search\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n      - name: check-room-availability\n        template: room-availability\n        arguments:\n          parameters:\n          - name: hotel_id\n            value: '{{ tasks.search-hotel.outputs.parameters.hotel_id }}'\n      - name: book-room\n        template: book-room\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: number_of_nights\n            value: '{{ inputs.parameters.number_of_nights }}'\n\n  - name: hotel-search\n    inputs:\n      parameters:\n      - name: city\n      - name: check_in_date\n      - name: check_out_date\n    container:\n      image: hotel-search-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"hotel_id\\\": 123}'\"]\n\n  - name: room-availability\n    inputs:\n      parameters:\n      - name: hotel_id\n    container:\n      image: room-availability-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"rooms\\\": [\\\"room1\\\", \\\"room2\\\"]}'\"]\n\n  - name: book-room\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    container:\n      image: book-room-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"booking_status\\\": \\\"confirmed\\\"}'\"]\n\n  arguments:\n    parameters:\n    - name: city\n      value: 'Boston'\n    - name: check_in_date\n      value: '2023-10-10'\n    - name: check_out_date\n      value: '2023-10-15'\n    - name: hotel_name\n      value: 'Sheraton'\n    - name: number_of_nights\n      value: '5'"}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: return-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-name\n        template: isbn-to-bookname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: \"978-2-34-567890-1\"\n      - name: return-book\n        template: return-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: book_name\n            value: '{{ tasks.get-book-name.outputs.result }}'\n\n  - name: isbn-to-bookname\n    inputs:\n      parameters:\n      - name: ISBN\n    http:\n      url: \"http://example.com/api/ISBNToBookname\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"ISBN\": \"{{ inputs.parameters.ISBN }}\"}'\n\n  - name: return-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_name\n    http:\n      url: \"http://example.com/api/ReturnBook\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": {{ inputs.parameters.user_ID }}, \"book_name\": \"{{ inputs.parameters.book_name }}\"}'\n  \n  arguments:\n    parameters:\n    - name: user_ID\n      value: \"12345\"  # Assuming user_ID is known and provided as input"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-\nspec:\n  entrypoint: purchase-product\n  templates:\n  - name: purchase-product\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: purchase-item\n        template: purchase-item\n        dependencies: [get-user-id]\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: get-user-id\n    http:\n      url: \"http://example.com/api/UserEmail2ID\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_email\": \"{{ inputs.parameters.user_email }}\"}'\n  - name: purchase-item\n    http:\n      url: \"http://example.com/api/PurchaseItem\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": \"{{ inputs.parameters.user_ID }}\", \"product_ID\": \"{{ inputs.parameters.product_ID }}\", \"quantity\": \"{{ inputs.parameters.quantity }}\"}'\n  arguments:\n    parameters:\n    - name: user_email\n      value: 'mike@example.com'\n    - name: product_ID\n      value: 'Google Pixel 6'\n    - name: quantity\n      value: '1'"}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-movie-to-watchlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: get-movie-id\n        template: get-movie-id\n      - name: add-to-watchlist\n        template: add-to-watchlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: movie_ID\n            value: '{{ tasks.get-movie-id.result }}'\n  - name: get-user-id\n    http:\n      url: \"http://example.com/getUserId?username={{ inputs.parameters.username }}\"\n      method: GET\n    inputs:\n      parameters:\n      - name: username\n        value: '{{ inputs.parameters.username }}'\n  - name: get-movie-id\n    http:\n      url: \"http://example.com/getMovieId?title={{ inputs.parameters.movie_title }}\"\n      method: GET\n    inputs:\n      parameters:\n      - name: movie_title\n        value: '{{ inputs.parameters.movie_title }}'\n  - name: add-to-watchlist\n    http:\n      url: \"http://example.com/addToWatchlist\"\n      method: POST\n      body: |\n        {\n          \"user_ID\": \"{{ inputs.parameters.user_ID }}\",\n          \"movie_ID\": \"{{ inputs.parameters.movie_ID }}\"\n        }\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n  arguments:\n    parameters:\n    - name: username\n      value: sarah_sci\n    - name: movie_title\n      value: Interstellar"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-reading-list-\nspec:\n  entrypoint: add-book-to-reading-list\n  templates:\n  - name: add-book-to-reading-list\n    dag:\n      tasks:\n      - name: add-book\n        template: add-book-to-reading-list\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n  - name: add-book-to-reading-list\n    inputs:\n      parameters:\n      - name: user_name\n      - name: book_title\n    http:\n      url: \"http://example.com/api/AddBookToReadingList\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_name\": \"{{ inputs.parameters.user_name }}\",\n          \"book_title\": \"{{ inputs.parameters.book_title }}\"\n        }\n    outputs:\n      parameters:\n      - name: reading_list\n        valueFrom:\n          jsonPath: \"$.reading_list\""}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-table-\nspec:\n  entrypoint: book-table\n  templates:\n  - name: book-table\n    inputs:\n      parameters:\n      - name: restaurant_name\n        value: 'Red Lobster'\n      - name: date\n        value: '2023-05-05'\n      - name: time\n        value: '18:00'\n    dag:\n      tasks:\n      - name: book-table\n        template: book-table-task\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n\n  - name: book-table-task\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/api/BookTable\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{ inputs.parameters.restaurant_name }}\",\n          \"date\": \"{{ inputs.parameters.date }}\",\n          \"time\": \"{{ inputs.parameters.time }}\"\n        }"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-author-details\n        template: get-author-details\n      - name: check-author-availability\n        template: check-author-availability\n        dependencies: [get-author-details]\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.get-author-details.outputs.parameters.author_name }}'\n      - name: schedule-discussion\n        template: schedule-discussion\n        dependencies: [check-author-availability]\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.get-author-details.outputs.parameters.author_name }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: get-author-details\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: my-api-image\n      command: [sh, -c]\n      args: ['curl -X GET \"http://api.example.com/getAuthorDetails?ISBN={{inputs.parameters.ISBN}}\"']\n  - name: check-author-availability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: my-api-image\n      command: [sh, -c]\n      args: ['curl -X GET \"http://api.example.com/checkAuthorAvailability?user_ID={{inputs.parameters.user_ID}}&author_name={{inputs.parameters.author_name}}\"']\n  - name: schedule-discussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: my-api-image\n      command: [sh, -c]\n      args: ['curl -X POST \"http://api.example.com/scheduleDiscussion\" -d \"user_ID={{inputs.parameters.user_ID}}&author_name={{inputs.parameters.author_name}}&date_time={{inputs.parameters.date_time}}\"']\n  arguments:\n    parameters:\n    - name: user_ID\n      value: 'user789'\n    - name: ISBN\n      value: '978-3-16-148410-0'\n    - name: date_time\n      value: '2023-10-25T18:00:00'"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: recommend-clothing\n        template: recommend-clothing\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.com/getWeather?location=NewYork&date=this_weekend\"\n      method: GET\n  - name: recommend-clothing\n    http:\n      url: \"http://clothingapi.com/recommendClothing\"\n      method: POST\n      body:\n        weather: '{{ inputs.parameters.weather }}'\n    inputs:\n      parameters:\n      - name: weather"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-\nspec:\n  entrypoint: trip-planning\n  templates:\n  - name: trip-planning\n    dag:\n      tasks:\n      - name: search-flight\n        template: search-flight\n      - name: arrange-transportation\n        template: arrange-transportation\n        arguments:\n          parameters:\n          - name: city\n            value: \"Tokyo\"\n          - name: date\n            value: \"2023-09-15\"\n      - name: create-travel-plan\n        template: create-travel-plan\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.search-flight.result }}'\n          - name: accommodation\n            value: '{{ tasks.arrange-transportation.result }}'\n  - name: search-flight\n    http:\n      url: \"http://example.com/api/search-flight\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"from_location\": \"{{ inputs.parameters.from_location }}\", \"to_location\": \"Tokyo\", \"date\": \"2023-09-15\"}'\n  - name: arrange-transportation\n    http:\n      url: \"http://example.com/api/arrange-transportation\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"city\": \"Tokyo\", \"date\": \"2023-09-15\"}'\n  - name: create-travel-plan\n    http:\n      url: \"http://example.com/api/create-travel-plan\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"flight\": \"{{ inputs.parameters.flight }}\", \"accommodation\": \"{{ inputs.parameters.accommodation }}\"}'\n  arguments:\n    parameters:\n    - name: from_location\n      value: \"{{ inputs.parameters.from_location }}\""}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: romance-movie-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-romance-movie\n        template: search-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'romance'\n          - name: location\n            value: 'San Francisco'\n      - name: find-showtime\n        template: find-showtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.search-romance-movie.result }}'\n          - name: location\n            value: 'San Francisco'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: reserve-tickets\n        template: reserve-tickets\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.find-showtime.result }}'\n          - name: number_of_tickets\n            value: '4'\n  - name: search-movie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    http:\n      url: http://example.com/api/SearchMovie\n      method: GET\n      parameters:\n      - name: genre\n        value: '{{ inputs.parameters.genre }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n  - name: find-showtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: http://example.com/api/FindShowtime\n      method: GET\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: reserve-tickets\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: http://example.com/api/ReserveTickets\n      method: POST\n      parameters:\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-book-availability-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-nearest-bookstore\n        template: find-nearest-bookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: find-bookstore\n        template: find-bookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: 'The Catcher in the Rye'\n        dependencies: [find-nearest-bookstore]\n      - name: check-product-availability\n        template: check-product-availability\n        arguments:\n          parameters:\n          - name: store_address\n            value: '{{ tasks.find-bookstore.result }}'\n          - name: product_name\n            value: 'The Catcher in the Rye'\n        dependencies: [find-bookstore]\n  - name: find-nearest-bookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/api/BookStoreLocator\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"city\": \"{{ inputs.parameters.city }}\"}'\n  - name: find-bookstore\n    inputs:\n      parameters:\n      - name: book_information\n    http:\n      url: \"http://example.com/api/FindBookStore\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"book_information\": \"{{ inputs.parameters.book_information }}\"}'\n  - name: check-product-availability\n    inputs:\n      parameters:\n      - name: store_address\n      - name: product_name\n    http:\n      url: \"http://example.com/api/CheckProductAvailability\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"store_address\": \"{{ inputs.parameters.store_address }}\", \"product_name\": \"{{ inputs.parameters.product_name }}\"}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Boston'"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-reviews-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-local-theater\n        template: get-local-theater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-current-plays\n        template: get-current-plays\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{ tasks.get-local-theater.result }}'\n      - name: get-play-reviews\n        template: get-play-reviews\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{ tasks.get-current-plays.result }}'\n  - name: get-local-theater\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/get-local-theater\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: get-current-plays\n    inputs:\n      parameters:\n      - name: theater_name\n    http:\n      url: http://example.com/get-current-plays\n      method: GET\n      parameters:\n      - name: theater_name\n        value: '{{ inputs.parameters.theater_name }}'\n  - name: get-play-reviews\n    inputs:\n      parameters:\n      - name: play_name\n    http:\n      url: http://example.com/get-play-reviews\n      method: GET\n      parameters:\n      - name: play_name\n        value: '{{ inputs.parameters.play_name }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'London'"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: album-reviews-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-local-music-store\n        template: get-local-music-store\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-current-albums\n        template: get-current-albums\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ tasks.get-local-music-store.result }}'\n      - name: get-album-reviews\n        template: get-album-reviews\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{ tasks.get-current-albums.result }}'\n  - name: get-local-music-store\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/GetLocalMusicStore?city={{inputs.parameters.city}}\n      method: GET\n  - name: get-current-albums\n    inputs:\n      parameters:\n      - name: store_name\n    http:\n      url: http://example.com/GetCurrentAlbums?store_name={{inputs.parameters.store_name}}\n      method: GET\n  - name: get-album-reviews\n    inputs:\n      parameters:\n      - name: album_name\n    http:\n      url: http://example.com/GetAlbumReviews?album_name={{inputs.parameters.album_name}}\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Toronto'"}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-dumplings-\nspec:\n  entrypoint: order-dumplings\n  templates:\n  - name: order-dumplings\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: 'Seattle'\n          - name: cuisine\n            value: 'Chinese'\n      - name: order-food\n        template: order-food\n        arguments:\n          parameters:\n          - name: dish_name\n            value: 'dumplings'\n          - name: restaurant_name\n            value: '{{ tasks.find-restaurant.outputs.parameters.restaurant_name }}'\n  - name: find-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: \"http://example.com/api/SearchRestaurant\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: \"{{ inputs.parameters.city }}\"\n      - name: cuisine\n        value: \"{{ inputs.parameters.cuisine }}\"\n    outputs:\n      parameters:\n      - name: restaurant_name\n        valueFrom:\n          jsonPath: \"$.restaurant_name\"\n  - name: order-food\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: \"http://example.com/api/OrderFood\"\n      method: \"POST\"\n      body:\n        dish_name: \"{{ inputs.parameters.dish_name }}\"\n        restaurant_name: \"{{ inputs.parameters.restaurant_name }}\"\n    outputs:\n      parameters:\n      - name: order_status\n        valueFrom:\n          jsonPath: \"$.order_status\""}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: netflix-stock-decision-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-current-price\n        template: get-current-price\n      - name: predict-future-price\n        template: predict-future-price\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.get-current-price.outputs.parameters.price }}'\n      - name: suggest-stock-action\n        template: suggest-stock-action\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.get-current-price.outputs.parameters.price }}'\n          - name: futurePrice\n            value: '{{ tasks.predict-future-price.outputs.parameters.futurePrice }}'\n  - name: get-current-price\n    inputs:\n      parameters:\n      - name: stockId\n    http:\n      url: \"http://example.com/getStockPrice?stockId={{inputs.parameters.stockId}}\"\n      method: GET\n    outputs:\n      parameters:\n      - name: price\n        valueFrom:\n          jsonPath: \"$.price\"\n  - name: predict-future-price\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n    http:\n      url: \"http://example.com/predictFutureStockPrice?stockId={{inputs.parameters.stockId}}&currentPrice={{inputs.parameters.currentPrice}}\"\n      method: GET\n    outputs:\n      parameters:\n      - name: futurePrice\n        valueFrom:\n          jsonPath: \"$.futurePrice\"\n  - name: suggest-stock-action\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n      - name: futurePrice\n    http:\n      url: \"http://example.com/suggestStockAction?stockId={{inputs.parameters.stockId}}&currentPrice={{inputs.parameters.currentPrice}}&futurePrice={{inputs.parameters.futurePrice}}\"\n      method: GET\n    outputs:\n      parameters:\n      - name: action\n        valueFrom:\n          jsonPath: \"$.action\"\n  arguments:\n    parameters:\n    - name: stockId\n      value: 'NFLX'"}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: savings-investment-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: track-spending\n        template: track-spending\n      - name: calculate-savings\n        template: calculate-savings\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{ tasks.track-spending.outputs.result }}'\n      - name: suggest-investment\n        template: suggest-investment\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{ tasks.calculate-savings.outputs.result }}'\n  - name: track-spending\n    http:\n      url: <TrackSpending API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"Username\": \"Sarah\"\n        }\n  - name: calculate-savings\n    http:\n      url: <CalculateSavings API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"SpendingReport\": \"{{ inputs.parameters.SpendingReport }}\"\n        }\n  - name: suggest-investment\n    http:\n      url: <SuggestInvestment API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"Savings\": \"{{ inputs.parameters.Savings }}\"\n        }"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-popular-dishes\n        template: find-popular-dishes\n      - name: restaurant-suggestion\n        template: restaurant-suggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ inputs.parameters.food_preference }}'\n      - name: filter-restaurant\n        template: filter-restaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.restaurant-suggestion.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: recommend-items\n        template: recommend-items\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.filter-restaurant.result }}'\n      - name: suggest-food\n        template: suggest-food\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommend-items.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  - name: find-popular-dishes\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findPopularDishes\n      method: GET\n  - name: restaurant-suggestion\n    inputs:\n      parameters:\n      - name: city\n      - name: food_preference\n    http:\n      url: http://example.com/restaurantSuggestion\n      method: GET\n  - name: filter-restaurant\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterRestaurantByDietaryRestrictions\n      method: GET\n  - name: recommend-items\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: http://example.com/recommendItems\n      method: GET\n  - name: suggest-food\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestFood\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Los Angeles'\n    - name: food_preference\n      value: 'Chinese'\n    - name: restrictions\n      value: 'gluten intolerant'\n    - name: dietary_preferences\n      value: 'gluten free'"}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: lactose-free-chinese-dish-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-chinese-restaurants\n        template: find-restaurants\n        arguments:\n          parameters:\n          - name: city\n            value: 'Houston'\n          - name: cuisineType\n            value: 'Chinese'\n      - name: filter-lactose-free\n        template: filter-restaurant-by-dietary-restrictions\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.find-chinese-restaurants.result }}'\n          - name: restrictions\n            value: 'lactose-free'\n      - name: recommend-dish\n        template: recommend-dish\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.filter-lactose-free.result }}'\n  - name: find-restaurants\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisineType\n    http:\n      url: http://example.com/findRestaurants\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cuisineType\n        value: '{{ inputs.parameters.cuisineType }}'\n  - name: filter-restaurant-by-dietary-restrictions\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterRestaurantByDietaryRestrictions\n      method: GET\n      parameters:\n      - name: restaurant\n        value: '{{ inputs.parameters.restaurant }}'\n      - name: restrictions\n        value: '{{ inputs.parameters.restrictions }}'\n  - name: recommend-dish\n    inputs:\n      parameters:\n      - name: menu\n    http:\n      url: http://example.com/recommendDish\n      method: GET\n      parameters:\n      - name: menu\n        value: '{{ inputs.parameters.menu }}'"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-ratings\n        template: get-movie-ratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: calculate-average-rating\n        template: calculate-average-rating\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{ tasks.get-movie-ratings.outputs.result }}'\n  - name: get-movie-ratings\n    inputs:\n      parameters:\n      - name: movie\n    http:\n      url: \"http://example.com/getMovieRatings\"\n      method: GET\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: \"{ \\\"movie\\\": \\\"{{ inputs.parameters.movie }}\\\" }\"\n  - name: calculate-average-rating\n    inputs:\n      parameters:\n      - name: ratingScores\n    http:\n      url: \"http://example.com/averageRating\"\n      method: POST\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: \"{ \\\"ratingScores\\\": {{ inputs.parameters.ratingScores }} }\"\n    outputs:\n      parameters:\n      - name: average_rating\n        valueFrom:\n          jsonPath: \"$.average_rating\""}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: highest-rating-titanic-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-id\n        template: get-movie-id\n      - name: get-rating-scores\n        template: get-rating-scores\n        dependencies: [get-movie-id]\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.get-movie-id.outputs.parameters.movie_id }}'\n      - name: get-highest-rating\n        template: get-highest-rating\n        dependencies: [get-rating-scores]\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{ tasks.get-rating-scores.outputs.parameters.rating_scores }}'\n  - name: get-movie-id\n    http:\n      url: \"http://example.com/api/moviedetails\"\n      method: \"GET\"\n      parameters:\n      - name: movie_title\n        value: \"Titanic\"\n  - name: get-rating-scores\n    http:\n      url: \"http://example.com/api/movierating\"\n      method: \"GET\"\n      parameters:\n      - name: movie_id\n        value: '{{ inputs.parameters.movie_id }}'\n  - name: get-highest-rating\n    http:\n      url: \"http://example.com/api/highestrating\"\n      method: \"GET\"\n      parameters:\n      - name: rating_scores\n        value: '{{ inputs.parameters.rating_scores }}'"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: seat-upgrade-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-flight\n        template: search-flight\n        arguments:\n          parameters:\n          - name: destination\n            value: 'Paris'\n          - name: date\n            value: '2023-11-30'\n      - name: seat-selection\n        template: seat-selection\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.search-flight.outputs.parameters.flight_id }}'\n      - name: upgrade-availability\n        template: upgrade-availability\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{ tasks.seat-selection.outputs.parameters.seats }}'\n  - name: search-flight\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    http:\n      url: \"http://example.com/api/FlightSearch\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"destination\": \"{{ inputs.parameters.destination }}\", \"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: seat-selection\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: \"http://example.com/api/SeatSelection\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"flight_id\": {{ inputs.parameters.flight_id }}}'\n  - name: upgrade-availability\n    inputs:\n      parameters:\n      - name: seats\n    http:\n      url: \"http://example.com/api/UpgradeAvailability\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"seats\": \"{{ inputs.parameters.seats }}\"}'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: premium-seat-class-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-flights\n        template: find-flights\n      - name: seat-class-availability\n        dependencies: [find-flights]\n        template: seat-class-availability\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.find-flights.outputs.parameters.flight_id }}'\n      - name: best-seat-class\n        dependencies: [seat-class-availability]\n        template: best-seat-class\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{ tasks.seat-class-availability.outputs.parameters.seat_classes }}'\n  - name: find-flights\n    http:\n      url: \"http://example.com/api/FlightSearch\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"destination\": \"San Francisco\", \"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: seat-class-availability\n    http:\n      url: \"http://example.com/api/SeatClassAvailability\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"flight_id\": {{ inputs.parameters.flight_id }}}'\n  - name: best-seat-class\n    http:\n      url: \"http://example.com/api/BestSeatClass\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"seat_classes\": {{ inputs.parameters.seat_classes }}}'\n  arguments:\n    parameters:\n    - name: date\n      value: \"2023-12-01\""}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: find-bookstore-\nspec:\n  entrypoint: find-bookstore-dag\n  templates:\n  - name: find-bookstore-dag\n    dag:\n      tasks:\n      - name: find-nearest-bookstore\n        template: find-nearest-bookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: find-bookstore-with-book\n        template: find-bookstore-with-book\n        arguments:\n          parameters:\n          - name: book_information\n            value: 'To Kill a Mockingbird by Harper Lee'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n        dependencies: [find-nearest-bookstore]\n  - name: find-nearest-bookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/findnearestbookstore\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"city\": \"{{ inputs.parameters.city }}\"}'\n  - name: find-bookstore-with-book\n    inputs:\n      parameters:\n      - name: book_information\n      - name: city\n    http:\n      url: \"http://example.com/findbookstore\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"book_information\": \"{{ inputs.parameters.book_information }}\", \"city\": \"{{ inputs.parameters.city }}\"}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: item-price-conversion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-item-price\n        template: get-item-price\n      - name: get-conversion-rate\n        template: get-conversion-rate\n      - name: calculate-price\n        template: calculate-price\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-item-price.outputs.parameters.price }}'\n          - name: conversion_rate\n            value: '{{ tasks.get-conversion-rate.outputs.parameters.conversion_rate }}'\n  - name: get-item-price\n    inputs:\n      parameters:\n      - name: item_id\n        value: '999'\n    container:\n      image: my-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"item_id\\\": {{inputs.parameters.item_id}}}' http://itemprice.api/endpoint\"]\n  - name: get-conversion-rate\n    inputs:\n      parameters:\n      - name: from_currency\n        value: 'EUR'\n      - name: to_currency\n        value: 'JPY'\n    container:\n      image: my-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"from_currency\\\": \\\"{{inputs.parameters.from_currency}}\\\", \\\"to_currency\\\": \\\"{{inputs.parameters.to_currency}}\\\"}' http://currencyconversion.api/endpoint\"]\n  - name: calculate-price\n    inputs:\n      parameters:\n      - name: price\n      - name: conversion_rate\n    container:\n      image: my-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"price\\\": {{inputs.parameters.price}}, \\\"conversion_rate\\\": {{inputs.parameters.conversion_rate}}}' http://calculateprice.api/endpoint\"]"}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-details\n        template: get-book-details\n      - name: get-author-data\n        template: get-author-data\n      - name: generate-review\n        template: generate-review\n        dependencies: [get-book-details, get-author-data]\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{ tasks.get-book-details.result }}'\n          - name: authorData\n            value: '{{ tasks.get-author-data.result }}'\n  - name: get-book-details\n    http:\n      url: \"http://example.com/api/bookdetails\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      queryParams:\n      - name: title\n        value: '{{ inputs.parameters.book_title }}'\n  - name: get-author-data\n    http:\n      url: \"http://example.com/api/authordata\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      queryParams:\n      - name: author_name\n        value: '{{ inputs.parameters.author_name }}'\n  - name: generate-review\n    http:\n      url: \"http://example.com/api/reviewgenerator\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body:\n        bookdetails: '{{ inputs.parameters.bookdetails }}'\n        authorData: '{{ inputs.parameters.authorData }}'\n  arguments:\n    parameters:\n    - name: book_title\n      value: 'Pride and Prejudice'\n    - name: author_name\n      value: 'Jane Austen'"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-and-movie-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n      - name: make-reservation\n        dependencies: [find-restaurant]\n        template: make-reservation\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.find-restaurant.result }}'\n          - name: time\n            value: '18:00'\n      - name: book-movie\n        template: book-movie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: 'Harry Potter'\n          - name: showtime\n            value: '20:00'\n          - name: number_of_tickets\n            value: '8'\n  - name: find-restaurant\n    http:\n      url: \"http://example.com/ResturantNearCinema\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cinema_name\n        value: '{{ inputs.parameters.cinema_name }}'\n  - name: make-reservation\n    http:\n      url: \"http://example.com/BookReservation\"\n      method: \"POST\"\n      parameters:\n      - name: restaurantname\n        value: '{{ inputs.parameters.restaurant_name }}'\n      - name: partySize\n        value: '8'\n      - name: time\n        value: '{{ inputs.parameters.time }}'\n  - name: book-movie\n    http:\n      url: \"http://example.com/BookMovieTicket\"\n      method: \"POST\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'YourCity'\n    - name: cinema_name\n      value: 'YourCinema'"}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: calculate-audi-q7-tax-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-car-info\n        template: get-car-info\n      - name: get-country-tax-rate\n        template: get-country-tax-rate\n      - name: calculate-tax-cost\n        template: calculate-tax-cost\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-car-info.outputs.parameters.price }}'\n          - name: tax_rate\n            value: '{{ tasks.get-country-tax-rate.outputs.parameters.taxRate }}'\n  - name: get-car-info\n    http:\n      url: \"http://example.com/carinfo\"\n      method: GET\n      parameters:\n      - name: car_name\n        value: '{{ inputs.parameters.car_name }}'\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: get-country-tax-rate\n    http:\n      url: \"http://example.com/countrytaxrate\"\n      method: GET\n      parameters:\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: calculate-tax-cost\n    http:\n      url: \"http://example.com/taxcostcalculator\"\n      method: GET\n      parameters:\n      - name: price\n        value: '{{ inputs.parameters.price }}'\n      - name: tax_rate\n        value: '{{ inputs.parameters.tax_rate }}'\n  arguments:\n    parameters:\n    - name: car_name\n      value: \"Audi Q7\"\n    - name: country\n      value: \"Italy\""}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-popular-dishes\n        template: find-popular-dishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-restaurant\n        template: get-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ tasks.find-popular-dishes.outputs.parameters.dish_name }}'\n      - name: food-menu-query\n        template: food-menu-query\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.get-restaurant.outputs.parameters.restaurant_name }}'\n      - name: suggest-food\n        template: suggest-food\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.food-menu-query.outputs.parameters.food_menu }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  - name: find-popular-dishes\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://api.example.com/findPopularDishes\"\n      method: POST\n      body: \"{ \\\"city\\\": \\\"{{ inputs.parameters.city }}\\\" }\"\n  - name: get-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: \"http://api.example.com/getRestaurant\"\n      method: POST\n      body: \"{ \\\"city\\\": \\\"{{ inputs.parameters.city }}\\\", \\\"cuisine\\\": \\\"{{ inputs.parameters.cuisine }}\\\" }\"\n  - name: food-menu-query\n    inputs:\n      parameters:\n      - name: restaurant\n    http:\n      url: \"http://api.example.com/foodMenuQuery\"\n      method: POST\n      body: \"{ \\\"restaurant\\\": \\\"{{ inputs.parameters.restaurant }}\\\" }\"\n  - name: suggest-food\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: \"http://api.example.com/suggestFood\"\n      method: POST\n      body: \"{ \\\"menu\\\": \\\"{{ inputs.parameters.menu }}\\\", \\\"dietary_preferences\\\": \\\"{{ inputs.parameters.dietary_preferences }}\\\" }\"\n  arguments:\n    parameters:\n    - name: city\n      value: \"Dubai\"\n    - name: dietary_preferences\n      value: \"gluten-free\""}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-drama-movie-tickets-\nspec:\n  entrypoint: book-tickets\n  templates:\n  - name: book-tickets\n    dag:\n      tasks:\n      - name: get-showtimes\n        template: get-showtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: book-movie-tickets\n        template: book-movie-tickets\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_title }}'\n          - name: showtime\n            value: '{{ tasks.get-showtimes.outputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n        dependencies: [get-showtimes]\n  - name: get-showtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    http:\n      url: \"http://example.com/getShowtimes\"\n      method: GET\n      parameters:\n      - name: movie_title\n        value: '{{ inputs.parameters.movie_title }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: book-movie-tickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookMovieTickets\"\n      method: POST\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'\n  arguments:\n    parameters:\n    - name: movie_title\n      value: \"Drama Movie\"\n    - name: city\n      value: \"Chicago\"\n    - name: number_of_tickets\n      value: \"5\""}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-\nspec:\n  entrypoint: hotel-booking-dag\n  templates:\n  - name: hotel-booking-dag\n    dag:\n      tasks:\n      - name: find-hotel\n        template: find-hotel\n      - name: book-room\n        dependencies: [find-hotel]\n        template: book-room\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.find-hotel.outputs.parameters.hotel_name }}'\n          - name: number_of_rooms\n            value: '1'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n  - name: find-hotel\n    http:\n      url: \"http://example.com/api/HotelFinder\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"city\": \"{{ inputs.parameters.city }}\",\n          \"star_rating\": 4\n        }\n    outputs:\n      parameters:\n      - name: hotel_name\n        valueFrom:\n          jsonPath: \"$.hotel_name\"\n  - name: book-room\n    http:\n      url: \"http://example.com/api/RoomBooking\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"hotel_name\": \"{{ inputs.parameters.hotel_name }}\",\n          \"number_of_rooms\": {{ inputs.parameters.number_of_rooms }},\n          \"check_in_date\": \"{{ inputs.parameters.check_in_date }}\",\n          \"check_out_date\": \"{{ inputs.parameters.check_out_date }}\"\n        }\n    outputs:\n      parameters:\n      - name: booking_confirmation\n        valueFrom:\n          jsonPath: \"$.booking_confirmation\"\n  arguments:\n    parameters:\n    - name: city\n      value: \"Seattle\"\n    - name: check_in_date\n      value: \"2023-09-15\"\n    - name: check_out_date\n      value: \"2023-09-22\""}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-scheduling-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-doctor\n        template: find-doctor\n      - name: create-appointment\n        dependencies: [find-doctor]\n        template: create-appointment\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{ tasks.find-doctor.result }}'\n          - name: patientId\n            value: '{{ inputs.parameters.patientId }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: confirm-appointment\n        dependencies: [create-appointment]\n        template: confirm-appointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.create-appointment.result }}'\n  - name: find-doctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: \"http://example.com/find-doctor\"\n      method: GET\n      parameters:\n      - name: specialty\n        value: '{{ inputs.parameters.specialty }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n  - name: create-appointment\n    inputs:\n      parameters:\n      - name: doctorId\n      - name: patientId\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/create-appointment\"\n      method: POST\n      parameters:\n      - name: doctorId\n        value: '{{ inputs.parameters.doctorId }}'\n      - name: patientId\n        value: '{{ inputs.parameters.patientId }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'\n  - name: confirm-appointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: \"http://example.com/confirm-appointment\"\n      method: POST\n      parameters:\n      - name: appointment_id\n        value: '{{ inputs.parameters.appointment_id }}'\n  arguments:\n    parameters:\n    - name: patientId\n      value: '12345'  # Example patient ID for Michael Johnson\n    - name: date\n      value: '2023-10-05'\n    - name: time\n      value: '10:00 AM'\n    - name: specialty\n      value: 'ophthalmologist'\n    - name: location\n      value: 'New York'"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-movie\n        template: search-movie\n      - name: find-showtime\n        template: find-showtime\n        dependencies: [search-movie]\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.search-movie.outputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-tickets\n        template: book-tickets\n        dependencies: [find-showtime]\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.search-movie.outputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.find-showtime.outputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: search-movie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    outputs:\n      parameters:\n      - name: movie_name\n        valueFrom:\n          path: /tmp/movie_name\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        import requests\n        \n        genre = '{{ inputs.parameters.genre }}'\n        location = '{{ inputs.parameters.location }}'\n        \n        response = requests.get(f\"http://api.example.com/search?genre={genre}&location={location}\")\n        movie_details = response.json()\n        \n        with open('/tmp/movie_name', 'w') as f:\n            f.write(movie_details['name'])\n  - name: find-showtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    outputs:\n      parameters:\n      - name: showtime\n        valueFrom:\n          path: /tmp/showtime\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        import requests\n        \n        movie_name = '{{ inputs.parameters.movie_name }}'\n        location = '{{ inputs.parameters.location }}'\n        date = '{{ inputs.parameters.date }}'\n        \n        response = requests.get(f\"http://api.example.com/findshowtime?movie_name={movie_name}&location={location}&date={date}\")\n        showtime_details = response.json()\n        \n        with open('/tmp/showtime', 'w') as f:\n            f.write(showtime_details['showtime'])\n  - name: book-tickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        import requests\n        \n        movie_name = '{{ inputs.parameters.movie_name }}'\n        showtime = '{{ inputs.parameters.showtime }}'\n        number_of_tickets = '{{ inputs.parameters.number_of_tickets }}'\n        \n        response = requests.post(\"http://api.example.com/booktickets\", json={\n            \"movie_name\": movie_name,\n            \"showtime\": showtime,\n            \"number_of_tickets\": number_of_tickets\n        })\n        booking_status = response.json()\n        print(booking_status)\n  arguments:\n    parameters:\n    - name: genre\n      value: \"drama\"\n    - name: location\n      value: \"Seattle\"\n    - name: date\n      value: \"2023-12-25\"\n    - name: number_of_tickets\n      value: \"6\""}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-movie\n        template: recommend-movie\n      - name: get-showtime\n        dependencies: [recommend-movie]\n        template: get-showtime\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ tasks.recommend-movie.outputs.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-ticket\n        dependencies: [get-showtime]\n        template: book-ticket\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.recommend-movie.outputs.result }}'\n          - name: showtime\n            value: '{{ tasks.get-showtime.outputs.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: recommend-movie\n    inputs:\n      parameters:\n      - name: genre\n    http:\n      url: \"http://movie-recommender-service/recommend\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"genre\": \"{{ inputs.parameters.genre }}\"}'\n  - name: get-showtime\n    inputs:\n      parameters:\n      - name: movie\n      - name: date\n    http:\n      url: \"http://show-timing-service/get\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"movie\": \"{{ inputs.parameters.movie }}\", \"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: book-ticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://book-movie-ticket-service/book\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"movie_name\": \"{{ inputs.parameters.movie_name }}\", \"showtime\": \"{{ inputs.parameters.showtime }}\", \"number_of_tickets\": {{ inputs.parameters.number_of_tickets }}}'\n  arguments:\n    parameters:\n    - name: genre\n      value: \"thriller\"\n    - name: date\n      value: \"2023-10-15\"\n    - name: number_of_tickets\n      value: \"2\""}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-flight-status-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-flight-number\n        template: get-flight-number\n      - name: check-flight-status\n        template: check-flight-status\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{ tasks.get-flight-number.outputs.parameters.flight_number }}'\n  - name: get-flight-number\n    http:\n      url: \"http://example.com/api/getFlightNumber\"\n      method: \"GET\"\n      parameters:\n      - name: person_ID\n        value: '{{ inputs.parameters.person_ID }}'\n  - name: check-flight-status\n    http:\n      url: \"http://example.com/api/checkFlightStatus\"\n      method: \"GET\"\n      parameters:\n      - name: flight_number\n        value: '{{ inputs.parameters.flight_number }}'\n  arguments:\n    parameters:\n    - name: person_ID\n      value: '12345'"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-cinema\n        template: find-cinema\n      - name: find-restaurant\n        template: find-restaurant\n        dependencies: [find-cinema]\n      - name: make-reservation\n        template: make-reservation\n        dependencies: [find-restaurant]\n  - name: find-cinema\n    http:\n      url: \"http://example.com/findNearestCinema\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movieDetails\": {\n            \"name\": \"Inception\"\n          }\n        }\n  - name: find-restaurant\n    http:\n      url: \"http://example.com/resturantNearCinema\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"city\": \"{{ inputs.parameters.city }}\",\n          \"cinema_name\": \"{{ tasks.find-cinema.outputs.result }}\"\n        }\n  - name: make-reservation\n    http:\n      url: \"http://example.com/reservationMaker\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{ tasks.find-restaurant.outputs.result }}\",\n          \"time\": \"{{ inputs.parameters.reservation_time }}\"\n        }\n  arguments:\n    parameters:\n    - name: city\n      value: \"New York\"\n    - name: reservation_time\n      value: \"19:00\""}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-reading-time-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-title\n        template: get-book-title\n      - name: get-page-count\n        template: get-page-count\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{ tasks.get-book-title.result }}'\n      - name: calculate-reading-time\n        template: calculate-reading-time\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{ tasks.get-page-count.result }}'\n  - name: get-book-title\n    http:\n      url: \"http://example.com/api/ISBN2BookTitle\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"ISBN\": \"123456789\"}'\n  - name: get-page-count\n    http:\n      url: \"http://example.com/api/PageCount\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"Title\": \"{{ inputs.parameters.Title }}\"}'\n  - name: calculate-reading-time\n    http:\n      url: \"http://example.com/api/ReadingTime\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"Pages\": \"{{ inputs.parameters.Pages }}\"}'"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: get-weather\n      - name: findclothes\n        template: find-clothes\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: shoppingassistant\n        template: shopping-assistant\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.findclothes.result }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.com/getWeather?location=Los%20Angeles\"\n  - name: find-clothes\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: \"http://clothesapi.com/findClothes?weather={{ inputs.parameters.weather }}\"\n  - name: shopping-assistant\n    inputs:\n      parameters:\n      - name: outfit\n      - name: city\n    http:\n      url: \"http://shoppingapi.com/shoppingAssistant?outfit={{ inputs.parameters.outfit }}&city={{ inputs.parameters.city }}\"\n  arguments:\n    parameters:\n    - name: city\n      value: \"Los Angeles\""}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: drive-route-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-driving-distance\n        template: get-driving-distance\n      - name: calculate-time\n        template: calculate-time\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.get-driving-distance.outputs.parameters.distance }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: route-planner\n        template: route-planner\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.get-driving-distance.outputs.parameters.distance }}'\n          - name: time\n            value: '{{ tasks.calculate-time.outputs.parameters.time }}'\n  - name: get-driving-distance\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    outputs:\n      parameters:\n      - name: distance\n        valueFrom:\n          path: /tmp/distance\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        # Simulate API call\n        distance = 225.0  # Example distance in miles\n        with open('/tmp/distance', 'w') as f:\n            f.write(str(distance))\n  - name: calculate-time\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    outputs:\n      parameters:\n      - name: time\n        valueFrom:\n          path: /tmp/time\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        distance = float('{{ inputs.parameters.distance }}')\n        speed = float('{{ inputs.parameters.speed }}')\n        time = distance / speed\n        with open('/tmp/time', 'w') as f:\n            f.write(str(time))\n  - name: route-planner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        origin = '{{ inputs.parameters.origin }}'\n        destination = '{{ inputs.parameters.destination }}'\n        distance = '{{ inputs.parameters.distance }}'\n        time = '{{ inputs.parameters.time }}'\n        route = f\"Route from {origin} to {destination} is {distance} miles and will take {time} hours.\"\n        print(route)\n  arguments:\n    parameters:\n    - name: origin\n      value: 'New York'\n    - name: destination\n      value: 'Washington D.C.'\n    - name: speed\n      value: '60'"}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-report-\nspec:\n  entrypoint: stock-analysis-dag\n  templates:\n  - name: stock-analysis-dag\n    dag:\n      tasks:\n      - name: fetch-stock-data\n        template: fetch-stock-data\n      - name: basic-data-analysis\n        template: basic-data-analysis\n        dependencies: [fetch-stock-data]\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{ tasks.fetch-stock-data.result }}'\n      - name: generate-report\n        template: generate-report\n        dependencies: [basic-data-analysis]\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{ tasks.basic-data-analysis.result }}'\n          - name: template\n            value: '{{ inputs.parameters.template }}'\n  - name: fetch-stock-data\n    inputs:\n      parameters:\n      - name: stock_symbol\n    container:\n      image: stock-data-fetcher:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"FetchStockData {{inputs.parameters.stock_symbol}}\"]\n  - name: basic-data-analysis\n    inputs:\n      parameters:\n      - name: stock_data\n    container:\n      image: data-analyzer:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"BasicDataAnalysis {{inputs.parameters.stock_data}}\"]\n  - name: generate-report\n    inputs:\n      parameters:\n      - name: analyzed_data\n      - name: template\n    container:\n      image: report-generator:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"GenerateReport {{inputs.parameters.analyzed_data}} {{inputs.parameters.template}}\"]\n  arguments:\n    parameters:\n    - name: stock_symbol\n      value: 'AAPL'\n    - name: template\n      value: 'basic_analysis'"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-samsung-galaxy-s21-ultra-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: purchase-product\n        template: purchase-product\n        dependencies: [get-user-id]\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.outputs.parameters.user_ID }}'\n          - name: product_ID\n            value: '12345'  # Assuming 12345 is the product ID for Samsung Galaxy S21 Ultra\n          - name: quantity\n            value: '2'\n\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: email\n        value: '{{ inputs.parameters.email }}'\n    http:\n      url: http://example.com/api/UserEmailToID\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"email_address\": \"{{ inputs.parameters.email }}\"}'\n    outputs:\n      parameters:\n      - name: user_ID\n        valueFrom:\n          jsonPath: '{.user_ID}'\n\n  - name: purchase-product\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    http:\n      url: http://example.com/api/PurchaseItem\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"user_ID\": {{ inputs.parameters.user_ID }}, \"product_ID\": {{ inputs.parameters.product_ID }}, \"quantity\": {{ inputs.parameters.quantity }}}'\n    outputs:\n      parameters:\n      - name: purchase_status\n        valueFrom:\n          jsonPath: '{.purchase_status}'\n  arguments:\n    parameters:\n    - name: email\n      value: 'john@example.com'"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: get-weather\n      - name: recommendclothing\n        template: get-recommended-clothing\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n  - name: get-weather\n    http:\n      url: \"http://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=Tokyo\"\n      method: GET\n  - name: get-recommended-clothing\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: \"http://api.example.com/GetRecommendedClothing\"\n      method: POST\n      body:\n        weather: '{{ inputs.parameters.weather }}'"}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-cost-conversion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-product-price\n        template: get-product-price\n      - name: get-conversion-rate\n        template: get-conversion-rate\n      - name: calculate-cost\n        template: calculate-cost\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-product-price.outputs.parameters.product_price }}'\n          - name: exchange_rate\n            value: '{{ tasks.get-conversion-rate.outputs.parameters.conversion_rate }}'\n  - name: get-product-price\n    http:\n      url: \"http://example.com/api/GetPriceByID\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"product_id\": 22222}'\n    outputs:\n      parameters:\n      - name: product_price\n        valueFrom:\n          jsonPath: \"$.product_price\"\n  - name: get-conversion-rate\n    http:\n      url: \"http://example.com/api/CurrencyConversion\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"from_currency\": \"BRL\", \"to_currency\": \"CNY\"}'\n    outputs:\n      parameters:\n      - name: conversion_rate\n        valueFrom:\n          jsonPath: \"$.conversion_rate\"\n  - name: calculate-cost\n    http:\n      url: \"http://example.com/api/CalculateCost\"\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"price\": {{ inputs.parameters.price }}, \"exchange_rate\": {{ inputs.parameters.exchange_rate }}}'\n    outputs:\n      parameters:\n      - name: cost\n        valueFrom:\n          jsonPath: \"$.cost\""}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-\nspec:\n  entrypoint: flight-reservation-dag\n  templates:\n  - name: flight-reservation-dag\n    dag:\n      tasks:\n      - name: check-flights\n        template: check-flights\n      - name: check-luggage-allowance\n        template: check-luggage-allowance\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.check-flights.result }}'\n      - name: book-flight\n        template: book-flight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.check-flights.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  - name: check-flights\n    http:\n      url: \"http://example.com/checkFlights\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"source\": \"{{ inputs.parameters.source }}\", \"destination\": \"Tokyo\"}'\n  - name: check-luggage-allowance\n    http:\n      url: \"http://example.com/checkLuggageAllowance\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"flight\": \"{{ inputs.parameters.flight }}\"}'\n  - name: book-flight\n    http:\n      url: \"http://example.com/bookFlight\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"flight_details\": \"{{ inputs.parameters.flight_details }}\", \"preferred_flight_class\": \"{{ inputs.parameters.preferred_flight_class }}\"}'\n  arguments:\n    parameters:\n    - name: source\n    - name: preferred_flight_class"}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-purchase-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-showtime\n        template: get-showtime\n      - name: book-tickets\n        dependencies: [get-showtime]\n        template: book-tickets\n        arguments:\n          parameters:\n          - name: movie_name\n            value: 'Avengers'\n          - name: showtime\n            value: '{{ tasks.get-showtime.outputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '4'\n  - name: get-showtime\n    http:\n      url: \"http://example.com/api/GetShowtimes\"\n      method: GET\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      queryParams:\n        - name: movie_title\n          value: 'Avengers'\n        - name: city\n          value: 'Los Angeles'\n    outputs:\n      parameters:\n      - name: showtime\n        valueFrom:\n          jsonPath: \"$.showtime\"\n  - name: book-tickets\n    http:\n      url: \"http://example.com/api/BookTickets\"\n      method: POST\n      headers:\n        - name: \"Content-Type\"\n          value: \"application/json\"\n      body: |\n        {\n          \"movie_name\": \"{{ inputs.parameters.movie_name }}\",\n          \"showtime\": \"{{ inputs.parameters.showtime }}\",\n          \"number_of_tickets\": {{ inputs.parameters.number_of_tickets }}\n        }\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    outputs:\n      parameters:\n      - name: booking_status\n        valueFrom:\n          jsonPath: \"$.booking_status\""}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: locate-book-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-id\n        template: get-book-id\n      - name: locate-book\n        template: locate-book\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{ tasks.get-book-id.outputs.parameters.book_id }}'\n          - name: author_ID\n            value: '{{ inputs.parameters.author_ID }}'\n  - name: get-book-id\n    http:\n      url: \"http://example.com/api/GetBookIdByTitle\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"book_title\": \"1984\"}'\n    outputs:\n      parameters:\n      - name: book_id\n        valueFrom:\n          jsonPath: \"$.book_id\"\n  - name: locate-book\n    http:\n      url: \"http://example.com/api/LocateBook\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"book_ID\": \"{{ inputs.parameters.book_ID }}\", \"author_ID\": \"{{ inputs.parameters.author_ID }}\"}'\n    outputs:\n      parameters:\n      - name: location\n        valueFrom:\n          jsonPath: \"$.location\"\n  arguments:\n    parameters:\n    - name: author_ID\n      value: '123'  # Assuming author ID for George Orwell is known"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: sydney-event-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: weather-query\n      - name: find-events\n        template: event-finder\n        arguments:\n          parameters:\n          - name: city\n            value: 'Sydney'\n          - name: date\n            value: '2023-01-01'\n      - name: plan-activities\n        template: plan-outdoor-activities\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n          - name: events\n            value: '{{ tasks.find-events.result }}'\n      - name: book-ticket\n        template: book-event-ticket\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.plan-activities.result.event_ID }}'\n          - name: venue_ID\n            value: '{{ tasks.plan-activities.result.venue_ID }}'\n          - name: date\n            value: '2023-01-01'\n  - name: weather-query\n    http:\n      url: \"http://weatherapi.com/query\"\n      method: GET\n      parameters:\n      - name: city\n        value: 'Sydney'\n      - name: date\n        value: '2023-01-01'\n  - name: event-finder\n    http:\n      url: \"http://eventfinderapi.com/find\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: plan-outdoor-activities\n    http:\n      url: \"http://planactivitiesapi.com/plan\"\n      method: POST\n      parameters:\n      - name: weather\n        value: '{{ inputs.parameters.weather }}'\n      - name: events\n        value: '{{ inputs.parameters.events }}'\n  - name: book-event-ticket\n    http:\n      url: \"http://bookticketapi.com/book\"\n      method: POST\n      parameters:\n      - name: event_ID\n        value: '{{ inputs.parameters.event_ID }}'\n      - name: venue_ID\n        value: '{{ inputs.parameters.venue_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'"}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-cinemas\n        template: find-cinemas\n      - name: check-showtimes\n        template: check-showtimes\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{ tasks.find-cinemas.outputs.parameters.cinemaLocations }}'\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: find-cinemas\n    http:\n      url: \"http://cinemafinder.api/find\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movieDetails\": {{ inputs.parameters.movieDetails }}\n        }\n    outputs:\n      parameters:\n      - name: cinemaLocations\n        valueFrom:\n          jsonPath: \"$.cinemaLocations\"\n  - name: check-showtimes\n    http:\n      url: \"http://showtimecheck.api/check\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"cinemaLocations\": {{ inputs.parameters.cinemaLocations }},\n          \"movieDetails\": {{ inputs.parameters.movieDetails }}\n        }\n    outputs:\n      parameters:\n      - name: showTimes\n        valueFrom:\n          jsonPath: \"$.showTimes\"\n  arguments:\n    parameters:\n    - name: movieDetails\n      value: '{\"title\": \"Dunkirk\", \"director\": \"Christopher Nolan\"}'"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-hotel-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-hotel-details\n        template: get-hotel-details\n      - name: get-restaurant-details\n        template: get-restaurant-details\n      - name: reservation-booking\n        dependencies: [get-hotel-details, get-restaurant-details]\n        template: reservation-booking\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ tasks.get-hotel-details.outputs.result }}'\n          - name: restaurantLocations\n            value: '{{ tasks.get-restaurant-details.outputs.result }}'\n  - name: get-hotel-details\n    http:\n      url: \"http://example.com/api/GetHotelDetails\"\n      method: \"GET\"\n      headers:\n      - name: city\n        value: \"Miami\"\n      - name: date\n        value: \"2023-08-25\"\n  - name: get-restaurant-details\n    http:\n      url: \"http://example.com/api/GetRestaurantDetails\"\n      method: \"GET\"\n      headers:\n      - name: city\n        value: \"Miami\"\n      - name: date\n        value: \"2023-08-25\"\n  - name: reservation-booking\n    http:\n      url: \"http://example.com/api/ReservationBooking\"\n      method: \"POST\"\n      body:\n        hotelDetails: '{{ inputs.parameters.hotelDetails }}'\n        restaurantLocations: '{{ inputs.parameters.restaurantLocations }}'"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: dress-suggestion\n        template: dress-suggestion\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n      - name: get-outfit-store\n        template: get-outfit-store\n        arguments:\n          parameters:\n          - name: city\n            value: 'Miami'\n          - name: outfit\n            value: '{{ tasks.dress-suggestion.result }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.com/getWeather?location=Miami\"\n  - name: dress-suggestion\n    http:\n      url: \"http://api.example.com/DressSuggestion\"\n      method: POST\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\"}'\n  - name: get-outfit-store\n    http:\n      url: \"http://api.example.com/GetOutfitStore\"\n      method: POST\n      body: '{\"city\": \"{{ inputs.parameters.city }}\", \"outfit\": \"{{ inputs.parameters.outfit }}\"}'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: suggest-activity\n        template: suggest-activity\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.get-weather.result }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.example.com/forecast?location=192.168.0.254&date=2023-07-23\"\n      method: GET\n  - name: suggest-activity\n    http:\n      url: \"http://activitysuggestionapi.example.com/suggest\"\n      method: POST\n      body:\n        weather_condition: '{{ inputs.parameters.weather_condition }}'"}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-current-weather\n        template: get-current-weather\n      - name: get-weather-forecast\n        template: get-weather-forecast\n      - name: compare-weather\n        template: compare-weather\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.get-current-weather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.get-weather-forecast.result }}'\n  - name: get-current-weather\n    http:\n      url: \"http://weatherapi.com/current?city=New%20York\"\n      method: GET\n  - name: get-weather-forecast\n    http:\n      url: \"http://weatherapi.com/forecast?city=New%20York&days=7\"\n      method: GET\n  - name: compare-weather\n    http:\n      url: \"http://compareweatherapi.com/compare\"\n      method: POST\n      body:\n        current_weather: '{{ inputs.parameters.current_weather }}'\n        weather_forecast: '{{ inputs.parameters.weather_forecast }}'"}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-current-weather\n        template: get-current-weather\n      - name: get-weather-forecast\n        template: get-weather-forecast\n      - name: compare-weather\n        template: compare-weather\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.get-current-weather.outputs.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.get-weather-forecast.outputs.result }}'\n  - name: get-current-weather\n    http:\n      url: \"http://weatherapi.com/current?city=Tokyo\"\n  - name: get-weather-forecast\n    http:\n      url: \"http://weatherapi.com/forecast?city=Tokyo&days=7\"\n  - name: compare-weather\n    http:\n      url: \"http://compareweatherapi.com/compare\"\n      method: POST\n      body:\n        current_weather: '{{ inputs.parameters.current_weather }}'\n        weather_forecast: '{{ inputs.parameters.weather_forecast }}'"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: new-york-activities-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: event-suggestions\n        template: event-suggestions\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: restaurant-recommend\n        template: restaurant-recommend\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ tasks.event-suggestions.result }}'\n  - name: event-suggestions\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: http://event-suggestions-api\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: restaurant-recommend\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    http:\n      url: http://restaurant-recommend-api\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cuisine\n        value: '{{ inputs.parameters.cuisine }}'\n      - name: weather\n        value: '{{ inputs.parameters.weather }}'\n  arguments:\n    parameters:\n    - name: city\n      value: New York\n    - name: date\n      value: 2023-04-15\n    - name: cuisine\n      value: French"}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: get-clothing-advice\n        template: get-clothing-advice\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n      - name: get-price\n        template: get-price\n        arguments:\n          parameters:\n          - name: clothes\n            value: '{{ tasks.get-clothing-advice.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: get-weather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Chicago&date=tomorrow\"\n  - name: get-clothing-advice\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: \"http://clothingadviceapi.com/GetClothingAdvice\"\n      method: POST\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\"}'\n  - name: get-price\n    inputs:\n      parameters:\n      - name: clothes\n      - name: location\n    http:\n      url: \"http://fashionstoreapi.com/FashionStore\"\n      method: POST\n      body: '{\"clothes\": \"{{ inputs.parameters.clothes }}\", \"location\": \"{{ inputs.parameters.location }}\"}'\n  arguments:\n    parameters:\n    - name: location\n      value: \"Chicago\""}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-route-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-driving-distance\n        template: get-driving-distance\n      - name: calculate-time\n        template: calculate-time\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.get-driving-distance.outputs.parameters.distance }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: route-planner\n        template: route-planner\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.get-driving-distance.outputs.parameters.distance }}'\n          - name: time\n            value: '{{ tasks.calculate-time.outputs.parameters.time }}'\n  - name: get-driving-distance\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    outputs:\n      parameters:\n      - name: distance\n        valueFrom:\n          path: /tmp/distance\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        # Mock implementation\n        distance = 382.0  # Example distance between San Francisco and Los Angeles\n        with open('/tmp/distance', 'w') as f:\n            f.write(str(distance))\n  - name: calculate-time\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    outputs:\n      parameters:\n      - name: time\n        valueFrom:\n          path: /tmp/time\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        distance = float('{{ inputs.parameters.distance }}')\n        speed = float('{{ inputs.parameters.speed }}')\n        time = distance / speed\n        with open('/tmp/time', 'w') as f:\n            f.write(str(time))\n  - name: route-planner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    outputs:\n      parameters:\n      - name: route\n        valueFrom:\n          path: /tmp/route\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        # Mock implementation\n        route = f\"Route from {origin} to {destination} covering {distance} miles in {time} hours.\"\n        with open('/tmp/route', 'w') as f:\n            f.write(route)\n  arguments:\n    parameters:\n    - name: origin\n      value: 'San Francisco'\n    - name: destination\n      value: 'Los Angeles'\n    - name: speed\n      value: '55'"}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-search-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: order-steak\n        template: order-steak\n        arguments:\n          parameters:\n          - name: dish_name\n            value: 'steak'\n          - name: restaurant_name\n            value: '{{ tasks.find-restaurant.outputs.parameters.restaurant_name }}'\n  - name: find-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: \"http://example.com/api/SearchRestaurant\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"city\": \"{{ inputs.parameters.city }}\",\n          \"cuisine\": \"{{ inputs.parameters.cuisine }}\"\n        }\n    outputs:\n      parameters:\n      - name: restaurant_name\n        valueFrom:\n          jsonPath: \"$.restaurant_name\"\n  - name: order-steak\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: \"http://example.com/api/OrderFood\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"dish_name\": \"{{ inputs.parameters.dish_name }}\",\n          \"restaurant_name\": \"{{ inputs.parameters.restaurant_name }}\"\n        }\n    outputs:\n      parameters:\n      - name: order_status\n        valueFrom:\n          jsonPath: \"$.order_status\"\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York City'\n    - name: cuisine\n      value: 'American'"}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: fc-barcelona-game-cost-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-team-info\n        template: get-team-info\n      - name: get-game-schedule\n        template: get-game-schedule\n        dependencies: [get-team-info]\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{ tasks.get-team-info.outputs.result }}'\n      - name: get-ticket-price\n        template: get-ticket-price\n        dependencies: [get-game-schedule]\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{ tasks.get-game-schedule.outputs.result }}'\n  - name: get-team-info\n    http:\n      url: http://example.com/FootballTeamInfo\n      method: GET\n      parameters:\n      - name: team_name\n        value: 'FC Barcelona'\n  - name: get-game-schedule\n    http:\n      url: http://example.com/GameSchedule\n      method: GET\n      parameters:\n      - name: team_info\n        value: '{{ inputs.parameters.team_info }}'\n  - name: get-ticket-price\n    http:\n      url: http://example.com/TicketPrice\n      method: GET\n      parameters:\n      - name: game_schedule\n        value: '{{ inputs.parameters.game_schedule }}'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: tokyo-trip-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-flight\n        template: search-flight\n      - name: plan-trip\n        template: plan-trip\n        dependencies: [search-flight]\n      - name: create-travel-plan\n        template: create-travel-plan\n        dependencies: [plan-trip]\n\n  - name: search-flight\n    http:\n      url: \"http://api.example.com/search-flight\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"from_location\": \"{{ inputs.parameters.from_location }}\",\n          \"to_location\": \"Tokyo\",\n          \"date\": \"2023-09-15\"\n        }\n    inputs:\n      parameters:\n      - name: from_location\n\n  - name: plan-trip\n    http:\n      url: \"http://api.example.com/plan-trip\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"hotel\": \"{{ inputs.parameters.hotel }}\",\n          \"restaurants\": \"{{ inputs.parameters.restaurants }}\"\n        }\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n\n  - name: create-travel-plan\n    http:\n      url: \"http://api.example.com/create-travel-plan\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"flight\": \"{{ tasks.search-flight.result }}\",\n          \"accommodation\": \"{{ tasks.plan-trip.result }}\"\n        }"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: tokyo-trip-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-restaurant\n        template: recommend-restaurant\n      - name: book-reservation\n        template: book-reservation\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ inputs.parameters.hotelDetails }}'\n          - name: restaurantLocations\n            value: '{{ tasks.recommend-restaurant.result }}'\n  - name: recommend-restaurant\n    http:\n      url: http://restaurant-recommendation-api\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"venue\": \"Park Hyatt\"\n        }\n  - name: book-reservation\n    http:\n      url: http://reservation-booking-api\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"hotelDetails\": \"Park Hyatt\",\n          \"restaurantLocations\": {{ tasks.recommend-restaurant.result }}\n        }\n  arguments:\n    parameters:\n    - name: hotelDetails\n      value: \"Park Hyatt\""}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-on-population-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n      - name: weather-impact-on-population\n        template: weather-impact-on-population\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n          - name: population\n            value: '{{ inputs.parameters.population }}'\n  - name: get-weather\n    http:\n      url: \"http://example.com/api/weather?city=Tokyo\"\n      method: GET\n  - name: weather-impact-on-population\n    http:\n      url: \"http://example.com/api/weatherImpactOnPopulation\"\n      method: POST\n      body:\n        weather: '{{ inputs.parameters.weather }}'\n        population: '{{ inputs.parameters.population }}'\n  arguments:\n    parameters:\n    - name: population\n      value: '14000000'"}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: books-by-author-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-author-id\n        template: get-author-id\n      - name: books-by-author\n        template: books-by-author\n        dependencies: [get-author-id]\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{ tasks.get-author-id.outputs.parameters.author_id }}'\n  - name: get-author-id\n    http:\n      url: \"http://example.com/AuthorOfBook\"\n      method: \"GET\"\n      parameters:\n      - name: book_id\n        value: '{{ inputs.parameters.book_id }}'\n    outputs:\n      parameters:\n      - name: author_id\n        valueFrom:\n          jsonPath: \"$.author_id\"\n  - name: books-by-author\n    http:\n      url: \"http://example.com/BooksByAuthor\"\n      method: \"GET\"\n      parameters:\n      - name: author_id\n        value: '{{ inputs.parameters.author_id }}'\n    outputs:\n      parameters:\n      - name: book_list\n        valueFrom:\n          jsonPath: \"$.book_list\"\n  arguments:\n    parameters:\n    - name: book_id\n      value: '{{ inputs.parameters.book_id }}'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-fare\n        template: search-fare\n      - name: check-discount\n        template: check-discount\n        arguments:\n          parameters:\n          - name: coupon\n            value: \"SUMMER50\"\n          - name: fare_id\n            value: '{{ tasks.search-fare.outputs.parameters.fare_id }}'\n      - name: calculate-final-fare\n        template: calculate-final-fare\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{ tasks.search-fare.outputs.parameters.fare_id }}'\n          - name: discount_amount\n            value: '{{ tasks.check-discount.outputs.parameters.discount_amount }}'\n  - name: search-fare\n    inputs:\n      parameters:\n      - name: src\n      - name: dest\n      - name: date\n    outputs:\n      parameters:\n      - name: fare_id\n        valueFrom:\n          path: /tmp/fare_id\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        def search_fare(src, dest, date):\n            # Simulate API call\n            return 12345  # Example fare_id\n        fare_id = search_fare('{{ inputs.parameters.src }}', '{{ inputs.parameters.dest }}', '{{ inputs.parameters.date }}')\n        with open('/tmp/fare_id', 'w') as f:\n            f.write(str(fare_id))\n  - name: check-discount\n    inputs:\n      parameters:\n      - name: coupon\n      - name: fare_id\n    outputs:\n      parameters:\n      - name: discount_amount\n        valueFrom:\n          path: /tmp/discount_amount\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        def check_discount(coupon, fare_id):\n            # Simulate API call\n            return 50.0  # Example discount amount\n        discount_amount = check_discount('{{ inputs.parameters.coupon }}', int('{{ inputs.parameters.fare_id }}'))\n        with open('/tmp/discount_amount', 'w') as f:\n            f.write(str(discount_amount))\n  - name: calculate-final-fare\n    inputs:\n      parameters:\n      - name: fare_id\n      - name: discount_amount\n    outputs:\n      parameters:\n      - name: final_fare\n        valueFrom:\n          path: /tmp/final_fare\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        import json\n        def calculate_final_fare(fare_id, discount_amount):\n            # Simulate API call\n            return 200.0  # Example final fare\n        final_fare = calculate_final_fare(int('{{ inputs.parameters.fare_id }}'), float('{{ inputs.parameters.discount_amount }}'))\n        with open('/tmp/final_fare', 'w') as f:\n            f.write(str(final_fare))\n  arguments:\n    parameters:\n    - name: src\n      value: \"New York\"\n    - name: dest\n      value: \"Los Angeles\"\n    - name: date\n      value: \"2023-06-13\""}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-to-tokyo-\nspec:\n  entrypoint: travel-plan\n  templates:\n  - name: travel-plan\n    dag:\n      tasks:\n      - name: search-flight\n        template: search-flight\n      - name: book-hotel\n        template: book-hotel\n      - name: create-travel-plan\n        template: create-travel-plan\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.search-flight.result }}'\n          - name: accommodation\n            value: '{{ tasks.book-hotel.result }}'\n      - name: plan-itinerary\n        template: plan-itinerary\n        arguments:\n          parameters:\n          - name: location\n            value: 'Tokyo'\n          - name: interests\n            value: 'technology'\n          - name: flight\n            value: '{{ tasks.search-flight.result }}'\n          - name: hotel\n            value: '{{ tasks.book-hotel.result }}'\n  - name: search-flight\n    http:\n      url: \"http://example.com/api/search-flight\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"from_location\": \"Chicago\", \"to_location\": \"Tokyo\", \"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: book-hotel\n    http:\n      url: \"http://example.com/api/book-hotel\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"destination\": \"Tokyo\", \"check_in_date\": \"{{ inputs.parameters.check_in_date }}\", \"check_out_date\": \"{{ inputs.parameters.check_out_date }}\"}'\n  - name: create-travel-plan\n    http:\n      url: \"http://example.com/api/create-travel-plan\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"flight\": \"{{ inputs.parameters.flight }}\", \"accommodation\": \"{{ inputs.parameters.accommodation }}\"}'\n  - name: plan-itinerary\n    http:\n      url: \"http://example.com/api/plan-itinerary\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"location\": \"{{ inputs.parameters.location }}\", \"interests\": \"{{ inputs.parameters.interests }}\", \"flight\": \"{{ inputs.parameters.flight }}\", \"hotel\": \"{{ inputs.parameters.hotel }}\"}'\n  arguments:\n    parameters:\n    - name: date\n      value: \"2023-12-01\"\n    - name: check_in_date\n      value: \"2023-12-02\"\n    - name: check_out_date\n      value: \"2023-12-09\""}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: dinner-reservation\n        template: dinner-reservation\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.find-restaurant.outputs.parameters.restaurant_name }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: find-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/api/SearchRestaurant\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: cuisine\n        value: '{{ inputs.parameters.cuisine }}'\n    outputs:\n      parameters:\n      - name: restaurant_name\n        valueFrom:\n          jsonPath: '{.restaurant_name}'\n  - name: dinner-reservation\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: time\n    http:\n      url: http://example.com/api/DinnerReservation\n      method: POST\n      parameters:\n      - name: restaurant\n        value: '{{ inputs.parameters.restaurant }}'\n      - name: time\n        value: '{{ inputs.parameters.time }}'\n    outputs:\n      parameters:\n      - name: reservation_status\n        valueFrom:\n          jsonPath: '{.reservation_status}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: cuisine\n      value: 'Italian'\n    - name: time\n      value: '20:00'"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: next-bus-timing-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-traffic-update\n        template: get-traffic-update\n      - name: calculate-travel-time\n        template: calculate-travel-time\n        arguments:\n          parameters:\n          - name: trafficDelay\n            value: '{{ tasks.get-traffic-update.result }}'\n      - name: fetch-next-bus\n        template: fetch-next-bus\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{ tasks.calculate-travel-time.result }}'\n          - name: bus_route\n            value: '{{ inputs.parameters.bus_route }}'\n  - name: get-traffic-update\n    http:\n      url: \"http://example.com/api/GetTrafficUpdate\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: \"Times Square\"\n  - name: calculate-travel-time\n    http:\n      url: \"http://example.com/api/TimeCalculator\"\n      method: \"GET\"\n      parameters:\n      - name: traffic\n        value: '{{ tasks.get-traffic-update.result }}'\n      - name: modeOfTransport\n        value: \"bus\"\n  - name: fetch-next-bus\n    http:\n      url: \"http://example.com/api/FetchNextBus\"\n      method: \"GET\"\n      parameters:\n      - name: travel_time\n        value: '{{ tasks.calculate-travel-time.result }}'\n      - name: bus_route\n        value: '{{ inputs.parameters.bus_route }}'\n  arguments:\n    parameters:\n    - name: bus_route\n      value: \"Times Square to Wall Street\""}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-\nspec:\n  entrypoint: traffic-dag\n  templates:\n  - name: traffic-dag\n    dag:\n      tasks:\n      - name: check-traffic\n        template: check-traffic\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n      - name: get-traffic-update\n        template: get-traffic-update\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculate-travel-time\n        template: calculate-travel-time\n        arguments:\n          parameters:\n          - name: trafficDelay\n            value: '{{ tasks.get-traffic-update.result }}'\n          - name: flightTimes\n            value: '{{ inputs.parameters.flightTimes }}'\n      - name: alert-before-departure\n        template: alert-before-departure\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{ inputs.parameters.event_time }}'\n          - name: travel_time\n            value: '{{ tasks.calculate-travel-time.result }}'\n  - name: check-traffic\n    inputs:\n      parameters:\n      - name: destination\n    container:\n      image: traffic-checker:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Checking traffic for {{inputs.parameters.destination}}\"]\n  - name: get-traffic-update\n    inputs:\n      parameters:\n      - name: location\n    container:\n      image: traffic-updater:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Getting traffic update for {{inputs.parameters.location}}\"]\n  - name: calculate-travel-time\n    inputs:\n      parameters:\n      - name: trafficDelay\n      - name: flightTimes\n    container:\n      image: travel-time-calculator:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Calculating travel time with delay {{inputs.parameters.trafficDelay}} and flight times {{inputs.parameters.flightTimes}}\"]\n  - name: alert-before-departure\n    inputs:\n      parameters:\n      - name: event_time\n      - name: travel_time\n    container:\n      image: departure-alert:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Alerting before departure at {{inputs.parameters.event_time}} with travel time {{inputs.parameters.travel_time}}\"]\n  arguments:\n    parameters:\n    - name: destination\n    - name: flightTimes\n    - name: event_time"}]