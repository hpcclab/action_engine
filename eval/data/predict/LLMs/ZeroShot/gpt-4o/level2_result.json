[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-playlist-id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: add-song\n        template: addsongtoplaylist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.get-playlist-id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: username2id\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_name }}\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.playlist_name }}\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.song_name }}\"]\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'Tom'\n    - name: playlist_name\n      value: 'Latin Fiesta'\n    - name: song_name\n      value: 'Dancing Queen'"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: username-to-id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-playlist-id\n        template: playlistname-to-id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: add-song\n        template: add-song-to-playlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.get-playlist-id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: username-to-id\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_name }}\"]\n  - name: playlistname-to-id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.playlist_name }}\"]\n  - name: add-song-to-playlist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_ID }} {{ inputs.parameters.playlist_ID }} {{ inputs.parameters.song_name }}\"]\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'John'\n    - name: playlist_name\n      value: 'Rock Ballads'\n    - name: song_name\n      value: 'Space Oddity'"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-song-to-playlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-playlist-id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: add-song-to-playlist\n        template: addsongtoplaylist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.get-playlist-id.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: username2id\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_name }}\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.playlist_name }}\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.song_name }}\"]\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'Mia'\n    - name: playlist_name\n      value: 'Classic Disco Hits'\n    - name: song_name\n      value: 'Sweet Child of Mine'"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-movie\n        template: find-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'drama'\n      - name: movie-showtimes\n        template: movie-showtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.find-movie.result }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: buy-movie-tickets\n        template: buy-movie-tickets\n        arguments:\n          parameters:\n          - name: show_time\n            value: '{{ tasks.movie-showtimes.result }}'\n          - name: movie_name\n            value: '{{ tasks.find-movie.result }}'\n          - name: seats\n            value: '{{ inputs.parameters.seats }}'\n  - name: find-movie\n    inputs:\n      parameters:\n      - name: genre\n    http:\n      url: <FindMovie API URL>\n      method: GET\n  - name: movie-showtimes\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: city\n    http:\n      url: <MovieShowtimes API URL>\n      method: GET\n  - name: buy-movie-tickets\n    inputs:\n      parameters:\n      - name: show_time\n      - name: movie_name\n      - name: seats\n    http:\n      url: <BuyMovieTickets API URL>\n      method: POST\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: seats\n      value: '2'"}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-book-\nspec:\n  entrypoint: purchase-book-dag\n  templates:\n  - name: purchase-book-dag\n    dag:\n      tasks:\n      - name: get-customer-id\n        template: get-customer-id\n      - name: get-product-id\n        template: get-product-id\n      - name: purchase-book\n        template: purchase-book\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.get-customer-id.result }}'\n          - name: product_ID\n            value: '{{ tasks.get-product-id.result }}'\n  - name: get-customer-id\n    http:\n      url: http://example.com/Customername2ID\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"customer_name\": \"{{ inputs.parameters.customer_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: customer_name\n  - name: get-product-id\n    http:\n      url: http://example.com/Productname2ID\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"book_name\": \"{{ inputs.parameters.book_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: book_name\n  - name: purchase-book\n    http:\n      url: http://example.com/PurchaseBook\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"customer_ID\": {{ tasks.get-customer-id.result }},\n          \"product_ID\": {{ tasks.get-product-id.result }}\n        }"}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-person-id\n        template: email-to-id\n        arguments:\n          parameters:\n          - name: email\n            value: 'johndoe@gmail.com'\n      - name: get-subject-id\n        template: subjectname-to-id\n        arguments:\n          parameters:\n          - name: subject_name\n            value: 'Microeconomics'\n      - name: enroll-course\n        template: enroll-course\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.get-person-id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.get-subject-id.result }}'\n          - name: semester\n            value: 'Fall'\n  - name: email-to-id\n    inputs:\n      parameters:\n      - name: email\n    http:\n      url: <Email2ID API URL>\n      method: POST\n      body:\n        email: '{{ inputs.parameters.email }}'\n  - name: subjectname-to-id\n    inputs:\n      parameters:\n      - name: subject_name\n    http:\n      url: <Subjectname2ID API URL>\n      method: POST\n      body:\n        subject_name: '{{ inputs.parameters.subject_name }}'\n  - name: enroll-course\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    http:\n      url: <EnrollCourse API URL>\n      method: POST\n      body:\n        person_ID: '{{ inputs.parameters.person_ID }}'\n        subject_ID: '{{ inputs.parameters.subject_ID }}'\n        semester: '{{ inputs.parameters.semester }}'"}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-person-id\n        template: email-to-id\n        arguments:\n          parameters:\n          - name: email\n            value: 'tony.stark@avengers.com'\n      - name: get-subject-id\n        template: subject-name-to-id\n        arguments:\n          parameters:\n          - name: subject_name\n            value: 'Programming'\n      - name: enroll-course\n        template: enroll-course\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.get-person-id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.get-subject-id.result }}'\n          - name: semester\n            value: 'Winter'\n  - name: email-to-id\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.email}} | Email2ID\"]\n  - name: subject-name-to-id\n    inputs:\n      parameters:\n      - name: subject_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.subject_name}} | Subjectname2ID\"]\n  - name: enroll-course\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.person_ID}} {{inputs.parameters.subject_ID}} {{inputs.parameters.semester}} | EnrollCourse\"]"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-city-id\n        template: cityname2id\n        arguments:\n          parameters:\n          - name: city_name\n            value: '{{ inputs.parameters.city_name }}'\n      - name: get-event-id\n        template: eventname2id\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: reserve-ticket\n        template: reserveticket\n        arguments:\n          parameters:\n          - name: City_ID\n            value: '{{ tasks.get-city-id.result }}'\n          - name: Event_ID\n            value: '{{ tasks.get-event-id.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: cityname2id\n    inputs:\n      parameters:\n      - name: city_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city_name }} | cityname2id\"]\n  - name: eventname2id\n    inputs:\n      parameters:\n      - name: event_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.event_name }} | eventname2id\"]\n  - name: reserveticket\n    inputs:\n      parameters:\n      - name: City_ID\n      - name: Event_ID\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.City_ID }} {{ inputs.parameters.Event_ID }} {{ inputs.parameters.date }} | reserveticket\"]\n  inputs:\n    parameters:\n    - name: city_name\n    - name: event_name\n    - name: date"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-ticket-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-city-id\n        template: cityname2id\n        arguments:\n          parameters:\n          - name: city_name\n            value: '{{ inputs.parameters.city_name }}'\n      - name: get-event-id\n        template: eventname2id\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: reserve-ticket\n        template: reserveticket\n        arguments:\n          parameters:\n          - name: City_ID\n            value: '{{ tasks.get-city-id.result }}'\n          - name: Event_ID\n            value: '{{ tasks.get-event-id.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: cityname2id\n    inputs:\n      parameters:\n      - name: city_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city_name }}\"]\n  - name: eventname2id\n    inputs:\n      parameters:\n      - name: event_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.event_name }}\"]\n  - name: reserveticket\n    inputs:\n      parameters:\n      - name: City_ID\n      - name: Event_ID\n      - name: date\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.City_ID }} {{ inputs.parameters.Event_ID }} {{ inputs.parameters.date }}\"]\n  arguments:\n    parameters:\n    - name: city_name\n      value: 'Los Angeles'\n    - name: event_name\n      value: 'Film Festival'\n    - name: date\n      value: '2023-10-22'"}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: place-order-\nspec:\n  entrypoint: order-items\n  templates:\n  - name: order-items\n    dag:\n      tasks:\n      - name: get-item-id\n        template: item-id\n        arguments:\n          parameters:\n          - name: item_name\n            value: '{{ inputs.parameters.item_name }}'\n      - name: get-supplier-id\n        template: supplier-id\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{ inputs.parameters.supplier_name }}'\n      - name: place-order\n        template: order\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ tasks.get-item-id.result }}'\n          - name: supplier_ID\n            value: '{{ tasks.get-supplier-id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: item-id\n    inputs:\n      parameters:\n      - name: item_name\n    container:\n      image: appropriate/curl\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.item_name }} | ItemnameToID\"]\n  - name: supplier-id\n    inputs:\n      parameters:\n      - name: supplier_name\n    container:\n      image: appropriate/curl\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.supplier_name }} | SuppliernameToID\"]\n  - name: order\n    inputs:\n      parameters:\n      - name: item_ID\n      - name: supplier_ID\n      - name: quantity\n    container:\n      image: appropriate/curl\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.item_ID }} {{ inputs.parameters.supplier_ID }} {{ inputs.parameters.quantity }} | PlaceOrder\"]\n  arguments:\n    parameters:\n    - name: item_name\n      value: 'coffee mugs'\n    - name: supplier_name\n      value: 'KitchenPlus'\n    - name: quantity\n      value: '50'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-to-cart-\nspec:\n  entrypoint: add-to-cart\n  templates:\n  - name: add-to-cart\n    dag:\n      tasks:\n      - name: get-customer-id\n        template: get-customer-id\n      - name: get-product-id\n        template: get-product-id\n      - name: add-to-cart\n        template: add-to-cart\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.get-customer-id.result }}'\n          - name: product_ID\n            value: '{{ tasks.get-product-id.result }}'\n  - name: get-customer-id\n    http:\n      url: <Customername2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"customer_name\": \"{{ inputs.parameters.customer_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: customer_name\n        value: 'Anthony'\n  - name: get-product-id\n    http:\n      url: <Productname2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"book_name\": \"{{ inputs.parameters.product_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: product_name\n        value: 'Samsung Galaxy S21'\n  - name: add-to-cart\n    http:\n      url: <AddToCart API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"customer_ID\": \"{{ inputs.parameters.customer_ID }}\",\n          \"product_ID\": \"{{ inputs.parameters.product_ID }}\"\n        }"}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: plan-trip-to-la-\nspec:\n  entrypoint: plan-trip\n  templates:\n  - name: plan-trip\n    dag:\n      tasks:\n      - name: get-restaurants\n        template: get-restaurants\n      - name: get-hotel-availability\n        template: get-hotel-availability\n      - name: plan-trip\n        template: plan-trip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ tasks.get-hotel-availability.result }}'\n          - name: restaurants\n            value: '{{ tasks.get-restaurants.result }}'\n  - name: get-restaurants\n    http:\n      url: \"http://example.com/api/getRestaurants\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: get-hotel-availability\n    http:\n      url: \"http://example.com/api/getHotelAvailability\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: dates\n        value: '{{ inputs.parameters.dates }}'\n  - name: plan-trip\n    http:\n      url: \"http://example.com/api/planTrip\"\n      method: POST\n      parameters:\n      - name: hotel\n        value: '{{ tasks.get-hotel-availability.result }}'\n      - name: restaurants\n        value: '{{ tasks.get-restaurants.result }}'\n  arguments:\n    parameters:\n    - name: city\n      value: \"Los Angeles\"\n    - name: dates\n      value: \"next month\""}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestions-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-exchange-rate\n        template: get-exchange-rate\n      - name: calculate-local-budget\n        template: calculate-local-budget\n        dependencies: [get-exchange-rate]\n        arguments:\n          parameters:\n          - name: budget\n            value: '{{ inputs.parameters.budget }}'\n          - name: exchangeRate\n            value: '{{ tasks.get-exchange-rate.result }}'\n      - name: suggest-dining-options\n        template: suggest-dining-options\n        dependencies: [calculate-local-budget]\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ tasks.calculate-local-budget.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  \n  - name: get-exchange-rate\n    http:\n      url: <exchange-rate-api-url>\n      method: GET\n      parameters:\n      - name: currency\n        value: 'EUR'\n\n  - name: calculate-local-budget\n    http:\n      url: <local-budget-api-url>\n      method: POST\n      parameters:\n      - name: budget\n        value: '{{ inputs.parameters.budget }}'\n      - name: exchangeRate\n        value: '{{ tasks.get-exchange-rate.result }}'\n\n  - name: suggest-dining-options\n    http:\n      url: <dining-options-api-url>\n      method: POST\n      parameters:\n      - name: localBudget\n        value: '{{ tasks.calculate-local-budget.result }}'\n      - name: location\n        value: '{{ inputs.parameters.location }}'\n\n  arguments:\n    parameters:\n    - name: budget\n      value: '300'\n    - name: location\n      value: 'Paris'"}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-to-cart-\nspec:\n  entrypoint: add-to-cart\n  templates:\n  - name: add-to-cart\n    dag:\n      tasks:\n      - name: get-customer-id\n        template: get-customer-id\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{ inputs.parameters.customer_name }}'\n      - name: get-product-id\n        template: get-product-id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: add-product-to-cart\n        template: add-product-to-cart\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ tasks.get-product-id.result }}'\n          - name: customer_ID\n            value: '{{ tasks.get-customer-id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: get-customer-id\n    inputs:\n      parameters:\n      - name: customer_name\n    http:\n      url: http://example.com/api/CustomernameToID\n      method: POST\n      body: '{\"customer_name\": \"{{ inputs.parameters.customer_name }}\"}'\n  - name: get-product-id\n    inputs:\n      parameters:\n      - name: product_name\n    http:\n      url: http://example.com/api/ProductnameToID\n      method: POST\n      body: '{\"product_name\": \"{{ inputs.parameters.product_name }}\"}'\n  - name: add-product-to-cart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    http:\n      url: http://example.com/api/AddProductToCart\n      method: POST\n      body: '{\"product_ID\": \"{{ inputs.parameters.product_ID }}\", \"customer_ID\": \"{{ inputs.parameters.customer_ID }}\", \"quantity\": \"{{ inputs.parameters.quantity }}\"}'\n  arguments:\n    parameters:\n    - name: customer_name\n      value: 'Jack'\n    - name: product_name\n      value: 'iPhone 12'\n    - name: quantity\n      value: '3'"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: rent-movie-\nspec:\n  entrypoint: rent-movie-dag\n  templates:\n  - name: rent-movie-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-movie-id\n        template: get-movie-id\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: rent-movie\n        template: rent-movie\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: movie_ID\n            value: '{{ tasks.get-movie-id.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(UsernameToID {{inputs.parameters.user_name}})\"]\n  - name: get-movie-id\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(MovienameToID {{inputs.parameters.movie_name}})\"]\n  - name: rent-movie\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n      - name: date\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(RentMovie {{inputs.parameters.user_ID}} {{inputs.parameters.movie_ID}} {{inputs.parameters.date}})\"]\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'JohnDoe'\n    - name: movie_name\n      value: 'Inception'\n    - name: date\n      value: '2022-04-01'"}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-\nspec:\n  entrypoint: play-song-dag\n  templates:\n  - name: play-song-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: get-song-id\n        template: get-song-id\n      - name: play-song\n        template: play-song\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: song_ID\n            value: '{{ tasks.get-song-id.result }}'\n  - name: get-user-id\n    http:\n      url: <UsernameToID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_name\": \"{{ inputs.parameters.user_name }}\"\n        }\n  - name: get-song-id\n    http:\n      url: <SongTitleToID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"song_title\": \"{{ inputs.parameters.song_title }}\"\n        }\n  - name: play-song\n    http:\n      url: <PlaySong API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_ID\": \"{{ tasks.get-user-id.result }}\",\n          \"song_ID\": \"{{ tasks.get-song-id.result }}\"\n        }\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'George'\n    - name: song_title\n      value: 'Bohemian Rhapsody'"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recommend-dish-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: type\n            value: '{{ inputs.parameters.type }}'\n          - name: rating\n            value: '{{ inputs.parameters.rating }}'\n      - name: get-menu\n        template: get-menu\n        arguments:\n          parameters:\n          - name: restaurant_id\n            value: '{{ tasks.find-restaurant.result }}'\n        dependencies: [find-restaurant]\n      - name: recommend-dish\n        template: recommend-dish\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.get-menu.result }}'\n        dependencies: [get-menu]\n  - name: find-restaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: type\n      - name: rating\n    http:\n      url: http://example.com/findRestaurant\n      method: GET\n  - name: get-menu\n    inputs:\n      parameters:\n      - name: restaurant_id\n    http:\n      url: http://example.com/getMenu\n      method: GET\n  - name: recommend-dish\n    inputs:\n      parameters:\n      - name: menu\n    http:\n      url: http://example.com/recommendDish\n      method: GET"}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-\nspec:\n  entrypoint: trip-planning\n  templates:\n  - name: trip-planning\n    dag:\n      tasks:\n      - name: get-weather-code\n        template: cityname-to-weathercode\n        arguments:\n          parameters:\n          - name: city_name\n            value: '{{ inputs.parameters.city_name }}'\n      - name: get-weather-forecast\n        template: weathercode-to-forecast\n        arguments:\n          parameters:\n          - name: weather_code\n            value: '{{ tasks.get-weather-code.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plan-trip\n        template: plan-trip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n  - name: cityname-to-weathercode\n    inputs:\n      parameters:\n      - name: city_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'weather_code' > /tmp/output\"]\n  - name: weathercode-to-forecast\n    inputs:\n      parameters:\n      - name: weather_code\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'weather_forecast' > /tmp/output\"]\n  - name: plan-trip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'trip' > /tmp/output\"]\n  arguments:\n    parameters:\n    - name: city_name\n      value: 'Paris'\n    - name: date\n      value: '2023-06-12'\n    - name: hotel\n      value: '[\"Hotel Paris\"]'\n    - name: restaurants\n      value: '[\"Restaurant A\", \"Restaurant B\"]'"}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-share-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-book\n        template: search-book\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: get-book-review\n        template: get-book-review\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{ tasks.search-book.result }}'\n      - name: share-review\n        template: share-review\n        arguments:\n          parameters:\n          - name: review\n            value: '{{ tasks.get-book-review.result }}'\n          - name: social_media_platform\n            value: '{{ inputs.parameters.social_media_platform }}'\n  - name: search-book\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: <SearchBook API URL>\n      method: POST\n      body:\n        title: '{{ inputs.parameters.title }}'\n  - name: get-book-review\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: <GetBookReview API URL>\n      method: POST\n      body:\n        book_id: '{{ inputs.parameters.book_id }}'\n  - name: share-review\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n    http:\n      url: <ShareReview API URL>\n      method: POST\n      body:\n        review: '{{ inputs.parameters.review }}'\n        social_media_platform: '{{ inputs.parameters.social_media_platform }}'\n  inputs:\n    parameters:\n    - name: title\n    - name: social_media_platform"}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: confirm-appointment-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-doctor\n        template: find-doctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: get-appointment\n        template: get-appointment\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{ tasks.find-doctor.result.doctor_id }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: confirm-appointment\n        template: confirm-appointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.get-appointment.result.appointment_id }}'\n  - name: find-doctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: \"http://example.com/find-doctor\"\n      method: \"GET\"\n  - name: get-appointment\n    inputs:\n      parameters:\n      - name: doctor_id\n      - name: date\n    http:\n      url: \"http://example.com/get-appointment\"\n      method: \"GET\"\n  - name: confirm-appointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: \"http://example.com/confirm-appointment\"\n      method: \"POST\"\n  arguments:\n    parameters:\n    - name: specialty\n      value: 'cardiologist'\n    - name: location\n      value: 'New York'\n    - name: date\n      value: '2023-08-10'"}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: product-lookup\n        template: product-lookup\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: customer-purchase\n        template: customer-purchase\n        arguments:\n          parameters:\n          - name: product_info\n            value: '{{ tasks.product-lookup.result }}'\n      - name: product-rating\n        template: product-rating\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{ tasks.customer-purchase.result }}'\n          - name: number_of_ratings\n            value: '{{ inputs.parameters.number_of_ratings }}'\n  - name: product-lookup\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo\", \"ProductLookup({{inputs.parameters.product_id}})\"]\n  - name: customer-purchase\n    inputs:\n      parameters:\n      - name: product_info\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo\", \"CustomerPurchase({{inputs.parameters.product_info}})\"]\n  - name: product-rating\n    inputs:\n      parameters:\n      - name: purchase_info\n      - name: number_of_ratings\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo\", \"ProductRating({{inputs.parameters.purchase_info}}, {{inputs.parameters.number_of_ratings}})\"]\n  arguments:\n    parameters:\n    - name: product_id\n      value: '56789'\n    - name: number_of_ratings\n      value: '10'"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: nearest-cinema-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-id\n        template: moviename-to-id\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: get-movie-schedule\n        template: movie-schedule\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.get-movie-id.result }}'\n      - name: get-nearest-cinema\n        template: closest-cinema\n        arguments:\n          parameters:\n          - name: schedule\n            value: '{{ tasks.get-movie-schedule.result }}'\n  - name: moviename-to-id\n    inputs:\n      parameters:\n      - name: movie_name\n    http:\n      url: <MovienameToID API URL>\n      method: POST\n      headers: []\n      body: {}\n  - name: movie-schedule\n    inputs:\n      parameters:\n      - name: movie_id\n    http:\n      url: <MovieSchedule API URL>\n      method: POST\n      headers: []\n      body: {}\n  - name: closest-cinema\n    inputs:\n      parameters:\n      - name: schedule\n    http:\n      url: <ClosetCinema API URL>\n      method: POST\n      headers: []\n      body: {}\n  inputs:\n    parameters:\n    - name: movie_name\n      value: 'Avengers: Endgame'"}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: best-vegan-order-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-restaurant-info\n        template: restaurant-info\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n      - name: get-food-list\n        template: food-list\n        arguments:\n          parameters:\n          - name: diet_type\n            value: '{{ inputs.parameters.diet_type }}'\n      - name: suggest-best-order\n        template: best-order\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ tasks.get-restaurant-info.result }}'\n          - name: food_list\n            value: '{{ tasks.get-food-list.result }}'\n  - name: restaurant-info\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: <RestaurantByname API URL>\n      method: GET\n      parameters:\n      - name: restaurant_name\n        value: '{{ inputs.parameters.restaurant_name }}'\n  - name: food-list\n    inputs:\n      parameters:\n      - name: diet_type\n    http:\n      url: <FoodByDietType API URL>\n      method: GET\n      parameters:\n      - name: diet_type\n        value: '{{ inputs.parameters.diet_type }}'\n  - name: best-order\n    inputs:\n      parameters:\n      - name: restaurant_info\n      - name: food_list\n    http:\n      url: <BestOrder API URL>\n      method: GET\n      parameters:\n      - name: restaurant_info\n        value: '{{ inputs.parameters.restaurant_info }}'\n      - name: food_list\n        value: '{{ inputs.parameters.food_list }}'\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: 'The Green Leaf'\n    - name: diet_type\n      value: 'vegan'"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-event-city\n        template: find-event-city\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: find-event-date\n        template: find-event-date\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: get-weather-forecast\n        template: get-weather-forecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.find-event-city.result }}'\n          - name: date\n            value: '{{ tasks.find-event-date.result }}'\n  - name: find-event-city\n    inputs:\n      parameters:\n      - name: event_name\n    http:\n      url: <FindEventCity API URL>\n      method: GET\n  - name: find-event-date\n    inputs:\n      parameters:\n      - name: event_name\n    http:\n      url: <FindEventDate API URL>\n      method: GET\n  - name: get-weather-forecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: <GetWeatherForecast API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: event_name\n      value: 'Coachella'"}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-library-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-author-id\n        template: get-author-id\n      - name: get-book-id\n        template: get-book-id\n      - name: add-book-to-library\n        template: add-book-to-library\n        dependencies: [get-author-id, get-book-id]\n\n  - name: get-author-id\n    http:\n      url: <Authorname2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"author_name\": \"{{ inputs.parameters.author_name }}\"\n        }\n\n  - name: get-book-id\n    http:\n      url: <BookTitle2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"book_title\": \"{{ inputs.parameters.book_title }}\"\n        }\n\n  - name: add-book-to-library\n    http:\n      url: <AddBookToAuthor API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"author_ID\": \"{{ tasks.get-author-id.result }}\",\n          \"book_ID\": \"{{ tasks.get-book-id.result }}\"\n        }\n\n  arguments:\n    parameters:\n    - name: author_name\n      value: 'Harper Lee'\n    - name: book_title\n      value: 'To Kill a Mockingbird'"}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-flight-\nspec:\n  entrypoint: book-flight-dag\n  templates:\n  - name: book-flight-dag\n    dag:\n      tasks:\n      - name: convert-flight-code\n        template: convert-flight-code\n        arguments:\n          parameters:\n          - name: Flight_code\n            value: '{{ inputs.parameters.flight_code }}'\n      - name: convert-date\n        template: convert-date\n        arguments:\n          parameters:\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-flight\n        template: book-flight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.convert-flight-code.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  - name: convert-flight-code\n    inputs:\n      parameters:\n      - name: Flight_code\n    http:\n      url: <FlightCode2ID API URL>\n      method: POST\n      body: '{\"Flight_code\": \"{{ inputs.parameters.Flight_code }}\"}'\n  - name: convert-date\n    inputs:\n      parameters:\n      - name: date\n    http:\n      url: <DateConversion API URL>\n      method: POST\n      body: '{\"date\": \"{{ inputs.parameters.date }}\"}'\n  - name: book-flight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    http:\n      url: <BookFlight API URL>\n      method: POST\n      body: '{\"flight_details\": \"{{ inputs.parameters.flight_details }}\", \"preferred_flight_class\": \"{{ inputs.parameters.preferred_flight_class }}\"}'\n  arguments:\n    parameters:\n    - name: flight_code\n      value: 'LH 1112'\n    - name: date\n      value: 'July 15th'\n    - name: preferred_flight_class\n      value: 'Economy'"}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: chocolate-cake-recipe-\nspec:\n  entrypoint: chocolate-cake-recipe\n  templates:\n  - name: chocolate-cake-recipe\n    dag:\n      tasks:\n      - name: get-recipe-id\n        template: get-recipe-id\n      - name: get-ingredient-id\n        template: get-ingredient-id\n      - name: get-recipe\n        template: get-recipe\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{ tasks.get-recipe-id.result }}'\n          - name: ingredient_ID\n            value: '{{ tasks.get-ingredient-id.result }}'\n  - name: get-recipe-id\n    http:\n      url: http://example.com/recipename2id\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"recipe_name\": \"{{ inputs.parameters.recipe_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: recipe_name\n        value: 'Chocolate Cake'\n  - name: get-ingredient-id\n    http:\n      url: http://example.com/ingredientname2id\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"ingredient_name\": \"{{ inputs.parameters.ingredient_name }}\"\n        }\n    inputs:\n      parameters:\n      - name: ingredient_name\n        value: 'Cocoa Powder'\n  - name: get-recipe\n    http:\n      url: http://example.com/getrecipe\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"Recipe_ID\": \"{{ inputs.parameters.recipe_ID }}\",\n          \"Ingredient_ID\": \"{{ inputs.parameters.ingredient_ID }}\"\n        }"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-\nspec:\n  entrypoint: reserve-book-dag\n  templates:\n  - name: reserve-book-dag\n    dag:\n      tasks:\n      - name: get-book-id\n        template: get-book-id\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n      - name: get-author-id\n        template: get-author-id\n        arguments:\n          parameters:\n          - name: author_name\n            value: '{{ inputs.parameters.author_name }}'\n      - name: reserve-book\n        template: reserve-book\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n          - name: ISBN\n            value: '{{ tasks.get-book-id.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: get-book-id\n    inputs:\n      parameters:\n      - name: book_name\n    http:\n      url: <Bookname2ID API URL>\n      method: POST\n      body: '{\"book_name\": \"{{ inputs.parameters.book_name }}\"}'\n  - name: get-author-id\n    inputs:\n      parameters:\n      - name: author_name\n    http:\n      url: <Authorname2ID API URL>\n      method: POST\n      body: '{\"author_name\": \"{{ inputs.parameters.author_name }}\"}'\n  - name: reserve-book\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    http:\n      url: <ReserveBook API URL>\n      method: POST\n      body: '{\"user_email\": \"{{ inputs.parameters.user_email }}\", \"ISBN\": \"{{ inputs.parameters.ISBN }}\", \"start_date\": \"{{ inputs.parameters.start_date }}\", \"end_date\": \"{{ inputs.parameters.end_date }}\"}'\n  arguments:\n    parameters:\n    - name: book_name\n      value: 'To Kill a Mockingbird'\n    - name: author_name\n      value: 'Harper Lee'\n    - name: user_email\n      value: '{{ inputs.parameters.user_email }}'\n    - name: start_date\n      value: '2023-11-02'\n    - name: end_date\n      value: '2023-11-02'"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: borrow-book-dag\n  templates:\n  - name: borrow-book-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: email-to-user-id\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: get-book-id\n        template: book-title-to-book-id\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: borrow-book\n        template: borrow-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: book_ID\n            value: '{{ tasks.get-book-id.result }}'\n  - name: email-to-user-id\n    inputs:\n      parameters:\n      - name: email\n    http:\n      url: <Email2UserID API URL>\n      method: POST\n      body:\n        email: '{{ inputs.parameters.email }}'\n  - name: book-title-to-book-id\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: <BookTitle2BookID API URL>\n      method: POST\n      body:\n        book_title: '{{ inputs.parameters.book_title }}'\n  - name: borrow-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    http:\n      url: <BorrowBook API URL>\n      method: POST\n      body:\n        user_ID: '{{ inputs.parameters.user_ID }}'\n        book_ID: '{{ inputs.parameters.book_ID }}'\n  arguments:\n    parameters:\n    - name: email\n      value: 'mike@gmail.com'\n    - name: book_title\n      value: 'The Catcher in the Rye'"}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-coordinates\n        template: location2coordinates\n        arguments:\n          parameters:\n          - name: location_name\n            value: '{{ inputs.parameters.location_name }}'\n      - name: get-weather-info\n        template: weatherinfo\n        arguments:\n          parameters:\n          - name: coordinates\n            value: '{{ tasks.get-coordinates.result }}'\n      - name: generate-weather-report\n        template: generateweatherreport\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{ tasks.get-weather-info.result }}'\n  - name: location2coordinates\n    http:\n      url: <Location2Coordinates API URL>\n      method: POST\n      headers: []\n      body: {}\n  - name: weatherinfo\n    http:\n      url: <WeatherInfo API URL>\n      method: POST\n      headers: []\n      body: {}\n  - name: generateweatherreport\n    http:\n      url: <GenerateWeatherReport API URL>\n      method: POST\n      headers: []\n      body: {}\n  arguments:\n    parameters:\n    - name: location_name\n      value: 'Paris'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-advice-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-city\n        template: get-city\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: get-weather\n        template: get-weather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.get-city.result }}'\n      - name: get-advice\n        template: get-advice\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n  - name: get-city\n    inputs:\n      parameters:\n      - name: username\n    http:\n      url: <Username2City API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: get-weather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <City2Weather API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: get-advice\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: <Weather2Advice API URL>\n      method: POST\n      headers: {}\n      body: {}\n  arguments:\n    parameters:\n    - name: username\n      value: 'Jack_Sparrow'"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-cinema\n        template: get-cinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: check-time\n        template: check-time\n        arguments:\n          parameters:\n          - name: cinema_name\n            value: '{{ tasks.get-cinema.result }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: book-ticket\n        template: book-ticket\n        arguments:\n          parameters:\n          - name: cinema_name\n            value: '{{ tasks.get-cinema.result }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n          - name: show_time\n            value: '{{ tasks.check-time.result }}'\n  - name: get-cinema\n    inputs:\n      parameters:\n      - name: city\n      - name: movie\n    http:\n      url: <GetCinema API URL>\n      method: GET\n  - name: check-time\n    inputs:\n      parameters:\n      - name: cinema_name\n      - name: movie\n    http:\n      url: <CheckTime API URL>\n      method: GET\n  - name: book-ticket\n    inputs:\n      parameters:\n      - name: cinema_name\n      - name: movie\n      - name: show_time\n    http:\n      url: <BookTicket API URL>\n      method: POST\n  arguments:\n    parameters:\n    - name: city\n      value: 'Tokyo'\n    - name: movie\n      value: 'Spirited Away'"}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: borrow-book-dag\n  templates:\n  - name: borrow-book-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-book-id\n        template: get-book-id\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n      - name: borrow-book\n        template: borrow-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: book_ID\n            value: '{{ tasks.get-book-id.result }}'\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: user_name\n    http:\n      url: <UsernameToID API URL>\n      method: POST\n      body:\n        user_name: '{{ inputs.parameters.user_name }}'\n  - name: get-book-id\n    inputs:\n      parameters:\n      - name: book_name\n    http:\n      url: <BooknameToID API URL>\n      method: POST\n      body:\n        book_name: '{{ inputs.parameters.book_name }}'\n  - name: borrow-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    http:\n      url: <BorrowBook API URL>\n      method: POST\n      body:\n        user_ID: '{{ inputs.parameters.user_ID }}'\n        book_ID: '{{ inputs.parameters.book_ID }}'\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'Mark'\n    - name: book_name\n      value: 'To Kill a Mockingbird'"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-\nspec:\n  entrypoint: borrow-book-dag\n  templates:\n  - name: borrow-book-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: get-book-id\n        template: get-book-id\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n      - name: borrow-book\n        template: borrow-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: book_ID\n            value: '{{ tasks.get-book-id.result }}'\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: user_name\n    http:\n      url: <UsernameToID API URL>\n      method: POST\n      headers: []\n      body: |\n        {\n          \"user_name\": \"{{ inputs.parameters.user_name }}\"\n        }\n  - name: get-book-id\n    inputs:\n      parameters:\n      - name: book_name\n    http:\n      url: <BooknameToID API URL>\n      method: POST\n      headers: []\n      body: |\n        {\n          \"book_name\": \"{{ inputs.parameters.book_name }}\"\n        }\n  - name: borrow-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    http:\n      url: <BorrowBook API URL>\n      method: POST\n      headers: []\n      body: |\n        {\n          \"user_ID\": \"{{ inputs.parameters.user_ID }}\",\n          \"book_ID\": \"{{ inputs.parameters.book_ID }}\"\n        }\n  arguments:\n    parameters:\n    - name: user_name\n      value: 'Jessica'\n    - name: book_name\n      value: '1984'"}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-hotel-id\n        template: hotel-id\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotel_name }}'\n      - name: get-city-id\n        template: city-id\n        arguments:\n          parameters:\n          - name: city_name\n            value: '{{ inputs.parameters.city_name }}'\n      - name: book-room\n        template: book-room\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.get-hotel-id.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: number_of_nights\n            value: '{{ inputs.parameters.number_of_nights }}'\n  - name: hotel-id\n    inputs:\n      parameters:\n      - name: hotel_name\n    http:\n      url: http://example.com/hotelname-to-id\n      method: GET\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n  - name: city-id\n    inputs:\n      parameters:\n      - name: city_name\n    http:\n      url: http://example.com/cityname-to-id\n      method: GET\n      parameters:\n      - name: city_name\n        value: '{{ inputs.parameters.city_name }}'\n  - name: book-room\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    http:\n      url: http://example.com/book-room\n      method: POST\n      parameters:\n      - name: hotel_name\n        value: '{{ inputs.parameters.hotel_name }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n      - name: number_of_nights\n        value: '{{ inputs.parameters.number_of_nights }}'\n  arguments:\n    parameters:\n    - name: hotel_name\n      value: 'Sheraton'\n    - name: city_name\n      value: 'Boston'\n    - name: date\n      value: '2023-10-10'\n    - name: number_of_nights\n      value: '5'"}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: return-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: user-email-to-id\n        arguments:\n          parameters:\n          - name: email_address\n            value: '{{ inputs.parameters.email_address }}'\n      - name: get-book-name\n        template: isbn-to-bookname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: return-book\n        template: return-book\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: book_name\n            value: '{{ tasks.get-book-name.result }}'\n  - name: user-email-to-id\n    inputs:\n      parameters:\n      - name: email_address\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(UserEmailToID {{inputs.parameters.email_address}})\"]\n  - name: isbn-to-bookname\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(ISBNToBookname {{inputs.parameters.ISBN}})\"]\n  - name: return-book\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(ReturnBook {{inputs.parameters.user_ID}} {{inputs.parameters.book_name}})\"]\n  inputs:\n    parameters:\n    - name: email_address\n    - name: ISBN"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-\nspec:\n  entrypoint: purchase-product-dag\n  templates:\n  - name: purchase-product-dag\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n        arguments:\n          parameters:\n          - name: email_address\n            value: '{{ inputs.parameters.email_address }}'\n      - name: get-product-id\n        template: get-product-id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: purchase-product\n        template: purchase-product\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: product_ID\n            value: '{{ tasks.get-product-id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: get-user-id\n    inputs:\n      parameters:\n      - name: email_address\n    http:\n      url: <UserEmailToID API URL>\n      method: POST\n      body:\n        email_address: '{{ inputs.parameters.email_address }}'\n  - name: get-product-id\n    inputs:\n      parameters:\n      - name: product_name\n    http:\n      url: <ProductToID API URL>\n      method: POST\n      body:\n        product_name: '{{ inputs.parameters.product_name }}'\n  - name: purchase-product\n    inputs:\n      parameters:\n      - name: customer_ID\n      - name: product_ID\n      - name: quantity\n    http:\n      url: <PurchaseProduct API URL>\n      method: POST\n      body:\n        customer_ID: '{{ inputs.parameters.customer_ID }}'\n        product_ID: '{{ inputs.parameters.product_ID }}'\n        quantity: '{{ inputs.parameters.quantity }}'\n  arguments:\n    parameters:\n    - name: email_address\n      value: 'mike@example.com'\n    - name: product_name\n      value: 'Google Pixel 6'\n    - name: quantity\n      value: '1'"}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-movie-to-watchlist-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-id\n        template: moviename2id\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: get-watchlist-id\n        template: watchlistname2id\n        arguments:\n          parameters:\n          - name: watchlist_name\n            value: '{{ inputs.parameters.watchlist_name }}'\n      - name: add-movie-to-watchlist\n        template: addmovietowatchlist\n        arguments:\n          parameters:\n          - name: watchlist_ID\n            value: '{{ tasks.get-watchlist-id.result }}'\n          - name: movie_ID\n            value: '{{ tasks.get-movie-id.result }}'\n  - name: moviename2id\n    inputs:\n      parameters:\n      - name: movie_name\n    http:\n      url: <Moviename2ID API URL>\n      method: POST\n      body:\n        movie_name: '{{ inputs.parameters.movie_name }}'\n  - name: watchlistname2id\n    inputs:\n      parameters:\n      - name: watchlist_name\n    http:\n      url: <Watchlistname2ID API URL>\n      method: POST\n      body:\n        watchlist_name: '{{ inputs.parameters.watchlist_name }}'\n  - name: addmovietowatchlist\n    inputs:\n      parameters:\n      - name: watchlist_ID\n      - name: movie_ID\n    http:\n      url: <AddMovieToWatchlist API URL>\n      method: POST\n      body:\n        watchlist_ID: '{{ inputs.parameters.watchlist_ID }}'\n        movie_ID: '{{ inputs.parameters.movie_ID }}'\n  arguments:\n    parameters:\n    - name: movie_name\n      value: 'Interstellar'\n    - name: watchlist_name\n      value: 'Sci-fi Movies'"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-reading-list-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-id\n        template: book-title-to-id\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: get-readinglist-id\n        template: readinglist-name-to-id\n        arguments:\n          parameters:\n          - name: readinglist_name\n            value: '{{ inputs.parameters.readinglist_name }}'\n      - name: add-book-to-readinglist\n        template: add-book-to-readinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: book_title\n            value: '{{ tasks.get-book-id.result }}'\n          - name: readinglist_id\n            value: '{{ tasks.get-readinglist-id.result }}'\n  - name: book-title-to-id\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: http://example.com/api/booktitle2id\n      method: GET\n      parameters:\n      - name: book_title\n        value: '{{ inputs.parameters.book_title }}'\n  - name: readinglist-name-to-id\n    inputs:\n      parameters:\n      - name: readinglist_name\n    http:\n      url: http://example.com/api/readinglistname2id\n      method: GET\n      parameters:\n      - name: readinglist_name\n        value: '{{ inputs.parameters.readinglist_name }}'\n  - name: add-book-to-readinglist\n    inputs:\n      parameters:\n      - name: user_name\n      - name: book_title\n      - name: readinglist_id\n    http:\n      url: http://example.com/api/addbooktoreadinglist\n      method: POST\n      parameters:\n      - name: user_name\n        value: '{{ inputs.parameters.user_name }}'\n      - name: book_title\n        value: '{{ inputs.parameters.book_title }}'\n      - name: readinglist_id\n        value: '{{ inputs.parameters.readinglist_id }}'\n  inputs:\n    parameters:\n    - name: book_title\n      value: 'The Great Gatsby'\n    - name: readinglist_name\n      value: 'Modern Classics'\n    - name: user_name\n      value: 'john_reads'"}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-table-\nspec:\n  entrypoint: book-table-dag\n  templates:\n  - name: book-table-dag\n    dag:\n      tasks:\n      - name: get-coordinates\n        template: address2coordinates\n        arguments:\n          parameters:\n          - name: address\n            value: '{{ inputs.parameters.address }}'\n      - name: get-restaurant-id\n        template: restaurantname2id\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n      - name: book-table\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: address2coordinates\n    inputs:\n      parameters:\n      - name: address\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Coordinates for {{ inputs.parameters.address }}'\"]\n  - name: restaurantname2id\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'ID for {{ inputs.parameters.restaurant_name }}'\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking table at {{ inputs.parameters.restaurant_name }} on {{ inputs.parameters.date }} at {{ inputs.parameters.time }}'\"]\n  arguments:\n    parameters:\n    - name: address\n      value: 'Las Vegas Strip, Nevada'\n    - name: restaurant_name\n      value: 'Red Lobster'\n    - name: date\n      value: '2023-05-05'\n    - name: time\n      value: '18:00'"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-title\n        template: isbn2book\n        arguments:\n          parameters:\n          - name: isbn\n            value: '{{ inputs.parameters.isbn }}'\n      - name: get-author-name\n        template: book2author\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ tasks.get-book-title.result }}'\n      - name: schedule-discussion\n        template: schedulediscussion\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.get-author-name.result }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: isbn2book\n    inputs:\n      parameters:\n      - name: isbn\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"book_title\\\": \\\"Sample Book Title\\\"}'\"]\n  - name: book2author\n    inputs:\n      parameters:\n      - name: book_title\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"author_name\\\": \\\"Sample Author\\\"}'\"]\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"schedule_status\\\": \\\"Scheduled\\\"}'\"]\n  inputs:\n    parameters:\n    - name: isbn\n    - name: user_ID\n    - name: date_time"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: locate-city\n        template: locate-city\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: weather-forecast\n        template: weather-forecast\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.locate-city.result }}'\n      - name: get-clothing-advice\n        template: get-clothing-advice\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.weather-forecast.result }}'\n  - name: locate-city\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/locate-city\"\n      method: GET\n  - name: weather-forecast\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: \"http://example.com/weather-forecast\"\n      method: GET\n  - name: get-clothing-advice\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: \"http://example.com/get-clothing-advice\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-\nspec:\n  entrypoint: trip-planning\n  templates:\n  - name: trip-planning\n    dag:\n      tasks:\n      - name: get-weather-code\n        template: cityname-to-weather-code\n        arguments:\n          parameters:\n          - name: city_name\n            value: '{{ inputs.parameters.city_name }}'\n      - name: get-weather-forecast\n        template: weather-code-to-forecast\n        arguments:\n          parameters:\n          - name: weather_code\n            value: '{{ tasks.get-weather-code.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plan-trip\n        template: plan-trip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n  \n  templates:\n  - name: cityname-to-weather-code\n    inputs:\n      parameters:\n      - name: city_name\n    http:\n      url: <Cityname2WeatherCode API URL>\n      method: GET\n      parameters:\n      - name: city_name\n        value: '{{ inputs.parameters.city_name }}'\n\n  - name: weather-code-to-forecast\n    inputs:\n      parameters:\n      - name: weather_code\n      - name: date\n    http:\n      url: <WeatherCode2Forecast API URL>\n      method: GET\n      parameters:\n      - name: weather_code\n        value: '{{ inputs.parameters.weather_code }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n\n  - name: plan-trip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    http:\n      url: <PlanTrip API URL>\n      method: POST\n      parameters:\n      - name: hotel\n        value: '{{ inputs.parameters.hotel }}'\n      - name: restaurants\n        value: '{{ inputs.parameters.restaurants }}'\n\n  inputs:\n    parameters:\n    - name: city_name\n      value: 'Tokyo'\n    - name: date\n      value: '2023-09-15'\n    - name: hotel\n      value: 'List of hotels in Tokyo'\n    - name: restaurants\n      value: 'List of restaurants in Tokyo'"}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-romance-movie\n        template: find-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'romance'\n      - name: get-showtimes\n        template: get-showtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ tasks.find-romance-movie.result }}'\n          - name: city\n            value: 'San Francisco'\n      - name: reserve-tickets\n        template: reserve-tickets\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.get-showtimes.result }}'\n          - name: number_of_tickets\n            value: '4'\n  - name: find-movie\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.genre }}' | your-find-movie-command\"]\n  - name: get-showtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.movie_title }} {{ inputs.parameters.city }}' | your-get-showtimes-command\"]\n  - name: reserve-tickets\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.showtime }} {{ inputs.parameters.number_of_tickets }}' | your-reserve-tickets-command\"]"}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-book-availability-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-nearest-bookstore\n        template: find-nearest-bookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: search-book\n        template: search-book\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: check-availability\n        template: check-availability\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ tasks.search-book.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: find-nearest-bookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <FindNearestBookStore API URL>\n      method: GET\n  - name: search-book\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: <SearchBook API URL>\n      method: GET\n  - name: check-availability\n    inputs:\n      parameters:\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    http:\n      url: <CheckAvailability API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n    - name: title\n    - name: start_date\n    - name: end_date"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-reviews-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-local-theater\n        template: get-local-theater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-current-plays\n        template: get-current-plays\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{ tasks.get-local-theater.result }}'\n      - name: get-play-reviews\n        template: get-play-reviews\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{ tasks.get-current-plays.result }}'\n  - name: get-local-theater\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <GetLocalTheater API URL>\n      method: GET\n  - name: get-current-plays\n    inputs:\n      parameters:\n      - name: theater_name\n    http:\n      url: <GetCurrentPlays API URL>\n      method: GET\n  - name: get-play-reviews\n    inputs:\n      parameters:\n      - name: play_name\n    http:\n      url: <GetPlayReviews API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'London'"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: album-reviews-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-local-music-store\n        template: get-local-music-store\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-current-albums\n        template: get-current-albums\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ tasks.get-local-music-store.result }}'\n      - name: get-album-reviews\n        template: get-album-reviews\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{ tasks.get-current-albums.result }}'\n  - name: get-local-music-store\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <GetLocalMusicStore API URL>\n      method: GET\n  - name: get-current-albums\n    inputs:\n      parameters:\n      - name: store_name\n    http:\n      url: <GetCurrentAlbums API URL>\n      method: GET\n  - name: get-album-reviews\n    inputs:\n      parameters:\n      - name: album_name\n    http:\n      url: <GetAlbumReviews API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n      value: 'Toronto'"}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-dumplings-\nspec:\n  entrypoint: order-dumplings\n  templates:\n  - name: order-dumplings\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: type\n            value: '{{ inputs.parameters.type }}'\n          - name: rating\n            value: '{{ inputs.parameters.rating }}'\n      - name: order-food\n        template: order-food\n        arguments:\n          parameters:\n          - name: dish_name\n            value: 'dumplings'\n          - name: restaurant_name\n            value: '{{ tasks.find-restaurant.result }}'\n  - name: find-restaurant\n    http:\n      url: <FindRestaurant API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"location\": \"{{ inputs.parameters.location }}\",\n          \"type\": \"{{ inputs.parameters.type }}\",\n          \"rating\": \"{{ inputs.parameters.rating }}\"\n        }\n  - name: order-food\n    http:\n      url: <OrderFood API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"dish_name\": \"dumplings\",\n          \"restaurant_name\": \"{{ tasks.find-restaurant.result }}\"\n        }\n  inputs:\n    parameters:\n    - name: location\n      value: 'Seattle'\n    - name: type\n      value: 'Chinese'\n    - name: rating\n      value: 'best'"}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-\nspec:\n  entrypoint: stock-analysis\n  templates:\n  - name: stock-analysis\n    dag:\n      tasks:\n      - name: get-stock-price\n        template: get-stock-price\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n      - name: predict-future-stock-price\n        template: predict-future-stock-price\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.get-stock-price.result }}'\n      - name: suggest-stock-action\n        template: suggest-stock-action\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.get-stock-price.result }}'\n          - name: futurePrice\n            value: '{{ tasks.predict-future-stock-price.result }}'\n  \n  templates:\n  - name: get-stock-price\n    inputs:\n      parameters:\n      - name: stockId\n    http:\n      url: \"http://example.com/getStockPrice?stockId={{inputs.parameters.stockId}}\"\n      method: GET\n\n  - name: predict-future-stock-price\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n    http:\n      url: \"http://example.com/predictFutureStockPrice?stockId={{inputs.parameters.stockId}}&currentPrice={{inputs.parameters.currentPrice}}\"\n      method: GET\n\n  - name: suggest-stock-action\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n      - name: futurePrice\n    http:\n      url: \"http://example.com/suggestStockAction?stockId={{inputs.parameters.stockId}}&currentPrice={{inputs.parameters.currentPrice}}&futurePrice={{inputs.parameters.futurePrice}}\"\n      method: GET\n\n  inputs:\n    parameters:\n    - name: stockId\n      description: \"The ID of the stock to analyze\""}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: savings-investment-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: track-spending\n        template: track-spending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{ inputs.parameters.username }}'\n      - name: calculate-savings\n        template: calculate-savings\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{ tasks.track-spending.result }}'\n      - name: suggest-investment\n        template: suggest-investment\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{ tasks.calculate-savings.result }}'\n  - name: track-spending\n    inputs:\n      parameters:\n      - name: Username\n    http:\n      url: <TrackSpending API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: calculate-savings\n    inputs:\n      parameters:\n      - name: SpendingReport\n    http:\n      url: <CalculateSavings API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: suggest-investment\n    inputs:\n      parameters:\n      - name: Savings\n    http:\n      url: <SuggestInvestment API URL>\n      method: POST\n      headers: {}\n      body: {}\n  arguments:\n    parameters:\n    - name: username\n      value: 'Sarah'"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recommend-dish-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-dish\n        template: recommend-dish\n\n  - name: recommend-dish\n    http:\n      url: <API_URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"menu\": \"{{ inputs.parameters.menu }}\"\n        }\n    inputs:\n      parameters:\n      - name: menu\n        value: '{{ inputs.parameters.menu }}'\n    outputs:\n      parameters:\n      - name: dish\n        valueFrom:\n          jsonPath: \"$.dish\""}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: lactose-free-dish-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: type\n            value: '{{ inputs.parameters.type }}'\n          - name: rating\n            value: '{{ inputs.parameters.rating }}'\n      - name: get-menu\n        template: get-menu\n        arguments:\n          parameters:\n          - name: restaurant_id\n            value: '{{ tasks.find-restaurant.result }}'\n      - name: suggest-food\n        template: suggest-food\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.get-menu.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  \n  - name: find-restaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: type\n      - name: rating\n    http:\n      url: <FindRestaurant API URL>\n      method: POST\n      headers: {}\n      body: {}\n\n  - name: get-menu\n    inputs:\n      parameters:\n      - name: restaurant_id\n    http:\n      url: <GetMenu API URL>\n      method: POST\n      headers: {}\n      body: {}\n\n  - name: suggest-food\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: <SuggestFood API URL>\n      method: POST\n      headers: {}\n      body: {}"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-id\n        template: movie-search\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n      - name: get-rating-scores\n        template: movie-ratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.get-movie-id.result }}'\n      - name: calculate-average-rating\n        template: average-rating\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{ tasks.get-rating-scores.result }}'\n  - name: movie-search\n    inputs:\n      parameters:\n      - name: city\n      - name: genre\n    http:\n      url: \"http://example.com/moviesearch\"\n      method: GET\n  - name: movie-ratings\n    inputs:\n      parameters:\n      - name: movie_id\n    http:\n      url: \"http://example.com/movieratings\"\n      method: GET\n  - name: average-rating\n    inputs:\n      parameters:\n      - name: ratingScores\n    http:\n      url: \"http://example.com/averagerating\"\n      method: GET"}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: highest-rating-score-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: lookup-movie\n        template: movie-lookup\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: get-ratings\n        template: movie-rating\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.lookup-movie.result }}'\n        dependencies: [lookup-movie]\n      - name: find-highest-rating\n        template: highest-rating\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{ tasks.get-ratings.result }}'\n        dependencies: [get-ratings]\n  - name: movie-lookup\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://your-movie-lookup-api-url?movie_name={{inputs.parameters.movie_name}}'\"]\n  - name: movie-rating\n    inputs:\n      parameters:\n      - name: movie_id\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://your-movie-rating-api-url?movie_id={{inputs.parameters.movie_id}}'\"]\n  - name: highest-rating\n    inputs:\n      parameters:\n      - name: rating_scores\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://your-highest-rating-api-url?rating_scores={{inputs.parameters.rating_scores}}'\"]\n  inputs:\n    parameters:\n    - name: movie_name\n      value: 'Titanic'"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: seat-upgrade-check-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-flight\n        template: flight-search\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: check-seat-availability\n        template: seat-selection\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.search-flight.result }}'\n      - name: check-upgrade-availability\n        template: upgrade-availability\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{ tasks.check-seat-availability.result }}'\n  - name: flight-search\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    http:\n      url: <FlightSearch API URL>\n      method: GET\n  - name: seat-selection\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: <SeatSelection API URL>\n      method: GET\n  - name: upgrade-availability\n    inputs:\n      parameters:\n      - name: seats\n    http:\n      url: <UpgradeAvailability API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: destination\n      value: 'Paris'\n    - name: date\n      value: '2023-11-30'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-premium-seat-class-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-flight\n        template: flight-search\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: check-seat-availability\n        template: seat-class-availability\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.search-flight.result }}'\n      - name: find-best-seat-class\n        template: best-seat-class\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{ tasks.check-seat-availability.result }}'\n  - name: flight-search\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    http:\n      url: <FlightSearch API URL>\n      method: GET\n  - name: seat-class-availability\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: <SeatClassAvailability API URL>\n      method: GET\n  - name: best-seat-class\n    inputs:\n      parameters:\n      - name: seat_classes\n    http:\n      url: <BestSeatClass API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: destination\n      value: 'San Francisco'\n    - name: date\n      value: '{{ inputs.parameters.date }}'"}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: find-nearest-bookstore-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-book\n        template: book-search\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: check-availability\n        template: bookstore-availability\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{ tasks.search-book.result }}'\n      - name: find-nearest-store\n        template: nearest-store\n        arguments:\n          parameters:\n          - name: store_ids\n            value: '{{ tasks.check-availability.result }}'\n          - name: user_location\n            value: '{{ inputs.parameters.user_location }}'\n  - name: book-search\n    inputs:\n      parameters:\n      - name: title\n      - name: author\n    http:\n      url: <BookSearch API URL>\n      method: POST\n      body:\n        title: '{{ inputs.parameters.title }}'\n        author: '{{ inputs.parameters.author }}'\n  - name: bookstore-availability\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: <BookStoreAvailability API URL>\n      method: POST\n      body:\n        book_id: '{{ inputs.parameters.book_id }}'\n  - name: nearest-store\n    inputs:\n      parameters:\n      - name: store_ids\n      - name: user_location\n    http:\n      url: <NearestStore API URL>\n      method: POST\n      body:\n        store_ids: '{{ inputs.parameters.store_ids }}'\n        user_location: '{{ inputs.parameters.user_location }}'\n  arguments:\n    parameters:\n    - name: title\n      value: 'To Kill a Mockingbird'\n    - name: author\n      value: 'Harper Lee'\n    - name: user_location\n      value: 'New York'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: item-price-conversion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-item-price\n        template: get-item-price\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{ inputs.parameters.item_id }}'\n      - name: get-conversion-rate\n        template: get-conversion-rate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'EUR'\n          - name: to_currency\n            value: 'JPY'\n      - name: calculate-final-price\n        template: calculate-final-price\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-item-price.result }}'\n          - name: conversion_rate\n            value: '{{ tasks.get-conversion-rate.result }}'\n  - name: get-item-price\n    inputs:\n      parameters:\n      - name: item_id\n    http:\n      url: \"http://example.com/api/itemprice\"\n      method: GET\n  - name: get-conversion-rate\n    inputs:\n      parameters:\n      - name: from_currency\n      - name: to_currency\n    http:\n      url: \"http://example.com/api/currencyconversion\"\n      method: GET\n  - name: calculate-final-price\n    inputs:\n      parameters:\n      - name: price\n      - name: conversion_rate\n    http:\n      url: \"http://example.com/api/calculateprice\"\n      method: GET\n  inputs:\n    parameters:\n    - name: item_id\n      description: \"The ID of the item to get the price for.\""}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-\nspec:\n  entrypoint: book-review-dag\n  templates:\n  - name: book-review-dag\n    dag:\n      tasks:\n      - name: get-book-info\n        template: get-book-info\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: get-author-bio\n        template: get-author-bio\n        arguments:\n          parameters:\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: generate-review\n        template: generate-review\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{ tasks.get-book-info.result }}'\n          - name: authorData\n            value: '{{ tasks.get-author-bio.result }}'\n  - name: get-book-info\n    inputs:\n      parameters:\n      - name: title\n    http:\n      url: <BookInfo API URL>\n      method: GET\n  - name: get-author-bio\n    inputs:\n      parameters:\n      - name: author\n    http:\n      url: <AuthorBio API URL>\n      method: GET\n  - name: generate-review\n    inputs:\n      parameters:\n      - name: bookdetails\n      - name: authorData\n    http:\n      url: <ReviewGenerator API URL>\n      method: POST"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-and-movie-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-info\n        template: get-movie\n        arguments:\n          parameters:\n          - name: show\n            value: '{{ inputs.parameters.show }}'\n      - name: recommend-restaurant\n        template: recommend-restaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ tasks.get-movie-info.result }}'\n      - name: book-table\n        template: book-table\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommend-restaurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: get-movie\n    inputs:\n      parameters:\n      - name: show\n    container:\n      image: my-movie-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://movieapi.example.com/getMovie?show={{inputs.parameters.show}}'\"]\n  - name: recommend-restaurant\n    inputs:\n      parameters:\n      - name: venue\n    container:\n      image: my-restaurant-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://restaurantapi.example.com/recommend?venue={{inputs.parameters.venue}}'\"]\n  - name: book-table\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: my-booking-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST 'http://bookingapi.example.com/bookTable' -d 'restaurant_name={{inputs.parameters.restaurant_name}}&date={{inputs.parameters.date}}&time={{inputs.parameters.time}}'\"]\n  arguments:\n    parameters:\n    - name: show\n      value: 'Harry Potter'\n    - name: date\n      value: '2023-10-20'\n    - name: time\n      value: '18:00'"}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: calculate-tax-cost-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-car-info\n        template: car-info\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{ inputs.parameters.car_name }}'\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: get-tax-rate\n        template: country-tax-rate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: calculate-tax\n        template: tax-cost-calculator\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-car-info.outputs.parameters.carDetails.price }}'\n          - name: tax_rate\n            value: '{{ tasks.get-tax-rate.outputs.parameters.taxRate }}'\n  - name: car-info\n    inputs:\n      parameters:\n      - name: car_name\n      - name: country\n    http:\n      url: <CarInfo API URL>\n      method: GET\n  - name: country-tax-rate\n    inputs:\n      parameters:\n      - name: country\n    http:\n      url: <CountryTaxRate API URL>\n      method: GET\n  - name: tax-cost-calculator\n    inputs:\n      parameters:\n      - name: price\n      - name: tax_rate\n    http:\n      url: <TaxCostCalculator API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: car_name\n    - name: country"}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-restaurant\n        template: restaurant-search\n        arguments:\n          parameters:\n          - name: name\n            value: '{{ inputs.parameters.name }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-reviews\n        template: restaurant-review\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.name }}'\n      - name: recommend-cuisine\n        template: cuisine-recommendations\n        arguments:\n          parameters:\n          - name: review_report\n            value: '{{ tasks.get-reviews.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  - name: restaurant-search\n    inputs:\n      parameters:\n      - name: name\n      - name: city\n    http:\n      url: <RestaurantSearch API URL>\n      method: GET\n  - name: restaurant-review\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: <RestaurantReview API URL>\n      method: GET\n  - name: cuisine-recommendations\n    inputs:\n      parameters:\n      - name: review_report\n      - name: dietary_preferences\n    http:\n      url: <CuisineRecommendations API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: name\n    - name: city\n    - name: dietary_preferences"}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-movie-tickets-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-movie\n        template: search-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: check-showtimes\n        template: check-showtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.search-movie.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: book-tickets\n        template: book-tickets\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.search-movie.result }}'\n          - name: showtime\n            value: '{{ tasks.check-showtimes.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: search-movie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    http:\n      url: <search-movie-api-url>\n      method: GET\n  - name: check-showtimes\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: date\n    http:\n      url: <check-showtimes-api-url>\n      method: GET\n  - name: book-tickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: <book-tickets-api-url>\n      method: POST\n  arguments:\n    parameters:\n    - name: genre\n      value: 'drama'\n    - name: location\n      value: 'Chicago'\n    - name: date\n      value: 'Sunday'\n    - name: number_of_tickets\n      value: '5'"}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-hotel\n        template: search-hotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: hotel_preferences\n            value: '{{ inputs.parameters.hotel_preferences }}'\n      - name: find-room-type\n        template: find-room-type\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ tasks.search-hotel.result }}'\n          - name: guestNumber\n            value: '{{ inputs.parameters.guestNumber }}'\n      - name: book-hotel\n        template: book-hotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.search-hotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: search-hotel\n    inputs:\n      parameters:\n      - name: city\n      - name: hotel_preferences\n    http:\n      url: <search-hotel-api-url>\n      method: GET\n  - name: find-room-type\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: guestNumber\n    http:\n      url: <find-room-type-api-url>\n      method: GET\n  - name: book-hotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: <book-hotel-api-url>\n      method: POST\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: hotel_preferences\n      value: '4-star'\n    - name: guestNumber\n      value: '5'\n    - name: date\n      value: '15th September to 22nd September'"}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-patient\n        template: find-patient\n        arguments:\n          parameters:\n          - name: patientname\n            value: '{{ inputs.parameters.patientname }}'\n      - name: find-doctor\n        template: find-doctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: create-appointment\n        template: create-appointment\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{ tasks.find-doctor.result }}'\n          - name: patientId\n            value: '{{ tasks.find-patient.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: find-patient\n    inputs:\n      parameters:\n      - name: patientname\n    container:\n      image: find-patient-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.patientname }}\"]\n  - name: find-doctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    container:\n      image: find-doctor-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.specialty }} {{ inputs.parameters.location }}\"]\n  - name: create-appointment\n    inputs:\n      parameters:\n      - name: doctorId\n      - name: patientId\n      - name: date\n      - name: time\n    container:\n      image: create-appointment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.doctorId }} {{ inputs.parameters.patientId }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}\"]\n  arguments:\n    parameters:\n    - name: patientname\n      value: 'Michael Johnson'\n    - name: specialty\n      value: 'ophthalmologist'\n    - name: location\n      value: 'default-location'\n    - name: date\n      value: '2023-10-05'\n    - name: time\n      value: '10:00 AM'"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-movie\n        template: find-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'drama'\n      - name: find-showtime\n        template: find-showtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.find-movie.result }}'\n          - name: location\n            value: 'Seattle'\n          - name: date\n            value: '2023-12-25'\n      - name: book-movie-ticket\n        template: book-movie-ticket\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.find-movie.result }}'\n          - name: showtime\n            value: '{{ tasks.find-showtime.result }}'\n          - name: number_of_tickets\n            value: '6'\n  templates:\n  - name: find-movie\n    inputs:\n      parameters:\n      - name: genre\n    http:\n      url: <FindMovie API URL>\n      method: GET\n  - name: find-showtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: <FindShowtime API URL>\n      method: GET\n  - name: book-movie-ticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: <BookMovieTicket API URL>\n      method: POST"}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-thriller-movie-tickets-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-movie\n        template: find-movie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'thriller'\n      - name: get-movie-times\n        template: get-movie-times\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.find-movie.result }}'\n      - name: book-movie-tickets\n        template: book-movie-tickets\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.get-movie-times.result }}'\n  - name: find-movie\n    http:\n      url: <FindMovie API URL>\n      method: GET\n      parameters:\n      - name: genre\n        value: '{{ inputs.parameters.genre }}'\n  - name: get-movie-times\n    http:\n      url: <GetMovieTimes API URL>\n      method: GET\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n  - name: book-movie-tickets\n    http:\n      url: <BookMovieTickets API URL>\n      method: POST\n      parameters:\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'"}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-flight-status-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-person-id\n        template: get-person-id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: get-flight-number\n        template: get-flight-number\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.get-person-id.result }}'\n      - name: check-flight-status\n        template: check-flight-status\n        arguments:\n          parameters:\n          - name: airline\n            value: '{{ inputs.parameters.airline }}'\n          - name: flight_number\n            value: '{{ tasks.get-flight-number.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: get-person-id\n    inputs:\n      parameters:\n      - name: person_name\n    http:\n      url: <Personname2ID API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: get-flight-number\n    inputs:\n      parameters:\n      - name: person_ID\n    http:\n      url: <GetFlightNumber API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: check-flight-status\n    inputs:\n      parameters:\n      - name: airline\n      - name: flight_number\n      - name: date\n    http:\n      url: <FlightStatus API URL>\n      method: POST\n      headers: {}\n      body: {}\n  arguments:\n    parameters:\n    - name: person_name\n    - name: airline\n    - name: date"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-movie-time\n        template: get-movie-time\n      - name: find-restaurant\n        template: find-restaurant\n        dependencies: [get-movie-time]\n      - name: make-reservation\n        template: make-reservation\n        dependencies: [find-restaurant]\n  - name: get-movie-time\n    http:\n      url: \"http://example.com/getmovietime\"\n      method: \"GET\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n  - name: find-restaurant\n    http:\n      url: \"http://example.com/findrestaurant\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: '{{ tasks.get-movie-time.result }}'\n      - name: type\n        value: '{{ inputs.parameters.type }}'\n      - name: rating\n        value: '{{ inputs.parameters.rating }}'\n  - name: make-reservation\n    http:\n      url: \"http://example.com/makereservation\"\n      method: \"POST\"\n      parameters:\n      - name: open_hours\n        value: '{{ tasks.find-restaurant.result.open_hours }}'\n      - name: number_of_people\n        value: '{{ inputs.parameters.number_of_people }}'\n      - name: date_time\n        value: '{{ inputs.parameters.date_time }}'\n  arguments:\n    parameters:\n    - name: movie_name\n      value: 'Inception'\n    - name: type\n      value: 'restaurant'\n    - name: rating\n      value: '4'\n    - name: number_of_people\n      value: '2'\n    - name: date_time\n      value: '2023-10-10T19:00:00Z'"}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reading-time-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-book-title\n        template: get-book-title\n        arguments:\n          parameters:\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n      - name: get-page-count\n        template: get-page-count\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{ tasks.get-book-title.result }}'\n      - name: estimate-reading-time\n        template: estimate-reading-time\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{ tasks.get-page-count.result }}'\n  - name: get-book-title\n    inputs:\n      parameters:\n      - name: author\n      - name: genre\n    http:\n      url: <BookTitle API URL>\n      method: GET\n  - name: get-page-count\n    inputs:\n      parameters:\n      - name: Title\n    http:\n      url: <PageCount API URL>\n      method: GET\n  - name: estimate-reading-time\n    inputs:\n      parameters:\n      - name: Pages\n    http:\n      url: <ReadingTime API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: author\n    - name: genre"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggest-outfit\n        template: suggest-outfit\n        arguments:\n          parameters:\n          - name: WeatherCondition\n            value: '{{ tasks.get-weather.result }}'\n      - name: find-stores\n        template: find-stores\n        arguments:\n          parameters:\n          - name: Outfit\n            value: '{{ tasks.suggest-outfit.result }}'\n  - name: get-weather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <weather-api-url>\n      method: GET\n      headers: []\n  - name: suggest-outfit\n    inputs:\n      parameters:\n      - name: WeatherCondition\n    http:\n      url: <outfit-suggestion-api-url>\n      method: GET\n      headers: []\n  - name: find-stores\n    inputs:\n      parameters:\n      - name: Outfit\n    http:\n      url: <shop-api-url>\n      method: GET\n      headers: []\n  arguments:\n    parameters:\n    - name: city\n      value: 'Los Angeles'"}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-route-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: calculate-distance\n        template: calculate-distance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.origin }}'\n          - name: end_point\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculate-time\n        template: calculate-time\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculate-distance.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: route-planner\n        template: route-planner\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.calculate-distance.result }}'\n          - name: time\n            value: '{{ tasks.calculate-time.result }}'\n  - name: calculate-distance\n    inputs:\n      parameters:\n      - name: start_point\n      - name: end_point\n    http:\n      url: <CalculateDistance API URL>\n      method: POST\n      body:\n        start_point: '{{ inputs.parameters.start_point }}'\n        end_point: '{{ inputs.parameters.end_point }}'\n  - name: calculate-time\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    http:\n      url: <CalculateTime API URL>\n      method: POST\n      body:\n        distance: '{{ inputs.parameters.distance }}'\n        speed: '{{ inputs.parameters.speed }}'\n  - name: route-planner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    http:\n      url: <RoutePlanner API URL>\n      method: POST\n      body:\n        origin: '{{ inputs.parameters.origin }}'\n        destination: '{{ inputs.parameters.destination }}'\n        distance: '{{ inputs.parameters.distance }}'\n        time: '{{ inputs.parameters.time }}'\n  inputs:\n    parameters:\n    - name: origin\n    - name: destination\n    - name: speed"}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-\nspec:\n  entrypoint: stock-analysis-dag\n  templates:\n  - name: stock-analysis-dag\n    dag:\n      tasks:\n      - name: fetch-stock-data\n        template: fetch-stock-data\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{ inputs.parameters.stock_symbol }}'\n      - name: basic-data-analysis\n        template: basic-data-analysis\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{ tasks.fetch-stock-data.result }}'\n      - name: generate-report\n        template: generate-report\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{ tasks.basic-data-analysis.result }}'\n          - name: template\n            value: '{{ inputs.parameters.template }}'\n  - name: fetch-stock-data\n    inputs:\n      parameters:\n      - name: stock_symbol\n    http:\n      url: <FetchStockData API URL>\n      method: GET\n  - name: basic-data-analysis\n    inputs:\n      parameters:\n      - name: stock_data\n    http:\n      url: <BasicDataAnalysis API URL>\n      method: POST\n  - name: generate-report\n    inputs:\n      parameters:\n      - name: analyzed_data\n      - name: template\n    http:\n      url: <GenerateReport API URL>\n      method: POST\n  arguments:\n    parameters:\n    - name: stock_symbol\n      value: 'AAPL'\n    - name: template\n      value: 'basic_analysis'"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-samsung-galaxy-s21-ultra-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-user-id\n        template: get-user-id\n      - name: get-product-id\n        template: get-product-id\n      - name: purchase-item\n        template: purchase-item\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.get-user-id.result }}'\n          - name: product_ID\n            value: '{{ tasks.get-product-id.result }}'\n          - name: quantity\n            value: '2'\n  - name: get-user-id\n    http:\n      url: <UserEmail2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_email\": \"john@example.com\"\n        }\n  - name: get-product-id\n    http:\n      url: <Productname2ID API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"book_name\": \"Samsung Galaxy S21 Ultra\"\n        }\n  - name: purchase-item\n    http:\n      url: <PurchaseItem API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_ID\": \"{{ tasks.get-user-id.result }}\",\n          \"product_ID\": \"{{ tasks.get-product-id.result }}\",\n          \"quantity\": 2\n        }"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-advice-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-clothing-advice\n        template: get-clothing-advice\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n  - name: get-weather\n    http:\n      url: \"http://example.com/getWeather\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: get-clothing-advice\n    http:\n      url: \"http://example.com/getClothingAdvice\"\n      method: GET\n      parameters:\n      - name: weather\n        value: '{{ tasks.get-weather.result }}'\n  inputs:\n    parameters:\n    - name: city\n      description: \"The name of the city to get the weather for\"\n      default: \"Tokyo\""}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-cost-conversion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-product-price\n        template: get-product-price\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ inputs.parameters.store_name }}'\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: get-exchange-rate\n        template: get-exchange-rate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'BRL'\n          - name: to_currency\n            value: 'CNY'\n      - name: calculate-cost\n        template: calculate-cost\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.get-product-price.result }}'\n          - name: exchange_rate\n            value: '{{ tasks.get-exchange-rate.result }}'\n  - name: get-product-price\n    inputs:\n      parameters:\n      - name: store_name\n      - name: product_name\n    http:\n      url: \"http://example.com/getProductPrice\"\n      method: GET\n  - name: get-exchange-rate\n    inputs:\n      parameters:\n      - name: from_currency\n      - name: to_currency\n    http:\n      url: \"http://example.com/getExchangeRate\"\n      method: GET\n  - name: calculate-cost\n    inputs:\n      parameters:\n      - name: price\n      - name: exchange_rate\n    http:\n      url: \"http://example.com/calculateCost\"\n      method: GET\n  inputs:\n    parameters:\n    - name: store_name\n    - name: product_name\n"}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-\nspec:\n  entrypoint: flight-reservation-dag\n  templates:\n  - name: flight-reservation-dag\n    dag:\n      tasks:\n      - name: search-flight\n        template: search-flight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: check-baggage-allowance\n        template: check-baggage-allowance\n        arguments:\n          parameters:\n          - name: airline\n            value: '{{ tasks.search-flight.result }}'\n      - name: book-flight\n        template: book-flight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.search-flight.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  \n  - name: search-flight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    http:\n      url: \"http://example.com/api/search-flight\"\n      method: \"GET\"\n\n  - name: check-baggage-allowance\n    inputs:\n      parameters:\n      - name: airline\n    http:\n      url: \"http://example.com/api/check-baggage-allowance\"\n      method: \"GET\"\n\n  - name: book-flight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    http:\n      url: \"http://example.com/api/book-flight\"\n      method: \"POST\"\n\n  arguments:\n    parameters:\n    - name: from_location\n    - name: to_location\n    - name: date\n    - name: preferred_flight_class"}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-purchase-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-showtimes\n        template: get-showtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: 'Avengers'\n          - name: city\n            value: 'Los Angeles'\n      - name: buy-tickets\n        template: buy-tickets\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.get-showtimes.result }}'\n          - name: number_of_tickets\n            value: '4'\n  - name: get-showtimes\n    http:\n      url: <GetShowtimes API URL>\n      method: GET\n      parameters:\n      - name: movie_title\n        value: '{{ inputs.parameters.movie_title }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: buy-tickets\n    http:\n      url: <BuyTickets API URL>\n      method: POST\n      parameters:\n      - name: showtime\n        value: '{{ inputs.parameters.showtime }}'\n      - name: number_of_tickets\n        value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: find-book-location-\nspec:\n  entrypoint: find-book-location\n  templates:\n  - name: find-book-location\n    dag:\n      tasks:\n      - name: search-book\n        template: book-search\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: check-availability\n        template: book-availability\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{ tasks.search-book.result }}'\n      - name: find-location\n        template: book-location\n        arguments:\n          parameters:\n          - name: book_availability\n            value: '{{ tasks.check-availability.result }}'\n  - name: book-search\n    inputs:\n      parameters:\n      - name: title\n      - name: author\n    http:\n      url: <BookSearch API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: book-availability\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: <BookAvailability API URL>\n      method: POST\n      headers: {}\n      body: {}\n  - name: book-location\n    inputs:\n      parameters:\n      - name: book_availability\n    http:\n      url: <BookLocation API URL>\n      method: POST\n      headers: {}\n      body: {}\n  arguments:\n    parameters:\n    - name: title\n      value: '1984'\n    - name: author\n      value: 'George Orwell'"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: event-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: weather-forecast\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n      - name: searchevent\n        template: event-search\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookticket\n        template: ticket-booking\n        arguments:\n          parameters:\n          - name: eventDetails\n            value: '{{ tasks.searchevent.result }}'\n          - name: num_of_tickets\n            value: '{{ inputs.parameters.num_of_tickets }}'\n  - name: weather-forecast\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: <weather-forecast-api-url>\n      method: GET\n  - name: event-search\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: <event-search-api-url>\n      method: GET\n  - name: ticket-booking\n    inputs:\n      parameters:\n      - name: eventDetails\n      - name: num_of_tickets\n    http:\n      url: <ticket-booking-api-url>\n      method: POST\n  arguments:\n    parameters:\n    - name: city\n      value: 'Sydney'\n    - name: date\n      value: '2023-01-01'\n    - name: num_of_tickets\n      value: '1'"}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: find-cinemas\n        template: find-cinemas\n      - name: check-showtimes\n        template: check-showtimes\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{ tasks.find-cinemas.result }}'\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: find-cinemas\n    http:\n      url: <CinemaFinder API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movieDetails\": {{ inputs.parameters.movieDetails }}\n        }\n  - name: check-showtimes\n    http:\n      url: <ShowtimeCheck API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"cinemaLocations\": {{ inputs.parameters.cinemaLocations }},\n          \"movieDetails\": {{ inputs.parameters.movieDetails }}\n        }\n  arguments:\n    parameters:\n    - name: movieDetails\n      value: '{\"title\": \"Dunkirk\", \"director\": \"Christopher Nolan\"}'"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-hotel-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-hotel\n        template: hotel-search\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n      - name: locate-restaurant\n        template: restaurant-locator\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: book-reservation\n        template: reservation-booking\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ tasks.search-hotel.result }}'\n          - name: restaurantLocations\n            value: '{{ tasks.locate-restaurant.result }}'\n  - name: hotel-search\n    inputs:\n      parameters:\n      - name: city\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/hotelsearch\"\n      method: \"GET\"\n  - name: restaurant-locator\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: \"http://example.com/restaurantlocator\"\n      method: \"GET\"\n  - name: reservation-booking\n    inputs:\n      parameters:\n      - name: hotelDetails\n      - name: restaurantLocations\n    http:\n      url: \"http://example.com/reservationbooking\"\n      method: \"POST\"\n  arguments:\n    parameters:\n    - name: city\n      value: 'Miami'\n    - name: check_in_date\n      value: '2023-08-25'\n    - name: check_out_date\n      value: '2023-08-26'\n    - name: cuisine\n      value: 'Italian'"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: find-clothing\n        template: find-clothing\n        arguments:\n          parameters:\n          - name: WeatherStatus\n            value: '{{ tasks.get-weather.result }}'\n      - name: find-store\n        template: find-store\n        arguments:\n          parameters:\n          - name: ClothingType\n            value: '{{ tasks.find-clothing.result }}'\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n  - name: get-weather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.example.com/getWeather?city={{inputs.parameters.city}}\"\n      method: GET\n  - name: find-clothing\n    inputs:\n      parameters:\n      - name: WeatherStatus\n    http:\n      url: \"http://clothingapi.example.com/findClothing?weather={{inputs.parameters.WeatherStatus}}\"\n      method: GET\n  - name: find-store\n    inputs:\n      parameters:\n      - name: ClothingType\n      - name: location\n    http:\n      url: \"http://storeapi.example.com/findStore?clothingType={{inputs.parameters.ClothingType}}&location={{inputs.parameters.location}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Miami'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-location\n        template: ip-geolocation\n        arguments:\n          parameters:\n          - name: ip\n            value: '{{ inputs.parameters.ip }}'\n      - name: get-weather\n        template: weather-forecast\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.get-location.result }}'\n      - name: suggest-activity\n        template: activity-suggestion\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.get-weather.result }}'\n  - name: ip-geolocation\n    inputs:\n      parameters:\n      - name: ip\n    http:\n      url: http://example.com/ipgeolocation\n      method: GET\n  - name: weather-forecast\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: http://example.com/weatherforecast\n      method: GET\n  - name: activity-suggestion\n    inputs:\n      parameters:\n      - name: weather_condition\n    http:\n      url: http://example.com/activitysuggestion\n      method: GET\n  arguments:\n    parameters:\n    - name: ip\n      value: '192.168.0.254'"}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-current-weather\n        template: get-current-weather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: get-weather-forecast\n        template: get-weather-forecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compare-weather\n        template: compare-weather\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.get-current-weather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.get-weather-forecast.result }}'\n  - name: get-current-weather\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: <GetCurrentWeather API URL>\n      method: GET\n  - name: get-weather-forecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: <GetWeatherForecast API URL>\n      method: GET\n  - name: compare-weather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: <CompareWeather API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: location\n    - name: date"}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-current-weather\n        template: get-current-weather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: get-weather-forecast\n        template: get-weather-forecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compare-weather\n        template: compare-weather\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.get-current-weather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.get-weather-forecast.result }}'\n  \n  - name: get-current-weather\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: <GetCurrentWeather API URL>\n      method: GET\n      headers: {}\n      queryParams:\n        location: '{{ inputs.parameters.location }}'\n\n  - name: get-weather-forecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: <GetWeatherForecast API URL>\n      method: GET\n      headers: {}\n      queryParams:\n        city: '{{ inputs.parameters.city }}'\n        date: '{{ inputs.parameters.date }}'\n\n  - name: compare-weather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: <CompareWeather API URL>\n      method: POST\n      headers: {}\n      body:\n        current_weather: '{{ inputs.parameters.current_weather }}'\n        weather_forecast: '{{ inputs.parameters.weather_forecast }}'\n\n  arguments:\n    parameters:\n    - name: location\n      value: 'Tokyo'\n    - name: date\n      value: '2023-10-10'"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: nyc-guide-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-events\n        template: event-search\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: search-restaurant\n        template: restaurant-search\n        arguments:\n          parameters:\n          - name: name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: create-guide\n        template: city-guide\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.search-restaurant.result }}'\n          - name: event\n            value: '{{ tasks.search-events.result }}'\n  - name: event-search\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://eventsearch.api/events\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'\n  - name: restaurant-search\n    inputs:\n      parameters:\n      - name: name\n      - name: city\n    http:\n      url: \"http://restaurantsearch.api/restaurants\"\n      method: \"GET\"\n      parameters:\n      - name: name\n        value: '{{ inputs.parameters.name }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: city-guide\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: event\n    http:\n      url: \"http://cityguide.api/guide\"\n      method: \"POST\"\n      parameters:\n      - name: restaurant\n        value: '{{ inputs.parameters.restaurant }}'\n      - name: event\n        value: '{{ inputs.parameters.event }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: date\n      value: '2023-04-15'\n    - name: restaurant_name\n      value: 'French'"}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: weather-forecast\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: suggest-clothing\n        template: clothing-suggestion\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n      - name: get-price\n        template: fashion-store\n        arguments:\n          parameters:\n          - name: clothes\n            value: '{{ tasks.suggest-clothing.result }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: weather-forecast\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: <weather-forecast-api-url>\n      method: GET\n  - name: clothing-suggestion\n    inputs:\n      parameters:\n      - name: weather\n    http:\n      url: <clothing-suggestion-api-url>\n      method: GET\n  - name: fashion-store\n    inputs:\n      parameters:\n      - name: clothes\n      - name: location\n    http:\n      url: <fashion-store-api-url>\n      method: GET\n  inputs:\n    parameters:\n    - name: location"}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: calculate-distance\n        template: calculate-distance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.origin }}'\n          - name: end_point\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculate-time\n        template: calculate-time\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculate-distance.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: route-planner\n        template: route-planner\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.calculate-distance.result }}'\n          - name: time\n            value: '{{ tasks.calculate-time.result }}'\n  - name: calculate-distance\n    inputs:\n      parameters:\n      - name: start_point\n      - name: end_point\n    http:\n      url: <CalculateDistance API URL>\n      method: POST\n      body:\n        start_point: '{{ inputs.parameters.start_point }}'\n        end_point: '{{ inputs.parameters.end_point }}'\n  - name: calculate-time\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    http:\n      url: <CalculateTime API URL>\n      method: POST\n      body:\n        distance: '{{ inputs.parameters.distance }}'\n        speed: '{{ inputs.parameters.speed }}'\n  - name: route-planner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    http:\n      url: <RoutePlanner API URL>\n      method: POST\n      body:\n        origin: '{{ inputs.parameters.origin }}'\n        destination: '{{ inputs.parameters.destination }}'\n        distance: '{{ inputs.parameters.distance }}'\n        time: '{{ inputs.parameters.time }}'\n  arguments:\n    parameters:\n    - name: origin\n      value: 'San Francisco'\n    - name: destination\n      value: 'Los Angeles'\n    - name: speed\n      value: '55'"}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-steak-\nspec:\n  entrypoint: order-steak-dag\n  templates:\n  - name: order-steak-dag\n    dag:\n      tasks:\n      - name: find-restaurant\n        template: find-restaurant\n      - name: get-menu\n        template: get-menu\n        dependencies: [find-restaurant]\n      - name: order-food\n        template: order-food\n        dependencies: [get-menu]\n  - name: find-restaurant\n    http:\n      url: \"http://restaurantfinder.api/RestaurantFinder\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"Cityname\": \"{{ inputs.parameters.city }}\",\n          \"CuisineType\": \"{{ inputs.parameters.cuisine }}\"\n        }\n  - name: get-menu\n    http:\n      url: \"http://menugetter.api/MenuGetter\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant\": \"{{ tasks.find-restaurant.result }}\"\n        }\n  - name: order-food\n    http:\n      url: \"http://orderfood.api/OrderFood\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"dish_name\": \"Steak\",\n          \"restaurant_name\": \"{{ tasks.find-restaurant.result }}\"\n        }\n  arguments:\n    parameters:\n    - name: city\n      value: \"New York City\"\n    - name: cuisine\n      value: \"American\""}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: fc-barcelona-game-cost-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-team-info\n        template: get-team-info\n        arguments:\n          parameters:\n          - name: team_name\n            value: '{{ inputs.parameters.team_name }}'\n      - name: get-game-schedule\n        template: get-game-schedule\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{ tasks.get-team-info.result }}'\n      - name: get-ticket-price\n        template: get-ticket-price\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{ tasks.get-game-schedule.result }}'\n  - name: get-team-info\n    inputs:\n      parameters:\n      - name: team_name\n    http:\n      url: <FootballTeamInfo API URL>\n      method: GET\n  - name: get-game-schedule\n    inputs:\n      parameters:\n      - name: team_info\n    http:\n      url: <GameSchedule API URL>\n      method: GET\n  - name: get-ticket-price\n    inputs:\n      parameters:\n      - name: game_schedule\n    http:\n      url: <TicketPrice API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: team_name\n      value: 'FC Barcelona'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: tokyo-trip-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-flight-details\n        template: flight-details\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: departure_date\n            value: '{{ inputs.parameters.departure_date }}'\n      - name: book-hotel\n        template: hotel-booking\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n      - name: plan-activities\n        template: activity-planning\n        arguments:\n          parameters:\n          - name: hotel_reservation\n            value: '{{ tasks.book-hotel.result }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n  - name: flight-details\n    inputs:\n      parameters:\n      - name: destination\n      - name: departure_date\n    http:\n      url: <FlightDetails API URL>\n      method: GET\n  - name: hotel-booking\n    inputs:\n      parameters:\n      - name: destination\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: <HotelBooking API URL>\n      method: POST\n  - name: activity-planning\n    inputs:\n      parameters:\n      - name: hotel_reservation\n      - name: destination\n    http:\n      url: <ActivityPlanning API URL>\n      method: POST\n  arguments:\n    parameters:\n    - name: destination\n      value: 'Tokyo'\n    - name: departure_date\n      value: '2023-09-15'\n    - name: check_in_date\n      value: '2023-09-15'\n    - name: check_out_date\n      value: '2023-09-20'"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-restaurant\n        template: restaurant-recommendation\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n  - name: restaurant-recommendation\n    http:\n      url: <RestaurantRecommendation API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"venue\": \"{{ inputs.parameters.venue }}\"\n        }\n    inputs:\n      parameters:\n      - name: venue\n        description: \"the name of the venue\"\n    outputs:\n      parameters:\n      - name: restaurant_list\n        valueFrom:\n          jsonPath: \"$.restaurant_list\""}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-on-population-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-weather\n        template: get-weather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: get-population\n        template: get-population\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: weather-impact-on-population\n        template: weather-impact-on-population\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.get-weather.result }}'\n          - name: population\n            value: '{{ tasks.get-population.result }}'\n  - name: get-weather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <GetWeather API URL>\n      method: GET\n  - name: get-population\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <CityPopulation API URL>\n      method: GET\n  - name: weather-impact-on-population\n    inputs:\n      parameters:\n      - name: weather\n      - name: population\n    http:\n      url: <WeatherImpactOnPopulation API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n      description: The name of the city to analyze."}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: books-by-author-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-author-id\n        template: get-author-id\n      - name: get-books-by-author\n        template: get-books-by-author\n        dependencies: [get-author-id]\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{ tasks.get-author-id.result }}'\n  - name: get-author-id\n    http:\n      url: <AuthorOfBook API URL>\n      method: GET\n      parameters:\n      - name: book_id\n        value: '{{ inputs.parameters.book_id }}'\n  - name: get-books-by-author\n    http:\n      url: <BooksByAuthor API URL>\n      method: GET\n      parameters:\n      - name: author_id\n        value: '{{ inputs.parameters.author_id }}'\n  arguments:\n    parameters:\n    - name: book_id\n      value: '123'  # Example book ID for 'The Hobbit'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: search-fare\n        template: search-fare\n        arguments:\n          parameters:\n          - name: src\n            value: '{{ inputs.parameters.src }}'\n          - name: dest\n            value: '{{ inputs.parameters.dest }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: check-discount\n        template: check-discount\n        arguments:\n          parameters:\n          - name: coupon\n            value: '{{ inputs.parameters.coupon }}'\n          - name: fare_id\n            value: '{{ tasks.search-fare.result }}'\n      - name: calculate-final-fare\n        template: calculate-final-fare\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{ tasks.search-fare.result }}'\n          - name: discount_amount\n            value: '{{ tasks.check-discount.result }}'\n  - name: search-fare\n    inputs:\n      parameters:\n      - name: src\n      - name: dest\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.src}} {{inputs.parameters.dest}} {{inputs.parameters.date}}; # Call SearchFare API\"]\n  - name: check-discount\n    inputs:\n      parameters:\n      - name: coupon\n      - name: fare_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.coupon}} {{inputs.parameters.fare_id}}; # Call CheckDiscount API\"]\n  - name: calculate-final-fare\n    inputs:\n      parameters:\n      - name: fare_id\n      - name: discount_amount\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.fare_id}} {{inputs.parameters.discount_amount}}; # Call CalculateFinalFare API\"]\n  inputs:\n    parameters:\n    - name: src\n      value: 'New York'\n    - name: dest\n      value: 'Los Angeles'\n    - name: date\n      value: '13th June'\n    - name: coupon\n      value: 'SUMMER50'"}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-planning-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: check-flights\n        template: check-flights\n        arguments:\n          parameters:\n          - name: source\n            value: '{{ inputs.parameters.source }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n      - name: book-hotel\n        template: book-hotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plan-itinerary\n        template: plan-itinerary\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.destination }}'\n          - name: interests\n            value: '{{ inputs.parameters.interests }}'\n          - name: flight\n            value: '{{ tasks.check-flights.result }}'\n          - name: hotel\n            value: '{{ tasks.book-hotel.result }}'\n  - name: check-flights\n    inputs:\n      parameters:\n      - name: source\n      - name: destination\n    http:\n      url: \"http://example.com/checkflights\"\n      method: \"GET\"\n  - name: book-hotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: \"http://example.com/bookhotel\"\n      method: \"POST\"\n  - name: plan-itinerary\n    inputs:\n      parameters:\n      - name: location\n      - name: interests\n      - name: flight\n      - name: hotel\n    http:\n      url: \"http://example.com/planitinerary\"\n      method: \"POST\"\n  arguments:\n    parameters:\n    - name: source\n      value: 'Chicago'\n    - name: destination\n      value: 'Tokyo'\n    - name: hotel_name\n      value: 'Hotel Tokyo'\n    - name: date\n      value: '2023-12-01'\n    - name: interests\n      value: 'technology'"}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-restaurant\n        template: get-restaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: book-table\n        template: book-table\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.get-restaurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: get-directions\n        template: get-directions\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.get-restaurant.result }}'\n  - name: get-restaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: <GetRestaurant API URL>\n      method: GET\n  - name: book-table\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: <BookTable API URL>\n      method: POST\n  - name: get-directions\n    inputs:\n      parameters:\n      - name: destination\n    http:\n      url: <GetDirections API URL>\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: cuisine\n      value: 'Italian'\n    - name: date\n      value: '{{ inputs.parameters.date }}'\n    - name: time\n      value: '20:00'"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: next-bus-timing-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: retrieve-traffic-info\n        template: retrieve-local-traffic-info\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculate-travel-time\n        template: calculate-travel-time\n        arguments:\n          parameters:\n          - name: flightTimes\n            value: '{{ inputs.parameters.flightTimes }}'\n          - name: trafficDelay\n            value: '{{ tasks.retrieve-traffic-info.result }}'\n      - name: fetch-next-bus\n        template: fetch-next-bus\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{ tasks.calculate-travel-time.result }}'\n          - name: bus_route\n            value: '{{ inputs.parameters.bus_route }}'\n  - name: retrieve-local-traffic-info\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: <RetrieveLocalTrafficInfo API URL>\n      method: GET\n  - name: calculate-travel-time\n    inputs:\n      parameters:\n      - name: flightTimes\n      - name: trafficDelay\n    http:\n      url: <CalculateTravelTime API URL>\n      method: GET\n  - name: fetch-next-bus\n    inputs:\n      parameters:\n      - name: travel_time\n      - name: bus_route\n    http:\n      url: <FetchNextBus API URL>\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n    - name: flightTimes\n    - name: bus_route"}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: get-event-calendar\n        template: get-event-calendar\n      - name: check-traffic\n        template: check-traffic\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.get-event-calendar.result }}'\n  - name: get-event-calendar\n    http:\n      url: \"http://example.com/getEventCalendar\"\n      method: GET\n      parameters:\n      - name: user_id\n        value: '{{ inputs.parameters.user_id }}'\n  - name: check-traffic\n    http:\n      url: \"http://example.com/checkTraffic\"\n      method: GET\n      parameters:\n      - name: destination\n        value: '{{ inputs.parameters.destination }}'\n  inputs:\n    parameters:\n    - name: user_id\n    - name: destination"}]