[
  {
    "Id": 2,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: getplaylistid\n        template: getplaylistid\n        dependencies:\n        - fetchuserplaylist\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{{{ inputs.parameters.playlist_name }}}}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - getplaylistid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.getplaylistid.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: fetchuserplaylist\n    inputs:\n      parameters:\n      - name: user_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo playlist1,playlist2\"]\n  - name: getplaylistid\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo song added\"]"
  },
  {
    "Id": 4,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getplaylistid\n        template: getplaylistid\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{{{ inputs.parameters.playlist_name }}}}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - getplaylistid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.getplaylistid.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getplaylistid\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n  inputs:\n    parameters:\n    - name: username\n    - name: playlist_name\n    - name: song_name\n"
  },
  {
    "Id": 6,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: addSongToPlaylist\n        template: addSongToPlaylist\n        dependencies:\n        - fetchuserplaylist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.fetchuserplaylist.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1\"]\n  - name: fetchuserplaylist\n    inputs:\n      parameters:\n      - name: user_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: addSongToPlaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Mia'\n    - name: song_name\n      value: 'Sweet Child of Mine'\"}"
  },
  {
    "Id": 37,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding showtime for movie {{inputs.parameters.movie_name}} in {{inputs.parameters.location}} on {{inputs.parameters.date}}'\"]\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking {{inputs.parameters.number_of_tickets}} tickets for {{inputs.parameters.movie_name}} at {{inputs.parameters.showtime}}'\"]"
  },
  {
    "Id": 138,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-459-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'"
  },
  {
    "Id": 148,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{{{ inputs.parameters.course_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - email2userid\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.coursename2id.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.email }}\"]\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.course_name }}\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.person_ID }} {{ inputs.parameters.subject_ID }} {{ inputs.parameters.semester }}\"]\n  inputs:\n    parameters:\n    - name: email\n    - name: course_name\n    - name: semester"
  },
  {
    "Id": 150,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: studentname2id\n        template: studentname2id\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{{{ tasks.email2username.result }}}}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{{{ inputs.parameters.course_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.studentname2id.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.coursename2id.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: email2username\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: email2username-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.email}} | email2username\"]\n  - name: studentname2id\n    inputs:\n      parameters:\n      - name: student_name\n    container:\n      image: studentname2id-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.student_name}} | studentname2id\"]\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: coursename2id-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.course_name}} | coursename2id\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: enrollcourse-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{inputs.parameters.person_ID}} {{inputs.parameters.subject_ID}} {{inputs.parameters.semester}} | enrollcourse\"]\n  inputs:\n    parameters:\n    - name: email\n    - name: course_name\n    - name: semester"
  },
  {
    "Id": 166,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-738-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getconcerts\n        template: getconcerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{{{ inputs.parameters.venue }}}}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - getconcerts\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{{{ tasks.getconcerts.result }}}}'\n          - name: venue_ID\n            value: '{{{{ inputs.parameters.venue_ID }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: getconcerts\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: \"http://example.com/api/musicconcerts?venue={{{{inputs.parameters.venue}}}}\"\n      method: GET\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: \"http://example.com/api/bookeventticket?event_ID={{{{inputs.parameters.event_ID}}}}&venue_ID={{{{inputs.parameters.venue_ID}}}}&date={{{{inputs.parameters.date}}}}\"\n      method: POST"
  },
  {
    "Id": 173,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: film-festival-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: geteventid\n        template: geteventid\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: getvenueid\n        template: getvenueid\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - geteventid\n        - getvenueid\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.geteventid.result }}'\n          - name: venue_ID\n            value: '{{ tasks.getvenueid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: geteventid\n    inputs:\n      parameters:\n      - name: event_name\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Python code to get event ID\n        event_name = '{{ inputs.parameters.event_name }}'\n        # Simulate fetching event ID\n        print(12345)  # Example event ID\n  - name: getvenueid\n    inputs:\n      parameters:\n      - name: city\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Python code to get venue ID\n        city = '{{ inputs.parameters.city }}'\n        # Simulate fetching venue ID\n        print(67890)  # Example venue ID\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Python code to book event ticket\n        event_ID = '{{ inputs.parameters.event_ID }}'\n        venue_ID = '{{ inputs.parameters.venue_ID }}'\n        date = '{{ inputs.parameters.date }}'\n        # Simulate booking\n        print('Booking confirmed')"
  },
  {
    "Id": 227,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: getsupplierid\n        template: getsupplierid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{{{ inputs.parameters.supplier_name }}}}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - getproductid\n        - getsupplierid\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: supplier_ID\n            value: '{{{{ tasks.getsupplierid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Mocked product ID\n  - name: getsupplierid\n    inputs:\n      parameters:\n      - name: supplier_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Mocked supplier ID\n  - name: placeorder\n    inputs:\n      parameters:\n      - name: item_ID\n      - name: supplier_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Order placed'\"]"
  },
  {
    "Id": 242,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '1'"
  },
  {
    "Id": 307,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrange-transportation\n        template: arrange-transportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: plan-trip\n        template: plan-trip\n        dependencies:\n        - arrange-transportation\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{{{ inputs.parameters.hotel }}}}'\n          - name: restaurants\n            value: '{{{{ inputs.parameters.restaurants }}}}'\n      - name: create-travel-plan\n        template: create-travel-plan\n        dependencies:\n        - arrange-transportation\n        - plan-trip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.arrange-transportation.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.plan-trip.result }}}}'\n  - name: arrange-transportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Arranging transportation to {{inputs.parameters.city}} on {{inputs.parameters.date}}'\"]\n  - name: plan-trip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Planning trip with hotel: {{inputs.parameters.hotel}} and restaurants: {{inputs.parameters.restaurants}}'\"]\n  - name: create-travel-plan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Creating travel plan with flight: {{inputs.parameters.flight}} and accommodation: {{inputs.parameters.accommodation}}'\"]"
  },
  {
    "Id": 310,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{{{ inputs.parameters.localBudget }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n  - name: suggestdiningoptions\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    container:\n      image: your-dining-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"localBudget\\\": \\\"{{inputs.parameters.localBudget}}\\\", \\\"location\\\": \\\"{{inputs.parameters.location}}\\\"}' http://your-dining-api-endpoint\"]"
  },
  {
    "Id": 429,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Product added to cart'\"]\n  inputs:\n    parameters:\n    - name: username\n    - name: product_name\n    - name: quantity"
  },
  {
    "Id": 431,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-206-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n      - name: rentmovie\n        template: rentmovie\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: movie_ID\n            value: '{{{{ tasks.getmovieid.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: getmovieid\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Simulating movie ID retrieval\n  - name: rentmovie\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Rental successful'\"] # Simulating movie rental"
  },
  {
    "Id": 440,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: songtitletoid\n        template: songtitletoid\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ inputs.parameters.song_title }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - getuserid\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songtitletoid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: songtitletoid\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Playing song'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'George'\n    - name: song_title\n      value: 'Bohemian Rhapsody'"
  },
  {
    "Id": 447,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n      - name: recommenddish\n        template: recommenddish\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.recommenditems.result }}}}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'FindPopularDishes({{inputs.parameters.city}})' | some-command\"]\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'GetRestaurant({{inputs.parameters.city}}, {{inputs.parameters.cuisine}})' | some-command\"]\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'RecommendItems({{inputs.parameters.restaurant_name}})' | some-command\"]\n  - name: recommenddish\n    inputs:\n      parameters:\n      - name: menu\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'RecommendDish({{inputs.parameters.menu}})' | some-command\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Chicago'\n    - name: cuisine\n      value: 'Indian'"
  },
  {
    "Id": 448,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: plantrip\n        template: plantrip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{{{ inputs.parameters.hotel }}}}'\n          - name: restaurants\n            value: '{{{{ inputs.parameters.restaurants }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - arrangetransportation\n        - plantrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.arrangetransportation.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.plantrip.result }}}}'\n  - name: arrangetransportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/arrangetransportation\"\n      method: \"POST\"\n  - name: plantrip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    http:\n      url: \"http://example.com/plantrip\"\n      method: \"POST\"\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    http:\n      url: \"http://example.com/createtravelplan\"\n      method: \"POST\""
  },
  {
    "Id": 455,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-share-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookreview\n        template: getbookreview\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{{{ inputs.parameters.bookname }}}}'\n      - name: sharereview\n        template: sharereview\n        dependencies:\n        - getbookreview\n        arguments:\n          parameters:\n          - name: review\n            value: '{{{{ tasks.getbookreview.result }}}}'\n          - name: social_media_platform\n            value: '{{{{ inputs.parameters.social_media_platform }}}}'\n  - name: getbookreview\n    inputs:\n      parameters:\n      - name: bookname\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching review for {{inputs.parameters.bookname}}' && sleep 1 && echo 'Review fetched'\"]\n  - name: sharereview\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Sharing review on {{inputs.parameters.social_media_platform}}' && sleep 1 && echo 'Review shared'\"]"
  },
  {
    "Id": 468,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-confirmation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{{{ inputs.parameters.specialty }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: getappointment\n        template: getappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{{{ tasks.finddoctor.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - getappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{{{ tasks.getappointment.result }}}}'\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    container:\n      image: finddoctor-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"doctor_id\\\": 123}'\"]\n  - name: getappointment\n    inputs:\n      parameters:\n      - name: doctor_id\n      - name: date\n    container:\n      image: getappointment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"appointment_id\\\": 456}'\"]\n  - name: confirmappointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    container:\n      image: confirmappointment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'confirmed'\"]\n  arguments:\n    parameters:\n    - name: specialty\n      value: 'cardiologist'\n    - name: location\n      value: 'New York'\n    - name: date\n      value: '2023-08-10'"
  },
  {
    "Id": 512,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpurchaseinfo\n        template: getpurchaseinfo\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: getproductratings\n        template: getproductratings\n        dependencies:\n        - getpurchaseinfo\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{{{ tasks.getpurchaseinfo.result }}}}'\n          - name: number_of_ratings\n            value: '{{{{ inputs.parameters.number_of_ratings }}}}'\n  - name: getpurchaseinfo\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"purchase_info\\\": \\\"sample_purchase_info\\\"}'\"]\n  - name: getproductratings\n    inputs:\n      parameters:\n      - name: purchase_info\n      - name: number_of_ratings\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"ratings\\\": [5, 4, 3, 5, 4, 5, 3, 4, 5, 4]}'\"]\n  arguments:\n    parameters:\n    - name: product_id\n      value: '56789'\n    - name: number_of_ratings\n      value: '10'"
  },
  {
    "Id": 532,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-cinema-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{{{ inputs.parameters.movieDetails }}}}'\n  - name: findnearestcinema\n    http:\n      url: \"http://example.com/findnearestcinema\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"movieDetails\": \"{{{{ inputs.parameters.movieDetails }}}}\"}'\n    outputs:\n      parameters:\n      - name: cinemaLocation\n        valueFrom:\n          jsonPath: \"$.cinemaLocation\""
  },
  {
    "Id": 537,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-vegandine-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommenditems\n        template: recommenditems\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.recommenditems.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{{{ inputs.parameters.restaurant_info }}}}'\n          - name: food_list\n            value: '{{{{ tasks.suggestfood.result }}}}'\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Recommended items for restaurant' $0\"]\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggested food based on menu' $0 'and dietary preferences' $1\"]\n  - name: bestorder\n    inputs:\n      parameters:\n      - name: restaurant_info\n      - name: food_list\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Best order for restaurant' $0 'with food list' $1\"]\n  inputs:\n    parameters:\n    - name: restaurant_name\n    - name: dietary_preferences\n    - name: restaurant_info"
  },
  {
    "Id": 540,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcoachellacoordinates\n        template: getcoachellacoordinates\n      - name: predictweather\n        template: predictweather\n        dependencies:\n        - getcoachellacoordinates\n        arguments:\n          parameters:\n          - name: coordinates\n            value: '{{{{ tasks.getcoachellacoordinates.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n  - name: getcoachellacoordinates\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        print(\"33.6784,-116.2376\")  # Coachella coordinates\n  - name: predictweather\n    inputs:\n      parameters:\n      - name: coordinates\n      - name: date\n    http:\n      url: \"http://example.com/predictweather\"\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"coordinates\": \"{{{{ inputs.parameters.coordinates }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\"\n        }"
  },
  {
    "Id": 560,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: author_name\n            value: '{{ inputs.parameters.author_name }}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: addbooktoauthor\n        template: addbooktoauthor\n        dependencies:\n        - getauthorid\n        - getbookid\n        arguments:\n          parameters:\n          - name: author_ID\n            value: '{{ tasks.getauthorid.result }}'\n          - name: book_ID\n            value: '{{ tasks.getbookid.result }}'\n  - name: getauthorid\n    inputs:\n      parameters:\n      - name: author_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1\"] # Simulating fetching author ID\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 2\"] # Simulating fetching book ID\n  - name: addbooktoauthor\n    inputs:\n      parameters:\n      - name: author_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Book added to author'\"] # Simulating adding book to author"
  },
  {
    "Id": 582,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflightavailability\n        template: checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_code\n            value: '{{{{ inputs.parameters.flight_code }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.checkflightavailability.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: checkflightavailability\n    inputs:\n      parameters:\n      - name: flight_code\n      - name: date\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo checking flight availability\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo booking flight\"]"
  },
  {
    "Id": 591,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recipe-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recipename2id\n        template: recipename2id\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ inputs.parameters.recipe_name }}}}'\n      - name: productname2ingredients\n        template: productname2ingredients\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: getrecipe\n        template: getrecipe\n        dependencies:\n        - recipename2id\n        - productname2ingredients\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{{{ tasks.recipename2id.result }}}}'\n          - name: ingredient_ID\n            value: '{{{{ tasks.productname2ingredients.result }}}}'\n  - name: recipename2id\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: productname2ingredients\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: getrecipe\n    inputs:\n      parameters:\n      - name: recipe_ID\n      - name: ingredient_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Chocolate Cake Recipe' with Cocoa Powder\"]\n"
  },
  {
    "Id": 601,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ tasks.username2email.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'\n          - name: start_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: end_date\n            value: '{{{{ inputs.parameters.end_date }}}}'"
  },
  {
    "Id": 605,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - email2userid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: author_name\n            value: '{{{{ inputs.parameters.author_name }}}}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Converting email to user ID'\"]\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Checking author availability'\"]"
  },
  {
    "Id": 625,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherinfo\n        template: getweatherinfo\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: generateweatherreport\n        template: generateweatherreport\n        dependencies:\n        - getweatherinfo\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{{{ tasks.getweatherinfo.result }}}}'\n  - name: getweatherinfo\n    http:\n      url: \"http://weatherapi.com/getWeatherInfo\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: generateweatherreport\n    http:\n      url: \"http://weatherapi.com/generateWeatherReport\"\n      method: \"POST\"\n      parameters:\n      - name: weather_data\n        value: '{{{{ inputs.parameters.weather_data }}}}'"
  },
  {
    "Id": 641,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: guidance-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: weather2advice\n        template: weather2advice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://example.com/getweather\"\n      method: \"GET\"\n      parameters:\n      - name: username\n        value: '{{{{ inputs.parameters.username }}}}'\n  - name: weather2advice\n    http:\n      url: \"http://example.com/weather2advice\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  arguments:\n    parameters:\n    - name: username\n      value: 'Jack_Sparrow'"
  },
  {
    "Id": 670,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - getmovieid\n        arguments:\n          parameters:\n          - name: movie_ID\n            value: '{{ tasks.getmovieid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: getmovieid\n    http:\n      url: \"http://example.com/getmovieid\"\n      method: \"GET\"\n      parameters:\n      - name: movie_name\n        value: '{{ inputs.parameters.movie_name }}'\n  - name: bookmovieticket\n    http:\n      url: \"http://example.com/bookmovieticket\"\n      method: \"POST\"\n      parameters:\n      - name: movie_ID\n        value: '{{ tasks.getmovieid.result }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'"
  },
  {
    "Id": 675,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-83-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2bookid\n        template: title2bookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2bookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.title2bookid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: title2bookid\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Borrowed'\"]\n"
  },
  {
    "Id": 676,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.title2isbn.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Borrowing book' $0 $1\", \"{{{{ inputs.parameters.user_ID }}}}\", \"{{{{ inputs.parameters.book_ID }}}}\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Jessica'\n    - name: title\n      value: '1984'"
  },
  {
    "Id": 696,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: number_of_rooms\n            value: '1'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.check_out_date }}}}'\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: \"GET\"\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/roombooking\"\n      method: \"POST\""
  },
  {
    "Id": 711,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: return-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: returnbook\n        template: returnbook\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_name\n            value: '{{{{ inputs.parameters.book_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: email\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to convert email to user ID\n        def email_to_user_id(email):\n            return 123  # Mock user ID for demonstration\n        print(email_to_user_id('{{{{ inputs.parameters.email }}}}'))\n  - name: returnbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_name\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to return a book\n        def return_book(user_ID, book_name):\n            return \"Success\"  # Mock return status for demonstration\n        print(return_book('{{{{ inputs.parameters.user_ID }}}}', '{{{{ inputs.parameters.book_name }}}}'))"
  },
  {
    "Id": 719,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ inputs.parameters.user_email }}}}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - getuserid\n        - getproductid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: quantity\n            value: '1'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: user_email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Simulating product ID retrieval\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Purchase successful'\"] # Simulating purchase action"
  },
  {
    "Id": 727,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ inputs.parameters.movie_title }}}}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: movie_ID\n            value: '{{{{ tasks.getmovieid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getmovieid\n    inputs:\n      parameters:\n      - name: movie_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addtowatchlist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Added to watchlist'\"]\n  inputs:\n    parameters:\n    - name: username\n    - name: movie_title\n    - name: watchlist_name"
  },
  {
    "Id": 734,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-135-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: addbooktoreadinglist\n        template: addbooktoreadinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n  - name: addbooktoreadinglist\n    inputs:\n      parameters:\n      - name: user_name\n      - name: book_title\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print('Adding book to reading list')\"]\n"
  },
  {
    "Id": 748,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktable\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/booktable\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{{{ inputs.parameters.restaurant_name }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\",\n          \"time\": \"{{{{ inputs.parameters.time }}}}\"\n        }"
  },
  {
    "Id": 753,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthor\n        template: getauthor\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - getauthor\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthor.result }}'\n      - name: schedulediscussion\n        template: schedulediscussion\n        dependencies:\n        - checkauthoravailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthor.result }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: getauthor\n    inputs:\n      parameters:\n      - name: bookTitle\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Author Name' > /tmp/author_name\"]\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Available' > /tmp/availability_status\"]\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Scheduled' > /tmp/schedule_status\"]"
  },
  {
    "Id": 759,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  - name: recommendclothing\n    http:\n      url: \"http://clothingapi.com/recommendClothing?weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  inputs:\n    parameters:\n    - name: location\n      value: \"New York\""
  },
  {
    "Id": 774,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - arrangetransportation\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.arrangetransportation.result }}'\n          - name: accommodation\n            value: '{{ inputs.parameters.accommodation }}'\n  - name: arrangetransportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    container:\n      image: my-transportation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Transportation arranged for {{ inputs.parameters.city }} on {{ inputs.parameters.date }}'\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: my-travelplan-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Travel plan created with flight {{ inputs.parameters.flight }} and accommodation {{ inputs.parameters.accommodation }}'\"]"
  },
  {
    "Id": 805,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findromancemovie\n        template: findromancemovie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'romance'\n      - name: getshowtimes\n        template: getshowtimes\n        dependencies:\n        - findromancemovie\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ tasks.findromancemovie.result }}}}'\n          - name: city\n            value: 'San Francisco'\n      - name: reservetickets\n        template: reservetickets\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{{{ tasks.getshowtimes.result }}}}'\n          - name: number_of_tickets\n            value: '4'"
  },
  {
    "Id": 821,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-565-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{{{ inputs.parameters.book_information }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: bookstore_location\n            value: '{{{{ tasks.findbookstore.result }}}}'\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"Finding nearest bookstore in {{ inputs.parameters.city }}\"']\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"Finding bookstore with {{ inputs.parameters.book_information }} in stock\"']\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: bookstore_location\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"Checking availability at {{ inputs.parameters.bookstore_location }}\"']"
  },
  {
    "Id": 823,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-491-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocaltheater\n        template: getlocaltheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getcurrentplays\n        template: getcurrentplays\n        dependencies:\n        - getlocaltheater\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{{{ tasks.getlocaltheater.result }}}}'\n      - name: getplayreviews\n        template: getplayreviews\n        dependencies:\n        - getcurrentplays\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{{{ tasks.getcurrentplays.result }}}}'\n  - name: getlocaltheater\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'London'\"]\n  - name: getcurrentplays\n    inputs:\n      parameters:\n      - name: theater_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Current Play'\"]\n  - name: getplayreviews\n    inputs:\n      parameters:\n      - name: play_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Play Reviews'\"]"
  },
  {
    "Id": 824,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-492-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalmusicstore\n        template: getlocalmusicstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getcurrentalbums\n        template: getcurrentalbums\n        dependencies:\n        - getlocalmusicstore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{{{ tasks.getlocalmusicstore.result }}}}'\n      - name: getalbumreviews\n        template: getalbumreviews\n        dependencies:\n        - getcurrentalbums\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{{{ tasks.getcurrentalbums.result }}}}'\n  - name: getlocalmusicstore\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"{{{{ inputs.parameters.city }}}}\"']\n  - name: getcurrentalbums\n    inputs:\n      parameters:\n      - name: store_name\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"{{{{ inputs.parameters.store_name }}}}\"']\n  - name: getalbumreviews\n    inputs:\n      parameters:\n      - name: album_name\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"{{{{ inputs.parameters.album_name }}}}\"']"
  },
  {
    "Id": 830,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantlocation\n        template: getrestaurantlocation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - getrestaurantlocation\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurantlocation.result }}}}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurantlocation.result }}}}'\n  - name: getrestaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; print(json.dumps({'restaurant_location': 'Best Chinese Restaurant in Seattle'}))\"]\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; print(json.dumps({'recommend_items': ['dumplings']}))\"]\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; print(json.dumps({'order_status': 'Order placed successfully'}))\"]\n  inputs:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: dish_name\n      value: 'dumplings' \n    - name: quantity\n      value: '6'"
  },
  {
    "Id": 898,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-decision-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstockprice\n        template: getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n      - name: predictfuturestockprice\n        template: predictfuturestockprice\n        dependencies:\n        - getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n          - name: currentPrice\n            value: '{{{{ tasks.getstockprice.result }}}}'\n      - name: suggeststockaction\n        template: suggeststockaction\n        dependencies:\n        - predictfuturestockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n          - name: currentPrice\n            value: '{{{{ tasks.getstockprice.result }}}}'\n          - name: futurePrice\n            value: '{{{{ tasks.predictfuturestockprice.result }}}}'\n  - name: getstockprice\n    inputs:\n      parameters:\n      - name: stockId\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching current stock price'\"]\n  - name: predictfuturestockprice\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Predicting future stock price'\"]\n  - name: suggeststockaction\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n      - name: futurePrice\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggesting stock action'\"]"
  },
  {
    "Id": 910,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: investment-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: trackspending\n        template: trackspending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: calculatesavings\n        template: calculatesavings\n        dependencies:\n        - trackspending\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{{{ tasks.trackspending.result }}}}'\n      - name: suggestinvestment\n        template: suggestinvestment\n        dependencies:\n        - calculatesavings\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{{{ tasks.calculatesavings.result }}}}'\n  - name: trackspending\n    inputs:\n      parameters:\n      - name: Username\n    container:\n      image: trackspending-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.Username }}'\"]\n  - name: calculatesavings\n    inputs:\n      parameters:\n      - name: SpendingReport\n    container:\n      image: calculatesavings-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.SpendingReport }}'\"]\n  - name: suggestinvestment\n    inputs:\n      parameters:\n      - name: Savings\n    container:\n      image: suggestinvestment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.Savings }}'\"]"
  },
  {
    "Id": 920,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: restaurantsuggestion\n        template: restaurantsuggestion\n        dependencies:\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: food_preference\n            value: '{{{{ tasks.findpopulardishes.result }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - restaurantsuggestion\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.restaurantsuggestion.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Popular Chinese Dishes' > /tmp/output.txt\"]\n      volumeMounts:\n      - name: workdir\n        mountPath: /tmp\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output.txt\n  - name: restaurantsuggestion\n    inputs:\n      parameters:\n      - name: city\n      - name: food_preference\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggested Restaurant' > /tmp/output.txt\"]\n      volumeMounts:\n      - name: workdir\n        mountPath: /tmp\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output.txt\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggested Food' > /tmp/output.txt\"]\n      volumeMounts:\n      - name: workdir\n        mountPath: /tmp\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output.txt\n  volumes:\n  - name: workdir\n    emptyDir: {}"
  },
  {
    "Id": 933,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: 'Chinese'\n          - name: location\n            value: 'Houston'\n      - name: filterrestaurant\n        template: filterrestaurant\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: restrictions\n            value: 'lactose-free'\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: 'Houston'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - filterrestaurant\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.findpopulardishes.result }}}}'\n          - name: dietary_preferences\n            value: 'lactose-free'\n  templates:\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: location\n    http:\n      url: http://example.com/findrestaurant\n      method: GET\n      parameters:\n      - name: cuisine\n        value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n  - name: filterrestaurant\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterrestaurant\n      method: GET\n      parameters:\n      - name: restaurant\n        value: '{{{{ inputs.parameters.restaurant }}}}'\n      - name: restrictions\n        value: '{{{{ inputs.parameters.restrictions }}}}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findpopulardishes\n      method: GET\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestfood\n      method: GET\n      parameters:\n      - name: menu\n        value: '{{{{ inputs.parameters.menu }}}}'\n      - name: dietary_preferences\n        value: '{{{{ inputs.parameters.dietary_preferences }}}}'"
  },
  {
    "Id": 945,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: movieratings\n        template: movieratings\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{{{ tasks.getmovieratings.result }}}}'\n      - name: averagerating\n        template: averagerating\n        dependencies:\n        - movieratings\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{{{ tasks.movieratings.result }}}}'\n  - name: getmovieratings\n    inputs:\n      parameters:\n      - name: movie\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Get movie ratings for {{inputs.parameters.movie}}'\"]\n  - name: movieratings\n    inputs:\n      parameters:\n      - name: movie_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Get rating scores for movie ID {{inputs.parameters.movie_id}}'\"]\n  - name: averagerating\n    inputs:\n      parameters:\n      - name: ratingScores\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Calculate average rating for scores {{inputs.parameters.ratingScores}}'\"]"
  },
  {
    "Id": 952,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-584-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: movierating\n        template: movierating\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{{{ tasks.getmovieratings.result }}}}'\n      - name: highestrating\n        template: highestrating\n        dependencies:\n        - movierating\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{{{ tasks.movierating.result }}}}'\n  - name: getmovieratings\n    inputs:\n      parameters:\n      - name: movie\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Get movie ratings for {{inputs.parameters.movie}}'\"]\n  - name: movierating\n    inputs:\n      parameters:\n      - name: movie_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Retrieve rating scores for movie ID {{inputs.parameters.movie_id}}'\"]\n  - name: highestrating\n    inputs:\n      parameters:\n      - name: rating_scores\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Get highest rating from scores {{inputs.parameters.rating_scores}}'\"]"
  },
  {
    "Id": 959,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: upgrade-seat-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightnumber\n        template: getflightnumber\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ inputs.parameters.person_ID }}}}'\n      - name: seatselection\n        template: seatselection\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{{{ tasks.getflightnumber.result }}}}'\n      - name: upgradeavailability\n        template: upgradeavailability\n        dependencies:\n        - seatselection\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{{{ tasks.seatselection.result }}}}'\n  - name: getflightnumber\n    inputs:\n      parameters:\n      - name: person_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'flight_number' > /tmp/output\"]\n  - name: seatselection\n    inputs:\n      parameters:\n      - name: flight_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'seats' > /tmp/output\"]\n  - name: upgradeavailability\n    inputs:\n      parameters:\n      - name: seats\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'upgradeOptions' > /tmp/output\"]"
  },
  {
    "Id": 961,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-356-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflights\n        template: checkflights\n        arguments:\n          parameters:\n          - name: source\n            value: '{{{{ inputs.parameters.source }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: seatclassavailability\n        template: seatclassavailability\n        dependencies:\n        - checkflights\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{{{ tasks.checkflights.result }}}}'\n      - name: bestseatclass\n        template: bestseatclass\n        dependencies:\n        - seatclassavailability\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{{{ tasks.seatclassavailability.result }}}}'\n  - name: checkflights\n    inputs:\n      parameters:\n      - name: source\n      - name: destination\n    http:\n      url: <checkflights_api_url>\n      method: GET\n  - name: seatclassavailability\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: <seatclassavailability_api_url>\n      method: GET\n  - name: bestseatclass\n    inputs:\n      parameters:\n      - name: seat_classes\n    http:\n      url: <bestseatclass_api_url>\n      method: GET"
  },
  {
    "Id": 967,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-259-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{{{ inputs.parameters.book_information }}}}'\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: 'appropriate/curl'\n      command: ['sh', '-c']\n      args: ['curl -X GET \"http://api.example.com/findnearestbookstore?city={{inputs.parameters.city}}\"']\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    container:\n      image: 'appropriate/curl'\n      command: ['sh', '-c']\n      args: ['curl -X GET \"http://api.example.com/findbookstore?book_information={{inputs.parameters.book_information}}\"']"
  },
  {
    "Id": 971,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-999-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemprice\n        template: getitemprice\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{{{ inputs.parameters.item_id }}}}'\n      - name: converttocurrency\n        template: converttocurrency\n        dependencies:\n        - getitemprice\n        arguments:\n          parameters:\n          - name: Price\n            value: '{{{{ tasks.getitemprice.result }}}}'\n          - name: Currency\n            value: '{{{{ inputs.parameters.currency }}}}'\n  - name: getitemprice\n    inputs:\n      parameters:\n      - name: item_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100.0\"] # Simulating the API call to get the price\n  - name: converttocurrency\n    inputs:\n      parameters:\n      - name: Price\n      - name: Currency\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 13000.0\"] # Simulating the API call to convert currency\n  inputs:\n    parameters:\n    - name: item_id\n    - name: currency"
  },
  {
    "Id": 1011,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookdetails\n        template: getbookdetails\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: getauthordata\n        template: getauthordata\n        arguments:\n          parameters:\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n      - name: reviewgenerator\n        template: reviewgenerator\n        dependencies:\n        - getbookdetails\n        - getauthordata\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{{{ tasks.getbookdetails.result }}}}'\n          - name: authorData\n            value: '{{{{ tasks.getauthordata.result }}}}'\n  - name: getbookdetails\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"title\\\": \\\"Pride and Prejudice\\\"}'\"]\n  - name: getauthordata\n    inputs:\n      parameters:\n      - name: author\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"author\\\": \\\"Jane Austen\\\"}'\"]\n  - name: reviewgenerator\n    inputs:\n      parameters:\n      - name: bookdetails\n      - name: authorData\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Generated review for Pride and Prejudice by Jane Austen'\"]\n"
  },
  {
    "Id": 1037,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: occasion\n            value: '{{ inputs.parameters.occasion }}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{ tasks.recommendrecommendrestaurant.result }}'\n          - name: partySize\n            value: '{{ inputs.parameters.partySize }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: occasion\n    container:\n      image: recommendrestaurant:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Recommended Restaurant' > /tmp/output.txt\"]\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    container:\n      image: bookreservation:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation Status' > /tmp/output.txt\"]"
  },
  {
    "Id": 1044,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-409-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcarinfo\n        template: getcarinfo\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{{{ inputs.parameters.car_name }}}}'\n          - name: country\n            value: '{{{{ inputs.parameters.country }}}}'\n      - name: gettaxrate\n        template: gettaxrate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{{{ inputs.parameters.country }}}}'\n      - name: calculateTaxCost\n        template: calculateTaxCost\n        dependencies:\n        - getcarinfo\n        - gettaxrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{{{ tasks.getcarinfo.result.price }}}}'\n          - name: tax_rate\n            value: '{{{{ tasks.gettaxrate.result }}}}'\n  - name: getcarinfo\n    inputs:\n      parameters:\n      - name: car_name\n      - name: country\n    http:\n      url: <CarInfo API URL>\n      method: GET\n  - name: gettaxrate\n    inputs:\n      parameters:\n      - name: country\n    http:\n      url: <CountryTaxRate API URL>\n      method: GET\n  - name: calculateTaxCost\n    inputs:\n      parameters:\n      - name: price\n      - name: tax_rate\n    http:\n      url: <TaxCostCalculator API URL>\n      method: GET"
  },
  {
    "Id": 1061,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findpopulardishes.result }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.recommenditems.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findpopulardishes-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}'\"]\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: recommenditems-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }}'\"]\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    container:\n      image: suggestfood-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.menu }} {{ inputs.parameters.dietary_preferences }}'\"]"
  },
  {
    "Id": 1067,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktickets\n        template: booktickets\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ inputs.parameters.showtime }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print('Booking tickets for', '{{inputs.parameters.movie_name}}', 'at', '{{inputs.parameters.showtime}}', 'for', '{{inputs.parameters.number_of_tickets}}', 'tickets')\"]"
  },
  {
    "Id": 1075,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findroomtype\n        template: findroomtype\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: guestNumber\n            value: '{{{{ inputs.parameters.guestNumber }}}}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - findroomtype\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: number_of_rooms\n            value: '{{{{ tasks.findroomtype.result }}}}'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.check_out_date }}}}'\n  - name: findroomtype\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: guestNumber\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding room type for hotel' $0 'with guest number' $1\"]\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking room in hotel' $0 'from' $2 'to' $3\"]\n  arguments:\n    parameters:\n    - name: hotelname\n      value: '4-star hotel in Seattle'\n    - name: guestNumber\n      value: '5'\n    - name: check_in_date\n      value: '2023-09-15'\n    - name: check_out_date\n      value: '2023-09-22'"
  },
  {
    "Id": 1080,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{{{ inputs.parameters.specialty }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: createappointment\n        template: createappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{{{ tasks.finddoctor.result }}}}'\n          - name: patientId\n            value: '{{{{ inputs.parameters.patientId }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - createappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{{{ tasks.createappointment.result }}}}'\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    container:\n      image: finddoctor-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo finding doctor\"]\n  - name: createappointment\n    inputs:\n      parameters:\n      - name: doctorId\n      - name: patientId\n      - name: date\n      - name: time\n    container:\n      image: createappointment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo creating appointment\"]\n  - name: confirmappointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    container:\n      image: confirmappointment-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo confirming appointment\"]"
  },
  {
    "Id": 1088,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"GET\"\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\""
  },
  {
    "Id": 1093,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendmovie\n        template: recommendmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n      - name: bookmovietickets\n        template: bookmovietickets\n        dependencies:\n        - recommendmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.recommendmovie.result }}}}'\n          - name: show_time\n            value: '{{{{ inputs.parameters.show_time }}}}'\n          - name: seats\n            value: '{{{{ inputs.parameters.seats }}}}'\n  - name: recommendmovie\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Recommended Movie' > /tmp/movie.txt\"]\n  - name: bookmovietickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: show_time\n      - name: seats\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Movie Tickets' > /tmp/booking.txt\"]"
  },
  {
    "Id": 1097,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-flight-status-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightnumber\n        template: getflightnumber\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ inputs.parameters.person_ID }}}}'\n      - name: checkflightstatus\n        template: checkflightstatus\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{{{ tasks.getflightnumber.result }}}}'\n  - name: getflightnumber\n    inputs:\n      parameters:\n      - name: person_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'GetFlightNumber({{inputs.parameters.person_ID}})' > /tmp/output\"]\n  - name: checkflightstatus\n    inputs:\n      parameters:\n      - name: flight_number\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'CheckFlightStatus({{inputs.parameters.flight_number}})' > /tmp/output\"]"
  },
  {
    "Id": 1112,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{{{ inputs.parameters.movieDetails }}}}'\n      - name: resturantnearcinema\n        template: resturantnearcinema\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cinema_name\n            value: '{{{{ tasks.findnearestcinema.result }}}}'\n      - name: makerestaurantreservation\n        template: makerestaurantreservation\n        dependencies:\n        - resturantnearcinema\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ tasks.resturantnearcinema.result }}}}'\n  - name: findnearestcinema\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Finding nearest cinema for {{inputs.parameters.movieDetails}}\"]\n  - name: resturantnearcinema\n    inputs:\n      parameters:\n      - name: city\n      - name: cinema_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Finding restaurant near {{inputs.parameters.cinema_name}} in {{inputs.parameters.city}}\"]\n  - name: makerestaurantreservation\n    inputs:\n      parameters:\n      - name: restaurant\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Making reservation at {{inputs.parameters.restaurant}}\"]"
  },
  {
    "Id": 1117,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reading-time-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbooktitle\n        template: getbooktitle\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{{{ inputs.parameters.ISBN }}}}'\n      - name: getpagecount\n        template: getpagecount\n        dependencies:\n        - getbooktitle\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{{{ tasks.getbooktitle.result }}}}'\n      - name: readingtime\n        template: readingtime\n        dependencies:\n        - getpagecount\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{{{ tasks.getpagecount.result }}}}'\n  - name: getbooktitle\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Book Title' # Replace with actual API call\"]\n  - name: getpagecount\n    inputs:\n      parameters:\n      - name: Title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 300 # Replace with actual API call\"]\n  - name: readingtime\n    inputs:\n      parameters:\n      - name: Pages\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '10 hours' # Replace with actual API call\"]"
  },
  {
    "Id": 1118,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://api.weather.com/v3/wx/conditions/current?city={{{{ inputs.parameters.city }}}}&apiKey=your_api_key\"\n      method: GET\n  - name: findclothes\n    http:\n      url: \"http://api.clothing.com/v1/find?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n      value: 'Los Angeles'"
  },
  {
    "Id": 1132,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-route-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdrivingdistance\n        template: getdrivingdistance\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: endPoint\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getdrivingdistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: speed\n            value: '{{{{ inputs.parameters.speed }}}}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - getdrivingdistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: time\n            value: '{{{{ tasks.calculatetime.result }}}}'\n  - name: getdrivingdistance\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    container:\n      image: myapi/getdrivingdistance\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'distance'\"]\n  - name: calculatetime\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    container:\n      image: myapi/calculatetime\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'time'\"]\n  - name: routeplanner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    container:\n      image: myapi/routeplanner\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'route'\"]\n  arguments:\n    parameters:\n    - name: origin\n      value: 'New York'\n    - name: destination\n      value: 'Washington D.C.'\n    - name: speed\n      value: '60'"
  },
  {
    "Id": 1165,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchstockdata\n        template: fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{{{ inputs.parameters.stock_symbol }}}}'\n      - name: basicdataanalysis\n        template: basicdataanalysis\n        dependencies:\n        - fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{{{ tasks.fetchstockdata.result }}}}'\n      - name: generatereport\n        template: generatereport\n        dependencies:\n        - basicdataanalysis\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{{{ tasks.basicdataanalysis.result }}}}'\n          - name: template\n            value: '{{{{ inputs.parameters.template }}}}'\n  - name: fetchstockdata\n    inputs:\n      parameters:\n      - name: stock_symbol\n    container:\n      image: stock-data-fetcher\n      command: [\"sh\", \"-c\"]\n      args: [\"FetchStockData('{{{{ inputs.parameters.stock_symbol }}}}')\"]\n  - name: basicdataanalysis\n    inputs:\n      parameters:\n      - name: stock_data\n    container:\n      image: stock-data-analyzer\n      command: [\"sh\", \"-c\"]\n      args: [\"BasicDataAnalysis('{{{{ inputs.parameters.stock_data }}}}')\"]\n  - name: generatereport\n    inputs:\n      parameters:\n      - name: analyzed_data\n      - name: template\n    container:\n      image: report-generator\n      command: [\"sh\", \"-c\"]\n      args: [\"GenerateReport('{{{{ inputs.parameters.analyzed_data }}}}', '{{{{ inputs.parameters.template }}}}')\"]"
  },
  {
    "Id": 1176,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: email\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to get user ID from email\n        def get_user_id(email):\n            return 123  # Mock user ID\n        \n        email = '{{{{ inputs.parameters.email }}}}'\n        print(get_user_id(email))\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to purchase item\n        def purchase_item(user_ID, product_ID, quantity):\n            return \"Purchase Successful\"  # Mock purchase status\n        \n        user_ID = '{{{{ inputs.parameters.user_ID }}}}'\n        product_ID = '{{{{ inputs.parameters.product_ID }}}}'\n        quantity = '{{{{ inputs.parameters.quantity }}}}'\n        print(purchase_item(user_ID, product_ID, quantity))"
  },
  {
    "Id": 1190,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=Tokyo\"\n      method: GET\n  - name: getrecommendedclothing\n    http:\n      url: \"http://api.clothingapi.com/v1/recommend?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET"
  },
  {
    "Id": 1209,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22222-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpricebyid\n        template: getpricebyid\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: converttocurrency\n        template: converttocurrency\n        dependencies:\n        - getpricebyid\n        arguments:\n          parameters:\n          - name: Price\n            value: '{{{{ tasks.getpricebyid.result }}}}'\n          - name: Currency\n            value: '{{{{ inputs.parameters.currency }}}}'\n  - name: getpricebyid\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100.0\"] # Mocked response for the price\n  - name: converttocurrency\n    inputs:\n      parameters:\n      - name: Price\n      - name: Currency\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 150.0\"] # Mocked response for the converted price\n  arguments:\n    parameters:\n    - name: product_id\n      value: '22222'\n    - name: currency\n      value: 'CNY'"
  },
  {
    "Id": 1225,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookflight\n        template: bookflight\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: destination\n            value: 'Tokyo'\n          - name: departure_date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n          - name: return_date\n            value: '{{{{ inputs.parameters.return_date }}}}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - bookflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.bookflight.result }}}}'\n      - name: suggestluggage\n        template: suggestluggage\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: baggage_allowance\n            value: '{{{{ tasks.checkluggageallowance.result }}}}'\n          - name: trip_duration\n            value: '{{{{ inputs.parameters.trip_duration }}}}'\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: departure_date\n      - name: return_date\n    container:\n      image: flight-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking flight from {{inputs.parameters.origin}} to {{inputs.parameters.destination}} on {{inputs.parameters.departure_date}}' && echo 'Flight details' > /tmp/flight_details\"]\n  - name: checkluggageallowance\n    inputs:\n      parameters:\n      - name: flight\n    container:\n      image: luggage-check-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Checking luggage allowance for flight {{inputs.parameters.flight}}' && echo 'Luggage allowance details' > /tmp/luggage_allowance\"]\n  - name: suggestluggage\n    inputs:\n      parameters:\n      - name: baggage_allowance\n      - name: trip_duration\n    container:\n      image: luggage-suggestion-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggesting luggage based on allowance {{inputs.parameters.baggage_allowance}} and trip duration {{inputs.parameters.trip_duration}}' && echo 'Luggage suggestions' > /tmp/luggage_suggestions\"]"
  },
  {
    "Id": 1227,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-purchase-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkavailability\n        template: checkavailability\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{{{ inputs.parameters.cinema }}}}'\n          - name: showtimes\n            value: '{{{{ inputs.parameters.showtimes }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ inputs.parameters.showtime }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: \"http://example.com/checkavailability\"\n      method: \"GET\"\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\""
  },
  {
    "Id": 1236,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbookid\n        template: findbookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - findbookid\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{{{ tasks.findbookid.result }}}}'\n          - name: author_ID\n            value: '{{{{ inputs.parameters.author_ID }}}}'\n  - name: findbookid\n    inputs:\n      parameters:\n      - name: title\n      - name: author\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: locatebook\n    inputs:\n      parameters:\n      - name: book_ID\n      - name: author_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Location: Aisle 3'\"]"
  },
  {
    "Id": 1250,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-01-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchweather\n        template: fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: searchevents\n        template: searchevents\n        dependencies:\n        - fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: planactivities\n        template: planactivities\n        dependencies:\n        - fetchweather\n        - searchevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.fetchweather.result }}}}'\n          - name: events\n            value: '{{{{ tasks.searchevents.result }}}}'\n      - name: bookevent\n        template: bookevent\n        dependencies:\n        - planactivities\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ tasks.planactivities.result }}}}'\n          - name: tickets\n            value: '1'"
  },
  {
    "Id": 1255,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findcinemas\n        template: findcinemas\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: checkshowtimes\n        template: checkshowtimes\n        dependencies:\n        - findcinemas\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{ tasks.findcinemas.result }}'\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findcinemas\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"CinemaFinder --movieDetails '{{ inputs.parameters.movieDetails }}'\"]\n  - name: checkshowtimes\n    inputs:\n      parameters:\n      - name: cinemaLocations\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"ShowtimeCheck --cinemaLocations '{{ inputs.parameters.cinemaLocations }}' --movieDetails '{{ inputs.parameters.movieDetails }}'\"]"
  },
  {
    "Id": 1259,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ inputs.parameters.hotel_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: reservationbooking\n        template: reservationbooking\n        dependencies:\n        - bookhotel\n        - bookrestaurant\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{{{ tasks.bookhotel.result }}}}'\n          - name: restaurantLocations\n            value: '{{{{ tasks.bookrestaurant.result }}}}'\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking hotel $0 on $1\", \"{{{{ inputs.parameters.hotel_name }}}}\", \"{{{{ inputs.parameters.date }}}}\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: restaurant-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking restaurant $0 on $1 at $2\", \"{{{{ inputs.parameters.restaurant_name }}}}\", \"{{{{ inputs.parameters.date }}}}\", \"{{{{ inputs.parameters.time }}}}\"]\n  - name: reservationbooking\n    inputs:\n      parameters:\n      - name: hotelDetails\n      - name: restaurantLocations\n    container:\n      image: reservation-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking reservation with hotel details $0 and restaurant locations $1\", \"{{{{ inputs.parameters.hotelDetails }}}}\", \"{{{{ inputs.parameters.restaurantLocations }}}}\"]"
  },
  {
    "Id": 1267,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location=Miami\"\n      method: GET\n  - name: dresssuggestion\n    http:\n      url: \"http://fashionapi.com/dressSuggestion\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'\n  - name: findclothes\n    http:\n      url: \"http://fashionapi.com/findClothes\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'"
  },
  {
    "Id": 1294,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: verifyweather\n        template: verifyweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.ip_address }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - verifyweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.verifyweather.result }}'\n  - name: verifyweather\n    inputs:\n      parameters:\n      - name: location\n      - name: date\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://weatherapi.com/verify?location={{inputs.parameters.location}}&date={{inputs.parameters.date}}'\"]\n  - name: suggestactivity\n    inputs:\n      parameters:\n      - name: weather_condition\n    container:\n      image: activity-suggestion-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://activityapi.com/suggest?weather={{inputs.parameters.weather_condition}}'\"]"
  },
  {
    "Id": 1298,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{{{ tasks.getcurrentweather.result }}}}'\n          - name: weather_forecast\n            value: '{{{{ tasks.getweatherforecast.result }}}}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print(requests.get(f'https://api.weather.com/v3/wx/conditions/current?city={{{{ inputs.parameters.city }}}}&apiKey=your_api_key').json())\"]\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print(requests.get(f'https://api.weather.com/v3/wx/forecast/daily/7day?city={{{{ inputs.parameters.city }}}}&date={{{{ inputs.parameters.date }}}}&apiKey=your_api_key').json())\"]\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; current = json.loads('{{{{ inputs.parameters.current_weather }}}}'); forecast = json.loads('{{{{ inputs.parameters.weather_forecast }}}}'); print('Comparison result: ', current, forecast)\"]"
  },
  {
    "Id": 1300,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{{{ tasks.getcurrentweather.result }}}}'\n          - name: weather_forecast\n            value: '{{{{ tasks.getweatherforecast.result }}}}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/current?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/forecast?city={{{{ inputs.parameters.city }}}}&date={{{{ inputs.parameters.date }}}}\"\n      method: GET\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: \"http://weatherapi.com/compare?current={{{{ inputs.parameters.current_weather }}}}&forecast={{{{ inputs.parameters.weather_forecast }}}}\"\n      method: GET"
  },
  {
    "Id": 1304,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: nyc-events-dining-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getevents\n        template: getevents\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getevents\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: http://example.com/eventsuggestions\n      method: GET\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: http://example.com/weather\n      method: GET\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    http:\n      url: http://example.com/restaurantrecommend\n      method: GET"
  },
  {
    "Id": 1319,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: recommendoutfit\n        template: recommendoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - recommendoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{{{ tasks.recommendoutfit.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/{{{{ inputs.parameters.city }}}}/tomorrow'\"]\n  - name: getclothingadvice\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: clothing-advice-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://clothingadviceapi.com/advice?weather={{{{ inputs.parameters.weather }}}}'\"]\n  - name: recommendoutfit\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: outfit-recommendation-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://outfitrecommendationapi.com/recommend?weather={{{{ inputs.parameters.weather }}}}'\"]\n  - name: calculatecost\n    inputs:\n      parameters:\n      - name: outfit\n    container:\n      image: cost-calculation-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://costcalculationapi.com/cost?outfit={{{{ inputs.parameters.outfit }}}}'\"]"
  },
  {
    "Id": 1322,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-623-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getroute\n        template: getroute\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{{{ inputs.parameters.origin_location }}}}'\n          - name: destination_location\n            value: '{{{{ inputs.parameters.destination_location }}}}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getroute\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{{{ tasks.getroute.result }}}}'\n          - name: speed\n            value: '{{{{ inputs.parameters.speed }}}}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: distance\n            value: '{{{{ tasks.getroute.result }}}}'\n          - name: time\n            value: '{{{{ tasks.calculatetime.result }}}}'\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'route' > /tmp/route\"]\n  - name: calculatetime\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'time' > /tmp/time\"]\n  - name: routeplanner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'route plan' > /tmp/routeplan\"]"
  },
  {
    "Id": 1351,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-steak-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.city }}}} {{{{ inputs.parameters.cuisine }}}}'\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: restaurantlocation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.city }}}}'\"]\n  inputs:\n    parameters:\n    - name: city\n      value: 'New York City'\n    - name: cuisine\n      value: 'American'"
  },
  {
    "Id": 1354,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-fcbarcelona-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getteaminfo\n        template: getteaminfo\n        arguments:\n          parameters:\n          - name: team_name\n            value: '{{{{ inputs.parameters.team_name }}}}'\n      - name: getschedule\n        template: getschedule\n        dependencies:\n        - getteaminfo\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{{{ tasks.getteaminfo.result }}}}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - getschedule\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{{{ tasks.getschedule.result }}}}'\n  - name: getteaminfo\n    inputs:\n      parameters:\n      - name: team_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'FC Barcelona' > /tmp/team_info\"]\n  - name: getschedule\n    inputs:\n      parameters:\n      - name: team_info\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Schedule for FC Barcelona' > /tmp/game_schedule\"]\n  - name: getticketprice\n    inputs:\n      parameters:\n      - name: game_schedule\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '100' > /tmp/ticket_price\"]"
  },
  {
    "Id": 1359,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookflight\n        template: bookflight\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - bookflight\n        - findhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.bookflight.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.findhotel.result }}}}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{{{ tasks.findhotel.result }}}}'\n          - name: restaurants\n            value: '{{{{ inputs.parameters.restaurants }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - createtravelplan\n        - plantrip\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ inputs.parameters.weather_forecast }}}}'\n          - name: activities\n            value: '{{{{ inputs.parameters.activities }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ inputs.parameters.suggested_restaurant }}}}'\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    container:\n      image: flight-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Flight to $0 on $1 booked'\", \"{{{{ inputs.parameters.destination }}}}\", \"{{{{ inputs.parameters.date }}}}\"]\n  - name: findhotel\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: hotel-finding-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Hotel in $0 found'\", \"{{{{ inputs.parameters.city }}}}\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: travel-plan-creation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Travel plan created with flight $0 and accommodation $1'\", \"{{{{ inputs.parameters.flight }}}}\", \"{{{{ inputs.parameters.accommodation }}}}\"]\n  - name: plantrip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    container:\n      image: trip-planning-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Trip planned with hotel $0 and restaurants $1'\", \"{{{{ inputs.parameters.hotel }}}}\", \"{{{{ inputs.parameters.restaurants }}}}\"]\n  - name: tripplanner\n    inputs:\n      parameters:\n      - name: weather_forecast\n      - name: activities\n      - name: suggested_restaurant\n    container:\n      image: trip-planner-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Trip plan created with weather $0, activities $1, and restaurant $2'\", \"{{{{ inputs.parameters.weather_forecast }}}}\", \"{{{{ inputs.parameters.activities }}}}\", \"{{{{ inputs.parameters.suggested_restaurant }}}}\"]"
  },
  {
    "Id": 1367,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n\n  - name: recommendrestaurant\n    http:\n      url: http://example.com/RestaurantRecommendation\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n    outputs:\n      parameters:\n      - name: restaurant_list\n        valueFrom:\n          jsonPath: '$.restaurant_list'"
  },
  {
    "Id": 1380,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getpopulation\n        template: getpopulation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getcurrentweather\n        - getpopulation\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getcurrentweather.result }}}}'\n          - name: population\n            value: '{{{{ tasks.getpopulation.result }}}}'\n  - name: getcurrentweather\n    http:\n      url: \"http://weatherapi.com/current?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getpopulation\n    http:\n      url: \"http://populationapi.com/population?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: weatherimpactonpopulation\n    http:\n      url: \"http://weatherimpactapi.com/impact\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'\n        population: '{{{{ inputs.parameters.population }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Tokyo'"
  },
  {
    "Id": 1410,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: booksbyauthor\n        template: booksbyauthor\n        dependencies:\n        - getauthorid\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{{{ tasks.getauthorid.result }}}}'\n  - name: getauthorid\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: http://example.com/AuthorOfBook\n      method: GET\n      parameters:\n      - name: book_id\n        value: '{{{{ inputs.parameters.book_title }}}}'\n  - name: booksbyauthor\n    inputs:\n      parameters:\n      - name: author_id\n    http:\n      url: http://example.com/BooksByAuthor\n      method: GET\n      parameters:\n      - name: author_id\n        value: '{{{{ inputs.parameters.author_id }}}}'"
  },
  {
    "Id": 1425,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchfare\n        template: searchfare\n        arguments:\n          parameters:\n          - name: src\n            value: '{{{{ inputs.parameters.src }}}}'\n          - name: dest\n            value: '{{{{ inputs.parameters.dest }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: checkdiscount\n        template: checkdiscount\n        dependencies:\n        - searchfare\n        arguments:\n          parameters:\n          - name: coupon\n            value: '{{{{ inputs.parameters.coupon }}}}'\n          - name: fare_id\n            value: '{{{{ tasks.searchfare.result }}}}'\n      - name: calculatefinalfare\n        template: calculatefinalfare\n        dependencies:\n        - checkdiscount\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{{{ tasks.searchfare.result }}}}'\n          - name: discount_amount\n            value: '{{{{ tasks.checkdiscount.result }}}}'\n  - name: searchfare\n    inputs:\n      parameters:\n      - name: src\n      - name: dest\n      - name: date\n    container:\n      image: searchfare-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.src }} {{ inputs.parameters.dest }} {{ inputs.parameters.date }}\"]\n  - name: checkdiscount\n    inputs:\n      parameters:\n      - name: coupon\n      - name: fare_id\n    container:\n      image: checkdiscount-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.coupon }} {{ inputs.parameters.fare_id }}\"]\n  - name: calculatefinalfare\n    inputs:\n      parameters:\n      - name: fare_id\n      - name: discount_amount\n    container:\n      image: calculatefinalfare-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.fare_id }} {{ inputs.parameters.discount_amount }}\"]"
  },
  {
    "Id": 1459,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: cityDeparture\n            value: '{{{{ inputs.parameters.cityDeparture }}}}'\n          - name: cityArrival\n            value: '{{{{ inputs.parameters.cityArrival }}}}'\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.cityArrival }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - findflight\n        - bookhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.findflight.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.bookhotel.result }}}}'\n      - name: planitinerary\n        template: planitinerary\n        dependencies:\n        - createtravelplan\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.cityArrival }}}}'\n          - name: interests\n            value: '{{{{ inputs.parameters.interests }}}}'\n          - name: flight\n            value: '{{{{ tasks.findflight.result }}}}'\n          - name: hotel\n            value: '{{{{ tasks.bookhotel.result }}}}'\n  - name: findflight\n    inputs:\n      parameters:\n      - name: cityDeparture\n      - name: cityArrival\n    http:\n      url: \"http://example.com/findflight?from={{{{inputs.parameters.cityDeparture}}}}&to={{{{inputs.parameters.cityArrival}}}}\"\n      method: GET\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/bookhotel?city={{{{inputs.parameters.city}}}}\"\n      method: GET\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    http:\n      url: \"http://example.com/createtravelplan?flight={{{{inputs.parameters.flight}}}}&accommodation={{{{inputs.parameters.accommodation}}}}\"\n      method: POST\n  - name: planitinerary\n    inputs:\n      parameters:\n      - name: location\n      - name: interests\n      - name: flight\n      - name: hotel\n    http:\n      url: \"http://example.com/planitinerary?location={{{{inputs.parameters.location}}}}&interests={{{{inputs.parameters.interests}}}}&flight={{{{inputs.parameters.flight}}}}&hotel={{{{inputs.parameters.hotel}}}}\"\n      method: POST"
  },
  {
    "Id": 1509,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: dinnerreservation\n        template: dinnerreservation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ tasks.searchrestaurant.result }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: showdirections\n        template: showdirections\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{{{ inputs.parameters.start_location }}}}'\n          - name: end_location\n            value: '{{{{ tasks.restaurantlocation.result }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\", \"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}' > /tmp/output.txt\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: restaurantlocation-image\n      command: [\"sh\", \"-c\", \"echo '{{ inputs.parameters.city }}' > /tmp/output.txt\"]\n  - name: dinnerreservation\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: time\n    container:\n      image: dinnerreservation-image\n      command: [\"sh\", \"-c\", \"echo '{{ inputs.parameters.restaurant }} {{ inputs.parameters.time }}' > /tmp/output.txt\"]\n  - name: showdirections\n    inputs:\n      parameters:\n      - name: start_location\n      - name: end_location\n    container:\n      image: showdirections-image\n      command: [\"sh\", \"-c\", \"echo '{{ inputs.parameters.start_location }} to {{ inputs.parameters.end_location }}' > /tmp/output.txt\"]"
  },
  {
    "Id": 1532,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        arguments:\n          parameters:\n          - name: location\n            value: 'Times Square'\n      - name: timecalculator\n        template: timecalculator\n        dependencies:\n        - gettrafficupdate\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{{{ tasks.gettrafficupdate.result }}}}'\n          - name: modeOfTransport\n            value: 'bus'\n      - name: fetchnextbus\n        template: fetchnextbus\n        dependencies:\n        - timecalculator\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{{{ tasks.timecalculator.result }}}}'\n          - name: bus_route\n            value: 'Times Square to Wall Street'"
  },
  {
    "Id": 1535,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checktraffic\n        template: checktraffic\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        dependencies:\n        - checktraffic\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.destination }}}}'"
  }
]