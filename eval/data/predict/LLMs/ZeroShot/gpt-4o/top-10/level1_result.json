[
  {
    "Id": 42,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-selection-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.suggestoutfit.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  - name: suggestoutfit\n    http:\n      url: \"http://outfitapi.com/suggestOutfit?weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: planoutfit\n    http:\n      url: \"http://outfitplanner.com/planOutfit?event={{{{ inputs.parameters.event }}}}&outfit={{{{ tasks.suggestoutfit.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: location\n      value: 'Chicago'\n    - name: event\n      value: 'date'"
  },
  {
    "Id": 45,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-outfit-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - dresssuggestion\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.dresssuggestion.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: dresssuggestion\n    http:\n      url: \"http://api.dresssuggestion.com/suggest?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET\n  - name: planoutfit\n    http:\n      url: \"http://api.planoutfit.com/plan?event={{{{ inputs.parameters.event }}}}&outfit={{{{ inputs.parameters.outfit }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Sydney'\n    - name: event\n      value: 'concert'"
  },
  {
    "Id": 51,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-257-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: menudetails\n        template: menudetails\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n  - name: menudetails\n    http:\n      url: \"http://example.com/api/menudetails\"\n      method: \"GET\"\n      parameters:\n      - name: restaurant_name\n        value: '{{{{ inputs.parameters.restaurant_name }}}}'"
  },
  {
    "Id": 52,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findtoprestaurant\n        template: findtoprestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: menudetails\n        template: menudetails\n        dependencies:\n        - findtoprestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findtoprestaurant.result }}}}'\n  - name: findtoprestaurant\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.city }}}}' | some-command-to-call-TopRestaurants-API\"]\n  - name: menudetails\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.restaurant_name }}}}' | some-command-to-call-MenuDetails-API\"]"
  },
  {
    "Id": 54,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: toprestaurant\n        template: toprestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: menudetails\n        template: menudetails\n        dependencies:\n        - toprestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.toprestaurant.result }}}}'\n  - name: toprestaurant\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | TopRestaurants\"]\n  - name: menudetails\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }}' | MenuDetails\"]"
  },
  {
    "Id": 74,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtimes\n        template: getshowtimes\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ inputs.parameters.movie_title }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_title }}}}'\n          - name: showtime\n            value: '{{{{ tasks.getshowtimes.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: getshowtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    http:\n      url: \"http://example.com/getshowtimes\"\n      method: \"GET\"\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookmovieticket\"\n      method: \"POST\""
  },
  {
    "Id": 75,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkavailability\n        template: checkavailability\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{{{ inputs.parameters.cinema }}}}'\n          - name: showtimes\n            value: '{{{{ inputs.parameters.showtimes }}}}'\n      - name: buymovieticket\n        template: buymovieticket\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: theater_name\n            value: '{{{{ inputs.parameters.theater_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: \"http://example.com/checkavailability\"\n      method: \"GET\"\n  - name: buymovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: theater_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/buymovieticket\"\n      method: \"POST\""
  },
  {
    "Id": 79,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkavailability\n        template: checkavailability\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{{{ inputs.parameters.cinema }}}}'\n          - name: showtimes\n            value: '{{{{ inputs.parameters.showtimes }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ inputs.parameters.showtime }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: cinema\n      - name: showtimes\n    http:\n      url: \"http://example.com/checkavailability\"\n      method: \"GET\"\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookmovieticket\"\n      method: \"POST\""
  },
  {
    "Id": 95,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n      - name: hotelbooking\n        template: hotelbooking\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.end_date }}}}'\n      - name: reservinghotel\n        template: reservehotel\n        dependencies:\n        - hotelbooking\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: weather_status\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n      - name: besttraveltime\n        template: besttraveltime\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.checkweather.result }}}}'\n          - name: attraction\n            value: 'sightseeing'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - searchflight\n        - reservinghotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: hotel\n            value: '{{{{ tasks.reservinghotel.result }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flight'\"]\n  - name: hotelbooking\n    inputs:\n      parameters:\n      - name: destination\n      - name: check_in_date\n      - name: check_out_date\n    container:\n      image: hotelbooking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'booking hotel'\"]\n  - name: reservehotel\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: weather_status\n    container:\n      image: reservehotel-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'reserving hotel'\"]\n  - name: checkweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: checkweather-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'checking weather'\"]\n  - name: besttraveltime\n    inputs:\n      parameters:\n      - name: weather_condition\n      - name: attraction\n    container:\n      image: besttraveltime-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'calculating best travel time'\"]\n  - name: booktrip\n    inputs:\n      parameters:\n      - name: flight\n      - name: hotel\n    container:\n      image: booktrip-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'booking trip'\"]"
  },
  {
    "Id": 102,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelavailability\n        template: gethotelavailability\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: dates\n            value: '{{{{ inputs.parameters.dates }}}}'\n      - name: reservehotel\n        template: reservehotel\n        dependencies:\n        - gethotelavailability\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: weather_status\n            value: 'clear'\n      - name: hotelbooking\n        template: hotelbooking\n        dependencies:\n        - reservehotel\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.check_out_date }}}}'\n  - name: gethotelavailability\n    inputs:\n      parameters:\n      - name: city\n      - name: dates\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Checking hotel availability'\"]\n  - name: reservehotel\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: weather_status\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reserving hotel'\"]\n  - name: hotelbooking\n    inputs:\n      parameters:\n      - name: destination\n      - name: check_in_date\n      - name: check_out_date\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking hotel'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Berlin'\n    - name: dates\n      value: '20th November to 25th November'\n    - name: check_in_date\n      value: '20th November'\n    - name: check_out_date\n      value: '25th November'"
  },
  {
    "Id": 132,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-apple-price-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findneareststore\n        template: findneareststore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: store_type\n            value: '{{{{ inputs.parameters.store_type }}}}'\n      - name: getproductprice\n        template: getproductprice\n        dependencies:\n        - findneareststore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{{{ tasks.findneareststore.result }}}}'\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n  - name: findneareststore\n    inputs:\n      parameters:\n      - name: city\n      - name: store_type\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.store_type }}'\"]\n  - name: getproductprice\n    inputs:\n      parameters:\n      - name: store_name\n      - name: product_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.store_name }} {{ inputs.parameters.product_name }}'\"]"
  },
  {
    "Id": 134,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findneareststore\n        template: findneareststore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: store_type\n            value: '{{{{ inputs.parameters.store_type }}}}'\n      - name: productpricequery\n        template: productpricequery\n        dependencies:\n        - findneareststore\n        arguments:\n          parameters:\n          - name: store_location\n            value: '{{{{ tasks.findneareststore.result }}}}'\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n  - name: findneareststore\n    inputs:\n      parameters:\n      - name: city\n      - name: store_type\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"Finding nearest store in {{inputs.parameters.city}} for {{inputs.parameters.store_type}}\"']\n  - name: productpricequery\n    inputs:\n      parameters:\n      - name: store_location\n      - name: product_name\n    container:\n      image: 'appropriate-docker-image'\n      command: ['sh', '-c']\n      args: ['echo \"Querying price for {{inputs.parameters.product_name}} at {{inputs.parameters.store_location}}\"']"
  },
  {
    "Id": 193,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-game-availability-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkproductavailability\n        template: checkproductavailability\n        arguments:\n          parameters:\n          - name: store_address\n            value: '{{{{ inputs.parameters.store_address }}}}'\n          - name: product_name\n            value: 'Cyberpunk 2077'\n  - name: checkproductavailability\n    inputs:\n      parameters:\n      - name: store_address\n      - name: product_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Checking availability of {{inputs.parameters.product_name}} at {{inputs.parameters.store_address}}\"]"
  },
  {
    "Id": 194,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone13-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ tasks.getproductid.result }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo true\"]\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo purchased\"]"
  },
  {
    "Id": 196,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-stock-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkstock\n        template: checkstock\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n  - name: checkstock\n    inputs:\n      parameters:\n      - name: product_ID\n    container:\n      image: stock-checker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"CheckStock {{ inputs.parameters.product_ID }}\"]"
  },
  {
    "Id": 198,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-548-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkproductavailability\n        template: checkproductavailability\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - checkproductavailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_id }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: checkproductavailability\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: 'appropriate-image-for-checkproductavailability'\n      command: ['sh', '-c']\n      args: ['echo Checking availability for product ID {{inputs.parameters.product_id}}']\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: 'appropriate-image-for-purchaseitem'\n      command: ['sh', '-c']\n      args: ['echo Purchasing product ID {{inputs.parameters.product_ID}} for user ID {{inputs.parameters.user_ID}} with quantity {{inputs.parameters.quantity}}']"
  },
  {
    "Id": 199,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone13-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ tasks.getproductid.result }}}}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo true\"]\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Purchase Successful'\"]"
  },
  {
    "Id": 200,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-459-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - title2isbn\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'"
  },
  {
    "Id": 202,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-ps5-availability-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkproductavailability\n        template: checkproductavailability\n        arguments:\n          parameters:\n          - name: store_address\n            value: '{{{{ inputs.parameters.store_address }}}}'\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n  - name: checkproductavailability\n    inputs:\n      parameters:\n      - name: store_address\n      - name: product_name\n    container:\n      image: 'appropriate/curl'\n      command: ['sh', '-c']\n      args: ['echo Checking availability of {{ inputs.parameters.product_name }} at {{ inputs.parameters.store_address }}']"
  },
  {
    "Id": 205,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-availability-check-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmoviedetails\n        template: getmoviedetails\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - getmoviedetails\n        arguments:\n          parameters:\n          - name: movie_info\n            value: '{{{{ tasks.getmoviedetails.result }}}}'\n  - name: getmoviedetails\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: appropriate-curl-image\n      command: [\"curl\"]\n      args: [\"-X\", \"GET\", \"http://api.example.com/getmoviedetails?movie_name={{{{ inputs.parameters.movie_name }}}}\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: movie_info\n    container:\n      image: appropriate-curl-image\n      command: [\"curl\"]\n      args: [\"-X\", \"POST\", \"http://api.example.com/checkavailability\", \"-d\", \"movie_info={{{{ inputs.parameters.movie_info }}}}\"]"
  },
  {
    "Id": 206,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-575-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: storelocator\n        template: storelocator\n        arguments:\n          parameters:\n          - name: productDetails\n            value: '{{{{ inputs.parameters.productDetails }}}}'\n      - name: checkproductavailability\n        template: checkproductavailability\n        dependencies:\n        - storelocator\n        arguments:\n          parameters:\n          - name: store_address\n            value: '{{{{ tasks.storelocator.result }}}}'\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n  - name: storelocator\n    inputs:\n      parameters:\n      - name: productDetails\n    container:\n      image: storelocator-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.productDetails }}' | storelocator\"]\n  - name: checkproductavailability\n    inputs:\n      parameters:\n      - name: store_address\n      - name: product_name\n    container:\n      image: checkproductavailability-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.store_address }} {{ inputs.parameters.product_name }}' | checkproductavailability\"]"
  },
  {
    "Id": 251,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethoteldetails\n        template: gethoteldetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookroom\n        template: bookroom\n        dependencies:\n        - gethoteldetails\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.gethoteldetails.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: number_of_nights\n            value: '{{{{ inputs.parameters.number_of_nights }}}}'\n  - name: gethoteldetails\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/gethoteldetails\"\n      method: \"GET\"\n  - name: bookroom\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    http:\n      url: \"http://example.com/bookroom\"\n      method: \"POST\""
  },
  {
    "Id": 253,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelavailability\n        template: gethotelavailability\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: dates\n            value: '{{{{ inputs.parameters.dates }}}}'\n      - name: bookroom\n        template: bookroom\n        dependencies:\n        - gethotelavailability\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.gethotelavailability.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: number_of_nights\n            value: '{{{{ inputs.parameters.number_of_nights }}}}'\n  - name: gethotelavailability\n    inputs:\n      parameters:\n      - name: city\n      - name: dates\n    http:\n      url: \"http://example.com/gethotelavailability\"\n      method: \"GET\"\n  - name: bookroom\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    http:\n      url: \"http://example.com/bookroom\"\n      method: \"POST\""
  },
  {
    "Id": 255,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookroom\n        template: bookroom\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: number_of_nights\n            value: '{{{{ inputs.parameters.number_of_nights }}}}'\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: \"GET\"\n  - name: bookroom\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n      - name: number_of_nights\n    http:\n      url: \"http://example.com/bookroom\"\n      method: \"POST\""
  },
  {
    "Id": 263,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendclothing\n    http:\n      url: \"http://clothingapi.com/recommendClothing\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'"
  },
  {
    "Id": 264,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: dresssuggestion\n    http:\n      url: \"http://dresssuggestionapi.com/suggestDress\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.checkweather.result }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Sydney'\n    - name: date\n      value: 'March 20th'"
  },
  {
    "Id": 265,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-93-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbook\n        template: findbook\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n      - name: getsummary\n        template: getsummary\n        dependencies:\n        - findbook\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.findbook.result }}}}'\n  - name: findbook\n    inputs:\n      parameters:\n      - name: genre\n      - name: author\n      - name: year\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Finding book...\"]\n  - name: getsummary\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Getting summary...\"]"
  },
  {
    "Id": 267,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1996-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbook\n        template: findbook\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n      - name: getsummary\n        template: getsummary\n        dependencies:\n        - findbook\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.findbook.result }}}}'\n  - name: findbook\n    inputs:\n      parameters:\n      - name: genre\n      - name: author\n      - name: year\n    http:\n      url: http://example.com/api/bookfinder\n      method: GET\n      parameters:\n      - name: genre\n        value: '{{{{ inputs.parameters.genre }}}}'\n      - name: author\n        value: '{{{{ inputs.parameters.author }}}}'\n      - name: year\n        value: '{{{{ inputs.parameters.year }}}}'\n  - name: getsummary\n    inputs:\n      parameters:\n      - name: book_name\n    http:\n      url: http://example.com/api/booksummary\n      method: GET\n      parameters:\n      - name: book_name\n        value: '{{{{ inputs.parameters.book_name }}}}'"
  },
  {
    "Id": 269,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1934-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbooktitle\n        template: getbooktitle\n        arguments:\n          parameters:\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n      - name: booksummary\n        template: booksummary\n        dependencies:\n        - getbooktitle\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.getbooktitle.result }}}}'\n  - name: getbooktitle\n    inputs:\n      parameters:\n      - name: author\n      - name: genre\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Murder on the Orient Express'\"]\n  - name: booksummary\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Summary of the book'\"]"
  },
  {
    "Id": 271,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1920-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbook\n        template: findbook\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n      - name: getsummary\n        template: getsummary\n        dependencies:\n        - findbook\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.findbook.result }}}}'\n  - name: findbook\n    inputs:\n      parameters:\n      - name: genre\n      - name: author\n      - name: year\n    http:\n      url: http://example.com/findbook\n      method: GET\n  - name: getsummary\n    inputs:\n      parameters:\n      - name: book_name\n    http:\n      url: http://example.com/getsummary\n      method: GET"
  },
  {
    "Id": 273,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-93-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbook\n        template: findbook\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n      - name: getsummary\n        template: getsummary\n        dependencies:\n        - findbook\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.findbook.result }}}}'\n  - name: findbook\n    inputs:\n      parameters:\n      - name: genre\n      - name: author\n      - name: year\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.genre }} {{ inputs.parameters.author }} {{ inputs.parameters.year }}'\"]\n  - name: getsummary\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.book_name }}'\"]"
  },
  {
    "Id": 274,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1983-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbook\n        template: findbook\n        arguments:\n          parameters:\n          - name: genre\n            value: 'horror'\n          - name: author\n            value: 'Stephen King'\n          - name: year\n            value: '1983'\n      - name: getbooksummary\n        template: getbooksummary\n        dependencies:\n        - findbook\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ tasks.findbook.result }}}}'\n  - name: findbook\n    inputs:\n      parameters:\n      - name: genre\n      - name: author\n      - name: year\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.genre }} {{ inputs.parameters.author }} {{ inputs.parameters.year }}'\"]\n  - name: getbooksummary\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Summary for {{ inputs.parameters.book_name }}'\"]"
  },
  {
    "Id": 282,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmoviereviews\n        template: getmoviereviews\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n  - name: getmoviereviews\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: my-movie-review-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Fetching reviews for {{inputs.parameters.movie_name}}\"]"
  },
  {
    "Id": 284,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmoviename\n        template: getmoviename\n        arguments:\n          parameters:\n          - name: director\n            value: 'Quentin Tarantino'\n          - name: release_year\n            value: '2012'\n      - name: moviereview\n        template: moviereview\n        dependencies:\n        - getmoviename\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.getmoviename.result }}}}'\n  - name: getmoviename\n    http:\n      url: http://example.com/getmoviename\n      method: GET\n      parameters:\n      - name: director\n        value: '{{{{ inputs.parameters.director }}}}'\n      - name: release_year\n        value: '{{{{ inputs.parameters.release_year }}}}'\n  - name: moviereview\n    http:\n      url: http://example.com/moviereview\n      method: GET\n      parameters:\n      - name: movie_name\n        value: '{{{{ inputs.parameters.movie_name }}}}'"
  },
  {
    "Id": 287,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestmovie\n        template: suggestmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: director\n            value: '{{{{ inputs.parameters.director }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n      - name: moviereview\n        template: moviereview\n        dependencies:\n        - suggestmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.suggestmovie.result }}}}'\n  - name: suggestmovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: director\n      - name: year\n    container:\n      image: my-movie-suggestion-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.genre }} {{ inputs.parameters.director }} {{ inputs.parameters.year }}'\"]\n  - name: moviereview\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: my-movie-review-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.movie_name }}'\"]"
  },
  {
    "Id": 291,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-details-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: findcheapestflight\n        template: findcheapestflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flights\n            value: '{{{{ tasks.searchflight.result }}}}'\n      - name: getflightdetails\n        template: getflightdetails\n        dependencies:\n        - findcheapestflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{{{ tasks.findcheapestflight.result }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flights' && sleep 1\"]\n  - name: findcheapestflight\n    inputs:\n      parameters:\n      - name: flights\n    container:\n      image: findcheapestflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'finding cheapest flight' && sleep 1\"]\n  - name: getflightdetails\n    inputs:\n      parameters:\n      - name: flight_id\n    container:\n      image: getflightdetails-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'getting flight details' && sleep 1\"]"
  },
  {
    "Id": 292,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-details-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: searchflight\n    http:\n      url: <API_URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"from_location\": \"{{{{ inputs.parameters.from_location }}}}\",\n          \"to_location\": \"{{{{ inputs.parameters.to_location }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\"\n        }\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    outputs:\n      parameters:\n      - name: flight_details\n        valueFrom:\n          jsonPath: \"$.flight_details\""
  },
  {
    "Id": 294,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-details-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: flightdetails\n        template: flightdetails\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: departure_date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Searching flight from {{inputs.parameters.from_location}} to {{inputs.parameters.to_location}} on {{inputs.parameters.date}}'\"]\n  - name: flightdetails\n    inputs:\n      parameters:\n      - name: destination\n      - name: departure_date\n    container:\n      image: flightdetails-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Getting flight details for {{inputs.parameters.destination}} on {{inputs.parameters.departure_date}}'\"]"
  },
  {
    "Id": 296,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: dresssuggestion\n    http:\n      url: \"http://api.com/dressSuggestion\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ inputs.parameters.weather }}}}'\n  - name: findclothes\n    http:\n      url: \"http://api.com/findClothes\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ inputs.parameters.weather }}}}'\n  - name: outfitrecommender\n    http:\n      url: \"http://api.com/outfitRecommender\"\n      method: \"POST\"\n      parameters:\n      - name: weather_condition\n        value: '{{{{ inputs.parameters.weather_condition }}}}'\n  inputs:\n    parameters:\n    - name: city\n    - name: date"
  },
  {
    "Id": 297,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: getclothingadvice\n    http:\n      url: \"http://clothingapi.com/getClothingAdvice\"\n      method: \"GET\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Sydney'\n    - name: date\n      value: 'April 21st'"
  },
  {
    "Id": 298,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: getdestinationtraveladvice\n        template: getdestinationtraveladvice\n        dependencies:\n        - getrecommendedclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: clothing\n            value: '{{{{ tasks.getrecommendedclothing.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: getrecommendedclothing\n    http:\n      url: \"http://clothingapi.com/getRecommendedClothing\"\n      method: \"GET\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  - name: getdestinationtraveladvice\n    http:\n      url: \"http://traveladviceapi.com/getDestinationTravelAdvice\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: clothing\n        value: '{{{{ tasks.getrecommendedclothing.result }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'London'\n    - name: date\n      value: '2023-05-01'"
  },
  {
    "Id": 299,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-663-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - outfitrecommender\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.outfitrecommender.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: outfitrecommender\n    http:\n      url: \"http://outfitapi.com/recommendOutfit\"\n      method: \"POST\"\n      parameters:\n      - name: weather_condition\n        value: '{{{{ tasks.getweather.result }}}}'\n  - name: planoutfit\n    http:\n      url: \"http://outfitapi.com/planOutfit\"\n      method: \"POST\"\n      parameters:\n      - name: event\n        value: '{{{{ inputs.parameters.event }}}}'\n      - name: outfit\n        value: '{{{{ tasks.outfitrecommender.result }}}}'"
  },
  {
    "Id": 300,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendclothing\n    http:\n      url: \"http://clothingapi.com/recommendClothing\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ inputs.parameters.weather }}}}'"
  },
  {
    "Id": 303,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: attire-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendattire\n        template: recommendattire\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - recommendattire\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.recommendattire.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: GET\n      parameters:\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendattire\n    http:\n      url: \"http://attireapi.com/recommendAttire\"\n      method: GET\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  - name: planoutfit\n    http:\n      url: \"http://outfitapi.com/planOutfit\"\n      method: GET\n      parameters:\n      - name: event\n        value: '{{{{ inputs.parameters.event }}}}'\n      - name: outfit\n        value: '{{{{ tasks.recommendattire.result }}}}'\n  arguments:\n    parameters:\n    - name: location\n      value: 'New York'\n    - name: date\n      value: '2023-07-04'\n    - name: event\n      value: '4th of July'"
  },
  {
    "Id": 305,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: getrecommendedclothing\n    http:\n      url: \"http://clothingapi.com/getRecommendedClothing\"\n      method: \"GET\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  inputs:\n    parameters:\n    - name: city\n    - name: date"
  },
  {
    "Id": 339,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: findrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant in {{inputs.parameters.city}} with cuisine {{inputs.parameters.cuisine}}' && echo 'Best Italian Restaurant' > /tmp/output\"]\n      volumeMounts:\n      - name: workdir\n        mountPath: /tmp\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: bookrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}' && echo 'Reservation Confirmed' > /tmp/output\"]\n      volumeMounts:\n      - name: workdir\n        mountPath: /tmp\n    outputs:\n      parameters:\n      - name: reservation_status\n        valueFrom:\n          path: /tmp/output\n  volumes:\n  - name: workdir\n    emptyDir: {}"
  },
  {
    "Id": 344,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: your-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking restaurant {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}\"]"
  },
  {
    "Id": 345,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: city\n    container:\n      image: findrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant for {{inputs.parameters.cuisine}} in {{inputs.parameters.city}}' && echo 'Best Chinese Restaurant'\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: booktable-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking table at {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}' && echo 'Booking Confirmed'\"]\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'Chinese'\n    - name: city\n      value: 'New York City'\n    - name: date\n      value: '{{{{ inputs.parameters.date }}}}'\n    - name: time\n      value: '12:00 PM'"
  },
  {
    "Id": 346,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: 'French'\n          - name: city\n            value: 'Paris'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    http:\n      url: \"http://restaurantapi.example.com/find\"\n      method: \"GET\"\n      parameters:\n      - name: cuisine\n        value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: booktable\n    http:\n      url: \"http://restaurantapi.example.com/book\"\n      method: \"POST\"\n      parameters:\n      - name: restaurant_name\n        value: '{{{{ inputs.parameters.restaurant_name }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n      - name: time\n        value: '{{{{ inputs.parameters.time }}}}'\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'French'\n    - name: city\n      value: 'Paris'\n    - name: date\n      value: '{{{{ inputs.parameters.date }}}}'\n    - name: time\n      value: '{{{{ inputs.parameters.time }}}}'"
  },
  {
    "Id": 347,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: table-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktable\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: your-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking table at {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}\"]"
  },
  {
    "Id": 348,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktable\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: booktable\n    http:\n      url: \"http://example.com/booktable\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{{{ inputs.parameters.restaurant_name }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\",\n          \"time\": \"{{{{ inputs.parameters.time }}}}\"\n        }\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: \"Japanese Restaurant\"\n    - name: date\n      value: \"{{{{ inputs.parameters.date }}}}\"\n    - name: time\n      value: \"{{{{ inputs.parameters.time }}}}\""
  },
  {
    "Id": 349,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: bookrestaurant\n    http:\n      url: \"http://example.com/bookrestaurant\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{{{ inputs.parameters.restaurant_name }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\",\n          \"time\": \"{{{{ inputs.parameters.time }}}}\"\n        }\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: \"Mexican Restaurant\"\n    - name: date\n      value: \"{{{{ inputs.parameters.date }}}}\"\n    - name: time\n      value: \"Breakfast\""
  },
  {
    "Id": 351,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vegan-japanese-meal-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrecipe\n        template: searchrecipe\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: diet\n            value: '{{{{ inputs.parameters.diet }}}}'\n          - name: ingredients\n            value: '{{{{ inputs.parameters.ingredients }}}}'\n      - name: getrecipeinstructions\n        template: getrecipeinstructions\n        dependencies:\n        - searchrecipe\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ tasks.searchrecipe.result }}}}'\n  - name: searchrecipe\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: diet\n      - name: ingredients\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Searching for recipe' && exit 0\"]\n  - name: getrecipeinstructions\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Getting recipe instructions' && exit 0\"]"
  },
  {
    "Id": 352,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-394-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrecipe\n        template: findrecipe\n        arguments:\n          parameters:\n          - name: dish\n            value: '{{{{ inputs.parameters.dish }}}}'\n      - name: getrecipeinstructions\n        template: getrecipeinstructions\n        dependencies:\n        - findrecipe\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ tasks.findrecipe.result }}}}'\n  - name: findrecipe\n    inputs:\n      parameters:\n      - name: dish\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print(requests.get('http://api.example.com/findrecipe', params={'dish': '{{{{ inputs.parameters.dish }}}}'}).json())\"]\n  - name: getrecipeinstructions\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print(requests.get('http://api.example.com/getrecipeinstructions', params={'recipe_name': '{{{{ inputs.parameters.recipe_name }}}}'}).json())\"]"
  },
  {
    "Id": 355,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-394-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrecipe\n        template: findrecipe\n        arguments:\n          parameters:\n          - name: dish\n            value: '{{{{ inputs.parameters.dish }}}}'\n      - name: getrecipeinstructions\n        template: getrecipeinstructions\n        dependencies:\n        - findrecipe\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ tasks.findrecipe.result }}}}'\n  - name: findrecipe\n    inputs:\n      parameters:\n      - name: dish\n    container:\n      image: python:3.8\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.dish }}'\"]\n  - name: getrecipeinstructions\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: python:3.8\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.recipe_name }}'\"]"
  },
  {
    "Id": 356,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vegan-chinese-meal-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrecipe\n        template: searchrecipe\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: diet\n            value: '{{{{ inputs.parameters.diet }}}}'\n          - name: ingredients\n            value: '{{{{ inputs.parameters.ingredients }}}}'\n      - name: getrecipeinstructions\n        template: getrecipeinstructions\n        dependencies:\n        - searchrecipe\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ tasks.searchrecipe.result }}}}'\n  - name: searchrecipe\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: diet\n      - name: ingredients\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Searching for recipe' && exit 0\"]\n  - name: getrecipeinstructions\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Getting recipe instructions' && exit 0\"]"
  },
  {
    "Id": 387,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.suggestoutfit.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n  - name: suggestoutfit\n    http:\n      url: \"http://outfitapi.com/suggestOutfit\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  - name: planoutfit\n    http:\n      url: \"http://outfitapi.com/planOutfit\"\n      method: \"POST\"\n      parameters:\n      - name: event\n        value: '{{{{ inputs.parameters.event }}}}'\n      - name: outfit\n        value: '{{{{ tasks.suggestoutfit.result }}}}'\n  arguments:\n    parameters:\n    - name: date\n      value: '2023-01-22'\n    - name: location\n      value: 'San Antonio'\n    - name: event\n      value: 'casual day out'"
  },
  {
    "Id": 389,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: attire-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendattire\n        template: recommendattire\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendattire\n    http:\n      url: \"http://attireapi.com/recommendAttire\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.checkweather.result }}}}'\n  arguments:\n    parameters:\n    - name: location\n      value: 'Tucson'\n    - name: date\n      value: 'October 22nd'"
  },
  {
    "Id": 572,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-789-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'"
  },
  {
    "Id": 573,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-112-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.title2isbn.result }}}}'"
  },
  {
    "Id": 577,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.city2 }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo user789\"]\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Flight details for {{inputs.parameters.city1}} to {{inputs.parameters.city2}} on {{inputs.parameters.date}}'\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking flight with details {{inputs.parameters.flight_details}} and class {{inputs.parameters.preferred_flight_class}}'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'user789'\n    - name: city2\n      value: 'London'\n    - name: date\n      value: '2022-07-07'\n    - name: preferred_flight_class\n      value: 'Economy'"
  },
  {
    "Id": 578,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to get user ID\n        print('user321')\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to search flight\n        print('Flight details for Tokyo on September 9th, 2022')\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to book flight\n        print('Booking status: Confirmed')"
  },
  {
    "Id": 621,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-98765-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findproductid\n        template: findproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: searchproduct\n        template: searchproduct\n        dependencies:\n        - findproductid\n        arguments:\n          parameters:\n          - name: productId\n            value: '{{{{ tasks.findproductid.result }}}}'\n      - name: createshoppingcart\n        template: createshoppingcart\n        dependencies:\n        - searchproduct\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{{{ inputs.parameters.user_id }}}}'\n          - name: product_info\n            value: '{{{{ tasks.searchproduct.result }}}}'\n  - name: findproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'FindProductId'\"]\n  - name: searchproduct\n    inputs:\n      parameters:\n      - name: productId\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'SearchProduct'\"]\n  - name: createshoppingcart\n    inputs:\n      parameters:\n      - name: user_id\n      - name: product_info\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'CreateShoppingCart'\"]\n  inputs:\n    parameters:\n    - name: product_name\n    - name: user_id"
  },
  {
    "Id": 622,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45678-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findproductid\n        template: findproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - findproductid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.findproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ inputs.parameters.user_id }}}}'\n          - name: quantity\n            value: '1'\n  - name: findproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding product ID for {{inputs.parameters.product_name}}'\"]\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Adding product {{inputs.parameters.product_ID}} to cart for user {{inputs.parameters.customer_ID}} with quantity {{inputs.parameters.quantity}}'\"]"
  },
  {
    "Id": 692,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{{{ inputs.parameters.customer_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: customer_name\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"]\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Product added to cart'\"]"
  },
  {
    "Id": 785,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: indoor-activity-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findindooractivities\n        template: findindooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: bookactivity\n        template: bookactivity\n        dependencies:\n        - findindooractivities\n        arguments:\n          parameters:\n          - name: activity_name\n            value: '{{{{ tasks.findindooractivities.result }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n  - name: findindooractivities\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findindooractivities-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | findindooractivities\"]\n  - name: bookactivity\n    inputs:\n      parameters:\n      - name: activity_name\n      - name: city\n    container:\n      image: bookactivity-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.activity_name }} {{ inputs.parameters.city }}' | bookactivity\"]"
  },
  {
    "Id": 787,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearbyhotels\n        template: findnearbyhotels\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - findnearbyhotels\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.findnearbyhotels.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: findnearbyhotels\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-hotel-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | find-nearby-hotels\"]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: my-hotel-booking-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.hotel_name }} {{ inputs.parameters.date }}' | book-hotel\"]"
  },
  {
    "Id": 790,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: reservehotel\n        template: reservehotel\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: weather_status\n            value: '{{{{ tasks.findhotel.result }}}}'\n  - name: findhotel\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/findhotel\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: reservehotel\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: weather_status\n    http:\n      url: \"http://example.com/reservehotel\"\n      method: \"POST\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n      - name: weather_status\n        value: '{{{{ inputs.parameters.weather_status }}}}'"
  },
  {
    "Id": 816,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-ingredients-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantname\n        template: getrestaurantname\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - getrestaurantname\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurantname.result }}}}'\n  - name: getrestaurantname\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Indian Restaurant in {{ inputs.parameters.city }}'\"]\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Ingredients for {{ inputs.parameters.dish_name }} from {{ inputs.parameters.restaurant_name }}'\"]"
  },
  {
    "Id": 817,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-258-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: foodingredients\n        template: foodingredients\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: my-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"dish_name\\\": \\\"{{inputs.parameters.dish_name}}\\\", \\\"restaurant_name\\\": \\\"{{inputs.parameters.restaurant_name}}\\\"}' http://foodingredients.api\"]"
  },
  {
    "Id": 818,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-258-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: foodingredients\n        template: foodingredients\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Fetching ingredients for {{inputs.parameters.dish_name}} from {{inputs.parameters.restaurant_name}}\"]"
  },
  {
    "Id": 845,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: reserverestaurant\n        template: reserverestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: weatherDetails\n            value: '{{{{ tasks.checkweather.result }}}}'\n          - name: restaurantDetails\n            value: '{{{{ tasks.recommendreataurant.result }}}}'\n          - name: num_of_people\n            value: '{{{{ inputs.parameters.num_of_people }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/check\"\n      method: GET\n  - name: recommendrestaurant\n    http:\n      url: \"http://restaurantapi.com/recommend\"\n      method: GET\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: cuisine\n        value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: weather\n        value: '{{{{ tasks.checkweather.result }}}}'\n  - name: reserverestaurant\n    http:\n      url: \"http://reservationapi.com/reserve\"\n      method: POST\n      parameters:\n      - name: weatherDetails\n        value: '{{{{ tasks.checkweather.result }}}}'\n      - name: restaurantDetails\n        value: '{{{{ tasks.recommendreataurant.result }}}}'\n      - name: num_of_people\n        value: '{{{{ inputs.parameters.num_of_people }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Boston'\n    - name: cuisine\n      value: 'Mexican'\n    - name: num_of_people\n      value: '6'\n    - name: date\n      value: '2023-10-15T19:00:00Z'"
  },
  {
    "Id": 847,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-375-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: tablereservation\n        template: tablereservation\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: weatherDetails\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: restaurantDetails\n            value: '{{{{ tasks.recommendreataurant.result }}}}'\n          - name: num_of_people\n            value: '{{{{ inputs.parameters.num_of_people }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/api?city={{inputs.parameters.city}}'\"]\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    container:\n      image: restaurant-recommendation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://restaurantapi.com/recommend?city={{inputs.parameters.city}}&cuisine={{inputs.parameters.cuisine}}&weather={{inputs.parameters.weather}}'\"]\n  - name: tablereservation\n    inputs:\n      parameters:\n      - name: weatherDetails\n      - name: restaurantDetails\n      - name: num_of_people\n      - name: date\n    container:\n      image: table-reservation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://reservationapi.com/reserve?weatherDetails={{inputs.parameters.weatherDetails}}&restaurantDetails={{inputs.parameters.restaurantDetails}}&num_of_people={{inputs.parameters.num_of_people}}&date={{inputs.parameters.date}}'\"]\n"
  },
  {
    "Id": 1028,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: location\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant for {{inputs.parameters.cuisine}} in {{inputs.parameters.location}}' && echo 'Sushi Place'\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking table at {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}' && echo 'Reservation Confirmed'\"]\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'Japanese'\n    - name: location\n      value: 'San Francisco'\n    - name: date\n      value: 'Monday'\n    - name: time\n      value: '8pm'"
  },
  {
    "Id": 1029,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: booktable\n        template: BookTable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: city\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant for $0 in $1'\", \"{{{{ inputs.parameters.cuisine }}}}\", \"{{{{ inputs.parameters.city }}}}\"]\n  - name: BookTable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking table at $0 on $1 at $2'\", \"{{{{ inputs.parameters.restaurant_name }}}}\", \"{{{{ inputs.parameters.date }}}}\", \"{{{{ inputs.parameters.time }}}}\"]\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'Mexican'\n    - name: city\n      value: 'Houston'\n    - name: date\n      value: 'Thursday'\n    - name: time\n      value: '19:30'"
  },
  {
    "Id": 1032,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-555-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: locatepharmacy\n        template: locatepharmacy\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: ordermedicine\n        template: ordermedicine\n        dependencies:\n        - locatepharmacy\n        arguments:\n          parameters:\n          - name: pharmacy\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: medicine_name\n            value: '{{{{ inputs.parameters.drug }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: locatepharmacy\n    inputs:\n      parameters:\n      - name: city\n      - name: drug\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Chicago Pharmacy'\"]\n  - name: ordermedicine\n    inputs:\n      parameters:\n      - name: pharmacy\n      - name: medicine_name\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Order placed'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Chicago'\n    - name: drug\n      value: 'Cough Syrup'\n    - name: quantity\n      value: '4'"
  },
  {
    "Id": 1033,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-555-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: locatepharmacy\n        template: locatepharmacy\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: ordermedicine\n        template: ordermedicine\n        dependencies:\n        - locatepharmacy\n        arguments:\n          parameters:\n          - name: pharmacy\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: medicine_name\n            value: '{{{{ inputs.parameters.drug }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: locatepharmacy\n    inputs:\n      parameters:\n      - name: city\n      - name: drug\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.drug }}'\"]\n  - name: ordermedicine\n    inputs:\n      parameters:\n      - name: pharmacy\n      - name: medicine_name\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.pharmacy }} {{ inputs.parameters.medicine_name }} {{ inputs.parameters.quantity }}'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: drug\n      value: 'Vitamin C'\n    - name: quantity\n      value: '3'"
  },
  {
    "Id": 1047,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getflightprice\n        template: getflightprice\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n      - name: weathereffectprice\n        template: weathereffectprice\n        dependencies:\n        - getflightprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: original_price\n            value: '{{{{ tasks.getflightprice.result }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flight' && sleep 1 && echo 'flight_details'\"]\n  - name: getflightprice\n    inputs:\n      parameters:\n      - name: flight\n    container:\n      image: getflightprice-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'getting flight price' && sleep 1 && echo '100.0'\"]\n  - name: weathereffectprice\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: original_price\n    container:\n      image: weathereffectprice-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'calculating weather effect on price' && sleep 1 && echo 'adjustedPrice'\"]"
  },
  {
    "Id": 1049,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-cost-weather-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getflightprice\n        template: getflightprice\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n      - name: weathereffectprice\n        template: weathereffectprice\n        dependencies:\n        - getflightprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: original_price\n            value: '{{{{ tasks.getflightprice.result }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flight' && sleep 1\"]\n  - name: getflightprice\n    inputs:\n      parameters:\n      - name: flight\n    container:\n      image: getflightprice-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'getting flight price' && sleep 1\"]\n  - name: weathereffectprice\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: original_price\n    container:\n      image: weathereffectprice-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'calculating weather effect on price' && sleep 1\"]\n  arguments:\n    parameters:\n    - name: from_location\n      value: 'San Francisco'\n    - name: to_location\n      value: 'Sydney'\n    - name: date\n      value: '2023-06-15'"
  },
  {
    "Id": 1197,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: pharmacy-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: locatepharmacy\n        template: locatepharmacy\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - locatepharmacy\n        arguments:\n          parameters:\n          - name: pharmacy\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: medicine_name\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: reservemedicine\n        template: reservemedicine\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: pharmacy_name\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n          - name: patient_name\n            value: '{{{{ inputs.parameters.patient_name }}}}'\n  - name: locatepharmacy\n    inputs:\n      parameters:\n      - name: city\n      - name: drug\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Pharmacy located' > /tmp/pharmacy_name\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: pharmacy\n      - name: medicine_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Medicine available' > /tmp/medicine_stock\"]\n  - name: reservemedicine\n    inputs:\n      parameters:\n      - name: pharmacy_name\n      - name: drug\n      - name: patient_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation made' > /tmp/reservation_status\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Miami'\n    - name: drug\n      value: 'ibuprofen'\n    - name: patient_name\n      value: 'Mike Johnson'"
  },
  {
    "Id": 1198,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: pharmacy-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: locatepharmacy\n        template: locatepharmacy\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - locatepharmacy\n        arguments:\n          parameters:\n          - name: pharmacy\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: medicine_name\n            value: '{{{{ inputs.parameters.drug }}}}'\n      - name: reservemedicine\n        template: reservemedicine\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: pharmacy_name\n            value: '{{{{ tasks.locatepharmacy.result }}}}'\n          - name: drug\n            value: '{{{{ inputs.parameters.drug }}}}'\n          - name: patient_name\n            value: '{{{{ inputs.parameters.patient_name }}}}'\n  - name: locatepharmacy\n    inputs:\n      parameters:\n      - name: city\n      - name: drug\n    container:\n      image: locatepharmacy-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Pharmacy located'\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: pharmacy\n      - name: medicine_name\n    container:\n      image: checkavailability-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Medicine available'\"]\n  - name: reservemedicine\n    inputs:\n      parameters:\n      - name: pharmacy_name\n      - name: drug\n      - name: patient_name\n    container:\n      image: reservemedicine-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Medicine reserved'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Atlanta'\n    - name: drug\n      value: 'metformin'\n    - name: patient_name\n      value: 'Robert Brown'"
  },
  {
    "Id": 1212,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: getdestinationtraveladvice\n        template: getdestinationtraveladvice\n        dependencies:\n        - getrecommendedclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.destination_city }}}}'\n          - name: clothing\n            value: '{{{{ tasks.getrecommendedclothing.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/get?city={{inputs.parameters.city}}'\"]\n  - name: getrecommendedclothing\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: clothing-recommendation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://clothingapi.com/recommend?weather={{inputs.parameters.weather}}'\"]\n  - name: getdestinationtraveladvice\n    inputs:\n      parameters:\n      - name: city\n      - name: clothing\n    container:\n      image: travel-advice-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://traveladviceapi.com/advice?city={{inputs.parameters.city}}&clothing={{inputs.parameters.clothing}}'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Paris'\n    - name: destination_city\n      value: 'Berlin'"
  },
  {
    "Id": 1215,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: getdestinationtraveladvice\n        template: getdestinationtraveladvice\n        dependencies:\n        - dresssuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.destination_city }}}}'\n          - name: clothing\n            value: '{{{{ tasks.dresssuggestion.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/{{ inputs.parameters.city }}' | jq -r '.weather'\"]\n  - name: dresssuggestion\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: dress-suggestion-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://dresssuggestionapi.com/suggest?weather={{ inputs.parameters.weather }}' | jq -r '.dress'\"]\n  - name: getdestinationtraveladvice\n    inputs:\n      parameters:\n      - name: city\n      - name: clothing\n    container:\n      image: travel-advice-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://traveladviceapi.com/advice?city={{ inputs.parameters.city }}&clothing={{ inputs.parameters.clothing }}' | jq -r '.travelAdvice'\"]\n  inputs:\n    parameters:\n    - name: city\n    - name: destination_city"
  },
  {
    "Id": 1340,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    container:\n      image: flight-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Finding flights from {{inputs.parameters.city1}} to {{inputs.parameters.city2}} on {{inputs.parameters.date}}\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: booking-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Booking flight {{inputs.parameters.flight_details}} with class {{inputs.parameters.preferred_flight_class}}\"]"
  },
  {
    "Id": 1341,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ inputs.parameters.city1 }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.city2 }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: hotel\n            value: '{{{{ inputs.parameters.hotel }}}}'\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    http:\n      url: \"http://example.com/findflights\"\n      method: \"POST\"\n      body: \"{ 'city1': '{{{{ inputs.parameters.city1 }}}}', 'city2': '{{{{ inputs.parameters.city2 }}}}', 'date': '{{{{ inputs.parameters.date }}}}' }\"\n  - name: booktrip\n    inputs:\n      parameters:\n      - name: flight\n      - name: hotel\n    http:\n      url: \"http://example.com/booktrip\"\n      method: \"POST\"\n      body: \"{ 'flight': '{{{{ inputs.parameters.flight }}}}', 'hotel': '{{{{ inputs.parameters.hotel }}}}' }\""
  },
  {
    "Id": 1384,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-719-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookvalue\n        template: bookvalue\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{{{ inputs.parameters.ISBN }}}}'\n          - name: authorDetails\n            value: '{{{{ inputs.parameters.authorDetails }}}}'\n  - name: bookvalue\n    inputs:\n      parameters:\n      - name: ISBN\n      - name: authorDetails\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Calculating book value for ISBN: {{inputs.parameters.ISBN}} and author: {{inputs.parameters.authorDetails}}'\"]"
  },
  {
    "Id": 1397,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Tokyo\"\n      method: GET\n  - name: getrecommendedclothing\n    http:\n      url: \"http://clothingapi.com/getRecommendedClothing\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'\n  inputs:\n    parameters:\n    - name: city\n      value: 'Tokyo'"
  },
  {
    "Id": 1399,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: getdestinationtraveladvice\n        template: getdestinationtraveladvice\n        dependencies:\n        - getrecommendedclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: clothing\n            value: '{{{{ tasks.getrecommendedclothing.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getrecommendedclothing\n    http:\n      url: \"http://clothingapi.com/getRecommendedClothing?weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: getdestinationtraveladvice\n    http:\n      url: \"http://traveladviceapi.com/getDestinationTravelAdvice?city={{{{ inputs.parameters.city }}}}&clothing={{{{ tasks.getrecommendedclothing.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Paris'"
  },
  {
    "Id": 1400,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: inquireweather\n        template: inquireweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: besttraveltime\n        template: besttraveltime\n        dependencies:\n        - inquireweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.inquireweather.result }}}}'\n          - name: attraction\n            value: '{{{{ inputs.parameters.attraction }}}}'\n  - name: inquireweather\n    inputs:\n      parameters:\n      - name: location\n      - name: date\n    http:\n      url: \"http://weatherapi.com/inquire\"\n      method: \"GET\"\n  - name: besttraveltime\n    inputs:\n      parameters:\n      - name: weather_condition\n      - name: attraction\n    http:\n      url: \"http://travelapi.com/besttime\"\n      method: \"GET\""
  },
  {
    "Id": 1402,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbestrestaurant\n        template: findbestrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - findbestrestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{{{ tasks.findbestrestaurant.result }}}}'\n          - name: partySize\n            value: '{{{{ inputs.parameters.partySize }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findbestrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Best Indian Restaurant in {{ inputs.parameters.city }}'\"]\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation made at {{ inputs.parameters.restaurantname }} for {{ inputs.parameters.partySize }} at {{ inputs.parameters.time }}'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Los Angeles'\n    - name: cuisine\n      value: 'Indian'\n    - name: partySize\n      value: '6'\n    - name: time\n      value: '2023-11-20T18:00:00'"
  },
  {
    "Id": 1405,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findtoprestaurant\n        template: findtoprestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - findtoprestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{{{ tasks.findtoprestaurant.result }}}}'\n          - name: partySize\n            value: '{{{{ inputs.parameters.partySize }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findtoprestaurant\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Top French Restaurant in {{ inputs.parameters.city }}'\"]\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking reservation at {{ inputs.parameters.restaurantname }} for {{ inputs.parameters.partySize }} people at {{ inputs.parameters.time }}'\"]"
  },
  {
    "Id": 1437,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-565-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findbookstore\n        template: findbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{{{ inputs.parameters.book_information }}}}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.findbookstore.result }}}}'\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    http:\n      url: http://example.com/findbookstore\n      method: GET\n      parameters:\n      - name: book_information\n        value: '{{{{ inputs.parameters.book_information }}}}'\n  - name: buybook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: ISBN\n    http:\n      url: http://example.com/buybook\n      method: POST\n      parameters:\n      - name: user_ID\n        value: '{{{{ inputs.parameters.user_ID }}}}'\n      - name: ISBN\n        value: '{{{{ inputs.parameters.ISBN }}}}'"
  },
  {
    "Id": 1439,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-watching-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkshowtimes\n        template: checkshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: closetcinema\n        template: closetcinema\n        dependencies:\n        - checkshowtimes\n        arguments:\n          parameters:\n          - name: schedule\n            value: '{{{{ tasks.checkshowtimes.result }}}}'\n      - name: bookmovie\n        template: bookmovie\n        dependencies:\n        - closetcinema\n        arguments:\n          parameters:\n          - name: film_id\n            value: '{{{{ tasks.closetcinema.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: show_time\n            value: '{{{{ tasks.checkshowtimes.result }}}}'"
  },
  {
    "Id": 1441,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkshowtimes\n        template: checkshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - checkshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.checkshowtimes.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: checkshowtimes\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Check showtimes for {{inputs.parameters.movie_name}} on {{inputs.parameters.date}}'\"]\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Book {{inputs.parameters.number_of_tickets}} tickets for {{inputs.parameters.movie_name}} at {{inputs.parameters.showtime}}'\"]"
  },
  {
    "Id": 1443,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-books-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: purchasebook\n        template: purchasebook\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: purchasebook\n    inputs:\n      parameters:\n      - name: customer_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: my-custom-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Purchased {{inputs.parameters.quantity}} copies of book with product ID {{inputs.parameters.product_ID}} for customer ID {{inputs.parameters.customer_ID}}'\"]\n  arguments:\n    parameters:\n    - name: username\n    - name: title\n    - name: quantity"
  },
  {
    "Id": 1457,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.searchrestaurant.result }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}'\"]\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: time\n    container:\n      image: bookreservation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }} {{ inputs.parameters.time }}'\"]"
  },
  {
    "Id": 1458,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: lebanese-food-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.searchrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}'\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: bookrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}'\"]"
  },
  {
    "Id": 1465,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-733-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantlocation\n        template: getrestaurantlocation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: nearbyhospitalquery\n        template: nearbyhospitalquery\n        dependencies:\n        - getrestaurantlocation\n        arguments:\n          parameters:\n          - name: coordinate_position\n            value: '{{{{ tasks.getrestaurantlocation.result }}}}'\n      - name: doctoravailabilityquery\n        template: doctoravailabilityquery\n        dependencies:\n        - nearbyhospitalquery\n        arguments:\n          parameters:\n          - name: hospital\n            value: '{{{{ tasks.nearbyhospitalquery.result }}}}'\n          - name: specialty\n            value: '{{{{ inputs.parameters.specialty }}}}'\n  - name: getrestaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Chicago' > /tmp/restaurant_location\"]\n  - name: nearbyhospitalquery\n    inputs:\n      parameters:\n      - name: coordinate_position\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Hospital near Le Bouchon' > /tmp/hospital\"]\n  - name: doctoravailabilityquery\n    inputs:\n      parameters:\n      - name: hospital\n      - name: specialty\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'true' > /tmp/availability\"]\n"
  },
  {
    "Id": 1491,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: suggest-country-song-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getartist\n        template: getartist\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{{{ inputs.parameters.album_name }}}}'\n      - name: recommendmusic\n        template: recommendmusic\n        dependencies:\n        - getartist\n        arguments:\n          parameters:\n          - name: artist\n            value: '{{{{ tasks.getartist.result }}}}'\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: year\n            value: '{{{{ inputs.parameters.year }}}}'\n  - name: getartist\n    inputs:\n      parameters:\n      - name: album_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.album_name }}' | some-command-to-get-artist\"]\n  - name: recommendmusic\n    inputs:\n      parameters:\n      - name: artist\n      - name: genre\n      - name: year\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.artist }} {{ inputs.parameters.genre }} {{ inputs.parameters.year }}' | some-command-to-recommend-music\"]"
  },
  {
    "Id": 1495,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: day-trip-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: plandayout\n        template: plandayout\n        dependencies:\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: activities\n            value: '{{{{ inputs.parameters.activities }}}}'\n          - name: restaurants\n            value: '{{{{ tasks.restaurantrecommend.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: restaurantrecommend\n    http:\n      url: \"http://restaurantapi.com/recommend?city={{{{ inputs.parameters.city }}}}&cuisine={{{{ inputs.parameters.cuisine }}}}&weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: plandayout\n    http:\n      url: \"http://plandayoutapi.com/plan?city={{{{ inputs.parameters.city }}}}&activities={{{{ inputs.parameters.activities }}}}&restaurants={{{{ tasks.restaurantrecommend.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'London'\n    - name: cuisine\n      value: 'French'\n    - name: activities\n      value: '[\"sightseeing\", \"museum visit\"]'"
  }
]