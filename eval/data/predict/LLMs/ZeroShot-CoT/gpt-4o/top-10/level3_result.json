[
  {
    "Id": 18,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\ngenerateName: dependency-workflow-33-\nspec:\nentrypoint: main\ntemplates:\n- name: main\ndag:\ntasks:\n- name: getuserid\n    template: getuserid\n    arguments:\n    parameters:\n    - name: username\n        value: '{{ inputs.parameters.username }}'\n- name: fetchuserplaylist\n    template: fetchuserplaylist\n    dependencies:\n    - getuserid\n    arguments:\n    parameters:\n    - name: user_id\n        value: '{{ tasks.getuserid.result }}'\n- name: addsongtoplaylist\n    template: addsongtoplaylist\n    dependencies:\n    - fetchuserplaylist\n    arguments:\n    parameters:\n    - name: user_ID\n        value: '{{ tasks.getuserid.result }}'\n    - name: playlist_ID\n        value: '{{ inputs.parameters.playlist_ID }}'\n    - name: song_name\n        value: '{{ inputs.parameters.song_name }}'"
  },
  {
    "Id": 20,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-83-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ tasks.username2email.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'\n          - name: start_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: end_date\n            value: '{{{{ inputs.parameters.end_date }}}}'\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo email@example.com\"]\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1234567890\"]\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo reserved\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'emily_davis'\n    - name: title\n      value: 'The Great Gatsby'\n    - name: start_date\n      value: '2023-07-02'\n    - name: end_date\n      value: '2023-07-16'"
  },
  {
    "Id": 21,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ tasks.username2email.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'\n          - name: start_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: end_date\n            value: '{{{{ inputs.parameters.end_date }}}}'\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to convert username to email\n        print(f\"{inputs.parameters.username}@example.com\")\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to convert book title to ISBN\n        if inputs.parameters.title == \"Pride and Prejudice\":\n          print(\"978-3-16-148410-0\")\n        else:\n          print(\"Unknown ISBN\")\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock implementation to reserve a book\n        print(f\"Reserved {inputs.parameters.ISBN} for {inputs.parameters.user_email} from {inputs.parameters.start_date} to {inputs.parameters.end_date}\")\n  arguments:\n    parameters:\n    - name: username\n      value: 'michael_brown'\n    - name: title\n      value: 'Pride and Prejudice'\n    - name: start_date\n      value: '2023-08-07'\n    - name: end_date\n      value: '2023-08-21'"
  },
  {
    "Id": 22,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ tasks.username2email.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'\n          - name: start_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: end_date\n            value: '{{{{ inputs.parameters.end_date }}}}'\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'sarah_wilson@example.com'\"]\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '978-0-14-243724-7'\"]\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation successful'\"]"
  },
  {
    "Id": 89,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendhotel\n        template: recommendhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: star_level\n            value: '3'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    container:\n      image: hotel-recommendation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Hotel XYZ'\"]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking confirmed'\"]"
  },
  {
    "Id": 90,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcity\n        template: getcity\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ tasks.getcity.result }}}}'\n          - name: star_level\n            value: '4'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: getcity\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: city-fetcher:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'New York'\"]\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    container:\n      image: hotel-recommender:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '4-star Hotel'\" ]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booker:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Peter'\n    - name: date\n      value: 'next Sunday'"
  },
  {
    "Id": 91,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendhotel\n        template: recommendhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: star_level\n            value: '2'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    container:\n      image: hotel-recommendation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.star_level }}'\"]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.hotel_name }} {{ inputs.parameters.date }}'\"]"
  },
  {
    "Id": 92,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendhotel\n        template: recommendhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: star_level\n            value: '5'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    container:\n      image: hotel-recommendation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.star_level }}'\"]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.hotel_name }} {{ inputs.parameters.date }}'\"]"
  },
  {
    "Id": 94,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-755-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendhotel\n        template: recommendhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: star_level\n            value: '2'\n      - name: checkvacancy\n        template: checkvacancy\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.recommendhotel.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: recommendhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_level\n    container:\n      image: hotel-recommendation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Hotel XYZ'\"]\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    container:\n      image: hotel-vacancy-check-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'true'\"]\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    container:\n      image: hotel-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed'\"]\n  - name: inputs\n    parameters:\n    - name: city\n    - name: date"
  },
  {
    "Id": 105,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-departure-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getconcerts\n        template: getconcerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{{{ inputs.parameters.venue }}}}'\n      - name: calculateTravelTime\n        template: calculateTravelTime\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{{{ inputs.parameters.traffic }}}}'\n          - name: modeOfTransport\n            value: '{{{{ inputs.parameters.modeOfTransport }}}}'\n      - name: alertBeforeDeparture\n        template: alertBeforeDeparture\n        dependencies:\n        - getconcerts\n        - calculateTravelTime\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{{{ tasks.getconcerts.result }}}}'\n          - name: travel_time\n            value: '{{{{ tasks.calculateTravelTime.result }}}}'\n  - name: getconcerts\n    inputs:\n      parameters:\n      - name: venue\n    container:\n      image: concert-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://concertapi.com/concerts?venue={{inputs.parameters.venue}}'\"]\n  - name: calculateTravelTime\n    inputs:\n      parameters:\n      - name: traffic\n      - name: modeOfTransport\n    container:\n      image: travel-time-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://traveltimeapi.com/calculate?traffic={{inputs.parameters.traffic}}&mode={{inputs.parameters.modeOfTransport}}'\"]\n  - name: alertBeforeDeparture\n    inputs:\n      parameters:\n      - name: event_time\n      - name: travel_time\n    container:\n      image: alert-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://alertapi.com/alert?event_time={{inputs.parameters.event_time}}&travel_time={{inputs.parameters.travel_time}}'\"]"
  },
  {
    "Id": 106,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: meeting-transportation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusernextmeeting\n        template: getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: meeting2timezone\n        template: meeting2timezone\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: meeting\n            value: '{{{{ tasks.getusernextmeeting.result }}}}'\n      - name: findtaxi\n        template: findtaxi\n        dependencies:\n        - meeting2timezone\n        arguments:\n          parameters:\n          - name: ArrivalTime\n            value: '{{{{ tasks.meeting2timezone.result }}}}'\n      - name: calcularefare\n        template: calculatefare\n        dependencies:\n        - findtaxi\n        arguments:\n          parameters:\n          - name: TaxiInfo\n            value: '{{{{ tasks.findtaxi.result }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: alertbeforedeparture\n        template: alertbeforedeparture\n        dependencies:\n        - calcularefare\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{{{ tasks.getusernextmeeting.result }}}}'\n          - name: travel_time\n            value: '{{{{ tasks.calcularefare.result }}}}'\n  - name: getusernextmeeting\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Get next meeting for user'\"]\n  - name: meeting2timezone\n    inputs:\n      parameters:\n      - name: meeting\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Convert meeting to timezone'\"]\n  - name: findtaxi\n    inputs:\n      parameters:\n      - name: ArrivalTime\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Find taxi for arrival time'\"]\n  - name: calculatefare\n    inputs:\n      parameters:\n      - name: TaxiInfo\n      - name: destination\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Calculate fare for taxi ride'\"]\n  - name: alertbeforedeparture\n    inputs:\n      parameters:\n      - name: event_time\n      - name: travel_time\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Alert before departure'\"]\n"
  },
  {
    "Id": 107,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-festival-departure-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findeventdate\n        template: findeventdate\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{{{ inputs.parameters.event_name }}}}'\n      - name: timecalculator\n        template: timecalculator\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{{{ inputs.parameters.traffic }}}}'\n          - name: modeOfTransport\n            value: '{{{{ inputs.parameters.modeOfTransport }}}}'\n      - name: alertbeforedeparture\n        template: alertbeforedeparture\n        dependencies:\n        - findeventdate\n        - timecalculator\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{{{ tasks.findeventdate.result }}}}'\n          - name: travel_time\n            value: '{{{{ tasks.timecalculator.result }}}}'\n  - name: findeventdate\n    inputs:\n      parameters:\n      - name: event_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '2023-10-15T18:00:00Z'\"]\n  - name: timecalculator\n    inputs:\n      parameters:\n      - name: traffic\n      - name: modeOfTransport\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '1h'\"]\n  - name: alertbeforedeparture\n    inputs:\n      parameters:\n      - name: event_time\n      - name: travel_time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '2023-10-15T17:00:00Z'\"]\n  inputs:\n    parameters:\n    - name: event_name\n      value: 'Music Festival'\n    - name: traffic\n      value: 'moderate'\n    - name: modeOfTransport\n      value: 'bike'"
  },
  {
    "Id": 109,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: star_level\n            value: '3'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.recommendreataurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: star_level\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.location }} {{ inputs.parameters.star_level }}\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.restaurant_name }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}\"]"
  },
  {
    "Id": 110,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: star_level\n            value: '5'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.recommendreataurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: star_level\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.location }} {{ inputs.parameters.star_level }}'\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}'\"]"
  },
  {
    "Id": 111,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: rating\n            value: '{{{{ inputs.parameters.rating }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: rating\n    container:\n      image: findrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant with cuisine {{inputs.parameters.cuisine}} and rating {{inputs.parameters.rating}}' && echo 'Sushi Place'\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: bookrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking restaurant {{inputs.parameters.restaurant_name}} on {{inputs.parameters.date}} at {{inputs.parameters.time}}' && echo 'Booking confirmed'\"]\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'Japanese'\n    - name: rating\n      value: '4'\n    - name: date\n      value: 'Sunday'\n    - name: time\n      value: '6:30pm'"
  },
  {
    "Id": 113,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: rating\n            value: '{{{{ inputs.parameters.rating }}}}'\n      - name: bookreservation\n        template: bookreservation\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: partySize\n            value: '{{{{ inputs.parameters.partySize }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n      - name: rating\n    container:\n      image: findrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Mexican Restaurant' > /tmp/output && cat /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  - name: bookreservation\n    inputs:\n      parameters:\n      - name: restaurantname\n      - name: partySize\n      - name: time\n    container:\n      image: bookreservation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation Confirmed' > /tmp/output && cat /tmp/output\"]\n    outputs:\n      parameters:\n      - name: reservationStatus\n        valueFrom:\n          path: /tmp/output\n  arguments:\n    parameters:\n    - name: cuisine\n      value: 'Mexican'\n    - name: rating\n      value: '2'\n    - name: partySize\n      value: '1'\n    - name: time\n      value: '19:00'"
  },
  {
    "Id": 117,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-51-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'"
  },
  {
    "Id": 118,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-mood-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n  - name: getusermood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: mood-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.user_name }}' | getusermood\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: song-recommendation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.user_mood }}' | recommendsong\"]\n  - name: playmusic\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: music-player-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.song_title }}' | playmusic\"]"
  },
  {
    "Id": 119,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-mood-tune-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n  - name: getusermood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: mood-api\n      command: [\"sh\", \"-c\"]\n      args: [\"GetUserMood --user_name {{inputs.parameters.user_name}}\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: song-recommendation-api\n      command: [\"sh\", \"-c\"]\n      args: [\"RecommendSong --user_mood {{inputs.parameters.user_mood}}\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: music-player-api\n      command: [\"sh\", \"-c\"]\n      args: [\"PlayMusic --song_title {{inputs.parameters.song_title}}\"]"
  },
  {
    "Id": 120,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: mood-music-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songtitletoid.result }}}}'"
  },
  {
    "Id": 121,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recommend-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommend-song\n        template: recommend-song\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ inputs.parameters.user_mood }}}}'\n      - name: song-title-to-id\n        template: song-title-to-id\n        dependencies:\n        - recommend-song\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommend-song.result }}}}'\n      - name: play-song\n        template: play-song\n        dependencies:\n        - song-title-to-id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.song-title-to-id.result }}}}'\n  - name: recommend-song\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Recommended song based on mood' > /tmp/song_title\"]\n  - name: song-title-to-id\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Convert song title to ID' > /tmp/song_ID\"]\n  - name: play-song\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Playing song for user' > /tmp/play_status\"]"
  },
  {
    "Id": 122,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n  - name: getusermood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'happy'\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Happy Song'\"]\n  - name: playmusic\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Playing music'\"]"
  },
  {
    "Id": 123,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_ID }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songtitletoid.result }}}}'"
  },
  {
    "Id": 124,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: suggest-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.getusermood.result }}}}'\n  - name: getusermood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'happy'\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Happy Song'\"]"
  },
  {
    "Id": 126,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: suggestapparel\n        template: suggestapparel\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: suggestapparel\n    http:\n      url: \"http://apparelapi.com/suggestApparel?weather_status={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  inputs:\n    parameters:\n    - name: city\n      value: 'Madrid'"
  },
  {
    "Id": 127,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Tokyo\"\n      method: GET\n  - name: getclothingadvice\n    http:\n      url: \"http://clothingapi.com/getClothingAdvice\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'"
  },
  {
    "Id": 129,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-rome-outfit-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.checkweather.result }}}}'\n  - name: checkweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Rome\"\n      method: GET\n  - name: outfitrecommender\n    http:\n      url: \"http://outfitapi.com/recommend?weather_condition={{{{ inputs.parameters.weather_condition }}}}\"\n      method: GET"
  },
  {
    "Id": 130,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ inputs.parameters.weather }}'\n  - name: getrecommendedclothing\n    http:\n      url: \"http://example.com/getrecommendedclothing\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"weather\": \"{{ inputs.parameters.weather }}\"}'\n    outputs:\n      parameters:\n      - name: clothing\n        valueFrom:\n          jsonPath: \"$.clothing\""
  },
  {
    "Id": 131,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestclothing\n        template: suggestclothing\n        arguments:\n          parameters:\n          - name: weather_status\n            value: '{{ inputs.parameters.weather_status }}'\n  - name: suggestclothing\n    inputs:\n      parameters:\n      - name: weather_status\n    container:\n      image: your-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggested clothing based on weather: {{ inputs.parameters.weather_status }}'\"]"
  },
  {
    "Id": 207,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchdestination\n        template: fetchdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: to_location\n            value: '{{{{ tasks.fetchdestination.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'"
  },
  {
    "Id": 208,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-418-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdestination\n        template: getdestination\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - getdestination\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ tasks.getdestination.result }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getdestination\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-destination-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Destination for user' $0\"]\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    container:\n      image: my-flights-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding flights from' $0 'to' $1 'on' $2\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking flight with details' $0 'and class' $1\"]\n"
  },
  {
    "Id": 209,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Searching flight for destination {{inputs.parameters.destination}} on date {{inputs.parameters.date}}'\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: bookflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking flight with details {{inputs.parameters.flight_details}} and class {{inputs.parameters.preferred_flight_class}}'\"]"
  },
  {
    "Id": 214,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdestination\n        template: getdestination\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - getdestination\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: city2\n            value: '{{{{ tasks.getdestination.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'"
  },
  {
    "Id": 215,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchdestination\n        template: fetchdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - fetchdestination\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: to_location\n            value: '{{{{ tasks.fetchdestination.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: fetchdestination\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'New York'\"]\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Flight details'\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking confirmed'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'John'\n    - name: origin\n      value: 'Current City'\n    - name: departure_date\n      value: 'Next Friday'\n    - name: preferred_flight_class\n      value: 'Economy'"
  },
  {
    "Id": 216,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-25-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdestination\n        template: getdestination\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - getdestination\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ tasks.getdestination.result }}}}'\n          - name: to_location\n            value: '{{{{ tasks.getdestination.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getdestination\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-destination-service\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Destination for {{ inputs.parameters.username }}'\"]\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: my-flight-search-service\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Flight details from {{ inputs.parameters.from_location }} to {{ inputs.parameters.to_location }} on {{ inputs.parameters.date }}'\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-flight-booking-service\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking flight {{ inputs.parameters.flight_details }} with class {{ inputs.parameters.preferred_flight_class }}'\"]"
  },
  {
    "Id": 217,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getdestination\n        template: getdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - getdestination\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: to_location\n            value: '{{{{ tasks.getdestination.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.departure_date }}}}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo user_id_for_{{ inputs.parameters.username }}\"]\n  - name: getdestination\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo destination_for_user_{{ inputs.parameters.user_ID }}\"]\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo flight_details_for_{{ inputs.parameters.from_location }}_to_{{ inputs.parameters.to_location }}_on_{{ inputs.parameters.date }}\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo booking_status_for_{{ inputs.parameters.flight_details }}_with_class_{{ inputs.parameters.preferred_flight_class }}\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Steve'\n    - name: departure_date\n      value: '2023-06-01'\n    - name: preferred_flight_class\n      value: 'Economy'"
  },
  {
    "Id": 376,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-quickest-route-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: 'Mexican'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findnearbyrestaurant\n        template: findnearbyrestaurant\n        arguments:\n          parameters:\n          - name: user_location\n            value: '{{{{ inputs.parameters.user_location }}}}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n      - name: menuselection\n        template: menuselection\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: restaurantInfo\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n          - name: cuisineRec\n            value: '{{{{ tasks.recommenditems.result }}}}'"
  },
  {
    "Id": 377,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n      - name: findtransport\n        template: findtransport\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: BusStation\n            value: '{{{{ inputs.parameters.bus_station }}}}'\n          - name: Destination\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}' > /tmp/output.txt\"]\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }}' > /tmp/output.txt\"]\n  - name: findtransport\n    inputs:\n      parameters:\n      - name: BusStation\n      - name: Destination\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.BusStation }} {{ inputs.parameters.Destination }}' > /tmp/output.txt\"]"
  },
  {
    "Id": 378,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{{{ inputs.parameters.origin_location }}}}'\n          - name: destination_location\n            value: '{{{{ tasks.restaurantlocation.result }}}}'\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}' | some-command\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }}' | some-command\"]\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.origin_location }} {{ inputs.parameters.destination_location }}' | some-command\"]"
  },
  {
    "Id": 379,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{{{ inputs.parameters.origin_location }}}}'\n          - name: destination_location\n            value: '{{{{ tasks.restaurantlocation.result }}}}'\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}'\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}'\"]\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.origin_location }} {{ inputs.parameters.destination_location }}'\"]"
  },
  {
    "Id": 380,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findtoprestaurant\n        template: findtoprestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrestaurantlocation\n        template: getrestaurantlocation\n        dependencies:\n        - findtoprestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getrestaurantlocation\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{{{ inputs.parameters.origin_location }}}}'\n          - name: destination_location\n            value: '{{{{ tasks.getrestaurantlocation.result }}}}'\n  - name: findtoprestaurant\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | findtoprestaurant\"]\n  - name: getrestaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' | getrestaurantlocation\"]\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.origin_location }} {{ inputs.parameters.destination_location }}' | getroute\"]"
  },
  {
    "Id": 381,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: drive-to-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{{{ inputs.parameters.origin_location }}}}'\n          - name: destination_location\n            value: '{{{{ tasks.restaurantlocation.result }}}}'\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: myapi/getrestaurant\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: myapi/restaurantlocation\n  - name: getroute\n    inputs:\n      parameters:\n      - name: origin_location\n      - name: destination_location\n    container:\n      image: myapi/getroute"
  },
  {
    "Id": 414,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-movie-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getuserfavoritegenre\n        template: getuserfavoritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: movierecommender\n        template: movierecommender\n        dependencies:\n        - getuserfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ tasks.getuserfavoritegenre.result }}}}'\n      - name: buymovieticket\n        template: buymovieticket\n        dependencies:\n        - movierecommender\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.movierecommender.result }}}}'\n          - name: theater_name\n            value: '{{{{ inputs.parameters.theater_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getuserfavoritegenre\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Action'\"]\n  - name: movierecommender\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Inception'\"]\n  - name: buymovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: theater_name\n      - name: date\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed'\"]"
  },
  {
    "Id": 415,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getuserfavoritecuisine\n        template: getuserfavoritecuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - getuserfavoritecuisine\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getuserfavoritecuisine.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getuserfavoritecuisine\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Italian'\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking confirmed'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'John'\n    - name: date\n      value: 'next Saturday'\n    - name: time\n      value: '19:00'"
  },
  {
    "Id": 416,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchfavoritecuisine\n        template: fetchfavoritecuisine\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findrestaurant\n        template: findrestaurant\n        dependencies:\n        - fetchfavoritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ tasks.fetchfavoritecuisine.result }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: fetchfavoritecuisine\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/fetch-favorite-cuisine\n      command: [\"sh\", \"-c\"]\n      args: [\"python fetch_favorite_cuisine.py --username {{inputs.parameters.username}}\"]\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n    container:\n      image: myregistry/find-restaurant\n      command: [\"sh\", \"-c\"]\n      args: [\"python find_restaurant.py --cuisine {{inputs.parameters.cuisine}}\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: myregistry/book-table\n      command: [\"sh\", \"-c\"]\n      args: [\"python book_table.py --restaurant_name {{inputs.parameters.restaurant_name}} --date {{inputs.parameters.date}} --time {{inputs.parameters.time}}\"]"
  },
  {
    "Id": 418,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-9876-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: card2number\n        template: card2number\n        arguments:\n          parameters:\n          - name: card_id\n            value: '{{{{ inputs.parameters.card_id }}}}'\n      - name: productid2cost\n        template: productid2cost\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: checkcardbalance\n        template: checkcardbalance\n        dependencies:\n        - card2number\n        arguments:\n          parameters:\n          - name: card_number\n            value: '{{{{ tasks.card2number.result }}}}'\n      - name: enoughbalance\n        template: enoughbalance\n        dependencies:\n        - productid2cost\n        - checkcardbalance\n        arguments:\n          parameters:\n          - name: product_price\n            value: '{{{{ tasks.productid2cost.result }}}}'\n          - name: card_balance\n            value: '{{{{ tasks.checkcardbalance.result }}}}'\n  - name: card2number\n    inputs:\n      parameters:\n      - name: card_id\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'card_number' > /tmp/output\"]\n  - name: productid2cost\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'product_cost' > /tmp/output\"]\n  - name: checkcardbalance\n    inputs:\n      parameters:\n      - name: card_number\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'card_balance' > /tmp/output\"]\n  - name: enoughbalance\n    inputs:\n      parameters:\n      - name: product_price\n      - name: card_balance\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'order_status' > /tmp/output\"]"
  },
  {
    "Id": 442,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getproductid\n        - getcustomerid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '1'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Product added to cart'\"]\n  inputs:\n    parameters:\n    - name: product_name\n    - name: username\n    - name: cart_name"
  },
  {
    "Id": 450,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstudentid\n        template: getstudentid\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{{{ inputs.parameters.student_name }}}}'\n      - name: getinstructorid\n        template: getinstructorid\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{{{ inputs.parameters.instructor_name }}}}'\n      - name: getsubjectid\n        template: getsubjectid\n        arguments:\n          parameters:\n          - name: subject_name\n            value: '{{{{ inputs.parameters.subject_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - getstudentid\n        - getsubjectid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.getstudentid.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.getsubjectid.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: getstudentid\n    inputs:\n      parameters:\n      - name: student_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.student_name }}\"]\n  - name: getinstructorid\n    inputs:\n      parameters:\n      - name: instructor_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.instructor_name }}\"]\n  - name: getsubjectid\n    inputs:\n      parameters:\n      - name: subject_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.subject_name }}\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Enrolled {{ inputs.parameters.person_ID }} in {{ inputs.parameters.subject_ID }} for {{ inputs.parameters.semester }}\"]\n"
  },
  {
    "Id": 474,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{{{ inputs.parameters.age }}}}'\n          - name: gender\n            value: '{{{{ inputs.parameters.gender }}}}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{{{ tasks.gethealthinformation.result }}}}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{{{ tasks.gethealthinformation.result }}}}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getdietplan\n        - getexerciseroutine\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{{{ tasks.getdietplan.result }}}}'\n          - name: ExerciseRoutine\n            value: '{{{{ tasks.getexerciseroutine.result }}}}'\n  - name: gethealthinformation\n    inputs:\n      parameters:\n      - name: age\n      - name: gender\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'HealthInformation'\"]\n  - name: getdietplan\n    inputs:\n      parameters:\n      - name: HealthInformation\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'DietPlan'\"]\n  - name: getexerciseroutine\n    inputs:\n      parameters:\n      - name: HealthInformation\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'ExerciseRoutine'\"]\n  - name: createwellnessplan\n    inputs:\n      parameters:\n      - name: DietPlan\n      - name: ExerciseRoutine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'WellnessPlan'\"]\n  arguments:\n    parameters:\n    - name: age\n      value: '45'\n    - name: gender\n      value: 'female'"
  },
  {
    "Id": 477,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-television-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: orderproduct\n        template: orderproduct\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: orderproduct\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: user_ID\n      - name: quantity\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Order placed'\"]"
  },
  {
    "Id": 478,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: luggage-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ inputs.parameters.flight }}}}'\n      - name: getluggagefee\n        template: getluggagefee\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: luggage\n            value: '{{{{ tasks.checkluggageallowance.result }}}}'\n          - name: weight\n            value: '{{{{ inputs.parameters.weight }}}}'\n  - name: checkluggageallowance\n    inputs:\n      parameters:\n      - name: flight\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Luggage allowance for flight' $0\"]\n  - name: getluggagefee\n    inputs:\n      parameters:\n      - name: luggage\n      - name: weight\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Luggage fee for' $0 'with weight' $1\"]"
  },
  {
    "Id": 479,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{{{ inputs.parameters.roomRate }}}}'\n          - name: mealCost\n            value: '{{{{ tasks.getmealcost.result }}}}'\n          - name: sightSeeingCost\n            value: '{{{{ tasks.getsightseeingcost.result }}}}'\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"]\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 150\"]\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(({{{{ inputs.parameters.roomRate }}}} + {{{{ inputs.parameters.mealCost }}}} + {{{{ inputs.parameters.sightSeeingCost }}}}))\"]\n"
  },
  {
    "Id": 481,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: outdooractivityrecommend\n        template: outdooractivityrecommend\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findjapaneserestaurant\n        template: findjapaneserestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - outdooractivityrecommend\n        - findjapaneserestaurant\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: activities\n            value: '{{{{ tasks.outdooractivityrecommend.result }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ tasks.findjapaneserestaurant.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: outdooractivityrecommend\n    http:\n      url: \"http://activityapi.com/recommend?city={{{{ inputs.parameters.city }}}}&weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: findjapaneserestaurant\n    http:\n      url: \"http://restaurantapi.com/findJapanese?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: tripplanner\n    http:\n      url: \"http://tripplannerapi.com/plan?weather={{{{ tasks.getweather.result }}}}&activities={{{{ tasks.outdooractivityrecommend.result }}}}&restaurant={{{{ tasks.findjapaneserestaurant.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'San Francisco'"
  },
  {
    "Id": 538,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrestaurants\n        template: getrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getevents\n        template: getevents\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: planoutdooractivities\n        template: planoutdooractivities\n        dependencies:\n        - getweather\n        - getevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: events\n            value: '{{{{ tasks.getevents.result }}}}'\n      - name: tripadvisor\n        template: tripadvisor\n        dependencies:\n        - getweather\n        - getrestaurants\n        - getevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: restaurants\n            value: '{{{{ tasks.getrestaurants.result }}}}'\n          - name: events\n            value: '{{{{ tasks.getevents.result }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - getweather\n        - planoutdooractivities\n        - getrestaurants\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: activities\n            value: '{{{{ tasks.planoutdooractivities.result }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ tasks.getrestaurants.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://weatherapi.com/{{ inputs.parameters.city }}\"]\n  - name: getrestaurants\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: restaurant-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://restaurantapi.com/{{ inputs.parameters.city }}\"]\n  - name: getevents\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: events-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://eventsapi.com/{{ inputs.parameters.city }}\"]\n  - name: planoutdooractivities\n    inputs:\n      parameters:\n      - name: weather\n      - name: events\n    container:\n      image: outdoor-activities-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://outdooractivitiesapi.com?weather={{ inputs.parameters.weather }}&events={{ inputs.parameters.events }}\"]\n  - name: tripadvisor\n    inputs:\n      parameters:\n      - name: weather\n      - name: restaurants\n      - name: events\n    container:\n      image: trip-advisor-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://tripadvisorapi.com?weather={{ inputs.parameters.weather }}&restaurants={{ inputs.parameters.restaurants }}&events={{ inputs.parameters.events }}\"]\n  - name: tripplanner\n    inputs:\n      parameters:\n      - name: weather_forecast\n      - name: activities\n      - name: suggested_restaurant\n    container:\n      image: trip-planner-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s http://tripplannerapi.com?weather={{ inputs.parameters.weather_forecast }}&activities={{ inputs.parameters.activities }}&restaurant={{ inputs.parameters.suggested_restaurant }}\"]"
  },
  {
    "Id": 631,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-295-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: identifybook\n        template: identifybook\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: getsimilarbooks\n        template: getsimilarbooks\n        dependencies:\n        - identifybook\n        arguments:\n          parameters:\n          - name: BookGenre\n            value: '{{{{ tasks.identifybook.result.book_details.genre }}}}'\n          - name: AuthorDetails\n            value: '{{{{ tasks.identifybook.result.book_details.author }}}}'\n  - name: identifybook\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"genre\\\": \\\"Fiction\\\", \\\"author\\\": \\\"Herman Melville\\\"}'\"]\n  - name: getsimilarbooks\n    inputs:\n      parameters:\n      - name: BookGenre\n      - name: AuthorDetails\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '[\\\"Book1\\\", \\\"Book2\\\"]'\"]\n  inputs:\n    parameters:\n    - name: title\n      value: 'Moby Dick'"
  },
  {
    "Id": 632,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getuserpreferences\n        template: getuserpreferences\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: movierecommender\n        template: movierecommender\n        dependencies:\n        - getuserpreferences\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ tasks.getuserpreferences.result }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - movierecommender\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.movierecommender.result }}}}'\n          - name: showtime\n            value: '{{{{ inputs.parameters.showtime }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getuserpreferences\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Action'\"]\n  - name: movierecommender\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fast & Furious'\"]\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Alex'\n    - name: showtime\n      value: 'Sunday 7 PM'\n    - name: number_of_tickets\n      value: '1'"
  },
  {
    "Id": 633,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getuserfavoritegenre\n        template: getuserfavoritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: findmovie\n        template: findmovie\n        dependencies:\n        - getuserfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ tasks.getuserfavoritegenre.result }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.findmovie.result }}}}'\n          - name: showtime\n            value: '{{{{ inputs.parameters.showtime }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getuserfavoritegenre\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Action'\"]\n  - name: findmovie\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Avengers'\"]\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Sarah'\n    - name: showtime\n      value: 'Sunday 7 PM'\n    - name: number_of_tickets\n      value: '1'"
  },
  {
    "Id": 636,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getfavouritecuisine\n        template: getfavouritecuisine\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findrestaurant\n        template: findrestaurant\n        dependencies:\n        - getfavouritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ tasks.getfavouritecuisine.result }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: getfavouritecuisine\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/getfavouritecuisine:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Italian'\"]\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n    container:\n      image: myregistry/findrestaurant:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Luigi's Italian Bistro'\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: myregistry/booktable:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking confirmed'\"]"
  },
  {
    "Id": 637,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchfavouritecuisine\n        template: fetchfavouritecuisine\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: findrestaurant\n        template: findrestaurant\n        dependencies:\n        - fetchfavouritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{{{ tasks.fetchfavouritecuisine.result }}}}'\n      - name: booktable\n        template: booktable\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: fetchfavouritecuisine\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/fetchfavouritecuisine:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"python fetch_favourite_cuisine.py --username {{inputs.parameters.username}}\"]\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: cuisine\n    container:\n      image: myregistry/findrestaurant:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"python find_restaurant.py --cuisine {{inputs.parameters.cuisine}}\"]\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: myregistry/booktable:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"python book_table.py --restaurant_name {{inputs.parameters.restaurant_name}} --date {{inputs.parameters.date}} --time {{inputs.parameters.time}}\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Michelle'\n    - name: date\n      value: 'next Wednesday'\n    - name: time\n      value: '19:00'"
  },
  {
    "Id": 639,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print('Booking at', '{{{{ inputs.parameters.restaurant_name }}}}', 'on', '{{{{ inputs.parameters.date }}}}', 'at', '{{{{ inputs.parameters.time }}}}')\"]\n  arguments:\n    parameters:\n    - name: restaurant_name\n      value: 'Favorite Seafood Restaurant'\n    - name: date\n      value: 'Next Friday'\n    - name: time\n      value: '1pm'"
  },
  {
    "Id": 640,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getrestaurantid\n        template: getrestaurantid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - getrestaurantid\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{{{ tasks.getrestaurantid.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: getrestaurantid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: reservetable\n    inputs:\n      parameters:\n      - name: restaurant_ID\n      - name: date\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation made'\"]"
  },
  {
    "Id": 645,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-475-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getservicestationnearme\n        template: getservicestationnearme\n        arguments:\n          parameters:\n          - name: user_location\n            value: '{{{{ inputs.parameters.user_location }}}}'\n      - name: bookcarservice\n        template: bookcarservice\n        dependencies:\n        - getservicestationnearme\n        arguments:\n          parameters:\n          - name: car_id\n            value: '{{{{ inputs.parameters.car_id }}}}'\n          - name: service_station_id\n            value: '{{{{ tasks.getservicestationnearme.result }}}}'\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n  - name: getservicestationnearme\n    inputs:\n      parameters:\n      - name: user_location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'service_station_id' > /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  - name: bookcarservice\n    inputs:\n      parameters:\n      - name: car_id\n      - name: service_station_id\n      - name: user_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'booking_status' > /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n"
  },
  {
    "Id": 740,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-11122-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchbusschedule\n        template: fetchbusschedule\n        arguments:\n          parameters:\n          - name: bus_number\n            value: '{{{{ inputs.parameters.bus_number }}}}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - fetchbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n          - name: bus_schedule_info\n            value: '{{{{ tasks.fetchbusschedule.result }}}}'\n  - name: fetchbusschedule\n    inputs:\n      parameters:\n      - name: bus_number\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; print(json.dumps({'bus_info': 'Bus 22C schedule info'}))\"]\n  - name: bookbusseat\n    inputs:\n      parameters:\n      - name: user_name\n      - name: bus_schedule_info\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import json; print(json.dumps({'booking_status': 'Seat booked successfully'}))\"]\n  arguments:\n    parameters:\n    - name: user_name\n      value: '11122'\n    - name: bus_number\n      value: '22C'"
  },
  {
    "Id": 741,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33344-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchbusschedule\n        template: fetchbusschedule\n        arguments:\n          parameters:\n          - name: bus_number\n            value: '{{{{ inputs.parameters.bus_number }}}}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - fetchbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n          - name: bus_schedule_info\n            value: '{{{{ tasks.fetchbusschedule.result }}}}'\n  - name: fetchbusschedule\n    inputs:\n      parameters:\n      - name: bus_number\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print('Bus schedule info for', '{{{{ inputs.parameters.bus_number }}}}')\"]\n  - name: bookbusseat\n    inputs:\n      parameters:\n      - name: user_name\n      - name: bus_schedule_info\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import requests; print('Booking seat for', '{{{{ inputs.parameters.user_name }}}}', 'on', '{{{{ inputs.parameters.bus_schedule_info }}}}')\"]"
  },
  {
    "Id": 743,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-77x-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchbusschedule\n        template: fetchbusschedule\n        arguments:\n          parameters:\n          - name: bus_number\n            value: '{{{{ inputs.parameters.bus_number }}}}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - fetchbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n          - name: bus_schedule_info\n            value: '{{{{ tasks.fetchbusschedule.result }}}}'\n  - name: fetchbusschedule\n    inputs:\n      parameters:\n      - name: bus_number\n    container:\n      image: python:3.8\n      command: [\"python\"]\n      args: [\"-c\", \"import requests; print('Bus schedule info for', '{{{{ inputs.parameters.bus_number }}}}')\"]\n  - name: bookbusseat\n    inputs:\n      parameters:\n      - name: user_name\n      - name: bus_schedule_info\n    container:\n      image: python:3.8\n      command: [\"python\"]\n      args: [\"-c\", \"import requests; print('Booking seat for', '{{{{ inputs.parameters.user_name }}}}', 'on', '{{{{ inputs.parameters.bus_schedule_info }}}}')\"]"
  },
  {
    "Id": 776,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-738-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getconcerts\n        template: getconcerts\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - getconcerts\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.getconcerts.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: getconcerts\n    inputs:\n      parameters:\n      - name: venue\n    http:\n      url: \"http://example.com/musicconcert\"\n      method: \"GET\"\n      parameters:\n      - name: venue\n        value: '{{ inputs.parameters.venue }}'\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: \"http://example.com/bookeventticket\"\n      method: \"POST\"\n      parameters:\n      - name: event_ID\n        value: '{{ inputs.parameters.event_ID }}'\n      - name: venue_ID\n        value: '{{ inputs.parameters.venue_ID }}'\n      - name: date\n        value: '{{ inputs.parameters.date }}'"
  },
  {
    "Id": 780,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstudentid\n        template: getstudentid\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{{{ inputs.parameters.student_name }}}}'\n      - name: getcourseid\n        template: getcourseid\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{{{ inputs.parameters.course_name }}}}'\n      - name: getinstructorid\n        template: getinstructorid\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{{{ inputs.parameters.instructor_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - getstudentid\n        - getcourseid\n        - getinstructorid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.getstudentid.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.getcourseid.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: getstudentid\n    inputs:\n      parameters:\n      - name: student_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import sys; print('123')\"]\n  - name: getcourseid\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import sys; print('456')\"]\n  - name: getinstructorid\n    inputs:\n      parameters:\n      - name: instructor_name\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import sys; print('789')\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: python:3.8\n      command: [\"python\", \"-c\"]\n      args: [\"import sys; print('Enrolled successfully')\"]\n"
  },
  {
    "Id": 862,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{ inputs.parameters.age }}'\n          - name: gender\n            value: '{{ inputs.parameters.gender }}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getdietplan\n        - getexerciseroutine\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{ tasks.getdietplan.result }}'\n          - name: ExerciseRoutine\n            value: '{{ tasks.getexerciseroutine.result }}'\n  - name: gethealthinformation\n    inputs:\n      parameters:\n      - name: age\n      - name: gender\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'HealthInformation'\"]\n  - name: getdietplan\n    inputs:\n      parameters:\n      - name: HealthInformation\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'DietPlan'\"]\n  - name: getexerciseroutine\n    inputs:\n      parameters:\n      - name: HealthInformation\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'ExerciseRoutine'\"]\n  - name: createwellnessplan\n    inputs:\n      parameters:\n      - name: DietPlan\n      - name: ExerciseRoutine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'WellnessPlan'\"]"
  },
  {
    "Id": 872,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-laptop-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: calculate-shipping\n        template: calculate-shipping\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: purchase-item\n        template: purchase-item\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"]\n  - name: calculate-shipping\n    inputs:\n      parameters:\n      - name: productID\n      - name: location\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 15.99\"]\n  - name: purchase-item\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Purchase successful'\"]\n  arguments:\n    parameters:\n    - name: username\n    - name: product_ID\n    - name: location\n    - name: quantity"
  },
  {
    "Id": 873,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-refrigerator-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: orderproduct\n        template: orderproduct\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '54321'\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: quantity\n            value: '1'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/getuserid:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"]\n  - name: orderproduct\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: user_ID\n      - name: quantity\n    container:\n      image: myregistry/orderproduct:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Order placed successfully'\"]"
  },
  {
    "Id": 877,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findaccommodation\n        template: findaccommodation\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: budget\n            value: '{{{{ inputs.parameters.budget }}}}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - getmealcost\n        - getsightseeingcost\n        - findaccommodation\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{{{ tasks.findaccommodation.result }}}}'\n          - name: mealCost\n            value: '{{{{ tasks.getmealcost.result }}}}'\n          - name: sightSeeingCost\n            value: '{{{{ tasks.getsightseeingcost.result }}}}'\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"]\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 150\"]\n  - name: findaccommodation\n    inputs:\n      parameters:\n      - name: destination\n      - name: budget\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 200\"]\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(({{{{ inputs.parameters.roomRate }}}} + {{{{ inputs.parameters.mealCost }}}} + {{{{ inputs.parameters.sightSeeingCost }}}}))\"]"
  },
  {
    "Id": 878,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ inputs.parameters.roomRate }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 50\"] # Mocked response for meal cost\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"] # Mocked response for sightseeing cost\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $((${{inputs.parameters.roomRate}} + ${{inputs.parameters.mealCost}} + ${{inputs.parameters.sightSeeingCost}}))\"]"
  },
  {
    "Id": 879,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getSightSeeingCost\n        template: getSightSeeingCost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getMealCost\n        template: getMealCost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: calculateVacationCost\n        template: calculateVacationCost\n        dependencies:\n        - getSightSeeingCost\n        - getMealCost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{{{ inputs.parameters.roomRate }}}}'\n          - name: mealCost\n            value: '{{{{ tasks.getMealCost.result }}}}'\n          - name: sightSeeingCost\n            value: '{{{{ tasks.getSightSeeingCost.result }}}}'\n  - name: getSightSeeingCost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"]\n  - name: getMealCost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 50\"]\n  - name: calculateVacationCost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $((${{inputs.parameters.roomRate}} + ${{inputs.parameters.mealCost}} + ${{inputs.parameters.sightSeeingCost}}))\"]\n"
  },
  {
    "Id": 887,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: outdooractivityrecommend\n        template: outdooractivityrecommend\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findchineserestaurant\n        template: findchineserestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - getweather\n        - outdooractivityrecommend\n        - findchineserestaurant\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: activities\n            value: '{{{{ tasks.outdooractivityrecommend.result }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ tasks.findchineserestaurant.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: outdooractivityrecommend\n    http:\n      url: \"http://activityapi.com/recommend?city={{{{ inputs.parameters.city }}}}&weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: findchineserestaurant\n    http:\n      url: \"http://restaurantapi.com/find?city={{{{ inputs.parameters.city }}}}&cuisine=Chinese\"\n      method: GET\n  - name: tripplanner\n    http:\n      url: \"http://tripplannerapi.com/plan?weather={{{{ tasks.getweather.result }}}}&activities={{{{ tasks.outdooractivityrecommend.result }}}}&restaurant={{{{ tasks.findchineserestaurant.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'London'"
  },
  {
    "Id": 889,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-627-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: outdooractivityrecommend\n        template: outdooractivityrecommend\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - outdooractivityrecommend\n        - restaurantrecommend\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ tasks.checkweather.result }}}}'\n          - name: activities\n            value: '{{{{ tasks.outdooractivityrecommend.result }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ tasks.restaurantrecommend.result }}}}'\n  - name: checkweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: checkweather-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'sunny'\"]\n  - name: outdooractivityrecommend\n    inputs:\n      parameters:\n      - name: city\n      - name: weather\n    container:\n      image: outdooractivityrecommend-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'hiking'\"]\n  - name: restaurantrecommend\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    container:\n      image: restaurantrecommend-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Italian Bistro'\"]\n  - name: tripplanner\n    inputs:\n      parameters:\n      - name: weather_forecast\n      - name: activities\n      - name: suggested_restaurant\n    container:\n      image: tripplanner-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Trip planned with hiking and Italian Bistro'\"]\n  inputs:\n    parameters:\n    - name: city\n    - name: cuisine"
  },
  {
    "Id": 972,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-512-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: openparks\n        template: openparks\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: foodfestival\n        template: foodfestival\n        dependencies:\n        - openparks\n        arguments:\n          parameters:\n          - name: park\n            value: '{{{{ tasks.openparks.result }}}}'\n  - name: openparks\n    inputs:\n      parameters:\n      - name: city\n      - name: time\n    http:\n      url: http://example.com/openparks\n      method: GET\n  - name: foodfestival\n    inputs:\n      parameters:\n      - name: park\n    http:\n      url: http://example.com/foodfestival\n      method: GET"
  },
  {
    "Id": 1089,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-10001-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{{{ inputs.parameters.zipcode }}}}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.checkweather.result }}}}'\n      - name: findstore\n        template: findstore\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{{{ tasks.suggestoutfit.result }}}}'"
  },
  {
    "Id": 1129,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-cost-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getRestaurantPriceRange\n        template: getRestaurantPriceRange\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: restaurant\n            value: '{{{{ inputs.parameters.restaurant }}}}'\n      - name: calculateTransportFare\n        template: calculateTransportFare\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: calculateTotalDinnerCost\n        template: calculateTotalDinnerCost\n        dependencies:\n        - getRestaurantPriceRange\n        - calculateTransportFare\n        arguments:\n          parameters:\n          - name: restaurantPriceRange\n            value: '{{{{ tasks.getRestaurantPriceRange.result }}}}'\n          - name: transportFare\n            value: '{{{{ tasks.calculateTransportFare.result }}}}'\n  - name: getRestaurantPriceRange\n    inputs:\n      parameters:\n      - name: city\n      - name: restaurant\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Price range for restaurant' > /tmp/output\"]\n  - name: calculateTransportFare\n    inputs:\n      parameters:\n      - name: city\n      - name: destination\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Transport fare' > /tmp/output\"]\n  - name: calculateTotalDinnerCost\n    inputs:\n      parameters:\n      - name: restaurantPriceRange\n      - name: transportFare\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Total dinner cost' > /tmp/output\"]"
  },
  {
    "Id": 1153,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: business-trip-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: 'San Francisco'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getavailablecars\n        template: getavailablecars\n        arguments:\n          parameters:\n          - name: city\n            value: 'San Francisco'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getconferences\n        template: getconferences\n        arguments:\n          parameters:\n          - name: city\n            value: 'San Francisco'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: planbusiness\n        template: BusinessTripPlanner\n        dependencies:\n        - getweather\n        - getavailablecars\n        - getconferences\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: available_cars\n            value: '{{ tasks.getavailablecars.result }}'\n          - name: conferences\n            value: '{{ tasks.getconferences.result }}'"
  },
  {
    "Id": 1168,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{{{ inputs.parameters.zipcode }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - dresssuggestion\n        arguments:\n          parameters:\n          - name: dress\n            value: '{{{{ tasks.dresssuggestion.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/forecast?zipcode={{{{ inputs.parameters.zipcode }}}}&day=nextMonday\"\n      method: GET\n  - name: getclothingadvice\n    http:\n      url: \"http://clothingadviceapi.com/advice?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET\n  - name: dresssuggestion\n    http:\n      url: \"http://dresssuggestionapi.com/suggest?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET\n  - name: findclothingstore\n    http:\n      url: \"http://clothingstoreapi.com/find?dress={{{{ inputs.parameters.dress }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: zipcode\n      value: '80014'"
  },
  {
    "Id": 1169,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{{{ inputs.parameters.zipcode }}}}'\n      - name: getsuitableclothing\n        template: getsuitableclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weatherForecast\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - getsuitableclothing\n        arguments:\n          parameters:\n          - name: clothing\n            value: '{{{{ tasks.getsuitableclothing.result }}}}'"
  },
  {
    "Id": 1170,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{{{ inputs.parameters.zipcode }}}}'\n      - name: getsuitableclothing\n        template: getsuitableclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weatherForecast\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - getsuitableclothing\n        arguments:\n          parameters:\n          - name: clothing\n            value: '{{{{ tasks.getsuitableclothing.result }}}}'"
  },
  {
    "Id": 1171,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-outfit-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: zipcode\n            value: '{{{{ inputs.parameters.zipcode }}}}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: shoppingassistant\n        template: shoppingassistant\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{{{ tasks.suggestoutfit.result }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: zipcode\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/forecast?zip={{inputs.parameters.zipcode}}&day=friday'\"]\n  - name: suggestoutfit\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: outfit-recommender-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://outfitapi.com/recommend?weather={{inputs.parameters.weather}}'\"]\n  - name: shoppingassistant\n    inputs:\n      parameters:\n      - name: outfit\n      - name: city\n    container:\n      image: shopping-assistant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://shoppingapi.com/findstore?outfit={{inputs.parameters.outfit}}&city={{inputs.parameters.city}}'\"]"
  },
  {
    "Id": 1316,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: property-cost-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpropertyprice\n        template: getpropertyprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: propertyType\n            value: '{{{{ inputs.parameters.propertyType }}}}'\n      - name: calculatemortgagepayment\n        template: calculatemortgagepayment\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{{{ tasks.getpropertyprice.result }}}}'\n          - name: downPayment\n            value: '{{{{ inputs.parameters.downPayment }}}}'\n          - name: interestRate\n            value: '{{{{ inputs.parameters.interestRate }}}}'\n          - name: term\n            value: '{{{{ inputs.parameters.term }}}}'\n      - name: estimatetax\n        template: estimatetax\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{{{ tasks.getpropertyprice.result }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: calculateownershipcost\n        template: calculateownershipcost\n        dependencies:\n        - calculatemortgagepayment\n        - estimatetax\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{{{ tasks.calculatemortgagepayment.result }}}}'\n          - name: tax\n            value: '{{{{ tasks.estimatetax.result }}}}'\n  - name: getpropertyprice\n    inputs:\n      parameters:\n      - name: city\n      - name: propertyType\n    http:\n      url: \"http://realestateapi.com/getPrice\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n      - name: propertyType\n        value: '{{{{ inputs.parameters.propertyType }}}}'\n  - name: calculatemortgagepayment\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: downPayment\n      - name: interestRate\n      - name: term\n    http:\n      url: \"http://mortgageapi.com/calculatePayment\"\n      method: \"POST\"\n      parameters:\n      - name: propertyPrice\n        value: '{{{{ inputs.parameters.propertyPrice }}}}'\n      - name: downPayment\n        value: '{{{{ inputs.parameters.downPayment }}}}'\n      - name: interestRate\n        value: '{{{{ inputs.parameters.interestRate }}}}'\n      - name: term\n        value: '{{{{ inputs.parameters.term }}}}'\n  - name: estimatetax\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: city\n    http:\n      url: \"http://taxapi.com/estimate\"\n      method: \"GET\"\n      parameters:\n      - name: propertyPrice\n        value: '{{{{ inputs.parameters.propertyPrice }}}}'\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: calculateownershipcost\n    inputs:\n      parameters:\n      - name: mortgagePayment\n      - name: tax\n    http:\n      url: \"http://ownershipcostapi.com/calculate\"\n      method: \"POST\"\n      parameters:\n      - name: mortgagePayment\n        value: '{{{{ inputs.parameters.mortgagePayment }}}}'\n      - name: tax\n        value: '{{{{ inputs.parameters.tax }}}}'"
  },
  {
    "Id": 1317,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: property-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpropertyprice\n        template: getpropertyprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: propertyType\n            value: '{{{{ inputs.parameters.propertyType }}}}'\n      - name: calculatemortgage\n        template: calculatemortgage\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{{{ tasks.getpropertyprice.result }}}}'\n          - name: downPayment\n            value: '{{{{ inputs.parameters.downPayment }}}}'\n          - name: interestRate\n            value: '{{{{ inputs.parameters.interestRate }}}}'\n          - name: term\n            value: '{{{{ inputs.parameters.term }}}}'\n      - name: estimatetax\n        template: estimatetax\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{{{ tasks.getpropertyprice.result }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: calculateownershipcost\n        template: calculateownershipcost\n        dependencies:\n        - calculatemortgage\n        - estimatetax\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{{{ tasks.calculatemortgage.result }}}}'\n          - name: tax\n            value: '{{{{ tasks.estimatetax.result }}}}'\n  - name: getpropertyprice\n    inputs:\n      parameters:\n      - name: city\n      - name: propertyType\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 500000\"]\n  - name: calculatemortgage\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: downPayment\n      - name: interestRate\n      - name: term\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1500\"]\n  - name: estimatetax\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: city\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 3000\"]\n  - name: calculateownershipcost\n    inputs:\n      parameters:\n      - name: mortgagePayment\n      - name: tax\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1800\"]\n"
  },
  {
    "Id": 1363,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getcurrentweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getcurrentweather.result }}'\n      - name: findclothingstore\n        template: findclothingstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: clothing\n            value: '{{ tasks.recommendclothing.result }}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://api.weather.com/v3/wx/conditions/current?city={{ inputs.parameters.city }}&apiKey=your_api_key'\"]\n  - name: recommendclothing\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: clothing-recommendation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://api.clothingrecommendation.com/recommend?weather={{ inputs.parameters.weather }}'\"]\n  - name: findclothingstore\n    inputs:\n      parameters:\n      - name: clothing\n    container:\n      image: clothing-store-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://api.clothingstore.com/find?clothing={{ inputs.parameters.clothing }}'\"]"
  },
  {
    "Id": 1423,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: inquireweather\n        template: inquireweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: searchflight\n        template: searchflight\n        dependencies:\n        - inquireweather\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: getflightid\n        template: getflightid\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_options\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: weather_status\n            value: '{{{{ tasks.inquireweather.result }}}}'\n  - name: inquireweather\n    inputs:\n      parameters:\n      - name: location\n      - name: date\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://weatherapi.com/inquire?location={{inputs.parameters.location}}&date={{inputs.parameters.date}}'\"]\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: flight-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://flightapi.com/search?from={{inputs.parameters.from_location}}&to={{inputs.parameters.to_location}}&date={{inputs.parameters.date}}'\"]\n  - name: getflightid\n    inputs:\n      parameters:\n      - name: flight_options\n      - name: weather_status\n    container:\n      image: flight-id-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST 'http://flightidapi.com/getid' -d '{\"flight_options\": {{inputs.parameters.flight_options}}, \"weather_status\": {{inputs.parameters.weather_status}}}'\"]"
  },
  {
    "Id": 1424,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findflights\n        template: findflights\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ inputs.parameters.city1 }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.city2 }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.findflights.result }}}}'\n          - name: hotel\n            value: '{{{{ inputs.parameters.hotel }}}}'\n  - name: checkweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://weatherapi.com/check?city={{inputs.parameters.city}}'\"]\n  - name: findflights\n    inputs:\n      parameters:\n      - name: city1\n      - name: city2\n      - name: date\n    container:\n      image: flight-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://flightapi.com/find?from={{inputs.parameters.city1}}&to={{inputs.parameters.city2}}&date={{inputs.parameters.date}}'\"]\n  - name: booktrip\n    inputs:\n      parameters:\n      - name: flight\n      - name: hotel\n    container:\n      image: booking-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST 'http://bookingapi.com/book' -d '{\"flight\": \"{{inputs.parameters.flight}}\", \"hotel\": \"{{inputs.parameters.hotel}}\"}'\"]\n"
  },
  {
    "Id": 1468,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: recommendoutfit\n        template: recommendoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - recommendoutfit\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.recommendoutfit.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  - name: recommendoutfit\n    http:\n      url: \"http://fashionapi.com/recommendOutfit?weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: planoutfit\n    http:\n      url: \"http://fashionapi.com/planOutfit?event={{{{ inputs.parameters.event }}}}&outfit={{{{ tasks.recommendoutfit.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: location\n      value: 'Rome'\n    - name: event\n      value: 'dinner date'"
  },
  {
    "Id": 1469,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: planoutfit\n        template: planoutfit\n        dependencies:\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: event\n            value: '{{{{ inputs.parameters.event }}}}'\n          - name: outfit\n            value: '{{{{ tasks.getclothingadvice.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?location={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  - name: getclothingadvice\n    http:\n      url: \"http://clothingadviceapi.com/getAdvice?weather={{{{ tasks.getweather.result }}}}\"\n      method: GET\n  - name: planoutfit\n    http:\n      url: \"http://planoutfitapi.com/plan?event={{{{ inputs.parameters.event }}}}&outfit={{{{ tasks.getclothingadvice.result }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: location\n      value: 'Tokyo'\n    - name: event\n      value: 'conference'"
  },
  {
    "Id": 1500,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: notification-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: emailnotification\n        template: emailnotification\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: message\n            value: 'The price of the book with ISBN 978-3-16-148410-0 is ${{{{ inputs.parameters.price }}}}.'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/getuserid:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '12345'\"]\n  - name: emailnotification\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: message\n    container:\n      image: myregistry/emailnotification:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Notification sent'\"]"
  },
  {
    "Id": 1514,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-773-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: userpreference\n        template: userpreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: recommenddrink\n        template: recommenddrink\n        dependencies:\n        - userpreference\n        arguments:\n          parameters:\n          - name: user_preference\n            value: '{{{{ tasks.userpreference.result }}}}'\n  - name: userpreference\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_name }}\"]\n  - name: recommenddrink\n    inputs:\n      parameters:\n      - name: user_preference\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_preference }}\"]"
  },
  {
    "Id": 1519,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: notification-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: emailnotification\n        template: emailnotification\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: message\n            value: 'The price of the book with ISBN 978-3-16-148410-0 is ${{{{ inputs.parameters.price }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: myregistry/getuserid:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '12345'\"]\n  - name: emailnotification\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: message\n    container:\n      image: myregistry/emailnotification:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Notification sent'\"]"
  },
  {
    "Id": 1520,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: schedule-meeting-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuseremail\n        template: getuseremail\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: schedulemeeting\n        template: schedulemeeting\n        dependencies:\n        - getuseremail\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ tasks.getuseremail.result }}}}'\n          - name: start_time\n            value: '{{{{ inputs.parameters.start_time }}}}'\n          - name: end_time\n            value: '{{{{ inputs.parameters.end_time }}}}'\n          - name: timezone\n            value: '{{{{ inputs.parameters.timezone }}}}'\n  - name: getuseremail\n    inputs:\n      parameters:\n      - name: username\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to convert username to email\n        def username_to_email(username):\n            return f\"{username}@example.com\"\n        \n        print(username_to_email('{{{{ inputs.parameters.username }}}}'))\n  - name: schedulemeeting\n    inputs:\n      parameters:\n      - name: user_email\n      - name: start_time\n      - name: end_time\n      - name: timezone\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to schedule a meeting\n        def schedule_meeting(user_email, start_time, end_time, timezone):\n            return \"Meeting scheduled successfully\"\n        \n        print(schedule_meeting('{{{{ inputs.parameters.user_email }}}}', '{{{{ inputs.parameters.start_time }}}}', '{{{{ inputs.parameters.end_time }}}}', '{{{{ inputs.parameters.timezone }}}}'))"
  },
  {
    "Id": 1525,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-793-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movietitle\n            value: '{{{{ inputs.parameters.movietitle }}}}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: movie_ID\n            value: '{{{{ tasks.getmovieid.result }}}}'\n      - name: notifyuser\n        template: notifyuser\n        dependencies:\n        - addtowatchlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: message\n            value: 'The movie has been added to your watchlist.'"
  },
  {
    "Id": 1537,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-outing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcinema\n        template: getcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - getcinema\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{{{ tasks.getcinema.result }}}}'\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: checktime\n        template: checktime\n        dependencies:\n        - getcinema\n        arguments:\n          parameters:\n          - name: cinema_name\n            value: '{{{{ tasks.getcinema.result }}}}'\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: calculatetotalmovieoutingtime\n        template: calculatetotalmovieoutingtime\n        dependencies:\n        - checktime\n        arguments:\n          parameters:\n          - name: travelTime\n            value: '{{{{ inputs.parameters.travelTime }}}}'\n          - name: movieLength\n            value: '{{{{ inputs.parameters.movieLength }}}}'\n  - name: getcinema\n    inputs:\n      parameters:\n      - name: city\n      - name: movie\n    container:\n      image: my-cinema-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://cinema.api/get?city={{inputs.parameters.city}}&movie={{inputs.parameters.movie}}'\"]\n  - name: getticketprice\n    inputs:\n      parameters:\n      - name: cinema\n      - name: movie\n    container:\n      image: my-ticket-price-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://ticketprice.api/get?cinema={{inputs.parameters.cinema}}&movie={{inputs.parameters.movie}}'\"]\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    container:\n      image: my-showtime-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://showtime.api/find?movie_name={{inputs.parameters.movie_name}}&location={{inputs.parameters.location}}&date={{inputs.parameters.date}}'\"]\n  - name: checktime\n    inputs:\n      parameters:\n      - name: cinema_name\n      - name: movie\n    container:\n      image: my-checktime-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://checktime.api/check?cinema_name={{inputs.parameters.cinema_name}}&movie={{inputs.parameters.movie}}'\"]\n  - name: calculatetotalmovieoutingtime\n    inputs:\n      parameters:\n      - name: travelTime\n      - name: movieLength\n    container:\n      image: my-calculate-time-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://calculateoutingtime.api/calculate?travelTime={{inputs.parameters.travelTime}}&movieLength={{inputs.parameters.movieLength}}'\"]\n"
  },
  {
    "Id": 1542,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1542-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflights\n        template: findflights\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: city1\n            value: '{{{{ tasks.fetchcity.result }}}}'\n          - name: city2\n            value: '{{{{ inputs.parameters.city2 }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: flightbooking\n        template: flightbooking\n        dependencies:\n        - findflights\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ tasks.fetchcity.result }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.city2 }}}}'\n          - name: departure_date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: return_date\n            value: '{{{{ inputs.parameters.return_date }}}}'\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'"
  },
  {
    "Id": 1545,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-187-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserfavoritefood\n        template: getuserfavoritefood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - getuserfavoritefood\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getuserfavoritefood.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: getuserfavoritefood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.user_name }}' | GetUserFavoriteFood\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant_name }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}' | BookRestaurant\"]"
  },
  {
    "Id": 1546,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{{{ inputs.parameters.user_id }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - fetchuserplaylist\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ tasks.fetchuserplaylist.result }}}}'\n      - name: songname2id\n        template: songname2id\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{{{ tasks.recommendsong.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ inputs.parameters.user_id }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songname2id.result }}}}'\n  - name: fetchuserplaylist\n    inputs:\n      parameters:\n      - name: user_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'fetching playlist for user' $0\", \"{{{{ inputs.parameters.user_id }}}}\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'recommending song based on mood' $0\", \"{{{{ inputs.parameters.user_mood }}}}\"]\n  - name: songname2id\n    inputs:\n      parameters:\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'converting song name to ID' $0\", \"{{{{ inputs.parameters.song_name }}}}\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'playing song for user' $0 with song ID $1\", \"{{{{ inputs.parameters.user_ID }}}}\", \"{{{{ inputs.parameters.song_ID }}}}\"]\n"
  },
  {
    "Id": 1547,
    "status": "Success",
    "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{{{ tasks.getuserid.result }}}}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - fetchuserplaylist\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{{{ inputs.parameters.user_mood }}}}'\n      - name: songtitletoid\n        template: songtitletoid\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ tasks.recommendsong.result }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songtitletoid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: fetchuserplaylist\n    inputs:\n      parameters:\n      - name: user_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo playlist\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'suggested song'\"]\n  - name: songtitletoid\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'playing song'\"]"
  }
]