[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{{{ inputs.parameters.playlist_name }}}}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.playlistname2id.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Tom'\n    - name: playlist_name\n      value: 'Latin Fiesta'\n    - name: song_name\n      value: 'Dancing Queen'"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{{{ inputs.parameters.playlist_name }}}}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.playlistname2id.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'John'\n    - name: playlist_name\n      value: 'Rock Ballads'\n    - name: song_name\n      value: 'Space Oddity'"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{{{ inputs.parameters.playlist_name }}}}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getuserid\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: playlist_ID\n            value: '{{{{ tasks.playlistname2id.result }}}}'\n          - name: song_name\n            value: '{{{{ inputs.parameters.song_name }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: playlistname2id\n    inputs:\n      parameters:\n      - name: playlist_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'Mia'\n    - name: playlist_name\n      value: 'Classic Disco Hits'\n    - name: song_name\n      value: 'Sweet Child of Mine'\"}"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchmovie\n        template: searchmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - searchmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.searchmovie.result }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.searchmovie.result }}}}'\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: searchmovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    container:\n      image: searchmovie-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding movie...' && sleep 1 && echo 'Drama Movie' > /tmp/movie_name\"]\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    container:\n      image: findshowtime-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding showtime...' && sleep 1 && echo '7:00 PM' > /tmp/showtime\"]\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: booktickets-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking tickets...' && sleep 1 && echo 'Booking Confirmed' > /tmp/booking_status\"]\n"}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.title2isbn.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo user-id-for-{{{{ inputs.parameters.username }}}}\"]\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo isbn-for-{{{{ inputs.parameters.title }}}}\"]\n  - name: buybook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: ISBN\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo purchase-status-for-{{{{ inputs.parameters.user_ID }}}}-{{{{ inputs.parameters.ISBN }}}}\"]"}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ inputs.parameters.user_email }}}}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{{{ inputs.parameters.course_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - email2userid\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.coursename2id.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: user_email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_email }} | some-command-to-get-user-id\"]\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.course_name }} | some-command-to-get-course-id\"]\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Enrolling {{ inputs.parameters.person_ID }} in {{ inputs.parameters.subject_ID }} for {{ inputs.parameters.semester }}\"]\n  arguments:\n    parameters:\n    - name: user_email\n      value: 'johndoe@gmail.com'\n    - name: course_name\n      value: 'Microeconomics'\n    - name: semester\n      value: 'Fall'"}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-64-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: studentname2id\n        template: studentname2id\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{{{ tasks.email2username.result }}}}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{{{ inputs.parameters.course_name }}}}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ tasks.studentname2id.result }}}}'\n          - name: subject_ID\n            value: '{{{{ tasks.coursename2id.result }}}}'\n          - name: semester\n            value: '{{{{ inputs.parameters.semester }}}}'\n  - name: email2username\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: email2username:latest\n  - name: studentname2id\n    inputs:\n      parameters:\n      - name: student_name\n    container:\n      image: studentname2id:latest\n  - name: coursename2id\n    inputs:\n      parameters:\n      - name: course_name\n    container:\n      image: coursename2id:latest\n  - name: enrollcourse\n    inputs:\n      parameters:\n      - name: person_ID\n      - name: subject_ID\n      - name: semester\n    container:\n      image: enrollcourse:latest"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: concert-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findconcert\n        template: findconcert\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{{{ inputs.parameters.venue }}}}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - findconcert\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{{{ tasks.findconcert.result }}}}'\n          - name: venue_ID\n            value: '{{{{ inputs.parameters.venue_ID }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: findconcert\n    inputs:\n      parameters:\n      - name: venue\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding concert at venue: {{inputs.parameters.venue}}'\"]\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking ticket for event ID: {{inputs.parameters.event_ID}} at venue ID: {{inputs.parameters.venue_ID}} on date: {{inputs.parameters.date}}'\"]"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findeventid\n        template: findeventid\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{{{ inputs.parameters.event_name }}}}'\n      - name: findvenueid\n        template: findvenueid\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - findeventid\n        - findvenueid\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{{{ tasks.findeventid.result }}}}'\n          - name: venue_ID\n            value: '{{{{ tasks.findvenueid.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  templates:\n  - name: findeventid\n    inputs:\n      parameters:\n      - name: event_name\n    http:\n      url: http://example.com/findeventid\n      method: GET\n      parameters:\n      - name: event_name\n        value: '{{{{ inputs.parameters.event_name }}}}'\n  - name: findvenueid\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findvenueid\n      method: GET\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    http:\n      url: http://example.com/bookeventticket\n      method: POST\n      parameters:\n      - name: event_ID\n        value: '{{{{ inputs.parameters.event_ID }}}}'\n      - name: venue_ID\n        value: '{{{{ inputs.parameters.venue_ID }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'"}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: getsupplierid\n        template: getsupplierid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{{{ inputs.parameters.supplier_name }}}}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - getproductid\n        - getsupplierid\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: supplier_ID\n            value: '{{{{ tasks.getsupplierid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getsupplierid\n    inputs:\n      parameters:\n      - name: supplier_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: placeorder\n    inputs:\n      parameters:\n      - name: item_ID\n      - name: supplier_ID\n      - name: quantity\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Order placed'\"]\n  arguments:\n    parameters:\n    - name: product_name\n      value: 'coffee mugs'\n    - name: supplier_name\n      value: 'KitchenPlus'\n    - name: quantity\n      value: '50'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: customer_name\n            value: '{{{{ inputs.parameters.customer_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getproductid\n        - getcustomerid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 12345\"] # Mocked product ID for Samsung Galaxy S21\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: customer_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 67890\"] # Mocked customer ID for Anthony\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Product added to cart'\"]\n  arguments:\n    parameters:\n    - name: product_name\n      value: 'Samsung Galaxy S21'\n    - name: customer_name\n      value: 'Anthony'\n    - name: quantity\n      value: '1'"}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findaccommodation\n        template: findaccommodation\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: budget\n            value: '{{{{ inputs.parameters.budget }}}}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - findhotel\n        - findaccommodation\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{{{ tasks.findhotel.result }}}}'\n          - name: restaurants\n            value: '{{{{ inputs.parameters.restaurants }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - plantrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ inputs.parameters.flight }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.findaccommodation.result }}}}'\n  - name: findhotel\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findhotel-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Hotel in {{inputs.parameters.city}}'\"]\n  - name: findaccommodation\n    inputs:\n      parameters:\n      - name: destination\n      - name: budget\n    container:\n      image: findaccommodation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Accommodation in {{inputs.parameters.destination}} with budget {{inputs.parameters.budget}}'\"]\n  - name: plantrip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    container:\n      image: plantrip-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Planning trip with hotel {{inputs.parameters.hotel}} and restaurants {{inputs.parameters.restaurants}}'\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: createtravelplan-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Creating travel plan with flight {{inputs.parameters.flight}} and accommodation {{inputs.parameters.accommodation}}'\"]\n  arguments:\n    parameters:\n    - name: city\n    - name: budget\n    - name: restaurants\n    - name: flight"}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{{{ inputs.parameters.localBudget }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n  - name: suggestdiningoptions\n    inputs:\n      parameters:\n      - name: localBudget\n      - name: location\n    container:\n      image: your-dining-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST -d '{\\\"localBudget\\\": \\\"{{inputs.parameters.localBudget}}\\\", \\\"location\\\": \\\"{{inputs.parameters.location}}\\\"}' http://your-dining-api-endpoint\"]"}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{{{ tasks.getproductid.result }}}}'\n          - name: customer_ID\n            value: '{{{{ tasks.getcustomerid.result }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: getcustomerid\n    inputs:\n      parameters:\n      - name: username\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to get customer ID from username\n        def get_customer_id(username):\n            return 123  # Mocked customer ID\n        print(get_customer_id('{{{{ inputs.parameters.username }}}}'))\n  - name: getproductid\n    inputs:\n      parameters:\n      - name: product_name\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to get product ID from product name\n        def get_product_id(product_name):\n            return 456  # Mocked product ID\n        print(get_product_id('{{{{ inputs.parameters.product_name }}}}'))\n  - name: addproducttocart\n    inputs:\n      parameters:\n      - name: product_ID\n      - name: customer_ID\n      - name: quantity\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to add product to cart\n        def add_product_to_cart(product_ID, customer_ID, quantity):\n            return 'Product added to cart successfully'\n        print(add_product_to_cart('{{{{ inputs.parameters.product_ID }}}}', '{{{{ inputs.parameters.customer_ID }}}}', '{{{{ inputs.parameters.quantity }}}}'))"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-206-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: rentmovie\n        template: rentmovie\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: movie_ID\n            value: '{{{{ tasks.getmovieid.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: getmovieid\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Simulating movie ID retrieval\n  - name: rentmovie\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Rental successful'\"] # Simulating movie rental"}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: songtitletoid\n        template: songtitletoid\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{{{ inputs.parameters.song_title }}}}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - getuserid\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: song_ID\n            value: '{{{{ tasks.songtitletoid.result }}}}'\n  templates:\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: songtitletoid\n    inputs:\n      parameters:\n      - name: song_title\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: playsong\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: song_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Playing song'\"]\n"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: menudetails\n        template: menudetails\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.getrestaurant.result }}}}'\n      - name: recommenddish\n        template: recommenddish\n        dependencies:\n        - menudetails\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.menudetails.result }}}}'\n  \n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'FindPopularDishes({{inputs.parameters.city}})' > /tmp/output.txt\"]\n\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'GetRestaurant({{inputs.parameters.city}}, {{inputs.parameters.cuisine}})' > /tmp/output.txt\"]\n\n  - name: menudetails\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'MenuDetails({{inputs.parameters.restaurant_name}})' > /tmp/output.txt\"]\n\n  - name: recommenddish\n    inputs:\n      parameters:\n      - name: menu\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'RecommendDish({{inputs.parameters.menu}})' > /tmp/output.txt\"]\n"}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: gethotelavailability\n        template: gethotelavailability\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: dates\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - gethotelavailability\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{{{ tasks.gethotelavailability.result }}}}'\n          - name: restaurants\n            value: '{{{{ inputs.parameters.restaurants }}}}'\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    http:\n      url: \"http://example.com/searchflight\"\n      method: \"GET\"\n  - name: gethotelavailability\n    inputs:\n      parameters:\n      - name: city\n      - name: dates\n    http:\n      url: \"http://example.com/gethotelavailability\"\n      method: \"GET\"\n  - name: plantrip\n    inputs:\n      parameters:\n      - name: hotel\n      - name: restaurants\n    http:\n      url: \"http://example.com/plantrip\"\n      method: \"POST\"\n  - name: arrangetransportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/arrangetransportation\"\n      method: \"POST\""}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookreview\n        template: getbookreview\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{{{ inputs.parameters.bookname }}}}'\n      - name: sharereview\n        template: sharereview\n        dependencies:\n        - getbookreview\n        arguments:\n          parameters:\n          - name: review\n            value: '{{{{ tasks.getbookreview.result }}}}'\n          - name: social_media_platform\n            value: '{{{{ inputs.parameters.social_media_platform }}}}'\n  - name: getbookreview\n    inputs:\n      parameters:\n      - name: bookname\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching review for {{inputs.parameters.bookname}}' && sleep 1 && echo 'Review content' > /tmp/review.txt\"]\n  - name: sharereview\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Sharing review on {{inputs.parameters.social_media_platform}}' && sleep 1 && echo 'Shared' > /tmp/share_status.txt\"]\n  arguments:\n    parameters:\n    - name: bookname\n      value: 'Harry Potter'\n    - name: social_media_platform\n      value: 'Facebook'"}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-confirmation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{{{ inputs.parameters.specialty }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: getappointment\n        template: getappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{{{ tasks.finddoctor.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - getappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{{{ tasks.getappointment.result }}}}'\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: \"http://example.com/finddoctor\"\n      method: \"GET\"\n  - name: getappointment\n    inputs:\n      parameters:\n      - name: doctor_id\n      - name: date\n    http:\n      url: \"http://example.com/getappointment\"\n      method: \"GET\"\n  - name: confirmappointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: \"http://example.com/confirmappointment\"\n      method: \"POST\""}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpurchaseinfo\n        template: getpurchaseinfo\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: getproductrating\n        template: getproductrating\n        dependencies:\n        - getpurchaseinfo\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{{{ tasks.getpurchaseinfo.result }}}}'\n          - name: number_of_ratings\n            value: '{{{{ inputs.parameters.number_of_ratings }}}}'\n  - name: getpurchaseinfo\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"purchase_info\\\": \\\"some_purchase_info_based_on_product_id\\\"}'\"]\n  - name: getproductrating\n    inputs:\n      parameters:\n      - name: purchase_info\n      - name: number_of_ratings\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"ratings\\\": [5, 4, 3, 5, 4, 5, 3, 4, 5, 4]}'\"]\n  arguments:\n    parameters:\n    - name: product_id\n      value: '56789'\n    - name: number_of_ratings\n      value: '10'"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: cinema-finder-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{{{ inputs.parameters.movieDetails }}}}'\n  - name: findnearestcinema\n    http:\n      url: <FindNearestCinema API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"movieDetails\": \"{{{{ inputs.parameters.movieDetails }}}}\"}'\n      successCondition: \"status == 200\"\n      output: \n        result: \n          jsonPath: \"$.cinemaLocation\""}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vegan-dining-suggestion-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmenu\n        template: getmenu\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ inputs.parameters.restaurant }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - getmenu\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.getmenu.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{{{ inputs.parameters.restaurant_info }}}}'\n          - name: food_list\n            value: '{{{{ tasks.suggestfood.result }}}}'\n  - name: getmenu\n    inputs:\n      parameters:\n      - name: restaurant\n    http:\n      url: http://example.com/getmenu\n      method: GET\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestfood\n      method: POST\n  - name: bestorder\n    inputs:\n      parameters:\n      - name: restaurant_info\n      - name: food_list\n    http:\n      url: http://example.com/bestorder\n      method: POST"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcoachellacoordinates\n        template: getcoachellacoordinates\n        arguments: {}\n      - name: predictweather\n        template: predictweather\n        dependencies:\n        - getcoachellacoordinates\n        arguments:\n          parameters:\n          - name: coordinates\n            value: '{{{{ tasks.getcoachellacoordinates.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n  - name: getcoachellacoordinates\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        print(\"33.6784,-116.2425\")  # Coachella coordinates\n  - name: predictweather\n    inputs:\n      parameters:\n      - name: coordinates\n      - name: date\n    http:\n      url: \"http://example.com/predictweather\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"coordinates\": \"{{{{ inputs.parameters.coordinates }}}}\", \"date\": \"{{{{ inputs.parameters.date }}}}\"}'"}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: author_name\n            value: '{{{{ inputs.parameters.author_name }}}}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_name\n            value: '{{{{ inputs.parameters.book_name }}}}'\n      - name: addbooktoauthor\n        template: addbooktoauthor\n        dependencies:\n        - getauthorid\n        - getbookid\n        arguments:\n          parameters:\n          - name: author_ID\n            value: '{{{{ tasks.getauthorid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.getbookid.result }}}}'\n  - name: getauthorid\n    inputs:\n      parameters:\n      - name: author_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1\"] # Simulating fetching author ID\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 2\"] # Simulating fetching book ID\n  - name: addbooktoauthor\n    inputs:\n      parameters:\n      - name: author_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Book added to author'\"]"}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: check-flight-availability\n        template: check-flight-availability\n        arguments:\n          parameters:\n          - name: flight_code\n            value: '{{{{ inputs.parameters.flight_code }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: book-flight\n        template: book-flight\n        dependencies:\n        - check-flight-availability\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{{{ tasks.check-flight-availability.result }}}}'\n          - name: preferred_flight_class\n            value: '{{{{ inputs.parameters.preferred_flight_class }}}}'\n  - name: check-flight-availability\n    inputs:\n      parameters:\n      - name: flight_code\n      - name: date\n    http:\n      url: \"http://example.com/check-flight-availability\"\n      method: \"GET\"\n  - name: book-flight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    http:\n      url: \"http://example.com/book-flight\"\n      method: \"POST\""}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recipe-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recipename2id\n        template: recipename2id\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{{{ inputs.parameters.recipe_name }}}}'\n      - name: ingredientname2id\n        template: ingredientname2id\n        arguments:\n          parameters:\n          - name: ingredient_name\n            value: '{{{{ inputs.parameters.ingredient_name }}}}'\n      - name: getrecipe\n        template: getrecipe\n        dependencies:\n        - recipename2id\n        - ingredientname2id\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{{{ tasks.recipename2id.result }}}}'\n          - name: ingredient_ID\n            value: '{{{{ tasks.ingredientname2id.result }}}}'\n  - name: recipename2id\n    inputs:\n      parameters:\n      - name: recipe_name\n    container:\n      image: my-recipe-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: ingredientname2id\n    inputs:\n      parameters:\n      - name: ingredient_name\n    container:\n      image: my-ingredient-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: getrecipe\n    inputs:\n      parameters:\n      - name: recipe_ID\n      - name: ingredient_ID\n    container:\n      image: my-getrecipe-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Chocolate Cake Recipe with Cocoa Powder'\"]\n  arguments:\n    parameters:\n    - name: recipe_name\n      value: 'Chocolate Cake'\n    - name: ingredient_name\n      value: 'Cocoa Powder'"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reserve-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - getbookid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ inputs.parameters.user_email }}}}'\n          - name: ISBN\n            value: '{{{{ tasks.getbookid.result }}}}'\n          - name: start_date\n            value: '{{{{ inputs.parameters.start_date }}}}'\n          - name: end_date\n            value: '{{{{ inputs.parameters.end_date }}}}'\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Simulate fetching book ID by title\n        book_title = '{{{{ inputs.parameters.book_title }}}}'\n        book_id = '1234567890'  # Simulated book ID\n        print(book_id)\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Simulate reserving a book\n        user_email = '{{{{ inputs.parameters.user_email }}}}'\n        ISBN = '{{{{ inputs.parameters.ISBN }}}}'\n        start_date = '{{{{ inputs.parameters.start_date }}}}'\n        end_date = '{{{{ inputs.parameters.end_date }}}}'\n        reservation_status = 'Reserved'  # Simulated reservation status\n        print(reservation_status)"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: booktitle2id\n        template: booktitle2id\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - email2userid\n        - booktitle2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.booktitle2id.result }}}}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'user_id' > /tmp/output\"]\n  - name: booktitle2id\n    inputs:\n      parameters:\n      - name: book_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'book_id' > /tmp/output\"]\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'borrow_status' > /tmp/output\"]"}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherinfo\n        template: getweatherinfo\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: generateweatherreport\n        template: generateweatherreport\n        dependencies:\n        - getweatherinfo\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{{{ tasks.getweatherinfo.result }}}}'\n  - name: getweatherinfo\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: generateweatherreport\n    inputs:\n      parameters:\n      - name: weather_data\n    http:\n      url: \"http://weatherapi.com/generateReport\"\n      method: POST\n      body: '{{{{ inputs.parameters.weather_data }}}}'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-193-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusercurrentweather\n        template: getusercurrentweather\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: weather2advice\n        template: weather2advice\n        dependencies:\n        - getusercurrentweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getusercurrentweather.result }}}}'\n  - name: getusercurrentweather\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating GetUserCurrentWeather API call'\"]\n  - name: weather2advice\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating Weather2Advice API call'\"]"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"GET\"\n  - name: bookmovieticket\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/bookmovieticket\"\n      method: \"POST\""}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - getbookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.getbookid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Borrowing book' $user_ID $book_ID\"]"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - getbookid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_ID\n            value: '{{{{ tasks.getbookid.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"] # Simulating book ID retrieval\n  - name: borrowbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_ID\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Borrowing book' $user_ID $book_ID\"]"}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ inputs.parameters.hotelname }}}}'\n          - name: number_of_rooms\n            value: '1'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.check_out_date }}}}'\n  - name: checkvacancy\n    inputs:\n      parameters:\n      - name: hotelname\n      - name: date\n    http:\n      url: \"http://example.com/checkvacancy\"\n      method: \"GET\"\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/roombooking\"\n      method: \"POST\""}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: return-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ inputs.parameters.user_email }}}}'\n      - name: isbn2bookname\n        template: isbn2bookname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{{{ inputs.parameters.ISBN }}}}'\n      - name: returnbook\n        template: returnbook\n        dependencies:\n        - getuserid\n        - isbn2bookname\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: book_name\n            value: '{{{{ tasks.isbn2bookname.result }}}}'\n  templates:\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: user_email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"] # Simulating user ID retrieval\n  - name: isbn2bookname\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Moby-Dick'\"] # Simulating book name retrieval\n  - name: returnbook\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: book_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Return successful'\"] # Simulating book return"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{{{ inputs.parameters.user_email }}}}'\n      - name: productname2id\n        template: productname2id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{{{ inputs.parameters.product_name }}}}'\n      - name: purchaseproduct\n        template: purchaseproduct\n        dependencies:\n        - email2userid\n        - productname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: product_ID\n            value: '{{{{ tasks.productname2id.result }}}}'\n          - name: quantity\n            value: '1'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: user_email\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: productname2id\n    inputs:\n      parameters:\n      - name: product_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: purchaseproduct\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'purchase successful'\"]\n  inputs:\n    parameters:\n    - name: user_email\n    - name: product_name\n"}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: movietitle2id\n        template: movietitle2id\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ inputs.parameters.movie_title }}}}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - movietitle2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: movie_ID\n            value: '{{{{ tasks.movietitle2id.result }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: movietitle2id\n    inputs:\n      parameters:\n      - name: movie_title\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addtowatchlist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: movie_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Added to watchlist'\"]\n  arguments:\n    parameters:\n    - name: username\n      value: 'sarah_sci'\n    - name: movie_title\n      value: 'Interstellar'"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-135-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: addbooktoreadinglist\n        template: addbooktoreadinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n  - name: addbooktoreadinglist\n    inputs:\n      parameters:\n      - name: user_name\n      - name: book_title\n    http:\n      url: <AddBookToReadingList API URL>\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"user_name\": \"{{{{ inputs.parameters.user_name }}}}\",\n          \"book_title\": \"{{{{ inputs.parameters.book_title }}}}\"\n        }"}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: booktable\n        template: booktable\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: booktable\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/booktable\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"restaurant_name\": \"{{{{ inputs.parameters.restaurant_name }}}}\",\n          \"date\": \"{{{{ inputs.parameters.date }}}}\",\n          \"time\": \"{{{{ inputs.parameters.time }}}}\"\n        }"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: getauthorname\n        template: getauthorname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{{{ inputs.parameters.ISBN }}}}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - getuserid\n        - getauthorname\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: author_name\n            value: '{{{{ tasks.getauthorname.result }}}}'\n      - name: schedulediscussion\n        template: schedulediscussion\n        dependencies:\n        - checkauthoravailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.getuserid.result }}}}'\n          - name: author_name\n            value: '{{{{ tasks.getauthorname.result }}}}'\n          - name: date_time\n            value: '{{{{ inputs.parameters.date_time }}}}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo user789\"]\n  - name: getauthorname\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Author Name'\"]\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Available'\"]\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Scheduled'\"]\n  inputs:\n    parameters:\n    - name: username\n    - name: ISBN\n    - name: date_time"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: 'New York'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: http://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=New%20York\n      method: GET\n  - name: recommendclothing\n    http:\n      url: http://api.clothingrecommendation.com/recommend\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\ngenerateName: trip-planning-workflow-\nspec:\nentrypoint: main\ntemplates:\n- name: main\ndag:\ntasks:\n- name: searchflight\n  template: searchflight\n  arguments:\n    parameters:\n    - name: from_location\n      value: '{{{{ inputs.parameters.from_location }}}}'\n    - name: to_location\n      value: '{{{{ inputs.parameters.to_location }}}}'\n    - name: date\n      value: '{{{{ inputs.parameters.date }}}}'\n- name: hotelavailability\n  template: hotelavailability\n  arguments:\n    parameters:\n    - name: city\n      value: '{{{{ inputs.parameters.to_location }}}}'\n    - name: date\n      value: '{{{{ inputs.parameters.date }}}}'\n- name: createtravelplan\n  template: createtravelplan\n  dependencies:\n  - searchflight\n  - hotelavailability\n  arguments:\n    parameters:\n    - name: flight\n      value: '{{{{ tasks.searchflight.result }}}}'\n    - name: accommodation\n      value: '{{{{ tasks.hotelavailability.result }}}}'\n- name: booktrip\n  template: booktrip\n  dependencies:\n  - createtravelplan\n  arguments:\n    parameters:\n    - name: flight\n      value: '{{{{ tasks.searchflight.result }}}}'\n    - name: hotel\n      value: '{{{{ tasks.hotelavailability.result }}}}'\n\ntemplates:\n- name: searchflight\n  inputs:\n    parameters:\n    - name: from_location\n    - name: to_location\n    - name: date\n  http:\n    url: \"http://example.com/searchflight\"\n    method: \"GET\"\n- name: hotelavailability\n  inputs:\n    parameters:\n    - name: city\n    - name: date\n  http:\n    url: \"http://example.com/hotelavailability\"\n    method: \"GET\"\n- name: createtravelplan\n  inputs:\n    parameters:\n    - name: flight\n    - name: accommodation\n  http:\n    url: \"http://example.com/createtravelplan\"\n    method: \"POST\"\n- name: booktrip\n  inputs:\n    parameters:\n    - name: flight\n    - name: hotel\n  http:\n    url: \"http://example.com/booktrip\"\n    method: \"POST\""}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchromancemovie\n        template: searchromancemovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - searchromancemovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.searchromancemovie.result }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: reservetickets\n        template: reservetickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: searchromancemovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Romantic Movie' > /tmp/movie_name\"]\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Earliest Showtime' > /tmp/showtime\"]\n  - name: reservetickets\n    inputs:\n      parameters:\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reservation Status' > /tmp/reservation_status\"]\n"}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-verify-book-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{{{ inputs.parameters.book_information }}}}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: bookstore_location\n            value: '{{{{ tasks.findbookstore.result }}}}'\n          - name: product_name\n            value: '{{{{ inputs.parameters.book_information }}}}'\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: bookstore-locator-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.city }}}}'\"]\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    container:\n      image: find-bookstore-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.book_information }}}}'\"]\n  - name: checkavailability\n    inputs:\n      parameters:\n      - name: bookstore_location\n      - name: product_name\n    container:\n      image: check-availability-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{{{ inputs.parameters.bookstore_location }}}} - {{ inputs.parameters.product_name }}'\"]\n  inputs:\n    parameters:\n    - name: city\n    - name: book_information"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocaltheater\n        template: getlocaltheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getcurrentplays\n        template: getcurrentplays\n        dependencies:\n        - getlocaltheater\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{{{ tasks.getlocaltheater.result }}}}'\n      - name: getplayreviews\n        template: getplayreviews\n        dependencies:\n        - getcurrentplays\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{{{ tasks.getcurrentplays.result }}}}'\n  - name: getlocaltheater\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Theater Name' > /tmp/output.txt\"]\n  - name: getcurrentplays\n    inputs:\n      parameters:\n      - name: theater_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Play Name' > /tmp/output.txt\"]\n  - name: getplayreviews\n    inputs:\n      parameters:\n      - name: play_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Reviews' > /tmp/output.txt\"]"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalmusicstore\n        template: getlocalmusicstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getcurrentalbums\n        template: getcurrentalbums\n        dependencies:\n        - getlocalmusicstore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{{{ tasks.getlocalmusicstore.result }}}}'\n      - name: getalbumreviews\n        template: getalbumreviews\n        dependencies:\n        - getcurrentalbums\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{{{ tasks.getcurrentalbums.result }}}}'\n  templates:\n  - name: getlocalmusicstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://example.com/getlocalmusicstore\"\n      method: \"GET\"\n  - name: getcurrentalbums\n    inputs:\n      parameters:\n      - name: store_name\n    http:\n      url: \"http://example.com/getcurrentalbums\"\n      method: \"GET\"\n  - name: getalbumreviews\n    inputs:\n      parameters:\n      - name: album_name\n    http:\n      url: \"http://example.com/getalbumreviews\"\n      method: \"GET\""}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-dumplings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    http:\n      url: http://example.com/findrestaurant?city={{{{ inputs.parameters.city }}}}&cuisine={{{{ inputs.parameters.cuisine }}}}\n      method: GET\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    http:\n      url: http://example.com/orderfood?dish_name={{{{ inputs.parameters.dish_name }}}}&restaurant_name={{{{ inputs.parameters.restaurant_name }}}}\n      method: POST\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: cuisine\n      value: 'Chinese'\n    - name: dish_name\n      value: 'dumplings'"}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-decision-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstockprice\n        template: getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n      - name: predictfuturestockprice\n        template: predictfuturestockprice\n        dependencies:\n        - getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n          - name: currentPrice\n            value: '{{{{ tasks.getstockprice.result }}}}'\n      - name: suggeststockaction\n        template: suggeststockaction\n        dependencies:\n        - predictfuturestockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{{{ inputs.parameters.stockId }}}}'\n          - name: currentPrice\n            value: '{{{{ tasks.getstockprice.result }}}}'\n          - name: futurePrice\n            value: '{{{{ tasks.predictfuturestockprice.result }}}}'\n  - name: getstockprice\n    inputs:\n      parameters:\n      - name: stockId\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching current stock price'\"]\n  - name: predictfuturestockprice\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Predicting future stock price'\"]\n  - name: suggeststockaction\n    inputs:\n      parameters:\n      - name: stockId\n      - name: currentPrice\n      - name: futurePrice\n    container:\n      image: stock-api\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggesting stock action'\"]"}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-savings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: trackspending\n        template: trackspending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{{{ inputs.parameters.username }}}}'\n      - name: calculatesavings\n        template: calculatesavings\n        dependencies:\n        - trackspending\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{{{ tasks.trackspending.result }}}}'\n      - name: suggestinvestment\n        template: suggestinvestment\n        dependencies:\n        - calculatesavings\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{{{ tasks.calculatesavings.result }}}}'\n  - name: trackspending\n    inputs:\n      parameters:\n      - name: Username\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Tracking spending for {{inputs.parameters.Username}}'\"]\n  - name: calculatesavings\n    inputs:\n      parameters:\n      - name: SpendingReport\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Calculating savings from {{inputs.parameters.SpendingReport}}'\"]\n  - name: suggestinvestment\n    inputs:\n      parameters:\n      - name: Savings\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggesting investment for {{inputs.parameters.Savings}}'\"]"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisineType\n            value: '{{{{ inputs.parameters.cuisineType }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisineType\n    http:\n      url: http://example.com/findrestaurant\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"city\": \"{{{{ inputs.parameters.city }}}}\",\n          \"cuisineType\": \"{{{{ inputs.parameters.cuisineType }}}}\"\n        }\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestfood\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"menu\": \"{{{{ inputs.parameters.menu }}}}\",\n          \"dietary_preferences\": \"{{{{ inputs.parameters.dietary_preferences }}}}\"\n        }"}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: lactose-free-dish-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurants\n        template: findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisineType\n            value: '{{{{ inputs.parameters.cuisineType }}}}'\n      - name: filterrestaurantbydietaryrestrictions\n        template: filterrestaurantbydietaryrestrictions\n        dependencies:\n        - findrestaurants\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ tasks.findrestaurants.result }}}}'\n          - name: restrictions\n            value: '{{{{ inputs.parameters.restrictions }}}}'\n      - name: menudetails\n        template: menudetails\n        dependencies:\n        - filterrestaurantbydietaryrestrictions\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.filterrestaurantbydietaryrestrictions.result }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - menudetails\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.menudetails.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n  - name: findrestaurants\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisineType\n    http:\n      url: http://example.com/findrestaurants\n      method: GET\n  - name: filterrestaurantbydietaryrestrictions\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    http:\n      url: http://example.com/filterrestaurantbydietaryrestrictions\n      method: GET\n  - name: menudetails\n    inputs:\n      parameters:\n      - name: restaurant_name\n    http:\n      url: http://example.com/menudetails\n      method: GET\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    http:\n      url: http://example.com/suggestfood\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Houston'\n    - name: cuisineType\n      value: 'Chinese'\n    - name: restrictions\n      value: 'lactose-free'\n    - name: dietary_preferences\n      value: 'lactose-free'"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: averagerating\n        template: averagerating\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{{{ tasks.getmovieratings.result }}}}'\n  - name: getmovieratings\n    inputs:\n      parameters:\n      - name: movie\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '[4.5, 4.7, 4.8]' > /tmp/rating_info\"]\n  - name: averagerating\n    inputs:\n      parameters:\n      - name: ratingScores\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '4.67' > /tmp/average_rating\"]"}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: movietitle2id\n        template: movietitle2id\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ inputs.parameters.movie_title }}}}'\n      - name: movierating\n        template: movierating\n        dependencies:\n        - movietitle2id\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{{{ tasks.movietitle2id.result }}}}'\n      - name: highestrating\n        template: highestrating\n        dependencies:\n        - movierating\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{{{ tasks.movierating.result }}}}'\n  - name: movietitle2id\n    inputs:\n      parameters:\n      - name: movie_title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.movie_title }}\"]\n  - name: movierating\n    inputs:\n      parameters:\n      - name: movie_id\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.movie_id }}\"]\n  - name: highestrating\n    inputs:\n      parameters:\n      - name: rating_scores\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.rating_scores }}\"]"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: upgrade-seat-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: seatselection\n        template: seatselection\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{{{ tasks.searchflight.result }}}}'\n      - name: upgradeavailability\n        template: upgradeavailability\n        dependencies:\n        - seatselection\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{{{ tasks.seatselection.result }}}}'\n  \n  - name: searchflight\n    inputs:\n      parameters:\n      - name: destination\n      - name: date\n    http:\n      url: \"http://example.com/api/searchflight\"\n      method: \"GET\"\n      parameters:\n      - name: destination\n        value: '{{{{ inputs.parameters.destination }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n\n  - name: seatselection\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: \"http://example.com/api/seatselection\"\n      method: \"GET\"\n      parameters:\n      - name: flight_id\n        value: '{{{{ inputs.parameters.flight_id }}}}'\n\n  - name: upgradeavailability\n    inputs:\n      parameters:\n      - name: seats\n    http:\n      url: \"http://example.com/api/upgradeavailability\"\n      method: \"GET\"\n      parameters:\n      - name: seats\n        value: '{{{{ inputs.parameters.seats }}}}'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-356-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{{{ inputs.parameters.startPoint }}}}'\n          - name: endPoint\n            value: '{{{{ inputs.parameters.endPoint }}}}'\n      - name: seatclassavailability\n        template: seatclassavailability\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{{{ tasks.findflight.result }}}}'\n      - name: bestseatclass\n        template: bestseatclass\n        dependencies:\n        - seatclassavailability\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{{{ tasks.seatclassavailability.result }}}}'\n  - name: findflight\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    http:\n      url: \"http://example.com/findflight\"\n      method: \"GET\"\n  - name: seatclassavailability\n    inputs:\n      parameters:\n      - name: flight_id\n    http:\n      url: \"http://example.com/seatclassavailability\"\n      method: \"GET\"\n  - name: bestseatclass\n    inputs:\n      parameters:\n      - name: seat_classes\n    http:\n      url: \"http://example.com/bestseatclass\"\n      method: \"GET\""}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: bookstore-locator-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{{{ inputs.parameters.book_information }}}}'\n  - name: findnearestbookstore\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: http://example.com/findnearestbookstore?city={{{{ inputs.parameters.city }}}}\n      method: GET\n  - name: findbookstore\n    inputs:\n      parameters:\n      - name: book_information\n    http:\n      url: http://example.com/findbookstore?book_information={{{{ inputs.parameters.book_information }}}}\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York'\n    - name: book_information\n      value: 'To Kill a Mockingbird by Harper Lee'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-999-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemprice\n        template: getitemprice\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{{{ inputs.parameters.item_id }}}}'\n      - name: getconversionrate\n        template: getconversionrate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'EUR'\n          - name: to_currency\n            value: 'JPY'\n      - name: calculateprice\n        template: calculateprice\n        dependencies:\n        - getitemprice\n        - getconversionrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{{{ tasks.getitemprice.result }}}}'\n          - name: conversion_rate\n            value: '{{{{ tasks.getconversionrate.result }}}}'\n  - name: getitemprice\n    inputs:\n      parameters:\n      - name: item_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100.0\"] # Mocked response for item price\n  - name: getconversionrate\n    inputs:\n      parameters:\n      - name: from_currency\n      - name: to_currency\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 130.0\"] # Mocked response for conversion rate\n  - name: calculateprice\n    inputs:\n      parameters:\n      - name: price\n      - name: conversion_rate\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(echo '{{{{ inputs.parameters.price }}}} * {{{{ inputs.parameters.conversion_rate }}}}' | bc)\"] # Mocked calculation"}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookdetails\n        template: getbookdetails\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: getauthordetails\n        template: getauthordetails\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{{{ inputs.parameters.title }}}}'\n      - name: generatereview\n        template: generatereview\n        dependencies:\n        - getbookdetails\n        - getauthordetails\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{{{ tasks.getbookdetails.result }}}}'\n          - name: authorData\n            value: '{{{{ tasks.getauthordetails.result }}}}'\n  - name: getbookdetails\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"bookInfo\\\": \\\"Details about the book\\\"}'\"]\n  - name: getauthordetails\n    inputs:\n      parameters:\n      - name: bookTitle\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"AuthorDetails\\\": \\\"Details about the author\\\"}'\"]\n  - name: generatereview\n    inputs:\n      parameters:\n      - name: bookdetails\n      - name: authorData\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Generated review based on book and author details'\"]\n"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: star_level\n            value: '{{{{ inputs.parameters.star_level }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.recommendrestaurant.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.dinner_time }}}}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"GET\"\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: star_level\n    http:\n      url: \"http://example.com/recommendrestaurant\"\n      method: \"GET\"\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/bookrestaurant\"\n      method: \"POST\""}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-409-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getCarInfo\n        template: getCarInfo\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{{{ inputs.parameters.car_name }}}}'\n          - name: country\n            value: '{{{{ inputs.parameters.country }}}}'\n      - name: getCountryTaxRate\n        template: getCountryTaxRate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{{{ inputs.parameters.country }}}}'\n      - name: calculateTaxCost\n        template: calculateTaxCost\n        dependencies:\n        - getCarInfo\n        - getCountryTaxRate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{{{ tasks.getCarInfo.result.price }}}}'\n          - name: tax_rate\n            value: '{{{{ tasks.getCountryTaxRate.result }}}}'\n  - name: getCarInfo\n    inputs:\n      parameters:\n      - name: car_name\n      - name: country\n    http:\n      url: <CarInfo API URL>\n      method: GET\n  - name: getCountryTaxRate\n    inputs:\n      parameters:\n      - name: country\n    http:\n      url: <CountryTaxRate API URL>\n      method: GET\n  - name: calculateTaxCost\n    inputs:\n      parameters:\n      - name: price\n      - name: tax_rate\n    http:\n      url: <TaxCostCalculator API URL>\n      method: GET"}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getmenu\n        template: getmenu\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.findrestaurant.result }}}}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - getmenu\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{{{ tasks.getmenu.result }}}}'\n          - name: dietary_preferences\n            value: '{{{{ inputs.parameters.dietary_preferences }}}}'\n  - name: findrestaurant\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant in {{inputs.parameters.city}}' && echo 'Famous Restaurant' > /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  - name: getmenu\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Getting menu for {{inputs.parameters.restaurant_name}}' && echo 'Menu List' > /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  - name: suggestfood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggesting food from {{inputs.parameters.menu}} with preference {{inputs.parameters.dietary_preferences}}' && echo 'Gluten-Free Dish' > /tmp/output\"]\n    outputs:\n      parameters:\n      - name: result\n        valueFrom:\n          path: /tmp/output\n  arguments:\n    parameters:\n    - name: city\n      value: 'Dubai'\n    - name: dietary_preferences\n      value: 'gluten-free'"}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getshowtime\n        template: getshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - getshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.getshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: getshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: city\n    http:\n      url: \"http://example.com/getshowtime\"\n      method: GET\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: POST"}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: star_rating\n            value: '{{{{ inputs.parameters.star_rating }}}}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.findhotel.result }}}}'\n          - name: number_of_rooms\n            value: '{{{{ inputs.parameters.number_of_rooms }}}}'\n          - name: check_in_date\n            value: '{{{{ inputs.parameters.check_in_date }}}}'\n          - name: check_out_date\n            value: '{{{{ inputs.parameters.check_out_date }}}}'\n  - name: findhotel\n    inputs:\n      parameters:\n      - name: city\n      - name: star_rating\n    http:\n      url: \"http://example.com/findhotel\"\n      method: POST\n      body: \"{ 'city': '{{{{ inputs.parameters.city }}}}', 'star_rating': '{{{{ inputs.parameters.star_rating }}}}' }\"\n  - name: roombooking\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: number_of_rooms\n      - name: check_in_date\n      - name: check_out_date\n    http:\n      url: \"http://example.com/roombooking\"\n      method: POST\n      body: \"{ 'hotel_name': '{{{{ inputs.parameters.hotel_name }}}}', 'number_of_rooms': '{{{{ inputs.parameters.number_of_rooms }}}}', 'check_in_date': '{{{{ inputs.parameters.check_in_date }}}}', 'check_out_date': '{{{{ inputs.parameters.check_out_date }}}}' }\"\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: star_rating\n      value: '4'\n    - name: number_of_rooms\n      value: '1'\n    - name: check_in_date\n      value: '15th September'\n    - name: check_out_date\n      value: '22nd September'"}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{{{ inputs.parameters.specialty }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: createappointment\n        template: createappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{{{ tasks.finddoctor.result }}}}'\n          - name: patientId\n            value: '{{{{ inputs.parameters.patientId }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: \"http://example.com/finddoctor\"\n      method: \"GET\"\n      parameters:\n      - name: specialty\n        value: '{{{{ inputs.parameters.specialty }}}}'\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n  - name: createappointment\n    inputs:\n      parameters:\n      - name: doctorId\n      - name: patientId\n      - name: date\n      - name: time\n    http:\n      url: \"http://example.com/createappointment\"\n      method: \"POST\"\n      parameters:\n      - name: doctorId\n        value: '{{{{ inputs.parameters.doctorId }}}}'\n      - name: patientId\n        value: '{{{{ inputs.parameters.patientId }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n      - name: time\n        value: '{{{{ inputs.parameters.time }}}}'"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchmovie\n        template: searchmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{{{ inputs.parameters.genre }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n      - name: findshowtime\n        template: findshowtime\n        dependencies:\n        - searchmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.searchmovie.result }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.searchmovie.result }}}}'\n          - name: showtime\n            value: '{{{{ tasks.findshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: searchmovie\n    inputs:\n      parameters:\n      - name: genre\n      - name: location\n    container:\n      image: search-movie-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding movie...' && sleep 1 && echo 'Drama Movie' \"]\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    container:\n      image: find-showtime-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding showtime...' && sleep 1 && echo '7:00 PM' \"]\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: book-tickets-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking tickets...' && sleep 1 && echo 'Booking Confirmed' \"]\n  arguments:\n    parameters:\n    - name: genre\n      value: 'Drama'\n    - name: location\n      value: 'Seattle'\n    - name: date\n      value: 'December 25th'\n    - name: number_of_tickets\n      value: '6'"}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendmovie\n        template: recommendmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'thriller'\n      - name: getshowtime\n        template: getshowtime\n        dependencies:\n        - recommendmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.recommendmovie.result }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - getshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ tasks.recommendmovie.result }}}}'\n          - name: showtime\n            value: '{{{{ tasks.getshowtime.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: recommendmovie\n    inputs:\n      parameters:\n      - name: genre\n    container:\n      image: movie-recommender-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Recommended Movie' > /tmp/movie.txt\"]\n  - name: getshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: showtime-fetcher-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Showtime' > /tmp/showtime.txt\"]\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: ticket-booker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking Confirmed' > /tmp/booking.txt\"]"}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: check-flight-status-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getflightnumber\n        template: getflightnumber\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{{{ inputs.parameters.person_ID }}}}'\n      - name: checkflightstatus\n        template: checkflightstatus\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{{{ tasks.getflightnumber.result }}}}'\n  - name: getflightnumber\n    inputs:\n      parameters:\n      - name: person_ID\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'FL123' # Simulate API call to GetFlightNumber\"]\n  - name: checkflightstatus\n    inputs:\n      parameters:\n      - name: flight_number\n    container:\n      image: your-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'On Time' # Simulate API call to CheckFlightStatus\"]"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{{{ inputs.parameters.movieDetails }}}}'\n      - name: resturantnearcinema\n        template: resturantnearcinema\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cinema_name\n            value: '{{{{ tasks.findnearestcinema.result }}}}'\n      - name: reservationmaker\n        template: reservationmaker\n        dependencies:\n        - resturantnearcinema\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ tasks.resturantnearcinema.result }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n  - name: findnearestcinema\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding nearest cinema for movie: {{inputs.parameters.movieDetails}}'\"]\n  - name: resturantnearcinema\n    inputs:\n      parameters:\n      - name: city\n      - name: cinema_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Finding restaurant near cinema: {{inputs.parameters.cinema_name}} in city: {{inputs.parameters.city}}'\"]\n  - name: reservationmaker\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: time\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Making reservation at restaurant: {{inputs.parameters.restaurant_name}} for time: {{inputs.parameters.time}}'\"]"}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: reading-time-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: isbn2title\n        template: isbn2title\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{{{ inputs.parameters.ISBN }}}}'\n      - name: pagecount\n        template: pagecount\n        dependencies:\n        - isbn2title\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{{{ tasks.isbn2title.result }}}}'\n      - name: readingtime\n        template: readingtime\n        dependencies:\n        - pagecount\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{{{ tasks.pagecount.result }}}}'\n  - name: isbn2title\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Title of the book' > /tmp/output.txt\"]\n  - name: pagecount\n    inputs:\n      parameters:\n      - name: Title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '300' > /tmp/output.txt\"]\n  - name: readingtime\n    inputs:\n      parameters:\n      - name: Pages\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Estimated reading time' > /tmp/output.txt\"]"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: outfit-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: 'Los Angeles'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: shoppingassistant\n        template: shoppingassistant\n        dependencies:\n        - findclothes\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{{{ tasks.findclothes.result }}}}'\n          - name: city\n            value: 'Los Angeles'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city=Los%20Angeles\"\n      method: GET\n  - name: findclothes\n    http:\n      url: \"http://clothingapi.com/findClothes\"\n      method: POST\n      body:\n        weather: '{{{{ inputs.parameters.weather }}}}'\n  - name: shoppingassistant\n    http:\n      url: \"http://storeapi.com/shoppingAssistant\"\n      method: POST\n      body:\n        outfit: '{{{{ inputs.parameters.outfit }}}}'\n        city: '{{{{ inputs.parameters.city }}}}'"}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: drive-route-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdrivingdistance\n        template: getdrivingdistance\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: endPoint\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getdrivingdistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: speed\n            value: '{{{{ inputs.parameters.speed }}}}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - getdrivingdistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: time\n            value: '{{{{ tasks.calculatetime.result }}}}'\n  - name: getdrivingdistance\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 225\"]\n  - name: calculatetime\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $((${{inputs.parameters.distance}} / ${{inputs.parameters.speed}}))\"]\n  - name: routeplanner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Route from ${{inputs.parameters.origin}} to ${{inputs.parameters.destination}} covering ${{inputs.parameters.distance}} miles in ${{inputs.parameters.time}} hours'\"]\n"}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchstockdata\n        template: fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{{{ inputs.parameters.stock_symbol }}}}'\n      - name: basicdataanalysis\n        template: basicdataanalysis\n        dependencies:\n        - fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{{{ tasks.fetchstockdata.result }}}}'\n      - name: generatereport\n        template: generatereport\n        dependencies:\n        - basicdataanalysis\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{{{ tasks.basicdataanalysis.result }}}}'\n          - name: template\n            value: '{{{{ inputs.parameters.template }}}}'\n  - name: fetchstockdata\n    inputs:\n      parameters:\n      - name: stock_symbol\n    container:\n      image: stock-data-fetcher\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Fetching stock data for {{inputs.parameters.stock_symbol}}\"]\n  - name: basicdataanalysis\n    inputs:\n      parameters:\n      - name: stock_data\n    container:\n      image: stock-data-analyzer\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Analyzing stock data\"]\n  - name: generatereport\n    inputs:\n      parameters:\n      - name: analyzed_data\n      - name: template\n    container:\n      image: report-generator\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Generating report with template {{inputs.parameters.template}}\"]\n  arguments:\n    parameters:\n    - name: stock_symbol\n      value: 'AAPL'\n    - name: template\n      value: 'basic_analysis'"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{{{ inputs.parameters.email }}}}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - email2userid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{{{ tasks.email2userid.result }}}}'\n          - name: product_ID\n            value: '{{{{ inputs.parameters.product_ID }}}}'\n          - name: quantity\n            value: '{{{{ inputs.parameters.quantity }}}}'\n  - name: email2userid\n    inputs:\n      parameters:\n      - name: email\n    container:\n      image: my-email2userid-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    container:\n      image: my-purchaseitem-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Purchase successful'\"]\n  arguments:\n    parameters:\n    - name: email\n      value: 'john@example.com'\n    - name: product_ID\n      value: 'Samsung Galaxy S21 Ultra'\n    - name: quantity\n      value: '2'"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{{{ inputs.parameters.city }}}}'\n  - name: getrecommendedclothing\n    http:\n      url: \"http://clothingapi.com/getRecommendedClothing\"\n      method: \"POST\"\n      parameters:\n      - name: weather\n        value: '{{{{ tasks.getweather.result }}}}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Tokyo'"}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22222-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductprice\n        template: getproductprice\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{{{ inputs.parameters.product_id }}}}'\n      - name: getexchangerate\n        template: getexchangerate\n        arguments:\n          parameters:\n          - name: from_currency\n            value: 'BRL'\n          - name: to_currency\n            value: 'CNY'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - getproductprice\n        - getexchangerate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{{{ tasks.getproductprice.result }}}}'\n          - name: exchange_rate\n            value: '{{{{ tasks.getexchangerate.result }}}}'\n  - name: getproductprice\n    inputs:\n      parameters:\n      - name: product_id\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100.0\"]\n  - name: getexchangerate\n    inputs:\n      parameters:\n      - name: from_currency\n      - name: to_currency\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 1.5\"]\n  - name: calculatecost\n    inputs:\n      parameters:\n      - name: price\n      - name: exchange_rate\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(echo '{{{{ inputs.parameters.price }}}} * {{{{ inputs.parameters.exchange_rate }}}}' | bc)\"]\n"}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: flight-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n      - name: suggestluggage\n        template: suggestluggage\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: baggage_allowance\n            value: '{{{{ tasks.checkluggageallowance.result }}}}'\n          - name: trip_duration\n            value: '{{{{ inputs.parameters.trip_duration }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    http:\n      url: \"http://example.com/api/searchflight\"\n      method: \"POST\"\n      body: \"{ 'from_location': '{{{{ inputs.parameters.from_location }}}}', 'to_location': '{{{{ inputs.parameters.to_location }}}}', 'date': '{{{{ inputs.parameters.date }}}}' }\"\n  - name: checkluggageallowance\n    inputs:\n      parameters:\n      - name: flight\n    http:\n      url: \"http://example.com/api/checkluggageallowance\"\n      method: \"POST\"\n      body: \"{ 'flight': '{{{{ inputs.parameters.flight }}}}' }\"\n  - name: suggestluggage\n    inputs:\n      parameters:\n      - name: baggage_allowance\n      - name: trip_duration\n    http:\n      url: \"http://example.com/api/suggestluggage\"\n      method: \"POST\"\n      body: \"{ 'baggage_allowance': '{{{{ inputs.parameters.baggage_allowance }}}}', 'trip_duration': '{{{{ inputs.parameters.trip_duration }}}}' }\""}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-purchase-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovietheater\n        template: getmovietheater\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n      - name: getshowtimes\n        template: getshowtimes\n        dependencies:\n        - getmovietheater\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{{{ inputs.parameters.movie_name }}}}'\n          - name: showtime\n            value: '{{{{ tasks.getshowtimes.result }}}}'\n          - name: number_of_tickets\n            value: '{{{{ inputs.parameters.number_of_tickets }}}}'\n  - name: getmovietheater\n    inputs:\n      parameters:\n      - name: movie_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Theater for movie: $0'\", \"{{{{ inputs.parameters.movie_name }}}}\"]\n  - name: getshowtimes\n    inputs:\n      parameters:\n      - name: movie_title\n      - name: city\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Showtimes for movie: $0 in city: $1'\", \"{{{{ inputs.parameters.movie_title }}}}\", \"{{{{ inputs.parameters.city }}}}\"]\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking $0 tickets for movie: $1 at showtime: $2'\", \"{{{{ inputs.parameters.number_of_tickets }}}}\", \"{{{{ inputs.parameters.movie_name }}}}\", \"{{{{ inputs.parameters.showtime }}}}\"]\n  arguments:\n    parameters:\n    - name: movie_name\n      value: 'Avengers'\n    - name: city\n      value: 'Los Angeles'\n    - name: number_of_tickets\n      value: '4'"}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchbook\n        template: searchbook\n        arguments:\n          parameters:\n          - name: title\n            value: '{{{{ inputs.parameters.title }}}}'\n          - name: author\n            value: '{{{{ inputs.parameters.author }}}}'\n      - name: authorofbook\n        template: authorofbook\n        dependencies:\n        - searchbook\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{{{ tasks.searchbook.result }}}}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - searchbook\n        - authorofbook\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{{{ tasks.searchbook.result }}}}'\n          - name: author_ID\n            value: '{{{{ tasks.authorofbook.result }}}}'\n  - name: searchbook\n    inputs:\n      parameters:\n      - name: title\n      - name: author\n    http:\n      url: http://example.com/api/searchbook\n      method: GET\n      parameters:\n      - name: title\n        value: '{{{{ inputs.parameters.title }}}}'\n      - name: author\n        value: '{{{{ inputs.parameters.author }}}}'\n  - name: authorofbook\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: http://example.com/api/authorofbook\n      method: GET\n      parameters:\n      - name: book_id\n        value: '{{{{ inputs.parameters.book_id }}}}'\n  - name: locatebook\n    inputs:\n      parameters:\n      - name: book_ID\n      - name: author_ID\n    http:\n      url: http://example.com/api/locatebook\n      method: GET\n      parameters:\n      - name: book_ID\n        value: '{{{{ inputs.parameters.book_ID }}}}'\n      - name: author_ID\n        value: '{{{{ inputs.parameters.author_ID }}}}'"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchweather\n        template: fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: searchevents\n        template: searchevents\n        dependencies:\n        - fetchweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: planactivities\n        template: planactivities\n        dependencies:\n        - fetchweather\n        - searchevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.fetchweather.result }}}}'\n          - name: events\n            value: '{{{{ tasks.searchevents.result }}}}'\n      - name: bookticket\n        template: bookticket\n        dependencies:\n        - planactivities\n        arguments:\n          parameters:\n          - name: eventDetails\n            value: '{{{{ tasks.planactivities.result }}}}'\n          - name: num_of_tickets\n            value: '1'\n  - name: fetchweather\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/query\"\n      method: \"GET\"\n  - name: searchevents\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://eventfinder.com/search\"\n      method: \"GET\"\n  - name: planactivities\n    inputs:\n      parameters:\n      - name: weather\n      - name: events\n    http:\n      url: \"http://planoutdooractivities.com/plan\"\n      method: \"POST\"\n  - name: bookticket\n    inputs:\n      parameters:\n      - name: eventDetails\n      - name: num_of_tickets\n    http:\n      url: \"http://bookeventticket.com/book\"\n      method: \"POST\""}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchmoviedetails\n        template: searchmoviedetails\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{{{ inputs.parameters.movie }}}}'\n      - name: cinemafinder\n        template: cinemafinder\n        dependencies:\n        - searchmoviedetails\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{{{ tasks.searchmoviedetails.result }}}}'\n      - name: showtimecheck\n        template: showtimecheck\n        dependencies:\n        - cinemafinder\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{{{ tasks.cinemafinder.result }}}}'\n          - name: movieDetails\n            value: '{{{{ tasks.searchmoviedetails.result }}}}'\n  - name: searchmoviedetails\n    inputs:\n      parameters:\n      - name: movie\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"movieDetails\\\": \\\"Details of the movie\\\"}'\"]\n  - name: cinemafinder\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"cinemaLocations\\\": \\\"List of cinema locations\\\"}'\"]\n  - name: showtimecheck\n    inputs:\n      parameters:\n      - name: cinemaLocations\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{\\\"showTimes\\\": \\\"List of showtimes\\\"}'\"]"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-25-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethoteldetails\n        template: gethoteldetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - gethoteldetails\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{{{ tasks.gethoteldetails.result }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{{{ inputs.parameters.restaurant_name }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: reservationbooking\n        template: reservationbooking\n        dependencies:\n        - bookhotel\n        - bookrestaurant\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{{{ tasks.bookhotel.result }}}}'\n          - name: restaurantLocations\n            value: '{{{{ tasks.bookrestaurant.result }}}}'\n  - name: gethoteldetails\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: http://example.com/gethoteldetails\n      method: GET\n  - name: bookhotel\n    inputs:\n      parameters:\n      - name: hotel_name\n      - name: date\n    http:\n      url: http://example.com/bookhotel\n      method: POST\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    http:\n      url: http://example.com/bookrestaurant\n      method: POST\n  - name: reservationbooking\n    inputs:\n      parameters:\n      - name: hotelDetails\n      - name: restaurantLocations\n    http:\n      url: http://example.com/reservationbooking\n      method: POST"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: outfit\n            value: '{{{{ tasks.suggestoutfit.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: weather-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://weatherapi.com/api?city={{inputs.parameters.city}}' | jq -r '.weather'\"]\n  - name: suggestoutfit\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: outfit-suggestion-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://outfitsuggestionapi.com/api?suggest={{inputs.parameters.weather}}' | jq -r '.outfit'\"]\n  - name: getoutfitstore\n    inputs:\n      parameters:\n      - name: city\n      - name: outfit\n    container:\n      image: store-finder-api\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -s 'http://storefinderapi.com/api?city={{inputs.parameters.city}}&outfit={{inputs.parameters.outfit}}' | jq -r '.store_name'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'Miami'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: activity-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{{{ tasks.getweather.result }}}}'\n  - name: getweather\n    http:\n      url: http://weatherapi.example.com/check\n      method: GET\n      parameters:\n      - name: location\n        value: '{{{{ inputs.parameters.location }}}}'\n      - name: date\n        value: '{{{{ inputs.parameters.date }}}}'\n  - name: suggestactivity\n    http:\n      url: http://activityapi.example.com/suggest\n      method: GET\n      parameters:\n      - name: weather_condition\n        value: '{{{{ inputs.parameters.weather_condition }}}}'\n  arguments:\n    parameters:\n    - name: location\n      value: '192.168.0.254'\n    - name: date\n      value: '2023-07-23'"}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{{{ tasks.getcurrentweather.result }}}}'\n          - name: weather_forecast\n            value: '{{{{ tasks.getweatherforecast.result }}}}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: location\n    http:\n      url: \"http://weatherapi.com/current?city={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/forecast?city={{{{ inputs.parameters.city }}}}&date={{{{ inputs.parameters.date }}}}\"\n      method: GET\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: \"http://weatherapi.com/compare?current={{{{ inputs.parameters.current_weather }}}}&forecast={{{{ inputs.parameters.weather_forecast }}}}\"\n      method: GET"}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{{{ tasks.getcurrentweather.result }}}}'\n          - name: weather_forecast\n            value: '{{{{ tasks.getweatherforecast.result }}}}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/current?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/forecast?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: \"http://compareweatherapi.com/compare\"\n      method: POST\n      body: |\n        {\n          \"current_weather\": \"{{{{ inputs.parameters.current_weather }}}}\",\n          \"weather_forecast\": \"{{{{ inputs.parameters.weather_forecast }}}}\"\n        }"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: eventsuggestions\n        template: eventsuggestions\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n          - name: weather\n            value: '{{{{ inputs.parameters.weather }}}}'\n  - name: eventsuggestions\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://example.com/eventsuggestions\"\n      method: \"GET\"\n  - name: restaurantrecommend\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n      - name: weather\n    http:\n      url: \"http://example.com/restaurantrecommend\"\n      method: \"GET\""}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n      - name: fashionstore\n        template: fashionstore\n        dependencies:\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: clothes\n            value: '{{{{ tasks.getclothingadvice.result }}}}'\n          - name: location\n            value: '{{{{ inputs.parameters.city }}}}'\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/getWeather?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getclothingadvice\n    http:\n      url: \"http://clothingadviceapi.com/GetClothingAdvice?weather={{{{ inputs.parameters.weather }}}}\"\n      method: GET\n  - name: fashionstore\n    http:\n      url: \"http://fashionstoreapi.com/FashionStore?clothes={{{{ inputs.parameters.clothes }}}}&location={{{{ inputs.parameters.location }}}}\"\n      method: GET\n  arguments:\n    parameters:\n    - name: city\n      value: 'Chicago'"}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: drive-route-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdrivingdistance\n        template: getdrivingdistance\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: endPoint\n            value: '{{{{ inputs.parameters.destination }}}}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getdrivingdistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: speed\n            value: '{{{{ inputs.parameters.speed }}}}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - getdrivingdistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{{{ inputs.parameters.origin }}}}'\n          - name: destination\n            value: '{{{{ inputs.parameters.destination }}}}'\n          - name: distance\n            value: '{{{{ tasks.getdrivingdistance.result }}}}'\n          - name: time\n            value: '{{{{ tasks.calculatetime.result }}}}'\n  - name: getdrivingdistance\n    inputs:\n      parameters:\n      - name: startPoint\n      - name: endPoint\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 380\"] # Example distance\n  - name: calculatetime\n    inputs:\n      parameters:\n      - name: distance\n      - name: speed\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $((${{inputs.parameters.distance}} / ${{inputs.parameters.speed}}))\"]\n  - name: routeplanner\n    inputs:\n      parameters:\n      - name: origin\n      - name: destination\n      - name: distance\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Route from ${{inputs.parameters.origin}} to ${{inputs.parameters.destination}} covering ${{inputs.parameters.distance}} miles in ${{inputs.parameters.time}} hours'\"]\n  arguments:\n    parameters:\n    - name: origin\n      value: 'San Francisco'\n    - name: destination\n      value: 'Los Angeles'\n    - name: speed\n      value: '55'"}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: craving-steak-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{{{ inputs.parameters.dish_name }}}}'\n          - name: restaurant_name\n            value: '{{{{ tasks.searchrestaurant.result }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}'\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: restaurantlocation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}'\"]\n  - name: orderfood\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: orderfood-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.dish_name }} {{ inputs.parameters.restaurant_name }}'\"]\n  arguments:\n    parameters:\n    - name: city\n      value: 'New York City'\n    - name: cuisine\n      value: 'American'\n    - name: dish_name\n      value: 'steak'"}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-fcbarcelona-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getteaminfo\n        template: getteaminfo\n        arguments:\n          parameters:\n          - name: team_name\n            value: 'FC Barcelona'\n      - name: getschedule\n        template: getschedule\n        dependencies:\n        - getteaminfo\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{{{ tasks.getteaminfo.result }}}}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - getschedule\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{{{ tasks.getschedule.result }}}}'\n  - name: getteaminfo\n    inputs:\n      parameters:\n      - name: team_name\n    http:\n      url: http://example.com/FootballTeamInfo\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"team_name\": \"{{{{ inputs.parameters.team_name }}}}\"}'\n  - name: getschedule\n    inputs:\n      parameters:\n      - name: team_info\n    http:\n      url: http://example.com/GameSchedule\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"team_info\": \"{{{{ inputs.parameters.team_info }}}}\"}'\n  - name: getticketprice\n    inputs:\n      parameters:\n      - name: game_schedule\n    http:\n      url: http://example.com/TicketPrice\n      method: GET\n      headers:\n        Content-Type: application/json\n      body: '{\"game_schedule\": \"{{{{ inputs.parameters.game_schedule }}}}\"}'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: reservehotel\n        template: reservehotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n          - name: weather_status\n            value: '{{{{ inputs.parameters.weather_status }}}}'\n      - name: findoutdooractivities\n        template: findoutdooractivities\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: weatherForecast\n            value: '{{{{ inputs.parameters.weatherForecast }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - searchflight\n        - reservehotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.reservehotel.result }}}}'\n      - name: tripplanner\n        template: tripplanner\n        dependencies:\n        - findoutdooractivities\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{{{ inputs.parameters.weatherForecast }}}}'\n          - name: activities\n            value: '{{{{ tasks.findoutdooractivities.result }}}}'\n          - name: suggested_restaurant\n            value: '{{{{ inputs.parameters.suggested_restaurant }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flight' && sleep 1\"]\n  - name: reservehotel\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n      - name: weather_status\n    container:\n      image: reservehotel-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'reserving hotel' && sleep 1\"]\n  - name: findoutdooractivities\n    inputs:\n      parameters:\n      - name: city\n      - name: weatherForecast\n    container:\n      image: findoutdooractivities-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'finding outdoor activities' && sleep 1\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: createtravelplan-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'creating travel plan' && sleep 1\"]\n  - name: tripplanner\n    inputs:\n      parameters:\n      - name: weather_forecast\n      - name: activities\n      - name: suggested_restaurant\n    container:\n      image: tripplanner-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'planning trip' && sleep 1\"]"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n\n  - name: recommendrestaurant\n    http:\n      url: http://example.com/recommendrestaurant\n      method: POST\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n      headers:\n        Content-Type: application/json\n    outputs:\n      parameters:\n      - name: restaurant_list\n        valueFrom:\n          jsonPath: \"$.restaurant_list\""}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-tokyo-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: getpopulation\n        template: getpopulation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getweather\n        - getpopulation\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{{{ tasks.getweather.result }}}}'\n          - name: population\n            value: '{{{{ tasks.getpopulation.result }}}}'\n  - name: getweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/get?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: getpopulation\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://populationapi.com/get?city={{{{ inputs.parameters.city }}}}\"\n      method: GET\n  - name: weatherimpactonpopulation\n    inputs:\n      parameters:\n      - name: weather\n      - name: population\n    http:\n      url: \"http://weatherimpactapi.com/impact?weather={{{{ inputs.parameters.weather }}}}&population={{{{ inputs.parameters.population }}}}\"\n      method: GET"}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-books-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{{{ inputs.parameters.book_title }}}}'\n      - name: authorofbook\n        template: authorofbook\n        dependencies:\n        - getbookid\n        arguments:\n          parameters:\n          - name: book_id\n            value: '{{{{ tasks.getbookid.result }}}}'\n      - name: booksbyauthor\n        template: booksbyauthor\n        dependencies:\n        - authorofbook\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{{{ tasks.authorofbook.result }}}}'\n  - name: getbookid\n    inputs:\n      parameters:\n      - name: book_title\n    http:\n      url: http://example.com/getbookid\n      method: GET\n      parameters:\n      - name: book_title\n        value: '{{{{ inputs.parameters.book_title }}}}'\n  - name: authorofbook\n    inputs:\n      parameters:\n      - name: book_id\n    http:\n      url: http://example.com/authorofbook\n      method: GET\n      parameters:\n      - name: book_id\n        value: '{{{{ inputs.parameters.book_id }}}}'\n  - name: booksbyauthor\n    inputs:\n      parameters:\n      - name: author_id\n    http:\n      url: http://example.com/booksbyauthor\n      method: GET\n      parameters:\n      - name: author_id\n        value: '{{{{ inputs.parameters.author_id }}}}'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchfare\n        template: searchfare\n        arguments:\n          parameters:\n          - name: src\n            value: '{{{{ inputs.parameters.src }}}}'\n          - name: dest\n            value: '{{{{ inputs.parameters.dest }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: checkdiscount\n        template: checkdiscount\n        dependencies:\n        - searchfare\n        arguments:\n          parameters:\n          - name: coupon\n            value: '{{{{ inputs.parameters.coupon }}}}'\n          - name: fare_id\n            value: '{{{{ tasks.searchfare.result }}}}'\n      - name: calculatefinalfare\n        template: calculatefinalfare\n        dependencies:\n        - checkdiscount\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{{{ tasks.searchfare.result }}}}'\n          - name: discount_amount\n            value: '{{{{ tasks.checkdiscount.result }}}}'\n  - name: searchfare\n    inputs:\n      parameters:\n      - name: src\n      - name: dest\n      - name: date\n    http:\n      url: \"http://example.com/searchfare\"\n      method: \"POST\"\n      body: \"{ 'src': '{{{{ inputs.parameters.src }}}}', 'dest': '{{{{ inputs.parameters.dest }}}}', 'date': '{{{{ inputs.parameters.date }}}}' }\"\n  - name: checkdiscount\n    inputs:\n      parameters:\n      - name: coupon\n      - name: fare_id\n    http:\n      url: \"http://example.com/checkdiscount\"\n      method: \"POST\"\n      body: \"{ 'coupon': '{{{{ inputs.parameters.coupon }}}}', 'fare_id': '{{{{ inputs.parameters.fare_id }}}}' }\"\n  - name: calculatefinalfare\n    inputs:\n      parameters:\n      - name: fare_id\n      - name: discount_amount\n    http:\n      url: \"http://example.com/calculatefinalfare\"\n      method: \"POST\"\n      body: \"{ 'fare_id': '{{{{ inputs.parameters.fare_id }}}}', 'discount_amount': '{{{{ inputs.parameters.discount_amount }}}}' }\"\n  arguments:\n    parameters:\n    - name: src\n      value: 'New York'\n    - name: dest\n      value: 'Los Angeles'\n    - name: date\n      value: '13th June'\n    - name: coupon\n      value: 'SUMMER50'"}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{{{ inputs.parameters.from_location }}}}'\n          - name: to_location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: date\n            value: '{{{{ inputs.parameters.date }}}}'\n      - name: findaccommodation\n        template: findaccommodation\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: budget\n            value: '{{{{ inputs.parameters.budget }}}}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - searchflight\n        - findaccommodation\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: accommodation\n            value: '{{{{ tasks.findaccommodation.result }}}}'\n      - name: planitinerary\n        template: planitinerary\n        dependencies:\n        - createtravelplan\n        arguments:\n          parameters:\n          - name: location\n            value: '{{{{ inputs.parameters.to_location }}}}'\n          - name: interests\n            value: '{{{{ inputs.parameters.interests }}}}'\n          - name: flight\n            value: '{{{{ tasks.searchflight.result }}}}'\n          - name: hotel\n            value: '{{{{ tasks.findaccommodation.result }}}}'\n  - name: searchflight\n    inputs:\n      parameters:\n      - name: from_location\n      - name: to_location\n      - name: date\n    container:\n      image: searchflight-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'searching flight' && sleep 1 && echo 'flight details'\"]\n  - name: findaccommodation\n    inputs:\n      parameters:\n      - name: destination\n      - name: budget\n    container:\n      image: findaccommodation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'finding accommodation' && sleep 1 && echo 'accommodation details'\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: createtravelplan-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'creating travel plan' && sleep 1 && echo 'travel plan details'\"]\n  - name: planitinerary\n    inputs:\n      parameters:\n      - name: location\n      - name: interests\n      - name: flight\n      - name: hotel\n    container:\n      image: planitinerary-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'planning itinerary' && sleep 1 && echo 'itinerary details'\"]\n"}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n          - name: cuisine\n            value: '{{{{ inputs.parameters.cuisine }}}}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{{{ inputs.parameters.city }}}}'\n      - name: dinnerreservation\n        template: dinnerreservation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{{{ tasks.searchrestaurant.result }}}}'\n          - name: time\n            value: '{{{{ inputs.parameters.time }}}}'\n      - name: getdirections\n        template: getdirections\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{{{ inputs.parameters.start_location }}}}'\n          - name: end_location\n            value: '{{{{ tasks.restaurantlocation.result }}}}'\n  - name: searchrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: searchrestaurant:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}' > /tmp/output.txt\"]\n  - name: restaurantlocation\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: restaurantlocation:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}' > /tmp/output.txt\"]\n  - name: dinnerreservation\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: time\n    container:\n      image: dinnerreservation:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant }} at {{ inputs.parameters.time }}' > /tmp/output.txt\"]\n  - name: getdirections\n    inputs:\n      parameters:\n      - name: start_location\n      - name: end_location\n    container:\n      image: getdirections:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Directions from {{ inputs.parameters.start_location }} to {{ inputs.parameters.end_location }}' > /tmp/output.txt\"]"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-traffic-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        arguments:\n          parameters:\n          - name: location\n            value: 'Times Square'\n      - name: timecalculator\n        template: timecalculator\n        dependencies:\n        - gettrafficupdate\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{{{ tasks.gettrafficupdate.result }}}}'\n          - name: modeOfTransport\n            value: 'bus'\n      - name: fetchnextbus\n        template: fetchnextbus\n        dependencies:\n        - timecalculator\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{{{ tasks.timecalculator.result }}}}'\n          - name: bus_route\n            value: 'Times Square to Wall Street'"}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusernextmeeting\n        template: getusernextmeeting\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{{{ inputs.parameters.user_name }}}}'\n      - name: checktraffic\n        template: checktraffic\n        dependencies:\n        - getusernextmeeting\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{{{ tasks.getusernextmeeting.result }}}}'\n  - name: getusernextmeeting\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulated API call to get next meeting' && sleep 1 && echo 'Destination Address'\"]\n  - name: checktraffic\n    inputs:\n      parameters:\n      - name: destination\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulated API call to check traffic' && sleep 1 && echo 'Traffic Condition'\"]"}]