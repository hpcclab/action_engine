[{"Id": 18, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: songname2id\n        template: songname2id\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n      - name: playlistname2id\n        template: playlistname2id\n        arguments:\n          parameters:\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - songname2id\n        - playlistname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: playlist_ID\n            value: '{{ tasks.playlistname2id.result }}'\n          - name: song_name\n            value: '{{ tasks.songname2id.result }}'"}, {"Id": 20, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-12-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  arguments:\n    parameters:\n    - name: username\n      value: 'emily_davis'\n    - name: title\n      value: 'The Great Gatsby'\n    - name: start_date\n      value: '2023-07-02'\n    - name: end_date\n      value: '2023-07-16'"}, {"Id": 21, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-12-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 22, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.username }}\"]\n  - name: title2isbn\n    inputs:\n      parameters:\n      - name: title\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.title }}\"]\n  - name: reservebook\n    inputs:\n      parameters:\n      - name: user_email\n      - name: ISBN\n      - name: start_date\n      - name: end_date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_email }} {{ inputs.parameters.ISBN }} {{ inputs.parameters.start_date }} {{ inputs.parameters.end_date }}\"]"}, {"Id": 89, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-3starhotel-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getcity\n        template: getcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '3'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 90, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-4starhotel-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getcity\n        template: getcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '4'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 91, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-37-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getcity\n        template: getcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 92, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getcity\n        template: getcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 94, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-37-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getcity\n        template: getcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendhotel\n        template: recommendhotel\n        dependencies:\n        - getcity\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcity.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookhotel\n        template: bookhotel\n        dependencies:\n        - recommendhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ tasks.recommendhotel.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 105, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: queryeventtime\n        template: queryeventtime\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: calculatedistance\n        template: calculatedistance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.start_point }}'\n          - name: end_point\n            value: '{{ inputs.parameters.end_point }}'\n      - name: estimatetraveltime\n        template: estimatetraveltime\n        dependencies:\n        - calculatedistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculatedistance.result }}'\n          - name: mode_of_transport\n            value: '{{ inputs.parameters.mode_of_transport }}'\n      - name: alertbeforedeparture\n        template: alertbeforedeparture\n        dependencies:\n        - queryeventtime\n        - estimatetraveltime\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{ tasks.queryeventtime.result }}'\n          - name: travel_time\n            value: '{{ tasks.estimatetraveltime.result }}'"}, {"Id": 106, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: meeting-alert-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: queryeventtime\n        template: queryeventtime\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: calculatedistance\n        template: calculatedistance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.start_point }}'\n          - name: end_point\n            value: '{{ inputs.parameters.end_point }}'\n      - name: estimatetraveltime\n        template: estimatetraveltime\n        dependencies:\n        - calculatedistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculatedistance.result }}'\n          - name: mode_of_transport\n            value: '{{ inputs.parameters.mode_of_transport }}'\n      - name: alertbeforedeparture\n        template: alertbeforedeparture\n        dependencies:\n        - queryeventtime\n        - estimatetraveltime\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{ tasks.queryeventtime.result }}'\n          - name: travel_time\n            value: '{{ tasks.estimatetraveltime.result }}'"}, {"Id": 107, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: queryeventtime\n        template: queryeventtime\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: calculatedistance\n        template: calculatedistance\n        arguments:\n          parameters:\n          - name: start_point\n            value: '{{ inputs.parameters.start_point }}'\n          - name: end_point\n            value: '{{ inputs.parameters.end_point }}'\n      - name: estimatetraveltime\n        template: estimatetraveltime\n        dependencies:\n        - calculatedistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.calculatedistance.result }}'\n          - name: mode_of_transport\n            value: '{{ inputs.parameters.mode_of_transport }}'\n      - name: alertbeforedeparture\n        template: alertbeforedeparture\n        dependencies:\n        - queryeventtime\n        - estimatetraveltime\n        arguments:\n          parameters:\n          - name: event_time\n            value: '{{ tasks.queryeventtime.result }}'\n          - name: travel_time\n            value: '{{ tasks.estimatetraveltime.result }}'"}, {"Id": 109, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendreataurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.username }}\"]\n  - name: getuserlocation\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_ID }}\"]\n  - name: recommendrestaurant\n    inputs:\n      parameters:\n      - name: location\n      - name: star_level\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.location }} {{ inputs.parameters.star_level }}\"]\n  - name: bookrestaurant\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: date\n      - name: time\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.restaurant_name }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}\"]"}, {"Id": 110, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - username2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendreataurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 111, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - username2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendreataurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 113, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - username2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: star_level\n            value: '{{ inputs.parameters.star_level }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.recommendreataurant.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-53-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: music-matching-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 119, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-music-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 120, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-53-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 121, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recommend-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'"}, {"Id": 122, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-music-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 123, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-music-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n      - name: playmusic\n        template: playmusic\n        dependencies:\n        - recommendsong\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 124, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: suggest-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getusermood\n        template: getusermood\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommendsong\n        template: recommendsong\n        dependencies:\n        - getusermood\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ tasks.getusermood.result }}'\n  - name: getusermood\n    inputs:\n      parameters:\n      - name: user_name\n    container:\n      image: mood-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://moodapi.example.com/getmood?user={{inputs.parameters.user_name}}'\"]\n  - name: recommendsong\n    inputs:\n      parameters:\n      - name: user_mood\n    container:\n      image: song-recommendation-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://songapi.example.com/recommendsong?mood={{inputs.parameters.user_mood}}'\"]"}, {"Id": 126, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getstore\n        template: getstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'\n      - name: buyclothing\n        template: buyclothing\n        dependencies:\n        - getstore\n        arguments:\n          parameters:\n          - name: storename\n            value: '{{ tasks.getstore.result }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'"}, {"Id": 127, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-54-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getstore\n        template: getstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'\n      - name: buyclothing\n        template: buyclothing\n        dependencies:\n        - getstore\n        arguments:\n          parameters:\n          - name: storename\n            value: '{{ tasks.getstore.result }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'"}, {"Id": 129, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-54-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getstore\n        template: getstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'\n      - name: buyclothing\n        template: buyclothing\n        dependencies:\n        - getstore\n        arguments:\n          parameters:\n          - name: storename\n            value: '{{ tasks.getstore.result }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'"}, {"Id": 130, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getstore\n        template: getstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'\n      - name: buyclothing\n        template: buyclothing\n        dependencies:\n        - getstore\n        arguments:\n          parameters:\n          - name: storename\n            value: '{{ tasks.getstore.result }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'"}, {"Id": 131, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getstore\n        template: getstore\n        dependencies:\n        - recommendclothing\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'\n      - name: buyclothing\n        template: buyclothing\n        dependencies:\n        - getstore\n        arguments:\n          parameters:\n          - name: storename\n            value: '{{ tasks.getstore.result }}'\n          - name: clothingItem\n            value: '{{ tasks.recommendclothing.result }}'"}, {"Id": 207, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-77-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 208, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-2023-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.username }}\"]\n  - name: getuserdestination\n    inputs:\n      parameters:\n      - name: user_ID\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_ID }}\"]\n  - name: findflightbydestination\n    inputs:\n      parameters:\n      - name: destination\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.destination }}\"]\n  - name: bookflight\n    inputs:\n      parameters:\n      - name: flight_details\n      - name: preferred_flight_class\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.flight_details }} {{ inputs.parameters.preferred_flight_class }}\"]"}, {"Id": 214, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 215, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-77-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 216, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-25-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 217, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-77-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserdestination\n        template: getuserdestination\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findflightbydestination\n        template: findflightbydestination\n        dependencies:\n        - getuserdestination\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getuserdestination.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - findflightbydestination\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.findflightbydestination.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 376, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-quickest-route-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 377, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 378, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-44-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 379, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getuserlocation.result.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 381, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: personname2id\n        template: personname2id\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - personname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.personname2id.result }}'\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: getroute\n        template: getroute\n        dependencies:\n        - getuserlocation\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ tasks.getuserlocation.result }}'\n          - name: destination_location\n            value: '{{ tasks.searchrestaurant.result }}'"}, {"Id": 414, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritegenre\n        template: getuserfavoritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: searchmoviebygenre\n        template: searchmoviebygenre\n        dependencies:\n        - getuserfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getuserfavoritegenre.result }}'\n      - name: reservemovieticket\n        template: reservemovieticket\n        dependencies:\n        - searchmoviebygenre\n        arguments:\n          parameters:\n          - name: movie_ID\n            value: '{{ tasks.searchmoviebygenre.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 415, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritecuisine\n        template: getuserfavoritecuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserfavoritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserfavoritecuisine.result }}'\n      - name: bookrestauranttable\n        template: bookrestauranttable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 416, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserpreferredcuisine\n        template: getuserpreferredcuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserpreferredcuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserpreferredcuisine.result }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 418, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-9876-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: card2number\n        template: card2number\n        arguments:\n          parameters:\n          - name: card_id\n            value: '{{ inputs.parameters.card_id }}'\n      - name: checkcardbalance\n        template: checkcardbalance\n        dependencies:\n        - card2number\n        arguments:\n          parameters:\n          - name: card_number\n            value: '{{ tasks.card2number.result }}'\n      - name: enoughbalance\n        template: enoughbalance\n        dependencies:\n        - checkcardbalance\n        arguments:\n          parameters:\n          - name: product_price\n            value: '{{ inputs.parameters.product_price }}'\n          - name: card_balance\n            value: '{{ tasks.checkcardbalance.result }}'"}, {"Id": 442, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-303-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2customerid\n        template: username2customerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: productname2id\n        template: productname2id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: cartname2id\n        template: cartname2id\n        arguments:\n          parameters:\n          - name: cart_name\n            value: '{{ inputs.parameters.cart_name }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - productname2id\n        - username2customerid\n        - cartname2id\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ tasks.productname2id.result }}'\n          - name: customer_ID\n            value: '{{ tasks.username2customerid.result }}'\n          - name: cart_ID\n            value: '{{ tasks.cartname2id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 450, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: studentname2id\n        template: studentname2id\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ inputs.parameters.student_name }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: instructorname2id\n        template: instructorname2id\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{ inputs.parameters.instructor_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        - instructorname2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.studentname2id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 474, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{ inputs.parameters.age }}'\n          - name: gender\n            value: '{{ inputs.parameters.gender }}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getexerciseroutine\n        - getdietplan\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{ tasks.getdietplan.result }}'\n          - name: ExerciseRoutine\n            value: '{{ tasks.getexerciseroutine.result }}'"}, {"Id": 477, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-television-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkinventory\n        template: checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n      - name: calculateshippingcost\n        template: calculateshippingcost\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: estimatedeliverytime\n        template: estimatedeliverytime\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - checkinventory\n        - calculateshippingcost\n        - estimatedeliverytime\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ inputs.parameters.productID }}'\n          - name: supplier_ID\n            value: '{{ inputs.parameters.supplier_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 478, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-302-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.startPoint }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.endPoint }}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflight.result }}'\n      - name: getluggagefee\n        template: getluggagefee\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: luggage\n            value: '{{ tasks.checkluggageallowance.result }}'\n          - name: weight\n            value: '{{ inputs.parameters.weight }}'"}, {"Id": 479, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelroomrate\n        template: gethotelroomrate\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - gethotelroomrate\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.gethotelroomrate.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  \n  templates:\n  - name: gethotelroomrate\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"]\n\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 50\"]\n\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 75\"]\n\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(({{inputs.parameters.roomRate}} + {{inputs.parameters.mealCost}} + {{inputs.parameters.sightSeeingCost}}))\"]\n"}, {"Id": 481, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-310-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findoutdooractivities\n        template: findoutdooractivities\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: weatherForecast\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: findrestaurants\n        template: findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisineType\n            value: '{{ inputs.parameters.cuisineType }}'\n      - name: plandayout\n        template: plandayout\n        dependencies:\n        - findoutdooractivities\n        - findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: activities\n            value: '{{ tasks.findoutdooractivities.result }}'\n          - name: restaurants\n            value: '{{ tasks.findrestaurants.result }}'"}, {"Id": 538, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n      - name: findevents\n        template: findevents\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getrestaurants\n        template: getrestaurants\n        arguments:\n          parameters:\n          - name: City\n            value: '{{ inputs.parameters.city }}'\n      - name: tripadvisor\n        template: tripadvisor\n        dependencies:\n        - getweather\n        - findevents\n        - getrestaurants\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: restaurants\n            value: '{{ tasks.getrestaurants.result }}'\n          - name: events\n            value: '{{ tasks.findevents.result }}'\n  templates:\n  - name: getweather\n    http:\n      url: \"http://weatherapi.com/forecast\"\n      method: \"GET\"\n  - name: findevents\n    http:\n      url: \"http://eventfinder.com/events\"\n      method: \"GET\"\n  - name: getrestaurants\n    http:\n      url: \"http://restaurantapi.com/recommendations\"\n      method: \"GET\"\n  - name: tripadvisor\n    http:\n      url: \"http://tripadvisor.com/advice\"\n      method: \"GET\""}, {"Id": 631, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-469-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: getbookgenre\n        template: getbookgenre\n        arguments:\n          parameters:\n          - name: bookTitle\n            value: '{{ inputs.parameters.bookTitle }}'\n      - name: recommendbookbygenre\n        template: recommendbookbygenre\n        dependencies:\n        - getuserid\n        - getbookgenre\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: genre\n            value: '{{ tasks.getbookgenre.result }}'"}, {"Id": 632, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-movie-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavouritegenre\n        template: getuserfavouritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findmoviebygenre\n        template: findmoviebygenre\n        dependencies:\n        - getuserfavouritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getuserfavouritegenre.result }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - findmoviebygenre\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.findmoviebygenre.result }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 633, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritegenre\n        template: getuserfavoritegenre\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: searchmoviebygenre\n        template: searchmoviebygenre\n        dependencies:\n        - getuserfavoritegenre\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ tasks.getuserfavoritegenre.result }}'\n      - name: reservemovieticket\n        template: reservemovieticket\n        dependencies:\n        - searchmoviebygenre\n        arguments:\n          parameters:\n          - name: movie_ID\n            value: '{{ tasks.searchmoviebygenre.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 636, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-175-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritecuisine\n        template: getuserfavoritecuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserfavoritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserfavoritecuisine.result }}'\n      - name: bookrestauranttable\n        template: bookrestauranttable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 637, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-175-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritecuisine\n        template: getuserfavoritecuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserfavoritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserfavoritecuisine.result }}'\n      - name: bookrestauranttable\n        template: bookrestauranttable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 639, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserpreferredcuisine\n        template: getuserpreferredcuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserpreferredcuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserpreferredcuisine.result }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 640, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-178-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserpreferredcuisine\n        template: getuserpreferredcuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserpreferredcuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserpreferredcuisine.result }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'"}, {"Id": 645, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserlocation\n        template: getuserlocation\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: getservicestationnearme\n        template: getservicestationnearme\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: user_location\n            value: '{{ tasks.getuserlocation.result }}'\n      - name: getusercar\n        template: getusercar\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.username }}'\n      - name: bookcarservice\n        template: bookcarservice\n        dependencies:\n        - getservicestationnearme\n        - getusercar\n        arguments:\n          parameters:\n          - name: car_id\n            value: '{{ tasks.getusercar.result }}'\n          - name: service_station_id\n            value: '{{ tasks.getservicestationnearme.result }}'\n          - name: user_name\n            value: '{{ inputs.parameters.username }}'"}, {"Id": 740, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-482-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: useridtoname\n        template: useridtoname\n        arguments:\n          parameters:\n          - name: userId\n            value: '{{ inputs.parameters.userId }}'\n      - name: routetolocation\n        template: routetolocation\n        arguments:\n          parameters:\n          - name: route\n            value: '{{ inputs.parameters.route }}'\n      - name: checkbusschedule\n        template: checkbusschedule\n        dependencies:\n        - routetolocation\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ tasks.routetolocation.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookbusseat\n        template: bookbusseat\n        dependencies:\n        - useridtoname\n        - checkbusschedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ tasks.useridtoname.result }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkbusschedule.result }}'"}, {"Id": 741, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-99z-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: userIdToName\n        template: userIdToName\n        arguments:\n          parameters:\n          - name: userId\n            value: '{{ inputs.parameters.userId }}'\n      - name: routeToLocation\n        template: routeToLocation\n        arguments:\n          parameters:\n          - name: route\n            value: '{{ inputs.parameters.route }}'\n      - name: checkBusSchedule\n        template: checkBusSchedule\n        dependencies:\n        - routeToLocation\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ tasks.routeToLocation.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: bookBusSeat\n        template: bookBusSeat\n        dependencies:\n        - userIdToName\n        - checkBusSchedule\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ tasks.userIdToName.result }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkBusSchedule.result }}'\n  templates:\n  - name: userIdToName\n    inputs:\n      parameters:\n      - name: userId\n    container:\n      image: user-id-to-name-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.userId }}\"]\n  - name: routeToLocation\n    inputs:\n      parameters:\n      - name: route\n    container:\n      image: route-to-location-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.route }}\"]\n  - name: checkBusSchedule\n    inputs:\n      parameters:\n      - name: location_coordinates\n      - name: date\n      - name: time\n    container:\n      image: check-bus-schedule-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.location_coordinates }} {{ inputs.parameters.date }} {{ inputs.parameters.time }}\"]\n  - name: bookBusSeat\n    inputs:\n      parameters:\n      - name: user_name\n      - name: bus_schedule_info\n    container:\n      image: book-bus-seat-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.user_name }} {{ inputs.parameters.bus_schedule_info }}\"]"}, {"Id": 743, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-77x-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: routeToLocation\n        template: routeToLocation\n        arguments:\n          parameters:\n          - name: route\n            value: '{{ inputs.parameters.route }}'\n      - name: checkBusSchedule\n        template: checkBusSchedule\n        dependencies:\n        - routeToLocation\n        arguments:\n          parameters:\n          - name: location_coordinates\n            value: '{{ tasks.routeToLocation.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: userIdToName\n        template: userIdToName\n        arguments:\n          parameters:\n          - name: userId\n            value: '{{ inputs.parameters.userId }}'\n      - name: bookBusSeat\n        template: bookBusSeat\n        dependencies:\n        - checkBusSchedule\n        - userIdToName\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ tasks.userIdToName.result }}'\n          - name: bus_schedule_info\n            value: '{{ tasks.checkBusSchedule.result }}'"}, {"Id": 776, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-235-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: venuename2id\n        template: venuename2id\n        arguments:\n          parameters:\n          - name: venue_name\n            value: '{{ inputs.parameters.venue_name }}'\n      - name: eventname2id\n        template: eventname2id\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: stringtodatetime\n        template: stringtodatetime\n        arguments:\n          parameters:\n          - name: date_string\n            value: '{{ inputs.parameters.date_string }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - venuename2id\n        - eventname2id\n        - stringtodatetime\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.eventname2id.result }}'\n          - name: venue_ID\n            value: '{{ tasks.venuename2id.result }}'\n          - name: date\n            value: '{{ tasks.stringtodatetime.result }}'"}, {"Id": 780, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: studentname2id\n        template: studentname2id\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ inputs.parameters.student_name }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: instructorname2id\n        template: instructorname2id\n        arguments:\n          parameters:\n          - name: instructor_name\n            value: '{{ inputs.parameters.instructor_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        - instructorname2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.studentname2id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 862, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: wellness-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethealthinformation\n        template: gethealthinformation\n        arguments:\n          parameters:\n          - name: age\n            value: '{{ inputs.parameters.age }}'\n          - name: gender\n            value: '{{ inputs.parameters.gender }}'\n      - name: getexerciseroutine\n        template: getexerciseroutine\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: getdietplan\n        template: getdietplan\n        dependencies:\n        - gethealthinformation\n        arguments:\n          parameters:\n          - name: HealthInformation\n            value: '{{ tasks.gethealthinformation.result }}'\n      - name: createwellnessplan\n        template: createwellnessplan\n        dependencies:\n        - getexerciseroutine\n        - getdietplan\n        arguments:\n          parameters:\n          - name: DietPlan\n            value: '{{ tasks.getdietplan.result }}'\n          - name: ExerciseRoutine\n            value: '{{ tasks.getexerciseroutine.result }}'"}, {"Id": 872, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-laptop-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkinventory\n        template: checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n      - name: calculateshippingcost\n        template: calculateshippingcost\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: estimatedeliverytime\n        template: estimatedeliverytime\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ inputs.parameters.productID }}'\n          - name: supplier_ID\n            value: '{{ inputs.parameters.supplier_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 873, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-refrigerator-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkinventory\n        template: checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n      - name: calculateshippingcost\n        template: calculateshippingcost\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: estimatedeliverytime\n        template: estimatedeliverytime\n        dependencies:\n        - checkinventory\n        arguments:\n          parameters:\n          - name: productID\n            value: '{{ inputs.parameters.productID }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - checkinventory\n        - calculateshippingcost\n        - estimatedeliverytime\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ inputs.parameters.productID }}'\n          - name: supplier_ID\n            value: '{{ inputs.parameters.supplier_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 877, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelroomrate\n        template: gethotelroomrate\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - gethotelroomrate\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.gethotelroomrate.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  - name: gethotelroomrate\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 100\"]\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 50\"]\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 75\"]\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo $(({{inputs.parameters.roomRate}} + {{inputs.parameters.mealCost}} + {{inputs.parameters.sightSeeingCost}}))\"]\n"}, {"Id": 878, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelroomrate\n        template: gethotelroomrate\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - gethotelroomrate\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.gethotelroomrate.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  - name: gethotelroomrate\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-hotel-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://hotelapi.example.com/rate?city={{inputs.parameters.city}}'\"]\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-meal-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://mealapi.example.com/cost?city={{inputs.parameters.city}}'\"]\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-sightseeing-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X GET 'http://sightseeingapi.example.com/cost?city={{inputs.parameters.city}}'\"]\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-vacation-cost-api-image\n      command: [\"sh\", \"-c\"]\n      args: [\"curl -X POST 'http://vacationcostapi.example.com/calculate' -d '{\\\"roomRate\\\": {{inputs.parameters.roomRate}}, \\\"mealCost\\\": {{inputs.parameters.mealCost}}, \\\"sightSeeingCost\\\": {{inputs.parameters.sightSeeingCost}}}'\"]"}, {"Id": 879, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: vacation-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gethotelroomrate\n        template: gethotelroomrate\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getmealcost\n        template: getmealcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getsightseeingcost\n        template: getsightseeingcost\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculatevacationcost\n        template: calculatevacationcost\n        dependencies:\n        - gethotelroomrate\n        - getmealcost\n        - getsightseeingcost\n        arguments:\n          parameters:\n          - name: roomRate\n            value: '{{ tasks.gethotelroomrate.result }}'\n          - name: mealCost\n            value: '{{ tasks.getmealcost.result }}'\n          - name: sightSeeingCost\n            value: '{{ tasks.getsightseeingcost.result }}'\n  \n  templates:\n  - name: gethotelroomrate\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'get hotel room rate'\"]\n  - name: getmealcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'get meal cost'\"]\n  - name: getsightseeingcost\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'get sightseeing cost'\"]\n  - name: calculatevacationcost\n    inputs:\n      parameters:\n      - name: roomRate\n      - name: mealCost\n      - name: sightSeeingCost\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'calculate total vacation cost'\"]"}, {"Id": 887, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findoutdooractivities\n        template: findoutdooractivities\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: weatherForecast\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: findrestaurants\n        template: findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisineType\n            value: '{{ inputs.parameters.cuisineType }}'\n      - name: plandayout\n        template: plandayout\n        dependencies:\n        - findoutdooractivities\n        - findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: activities\n            value: '{{ tasks.findoutdooractivities.result }}'\n          - name: restaurants\n            value: '{{ tasks.findrestaurants.result }}'"}, {"Id": 889, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-310-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findoutdooractivities\n        template: findoutdooractivities\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: weatherForecast\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: findrestaurants\n        template: findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisineType\n            value: '{{ inputs.parameters.cuisineType }}'\n      - name: plandayout\n        template: plandayout\n        dependencies:\n        - findoutdooractivities\n        - findrestaurants\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: activities\n            value: '{{ tasks.findoutdooractivities.result }}'\n          - name: restaurants\n            value: '{{ tasks.findrestaurants.result }}'"}, {"Id": 972, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-festival-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: currenttime\n        template: currenttime\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: openparks\n        template: openparks\n        dependencies:\n        - currenttime\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: time\n            value: '{{ tasks.currenttime.result }}'\n      - name: foodfestival\n        template: foodfestival\n        dependencies:\n        - openparks\n        arguments:\n          parameters:\n          - name: park\n            value: '{{ tasks.openparks.result }}'"}, {"Id": 1089, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-10001-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcitybyzip\n        template: getcitybyzip\n        arguments:\n          parameters:\n          - name: zip_code\n            value: '{{ inputs.parameters.zip_code }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - getcitybyzip\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: outfit\n            value: '{{ tasks.getclothingadvice.result }}'"}, {"Id": 1129, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-cost-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: restaurantpricerange\n        template: restaurantpricerange\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: restaurant\n            value: '{{ inputs.parameters.restaurant }}'\n      - name: transportfare\n        template: transportfare\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n      - name: totaldinnercost\n        template: totaldinnercost\n        dependencies:\n        - restaurantpricerange\n        - transportfare\n        arguments:\n          parameters:\n          - name: restaurantPriceRange\n            value: '{{ tasks.restaurantpricerange.result }}'\n          - name: transportFare\n            value: '{{ tasks.transportfare.result }}'\n  \n  - name: restaurantpricerange\n    inputs:\n      parameters:\n      - name: city\n      - name: restaurant\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Restaurant price range for {{inputs.parameters.restaurant}} in {{inputs.parameters.city}}'\"]\n\n  - name: transportfare\n    inputs:\n      parameters:\n      - name: city\n      - name: destination\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Transport fare to {{inputs.parameters.destination}} in {{inputs.parameters.city}}'\"]\n\n  - name: totaldinnercost\n    inputs:\n      parameters:\n      - name: restaurantPriceRange\n      - name: transportFare\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Total dinner cost with price range {{inputs.parameters.restaurantPriceRange}} and fare {{inputs.parameters.transportFare}}'\"]\n"}, {"Id": 1153, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: business-trip-planner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.city }}'\n      - name: getcarrentalavailability\n        template: getcarrentalavailability\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getconferencedetails\n        template: getconferencedetails\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: planbusinesstrip\n        template: planbusinesstrip\n        dependencies:\n        - getweather\n        - getcarrentalavailability\n        - getconferencedetails\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n          - name: available_cars\n            value: '{{ tasks.getcarrentalavailability.result }}'\n          - name: conferences\n            value: '{{ tasks.getconferencedetails.result }}'"}, {"Id": 1168, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-outfit-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcitybyzip\n        template: getcitybyzip\n        arguments:\n          parameters:\n          - name: zip_code\n            value: '{{ inputs.parameters.zip_code }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - getcitybyzip\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: outfit\n            value: '{{ tasks.getclothingadvice.result }}'"}, {"Id": 1169, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-60629-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcitybyzip\n        template: getcitybyzip\n        arguments:\n          parameters:\n          - name: zip_code\n            value: '{{ inputs.parameters.zip_code }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - getcitybyzip\n        - getclothingadvice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: outfit\n            value: '{{ tasks.getclothingadvice.result }}'"}, {"Id": 1170, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-60629-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcitybyzip\n        template: getcitybyzip\n        arguments:\n          parameters:\n          - name: zip_code\n            value: '{{ inputs.parameters.zip_code }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - getclothingadvice\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: outfit\n            value: '{{ tasks.getclothingadvice.result }}'"}, {"Id": 1171, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-02128-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcitybyzip\n        template: getcitybyzip\n        arguments:\n          parameters:\n          - name: zip_code\n            value: '{{ inputs.parameters.zip_code }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        dependencies:\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweatherforecast.result }}'\n      - name: getoutfitstore\n        template: getoutfitstore\n        dependencies:\n        - getclothingadvice\n        - getcitybyzip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ tasks.getcitybyzip.result }}'\n          - name: outfit\n            value: '{{ tasks.getclothingadvice.result }}'"}, {"Id": 1316, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: property-cost-estimation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpropertyprice\n        template: getpropertyprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: propertyType\n            value: '{{ inputs.parameters.propertyType }}'\n      - name: calculatemortgage\n        template: calculatemortgage\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getpropertyprice.result }}'\n          - name: downPayment\n            value: '{{ inputs.parameters.downPayment }}'\n          - name: interestRate\n            value: '{{ inputs.parameters.interestRate }}'\n          - name: term\n            value: '{{ inputs.parameters.term }}'\n      - name: estimatetax\n        template: estimatetax\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getpropertyprice.result }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculateownershipcost\n        template: calculateownershipcost\n        dependencies:\n        - calculatemortgage\n        - estimatetax\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{ tasks.calculatemortgage.result }}'\n          - name: tax\n            value: '{{ tasks.estimatetax.result }}'\n  - name: getpropertyprice\n    inputs:\n      parameters:\n      - name: city\n      - name: propertyType\n    http:\n      url: \"http://realestateprice.api/get\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n      - name: propertyType\n        value: '{{ inputs.parameters.propertyType }}'\n  - name: calculatemortgage\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: downPayment\n      - name: interestRate\n      - name: term\n    http:\n      url: \"http://mortgagecalculator.api/calculate\"\n      method: \"POST\"\n      parameters:\n      - name: propertyPrice\n        value: '{{ inputs.parameters.propertyPrice }}'\n      - name: downPayment\n        value: '{{ inputs.parameters.downPayment }}'\n      - name: interestRate\n        value: '{{ inputs.parameters.interestRate }}'\n      - name: term\n        value: '{{ inputs.parameters.term }}'\n  - name: estimatetax\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: city\n    http:\n      url: \"http://taxestimator.api/estimate\"\n      method: \"GET\"\n      parameters:\n      - name: propertyPrice\n        value: '{{ inputs.parameters.propertyPrice }}'\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: calculateownershipcost\n    inputs:\n      parameters:\n      - name: mortgagePayment\n      - name: tax\n    http:\n      url: \"http://propertyownershipcost.api/calculate\"\n      method: \"POST\"\n      parameters:\n      - name: mortgagePayment\n        value: '{{ inputs.parameters.mortgagePayment }}'\n      - name: tax\n        value: '{{ inputs.parameters.tax }}'"}, {"Id": 1317, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: property-cost-calculation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpropertyprice\n        template: getpropertyprice\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: propertyType\n            value: '{{ inputs.parameters.propertyType }}'\n      - name: calculatemortgage\n        template: calculatemortgage\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getpropertyprice.result }}'\n          - name: downPayment\n            value: '{{ inputs.parameters.downPayment }}'\n          - name: interestRate\n            value: '{{ inputs.parameters.interestRate }}'\n          - name: term\n            value: '{{ inputs.parameters.term }}'\n      - name: estimatetax\n        template: estimatetax\n        dependencies:\n        - getpropertyprice\n        arguments:\n          parameters:\n          - name: propertyPrice\n            value: '{{ tasks.getpropertyprice.result }}'\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: calculateownershipcost\n        template: calculateownershipcost\n        dependencies:\n        - calculatemortgage\n        - estimatetax\n        arguments:\n          parameters:\n          - name: mortgagePayment\n            value: '{{ tasks.calculatemortgage.result }}'\n          - name: tax\n            value: '{{ tasks.estimatetax.result }}'\n  - name: getpropertyprice\n    inputs:\n      parameters:\n      - name: city\n      - name: propertyType\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating API call to get property price'\"]\n  - name: calculatemortgage\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: downPayment\n      - name: interestRate\n      - name: term\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating API call to calculate mortgage'\"]\n  - name: estimatetax\n    inputs:\n      parameters:\n      - name: propertyPrice\n      - name: city\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating API call to estimate tax'\"]\n  - name: calculateownershipcost\n    inputs:\n      parameters:\n      - name: mortgagePayment\n      - name: tax\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Simulating API call to calculate ownership cost'\"]"}, {"Id": 1363, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: City\n            value: '{{ inputs.parameters.City }}'\n      - name: getclothingrecommendation\n        template: getclothingrecommendation\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: findstore\n        template: findstore\n        dependencies:\n        - getclothingrecommendation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.City }}'\n          - name: clothing_info\n            value: '{{ tasks.getclothingrecommendation.result }}'\n      - name: buyonline\n        template: buyonline\n        dependencies:\n        - findstore\n        arguments:\n          parameters:\n          - name: store_info\n            value: '{{ tasks.findstore.result }}'\n  \n  - name: getweather\n    inputs:\n      parameters:\n      - name: City\n    container:\n      image: weatherapi:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'WeatherAPI({{inputs.parameters.City}})' > /tmp/weather.txt\"]\n\n  - name: getclothingrecommendation\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: clothingsuggestionapi:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'ClothingSuggestionAPI({{inputs.parameters.weather}})' > /tmp/clothing.txt\"]\n\n  - name: findstore\n    inputs:\n      parameters:\n      - name: city\n      - name: clothing_info\n    container:\n      image: storesearchapi:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'StoreSearchAPI({{inputs.parameters.city}}, {{inputs.parameters.clothing_info}})' > /tmp/store.txt\"]\n\n  - name: buyonline\n    inputs:\n      parameters:\n      - name: store_info\n    container:\n      image: buyonlineapi:latest\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'BuyOnlineAPI({{inputs.parameters.store_info}})' > /tmp/purchase.txt\"]"}, {"Id": 1423, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-672-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getflightid\n        template: getflightid\n        dependencies:\n        - checkweather\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_options\n            value: '{{ tasks.searchflight.result }}'\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - getflightid\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.getflightid.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 1424, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-673-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: searchflight\n        template: searchflight\n        arguments:\n          parameters:\n          - name: from_location\n            value: '{{ inputs.parameters.from_location }}'\n          - name: to_location\n            value: '{{ inputs.parameters.to_location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getflightid\n        template: getflightid\n        dependencies:\n        - checkweather\n        - searchflight\n        arguments:\n          parameters:\n          - name: flight_options\n            value: '{{ tasks.searchflight.result }}'\n          - name: weather_status\n            value: '{{ tasks.checkweather.result }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - getflightid\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.getflightid.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 1468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-rome-dinner-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalweather\n        template: getlocalweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findtrendingfashion\n        template: findtrendingfashion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: season\n            value: '{{ inputs.parameters.season }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getlocalweather.result }}'\n      - name: generateoutfit\n        template: generateoutfit\n        dependencies:\n        - recommendclothing\n        - findtrendingfashion\n        arguments:\n          parameters:\n          - name: clothing\n            value: '{{ tasks.recommendclothing.result }}'\n          - name: fashion\n            value: '{{ tasks.findtrendingfashion.result }}'"}, {"Id": 1469, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalweather\n        template: getlocalweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findtrendingfashion\n        template: findtrendingfashion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: season\n            value: '{{ inputs.parameters.season }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - getlocalweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getlocalweather.result }}'\n      - name: generateoutfit\n        template: generateoutfit\n        dependencies:\n        - recommendclothing\n        - findtrendingfashion\n        arguments:\n          parameters:\n          - name: clothing\n            value: '{{ tasks.recommendclothing.result }}'\n          - name: fashion\n            value: '{{ tasks.findtrendingfashion.result }}'"}, {"Id": 1500, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: notify-user-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: isbn2booktitle\n        template: isbn2booktitle\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: bookprice\n        template: bookprice\n        dependencies:\n        - isbn2booktitle\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ tasks.isbn2booktitle.result }}'\n      - name: notifyuser\n        template: notifyuser\n        dependencies:\n        - username2id\n        - bookprice\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: message\n            value: 'The price of the book is {{ tasks.bookprice.result }}'"}, {"Id": 1514, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-773-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: user2age\n        template: user2age\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: userpreference\n        template: userpreference\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: recommenddrink\n        template: recommenddrink\n        dependencies:\n        - userpreference\n        arguments:\n          parameters:\n          - name: user_preference\n            value: '{{ tasks.userpreference.result }}'\n      - name: buyalcohol\n        template: buyalcohol\n        dependencies:\n        - user2age\n        arguments:\n          parameters:\n          - name: user_age\n            value: '{{ tasks.user2age.result }}'"}, {"Id": 1519, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-9783-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: isbn2booktitle\n        template: isbn2booktitle\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: bookprice\n        template: bookprice\n        dependencies:\n        - isbn2booktitle\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ tasks.isbn2booktitle.result }}'\n      - name: notifyuser\n        template: notifyuser\n        dependencies:\n        - username2id\n        - bookprice\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: message\n            value: 'The price of the book is {{ tasks.bookprice.result }}'"}, {"Id": 1520, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: schedule-meeting-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserlocation\n        template: getuserlocation\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: gettimezone\n        template: gettimezone\n        dependencies:\n        - getuserlocation\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.getuserlocation.result }}'\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: schedulemeeting\n        template: schedulemeeting\n        dependencies:\n        - username2email\n        - gettimezone\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: start_time\n            value: '{{ inputs.parameters.start_time }}'\n          - name: end_time\n            value: '{{ inputs.parameters.end_time }}'\n          - name: timezone\n            value: '{{ tasks.gettimezone.result }}'\n  \ntemplates:\n  - name: getuserlocation\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'GetUserLocationByUsername({{inputs.parameters.username}})' > /tmp/output\"]\n\n  - name: gettimezone\n    inputs:\n      parameters:\n      - name: location\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'GetTimeZoneByLocation({{inputs.parameters.location}})' > /tmp/output\"]\n\n  - name: username2email\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Username2Email({{inputs.parameters.username}})' > /tmp/output\"]\n\n  - name: schedulemeeting\n    inputs:\n      parameters:\n      - name: user_email\n      - name: start_time\n      - name: end_time\n      - name: timezone\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'ScheduleMeeting({{inputs.parameters.user_email}}, {{inputs.parameters.start_time}}, {{inputs.parameters.end_time}}, {{inputs.parameters.timezone}})' > /tmp/output\"]"}, {"Id": 1525, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: movietitle2id\n        template: movietitle2id\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ inputs.parameters.movie_title }}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - username2id\n        - movietitle2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: movie_ID\n            value: '{{ tasks.movietitle2id.result }}'\n      - name: emailnotification\n        template: emailnotification\n        dependencies:\n        - addtowatchlist\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: message\n            value: 'The movie has been added to your watchlist.'"}, {"Id": 1537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-outing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: gettraveltime\n        template: gettraveltime\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: source\n            value: '{{ inputs.parameters.source }}'\n          - name: destination\n            value: '{{ tasks.findnearestcinema.result }}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ tasks.findnearestcinema.result }}'\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: calculatetotalmovieoutingtime\n        template: calculatetotalmovieoutingtime\n        dependencies:\n        - gettraveltime\n        arguments:\n          parameters:\n          - name: travelTime\n            value: '{{ tasks.gettraveltime.result }}'\n          - name: movieLength\n            value: '{{ inputs.parameters.movieLength }}'"}, {"Id": 1542, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1542-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        dependencies:\n        - fetchcity\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ tasks.fetchcity.result }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.cityArrival }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - fetchflightid\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.fetchflightid.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchflightid\n        template: fetchflightid\n        dependencies:\n        - findflight\n        arguments:\n          parameters:\n          - name: flight_name\n            value: '{{ tasks.findflight.result }}'\n      - name: fetchcity\n        template: fetchcity\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'"}, {"Id": 1545, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-175-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getuserfavoritecuisine\n        template: getuserfavoritecuisine\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: findrestaurantbycuisine\n        template: findrestaurantbycuisine\n        dependencies:\n        - getuserfavoritecuisine\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ tasks.getuserfavoritecuisine.result }}'\n      - name: bookrestauranttable\n        template: bookrestauranttable\n        dependencies:\n        - findrestaurantbycuisine\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.findrestaurantbycuisine.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 1546, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - username2id\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{ tasks.username2id.result }}'\n      - name: recommendsong\n        template: recommendsong\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ inputs.parameters.user_mood }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - username2id\n        - recommendsong\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: song_ID\n            value: '{{ tasks.recommendsong.result }}'"}, {"Id": 1547, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2id\n        template: username2id\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - username2id\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{ tasks.username2id.result }}'\n      - name: recommendsong\n        template: recommendsong\n        arguments:\n          parameters:\n          - name: user_mood\n            value: '{{ inputs.parameters.user_mood }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - username2id\n        - recommendsong\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2id.result }}'\n          - name: song_ID\n            value: '{{ tasks.recommendsong.result }}'"}]