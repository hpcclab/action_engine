[{"Id": 2, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{ tasks.getuserid.result }}'\n      - name: songname2id\n        template: songname2id\n        arguments:\n          parameters:\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n      - name: addplaylist\n        template: addplaylist\n        dependencies:\n        - fetchuserplaylist\n        - songname2id\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.fetchuserplaylist.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'"}, {"Id": 4, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-33-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getplaylistid\n        template: getplaylistid\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_name\n            value: '{{ inputs.parameters.playlist_name }}'\n      - name: addsongtoplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - getplaylistid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.getplaylistid.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_name }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: username\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: getplaylistid\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: addsongtoplaylist\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: playlist_ID\n      - name: song_name\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Song added'\"]"}, {"Id": 6, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-23-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: fetchuserplaylist\n        template: fetchuserplaylist\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_id\n            value: '{{ tasks.getuserid.result }}'\n      - name: songtitletoid\n        template: songtitletoid\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ inputs.parameters.song_title }}'\n      - name: addplaylist\n        template: addsongtoplaylist\n        dependencies:\n        - fetchuserplaylist\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: playlist_ID\n            value: '{{ tasks.fetchuserplaylist.result }}'\n          - name: song_name\n            value: '{{ inputs.parameters.song_title }}'"}, {"Id": 37, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: findshowtime\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: location\n      - name: date\n    http:\n      url: \"http://example.com/findshowtime\"\n      method: \"GET\"\n  - name: booktickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets\n    http:\n      url: \"http://example.com/booktickets\"\n      method: \"POST\""}, {"Id": 138, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-459-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: buybook\n        template: buybook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'"}, {"Id": 148, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - email2userid\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 150, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: enroll-course-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2username\n        template: email2username\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: studentname2id\n        template: studentname2id\n        dependencies:\n        - email2username\n        arguments:\n          parameters:\n          - name: student_name\n            value: '{{ tasks.email2username.result }}'\n      - name: coursename2id\n        template: coursename2id\n        arguments:\n          parameters:\n          - name: course_name\n            value: '{{ inputs.parameters.course_name }}'\n      - name: enrollcourse\n        template: enrollcourse\n        dependencies:\n        - studentname2id\n        - coursename2id\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.studentname2id.result }}'\n          - name: subject_ID\n            value: '{{ tasks.coursename2id.result }}'\n          - name: semester\n            value: '{{ inputs.parameters.semester }}'"}, {"Id": 166, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-738-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: musicconcert\n        template: musicconcert\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - musicconcert\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.musicconcert.result }}'\n          - name: venue_ID\n            value: '{{ inputs.parameters.venue_ID }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: musicconcert\n    inputs:\n      parameters:\n      - name: venue\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching concerts for venue: {{inputs.parameters.venue}}'\"]\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking ticket for event ID: {{inputs.parameters.event_ID}} at venue ID: {{inputs.parameters.venue_ID}} on date: {{inputs.parameters.date}}'\"]"}, {"Id": 173, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-ff-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetcheventid\n        template: fetcheventid\n        arguments:\n          parameters:\n          - name: event_name\n            value: '{{ inputs.parameters.event_name }}'\n      - name: fetchvenueid\n        template: fetchvenueid\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: bookeventticket\n        template: bookeventticket\n        dependencies:\n        - fetcheventid\n        - fetchvenueid\n        arguments:\n          parameters:\n          - name: event_ID\n            value: '{{ tasks.fetcheventid.result }}'\n          - name: venue_ID\n            value: '{{ tasks.fetchvenueid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n  - name: fetcheventid\n    inputs:\n      parameters:\n      - name: event_name\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 123\"]\n  - name: fetchvenueid\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 456\"]\n  - name: bookeventticket\n    inputs:\n      parameters:\n      - name: event_ID\n      - name: venue_ID\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Booking confirmed'\"]\n  arguments:\n    parameters:\n    - name: event_name\n      value: 'Film Festival'\n    - name: city\n      value: 'Los Angeles'\n    - name: date\n      value: '2023-10-22'"}, {"Id": 227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: order-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: getsupplierid\n        template: getsupplierid\n        arguments:\n          parameters:\n          - name: supplier_name\n            value: '{{ inputs.parameters.supplier_name }}'\n      - name: placeorder\n        template: placeorder\n        dependencies:\n        - getproductid\n        - getsupplierid\n        arguments:\n          parameters:\n          - name: item_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: supplier_ID\n            value: '{{ tasks.getsupplierid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 242, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-203-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 307, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plantrip\n        template: plantrip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - arrangetransportation\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.arrangetransportation.result }}'\n          - name: accommodation\n            value: '{{ inputs.parameters.accommodation }}'\n      - name: tripplan\n        template: tripplan\n        dependencies:\n        - plantrip\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'"}, {"Id": 310, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dining-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: suggestdiningoptions\n        template: suggestdiningoptions\n        arguments:\n          parameters:\n          - name: localBudget\n            value: '{{ inputs.parameters.localBudget }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n  - name: suggestdiningoptions\n    http:\n      url: \"http://example.com/suggestdiningoptions\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"localBudget\": \"{{ inputs.parameters.localBudget }}\",\n          \"location\": \"{{ inputs.parameters.location }}\"\n        }\n    outputs:\n      parameters:\n      - name: diningOptions\n        valueFrom:\n          jsonPath: \"$.diningOptions\""}, {"Id": 429, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-iphone12-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcustomerid\n        template: getcustomerid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getproductid\n        template: getproductid\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: addproducttocart\n        template: addproducttocart\n        dependencies:\n        - getcustomerid\n        - getproductid\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.getcustomerid.result }}'\n          - name: product_ID\n            value: '{{ tasks.getproductid.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 431, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-206-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: rentmovie\n        template: rentmovie\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.getmovieid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'"}, {"Id": 440, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: play-song-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: songtitletoid\n        template: songtitletoid\n        arguments:\n          parameters:\n          - name: song_title\n            value: '{{ inputs.parameters.song_title }}'\n      - name: playsong\n        template: playsong\n        dependencies:\n        - getuserid\n        - songtitletoid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: song_ID\n            value: '{{ tasks.songtitletoid.result }}'"}, {"Id": 447, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getrestaurant\n        template: getrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.getrestaurant.result }}'\n      - name: recommenddish\n        template: recommenddish\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommenditems.result }}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - recommenddish\n        - getrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.recommenddish.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.getrestaurant.result }}'\n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findpopulardishes-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }}\"]\n  - name: getrestaurant\n    inputs:\n      parameters:\n      - name: city\n      - name: cuisine\n    container:\n      image: getrestaurant-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.city }} {{ inputs.parameters.cuisine }}\"]\n  - name: recommenditems\n    inputs:\n      parameters:\n      - name: restaurant_name\n    container:\n      image: recommenditems-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.restaurant_name }}\"]\n  - name: recommenddish\n    inputs:\n      parameters:\n      - name: menu\n    container:\n      image: recommenddish-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.menu }}\"]\n  - name: foodingredients\n    inputs:\n      parameters:\n      - name: dish_name\n      - name: restaurant_name\n    container:\n      image: foodingredients-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo {{ inputs.parameters.dish_name }} {{ inputs.parameters.restaurant_name }}\"]"}, {"Id": 448, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: plantrip\n        template: plantrip\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - arrangetransportation\n        - plantrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.arrangetransportation.result }}'\n          - name: accommodation\n            value: '{{ tasks.plantrip.result }}'"}, {"Id": 455, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getreview\n        template: getreview\n        arguments:\n          parameters:\n          - name: bookname\n            value: '{{ inputs.parameters.bookname }}'\n      - name: sharereview\n        template: sharereview\n        dependencies:\n        - getreview\n        arguments:\n          parameters:\n          - name: review\n            value: '{{ tasks.getreview.result }}'\n          - name: social_media_platform\n            value: '{{ inputs.parameters.social_media_platform }}'\n  - name: getreview\n    inputs:\n      parameters:\n      - name: bookname\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Fetching review for {{ inputs.parameters.bookname }}'\"]\n  - name: sharereview\n    inputs:\n      parameters:\n      - name: review\n      - name: social_media_platform\n    container:\n      image: my-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Sharing review on {{ inputs.parameters.social_media_platform }}'\"]"}, {"Id": 468, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-confirmation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: getappointment\n        template: getappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctor_id\n            value: '{{ tasks.finddoctor.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - getappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.getappointment.result }}'\n  - name: finddoctor\n    inputs:\n      parameters:\n      - name: specialty\n      - name: location\n    http:\n      url: http://example.com/finddoctor\n      method: GET\n  - name: getappointment\n    inputs:\n      parameters:\n      - name: doctor_id\n      - name: date\n    http:\n      url: http://example.com/getappointment\n      method: GET\n  - name: confirmappointment\n    inputs:\n      parameters:\n      - name: appointment_id\n    http:\n      url: http://example.com/confirmappointment\n      method: POST"}, {"Id": 512, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: product-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpurchaseinfo\n        template: getpurchaseinfo\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: productrating\n        template: productrating\n        dependencies:\n        - getpurchaseinfo\n        arguments:\n          parameters:\n          - name: purchase_info\n            value: '{{ tasks.getpurchaseinfo.result }}'\n          - name: number_of_ratings\n            value: '{{ inputs.parameters.number_of_ratings }}'"}, {"Id": 532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: find-cinema-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findnearestcinema\n    http:\n      url: \"http://example.com/findnearestcinema\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"movieDetails\": \"{{ inputs.parameters.movieDetails }}\"}'"}, {"Id": 537, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-vegandine-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommenditems\n        template: recommenditems\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.recommenditems.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: bestorder\n        template: bestorder\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: restaurant_info\n            value: '{{ inputs.parameters.restaurant_info }}'\n          - name: food_list\n            value: '{{ tasks.suggestfood.result }}'"}, {"Id": 540, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: coachella-weather-forecast-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcoachellacoordinates\n        template: getcoachellacoordinates\n        arguments:\n          parameters:\n          - name: event\n            value: '{{ inputs.parameters.event }}'\n      - name: getcoachelladate\n        template: getcoachelladate\n        arguments:\n          parameters:\n          - name: event\n            value: '{{ inputs.parameters.event }}'\n      - name: predictweather\n        template: predictweather\n        dependencies:\n        - getcoachellacoordinates\n        - getcoachelladate\n        arguments:\n          parameters:\n          - name: coordinates\n            value: '{{ tasks.getcoachellacoordinates.result }}'\n          - name: date\n            value: '{{ tasks.getcoachelladate.result }}'"}, {"Id": 560, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: add-book-to-author-library-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: author_name\n            value: '{{ inputs.parameters.author_name }}'\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: addbooktoauthor\n        template: addbooktoauthor\n        dependencies:\n        - getauthorid\n        - getbookid\n        arguments:\n          parameters:\n          - name: author_ID\n            value: '{{ tasks.getauthorid.result }}'\n          - name: book_ID\n            value: '{{ tasks.getbookid.result }}'"}, {"Id": 582, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1112-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflightavailability\n        template: checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_code\n            value: '{{ inputs.parameters.flight_code }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookflight\n        template: bookflight\n        dependencies:\n        - checkflightavailability\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.checkflightavailability.result }}'\n          - name: preferred_flight_class\n            value: '{{ inputs.parameters.preferred_flight_class }}'"}, {"Id": 591, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: recipe-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recipename2id\n        template: recipename2id\n        arguments:\n          parameters:\n          - name: recipe_name\n            value: '{{ inputs.parameters.recipe_name }}'\n      - name: productname2ingredients\n        template: productname2ingredients\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: getrecipe\n        template: getrecipe\n        dependencies:\n        - recipename2id\n        - productname2ingredients\n        arguments:\n          parameters:\n          - name: recipe_ID\n            value: '{{ tasks.recipename2id.result }}'\n          - name: ingredient_ID\n            value: '{{ tasks.productname2ingredients.result }}'"}, {"Id": 601, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2email\n        template: username2email\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: reservebook\n        template: reservebook\n        dependencies:\n        - username2email\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ tasks.username2email.result }}'\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'"}, {"Id": 605, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: email2userid\n        template: email2userid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - email2userid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.email2userid.result }}'\n          - name: author_name\n            value: '{{ inputs.parameters.author_name }}'"}, {"Id": 625, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-report-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweatherinfo\n        template: getweatherinfo\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: generateweatherreport\n        template: generateweatherreport\n        dependencies:\n        - getweatherinfo\n        arguments:\n          parameters:\n          - name: weather_data\n            value: '{{ tasks.getweatherinfo.result }}'\n  - name: getweatherinfo\n    http:\n      url: \"http://weatherapi.com/getweatherinfo\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: generateweatherreport\n    http:\n      url: \"http://weatherapi.com/generateweatherreport\"\n      method: \"POST\"\n      parameters:\n      - name: weather_data\n        value: '{{ inputs.parameters.weather_data }}'"}, {"Id": 641, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-182-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: weather2advice\n        template: weather2advice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: recommendoutfit\n        template: recommendoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: recommendattire\n        template: recommendattire\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: outfitrecommender\n        template: outfitrecommender\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.getweather.result }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: activitysuggestion\n        template: activitysuggestion\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather_condition\n            value: '{{ tasks.getweather.result }}'\n      - name: findclothing\n        template: findclothing\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: WeatherStatus\n            value: '{{ tasks.getweather.result }}'"}, {"Id": 670, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-reservation-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchmovieid\n        template: fetchmovieid\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - fetchmovieid\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ inputs.parameters.cinema }}'\n          - name: showtimes\n            value: '{{ inputs.parameters.showtimes }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 675, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-83-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - title2isbn\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - getuserid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2isbn.result }}'"}, {"Id": 676, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: borrow-book-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: username2userid\n        template: username2userid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: title2isbn\n        template: title2isbn\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - title2isbn\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ tasks.title2isbn.result }}'\n          - name: start_date\n            value: '{{ inputs.parameters.start_date }}'\n          - name: end_date\n            value: '{{ inputs.parameters.end_date }}'\n      - name: borrowbook\n        template: borrowbook\n        dependencies:\n        - username2userid\n        - title2isbn\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.username2userid.result }}'\n          - name: book_ID\n            value: '{{ tasks.title2isbn.result }}'"}, {"Id": 696, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: hotel-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkvacancy\n        template: checkvacancy\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: date\n            value: '{{ inputs.parameters.check_in_date }}'\n      - name: roombooking\n        template: roombooking\n        dependencies:\n        - checkvacancy\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: number_of_rooms\n            value: '1'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'"}, {"Id": 711, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-216-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: returnbook\n        template: returnbook\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: book_name\n            value: '{{ inputs.parameters.book_name }}'\n  - name: getuserid\n    http:\n      url: \"http://example.com/getuserid\"\n      method: \"GET\"\n      parameters:\n      - name: email\n        value: '{{ inputs.parameters.email }}'\n  - name: returnbook\n    http:\n      url: \"http://example.com/returnbook\"\n      method: \"POST\"\n      parameters:\n      - name: user_ID\n        value: '{{ inputs.parameters.user_ID }}'\n      - name: book_name\n        value: '{{ inputs.parameters.book_name }}'"}, {"Id": 719, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-product-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: useremail2id\n        template: useremail2id\n        arguments:\n          parameters:\n          - name: user_email\n            value: '{{ inputs.parameters.user_email }}'\n      - name: productname2id\n        template: productname2id\n        arguments:\n          parameters:\n          - name: product_name\n            value: '{{ inputs.parameters.product_name }}'\n      - name: purchaseproduct\n        template: purchaseproduct\n        dependencies:\n        - useremail2id\n        - productname2id\n        arguments:\n          parameters:\n          - name: customer_ID\n            value: '{{ tasks.useremail2id.result }}'\n          - name: product_ID\n            value: '{{ tasks.productname2id.result }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'"}, {"Id": 727, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getmovieid\n        template: getmovieid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: addtowatchlist\n        template: addtowatchlist\n        dependencies:\n        - getuserid\n        - getmovieid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: movie_ID\n            value: '{{ tasks.getmovieid.result }}'"}, {"Id": 734, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-135-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: addbooktoreadinglist\n        template: addbooktoreadinglist\n        arguments:\n          parameters:\n          - name: user_name\n            value: '{{ inputs.parameters.user_name }}'\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'"}, {"Id": 748, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-restaurant-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchrestaurantid\n        template: fetchrestaurantid\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: reservetable\n        template: reservetable\n        dependencies:\n        - fetchrestaurantid\n        arguments:\n          parameters:\n          - name: restaurant_ID\n            value: '{{ tasks.fetchrestaurantid.result }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: fetchrestaurantid\n    inputs:\n      parameters:\n      - name: restaurant_name\n      - name: location\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'fetching restaurant ID'\"]\n  - name: reservetable\n    inputs:\n      parameters:\n      - name: restaurant_ID\n      - name: date\n      - name: time\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'reserving table'\"]"}, {"Id": 753, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-discussion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorname\n        template: getauthorname\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: checkauthoravailability\n        template: checkauthoravailability\n        dependencies:\n        - getauthorname\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthorname.result }}'\n      - name: schedulediscussion\n        template: schedulediscussion\n        dependencies:\n        - checkauthoravailability\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ inputs.parameters.user_ID }}'\n          - name: author_name\n            value: '{{ tasks.getauthorname.result }}'\n          - name: date_time\n            value: '{{ inputs.parameters.date_time }}'\n  - name: getauthorname\n    inputs:\n      parameters:\n      - name: ISBN\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Author Name' > /tmp/outputs/author_name\"]\n  - name: checkauthoravailability\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Available' > /tmp/outputs/availability_status\"]\n  - name: schedulediscussion\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: author_name\n      - name: date_time\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Scheduled' > /tmp/outputs/schedule_status\"]"}, {"Id": 759, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-recommendation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: recommendclothing\n        template: recommendclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 774, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: trip-planning-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: arrangetransportation\n        template: arrangetransportation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - arrangetransportation\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.arrangetransportation.result }}'\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - booktrip\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.booktrip.result }}'\n          - name: accommodation\n            value: '{{ inputs.parameters.accommodation }}'\n  - name: arrangetransportation\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    container:\n      image: my-transportation-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Transportation arranged for {{inputs.parameters.city}} on {{inputs.parameters.date}}'\"]\n  - name: booktrip\n    inputs:\n      parameters:\n      - name: flight\n      - name: hotel\n    container:\n      image: my-booking-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Trip booked with flight {{inputs.parameters.flight}} and hotel {{inputs.parameters.hotel}}'\"]\n  - name: createtravelplan\n    inputs:\n      parameters:\n      - name: flight\n      - name: accommodation\n    container:\n      image: my-travelplan-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Travel plan created with flight {{inputs.parameters.flight}} and accommodation {{inputs.parameters.accommodation}}'\"]"}, {"Id": 805, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findromancemovie\n        template: findromancemovie\n        arguments:\n          parameters:\n          - name: genre\n            value: 'romance'\n      - name: getshowtimes\n        template: getshowtimes\n        dependencies:\n        - findromancemovie\n        arguments:\n          parameters:\n          - name: movie_title\n            value: '{{ tasks.findromancemovie.result }}'\n          - name: city\n            value: 'San Francisco'\n      - name: reservetickets\n        template: reservetickets\n        dependencies:\n        - getshowtimes\n        arguments:\n          parameters:\n          - name: showtime\n            value: '{{ tasks.getshowtimes.result }}'\n          - name: number_of_tickets\n            value: '4'"}, {"Id": 821, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-565-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'\n      - name: checkavailability\n        template: checkavailability\n        dependencies:\n        - findbookstore\n        arguments:\n          parameters:\n          - name: bookstore_location\n            value: '{{ tasks.findbookstore.result }}'"}, {"Id": 823, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-491-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocaltheater\n        template: getlocaltheater\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentplays\n        template: getcurrentplays\n        dependencies:\n        - getlocaltheater\n        arguments:\n          parameters:\n          - name: theater_name\n            value: '{{ tasks.getlocaltheater.result }}'\n      - name: getplayreviews\n        template: getplayreviews\n        dependencies:\n        - getcurrentplays\n        arguments:\n          parameters:\n          - name: play_name\n            value: '{{ tasks.getcurrentplays.result }}'"}, {"Id": 824, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-492-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getlocalmusicstore\n        template: getlocalmusicstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getcurrentalbums\n        template: getcurrentalbums\n        dependencies:\n        - getlocalmusicstore\n        arguments:\n          parameters:\n          - name: store_name\n            value: '{{ tasks.getlocalmusicstore.result }}'\n      - name: getalbumreviews\n        template: getalbumreviews\n        dependencies:\n        - getcurrentalbums\n        arguments:\n          parameters:\n          - name: album_name\n            value: '{{ tasks.getcurrentalbums.result }}'"}, {"Id": 830, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-45-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: orderfood\n        template: orderfood\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ inputs.parameters.dish_name }}'\n          - name: restaurant_name\n            value: '{{ tasks.findrestaurant.result }}'\n  - name: findrestaurant\n    http:\n      url: \"http://restaurantlocation.api/find\"\n      method: \"GET\"\n      parameters:\n      - name: city\n        value: '{{ inputs.parameters.city }}'\n  - name: orderfood\n    http:\n      url: \"http://orderfood.api/order\"\n      method: \"POST\"\n      parameters:\n      - name: dish_name\n        value: '{{ inputs.parameters.dish_name }}'\n      - name: restaurant_name\n        value: '{{ tasks.findrestaurant.result }}'\n  arguments:\n    parameters:\n    - name: city\n      value: 'Seattle'\n    - name: dish_name\n      value: 'dumplings'"}, {"Id": 898, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-decision-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getstockprice\n        template: getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n      - name: predictfuturestockprice\n        template: predictfuturestockprice\n        dependencies:\n        - getstockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n      - name: suggeststockaction\n        template: suggeststockaction\n        dependencies:\n        - predictfuturestockprice\n        arguments:\n          parameters:\n          - name: stockId\n            value: '{{ inputs.parameters.stockId }}'\n          - name: currentPrice\n            value: '{{ tasks.getstockprice.result }}'\n          - name: futurePrice\n            value: '{{ tasks.predictfuturestockprice.result }}'"}, {"Id": 910, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-savings-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: trackspending\n        template: trackspending\n        arguments:\n          parameters:\n          - name: Username\n            value: '{{ inputs.parameters.username }}'\n      - name: calculatesavings\n        template: calculatesavings\n        dependencies:\n        - trackspending\n        arguments:\n          parameters:\n          - name: SpendingReport\n            value: '{{ tasks.trackspending.result }}'\n      - name: suggestinvestment\n        template: suggestinvestment\n        dependencies:\n        - calculatesavings\n        arguments:\n          parameters:\n          - name: Savings\n            value: '{{ tasks.calculatesavings.result }}'"}, {"Id": 920, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: food-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: restaurantSuggestion\n        template: restaurantSuggestion\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: food_preference\n            value: '{{ inputs.parameters.food_preference }}'\n      - name: filterRestaurantByDietaryRestrictions\n        template: filterRestaurantByDietaryRestrictions\n        dependencies:\n        - restaurantSuggestion\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.restaurantSuggestion.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: suggestFood\n        template: suggestFood\n        dependencies:\n        - filterRestaurantByDietaryRestrictions\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.filterRestaurantByDietaryRestrictions.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n  \n  - name: findpopulardishes\n    inputs:\n      parameters:\n      - name: city\n    container:\n      image: findpopulardishes-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }}'\"]\n\n  - name: restaurantSuggestion\n    inputs:\n      parameters:\n      - name: city\n      - name: food_preference\n    container:\n      image: restaurantSuggestion-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.city }} {{ inputs.parameters.food_preference }}'\"]\n\n  - name: filterRestaurantByDietaryRestrictions\n    inputs:\n      parameters:\n      - name: restaurant\n      - name: restrictions\n    container:\n      image: filterRestaurantByDietaryRestrictions-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.restaurant }} {{ inputs.parameters.restrictions }}'\"]\n\n  - name: suggestFood\n    inputs:\n      parameters:\n      - name: menu\n      - name: dietary_preferences\n    container:\n      image: suggestFood-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo '{{ inputs.parameters.menu }} {{ inputs.parameters.dietary_preferences }}'\"]\n\n  arguments:\n    parameters:\n    - name: city\n      value: 'Los Angeles'\n    - name: food_preference\n      value: 'Chinese'\n    - name: restrictions\n      value: 'gluten intolerant'\n    - name: dietary_preferences\n      value: 'gluten intolerant'"}, {"Id": 933, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findrestaurant\n        template: findrestaurant\n        arguments:\n          parameters:\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: filterrestaurant\n        template: filterrestaurant\n        dependencies:\n        - findrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.findrestaurant.result }}'\n          - name: restrictions\n            value: '{{ inputs.parameters.restrictions }}'\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - filterrestaurant\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.filterrestaurant.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'\n      - name: foodingredients\n        template: foodingredients\n        dependencies:\n        - suggestfood\n        arguments:\n          parameters:\n          - name: dish_name\n            value: '{{ tasks.suggestfood.result }}'\n          - name: restaurant_name\n            value: '{{ tasks.filterrestaurant.result }}'"}, {"Id": 945, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-rating-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: movieratings\n        template: movieratings\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.getmovieratings.result }}'\n      - name: averagerating\n        template: averagerating\n        dependencies:\n        - movieratings\n        arguments:\n          parameters:\n          - name: ratingScores\n            value: '{{ tasks.movieratings.result }}'\n  templates:\n  - name: getmovieratings\n    inputs:\n      parameters:\n      - name: movie\n    http:\n      url: \"http://example.com/getmovieratings\"\n      method: \"GET\"\n  - name: movieratings\n    inputs:\n      parameters:\n      - name: movie_id\n    http:\n      url: \"http://example.com/movieratings\"\n      method: \"GET\"\n  - name: averagerating\n    inputs:\n      parameters:\n      - name: ratingScores\n    http:\n      url: \"http://example.com/averagerating\"\n      method: \"GET\""}, {"Id": 952, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-movie-rating-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getmovieratings\n        template: getmovieratings\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: movierating\n        template: movierating\n        dependencies:\n        - getmovieratings\n        arguments:\n          parameters:\n          - name: movie_id\n            value: '{{ tasks.getmovieratings.result }}'\n      - name: highestrating\n        template: highestrating\n        dependencies:\n        - movierating\n        arguments:\n          parameters:\n          - name: rating_scores\n            value: '{{ tasks.movierating.result }}'"}, {"Id": 959, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: upgrade-seat-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: username\n            value: '{{ inputs.parameters.username }}'\n      - name: getflightnumber\n        template: getflightnumber\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.getuserid.result }}'\n      - name: seatselection\n        template: seatselection\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.getflightnumber.result }}'\n      - name: upgradeavailability\n        template: upgradeavailability\n        dependencies:\n        - seatselection\n        arguments:\n          parameters:\n          - name: seats\n            value: '{{ tasks.seatselection.result }}'"}, {"Id": 961, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-356-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkflights\n        template: checkflights\n        arguments:\n          parameters:\n          - name: source\n            value: '{{ inputs.parameters.source }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n      - name: seatclassavailability\n        template: seatclassavailability\n        dependencies:\n        - checkflights\n        arguments:\n          parameters:\n          - name: flight_id\n            value: '{{ tasks.checkflights.result }}'\n      - name: bestseatclass\n        template: bestseatclass\n        dependencies:\n        - seatclassavailability\n        arguments:\n          parameters:\n          - name: seat_classes\n            value: '{{ tasks.seatclassavailability.result }}'"}, {"Id": 967, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-259-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestbookstore\n        template: findnearestbookstore\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: findbookstore\n        template: findbookstore\n        dependencies:\n        - findnearestbookstore\n        arguments:\n          parameters:\n          - name: book_information\n            value: '{{ inputs.parameters.book_information }}'"}, {"Id": 971, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-999-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getitemprice\n        template: getitemprice\n        arguments:\n          parameters:\n          - name: item_id\n            value: '{{ inputs.parameters.item_id }}'\n      - name: converttocurrency\n        template: converttocurrency\n        dependencies:\n        - getitemprice\n        arguments:\n          parameters:\n          - name: Price\n            value: '{{ tasks.getitemprice.result }}'\n          - name: Currency\n            value: '{{ inputs.parameters.currency }}'"}, {"Id": 1011, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: book-review-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookdetails\n        template: getbookdetails\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n      - name: getauthordata\n        template: getauthordata\n        arguments:\n          parameters:\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: reviewgenerator\n        template: reviewgenerator\n        dependencies:\n        - getbookdetails\n        - getauthordata\n        arguments:\n          parameters:\n          - name: bookdetails\n            value: '{{ tasks.getbookdetails.result }}'\n          - name: authorData\n            value: '{{ tasks.getauthordata.result }}'\n  - name: getbookdetails\n    http:\n      url: http://example.com/api/bookdetails\n      method: GET\n      parameters:\n      - name: title\n        value: '{{ inputs.parameters.title }}'\n  - name: getauthordata\n    http:\n      url: http://example.com/api/authordata\n      method: GET\n      parameters:\n      - name: author\n        value: '{{ inputs.parameters.author }}'\n  - name: reviewgenerator\n    http:\n      url: http://example.com/api/reviewgenerator\n      method: POST\n      parameters:\n      - name: bookdetails\n        value: '{{ tasks.getbookdetails.result }}'\n      - name: authorData\n        value: '{{ tasks.getauthordata.result }}'"}, {"Id": 1037, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-movie-plan-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: movie\n            value: '{{ inputs.parameters.movie }}'\n      - name: bookreservation\n        template: BookReservation\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: restaurantname\n            value: '{{ tasks.recommendrestaurant.result }}'\n          - name: partySize\n            value: '{{ inputs.parameters.partySize }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n  - name: recommendrestaurant\n    http:\n      url: \"http://restaurant-recommendation-service/recommend\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"movie\": \"{{ inputs.parameters.movie }}\"}'\n  - name: BookReservation\n    http:\n      url: \"http://restaurant-booking-service/book\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: '{\"restaurantname\": \"{{ inputs.parameters.restaurantname }}\", \"partySize\": \"{{ inputs.parameters.partySize }}\", \"time\": \"{{ inputs.parameters.time }}\"}'\n  arguments:\n    parameters:\n    - name: movie\n      value: 'Harry Potter'\n    - name: partySize\n      value: '8'\n    - name: time\n      value: '18:00'"}, {"Id": 1044, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-409-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcarinfo\n        template: getcarinfo\n        arguments:\n          parameters:\n          - name: car_name\n            value: '{{ inputs.parameters.car_name }}'\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: gettaxrate\n        template: gettaxrate\n        arguments:\n          parameters:\n          - name: country\n            value: '{{ inputs.parameters.country }}'\n      - name: calculateTaxCost\n        template: calculateTaxCost\n        dependencies:\n        - getcarinfo\n        - gettaxrate\n        arguments:\n          parameters:\n          - name: price\n            value: '{{ tasks.getcarinfo.result.price }}'\n          - name: tax_rate\n            value: '{{ tasks.gettaxrate.result }}'\n  - name: getcarinfo\n    inputs:\n      parameters:\n      - name: car_name\n      - name: country\n    http:\n      url: \"http://carinfo.api/getCarInfo\"\n      method: \"GET\"\n      parameters:\n      - name: car_name\n        value: '{{ inputs.parameters.car_name }}'\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: gettaxrate\n    inputs:\n      parameters:\n      - name: country\n    http:\n      url: \"http://countrytaxrate.api/getTaxRate\"\n      method: \"GET\"\n      parameters:\n      - name: country\n        value: '{{ inputs.parameters.country }}'\n  - name: calculateTaxCost\n    inputs:\n      parameters:\n      - name: price\n      - name: tax_rate\n    http:\n      url: \"http://taxcostcalculator.api/calculateTaxCost\"\n      method: \"POST\"\n      parameters:\n      - name: price\n        value: '{{ inputs.parameters.price }}'\n      - name: tax_rate\n        value: '{{ inputs.parameters.tax_rate }}'"}, {"Id": 1061, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-dubai-food-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findpopulardishes\n        template: findpopulardishes\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: recommenditems\n        template: recommenditems\n        dependencies:\n        - findpopulardishes\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ tasks.findpopulardishes.result }}'\n      - name: menuselection\n        template: menuselection\n        dependencies:\n        - recommenditems\n        arguments:\n          parameters:\n          - name: restaurantInfo\n            value: '{{ tasks.recommenditems.result }}'\n          - name: cuisineRec\n            value: '{{ tasks.findpopulardishes.result }}'\n      - name: suggestfood\n        template: suggestfood\n        dependencies:\n        - menuselection\n        arguments:\n          parameters:\n          - name: menu\n            value: '{{ tasks.menuselection.result }}'\n          - name: dietary_preferences\n            value: '{{ inputs.parameters.dietary_preferences }}'"}, {"Id": 1067, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookmovietickets\n        template: bookmovietickets\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  - name: bookmovietickets\n    http:\n      url: \"http://example.com/bookmovietickets\"\n      method: \"POST\"\n      headers:\n        Content-Type: application/json\n      body: |\n        {\n          \"movie_name\": \"{{ inputs.parameters.movie_name }}\",\n          \"showtime\": \"{{ inputs.parameters.showtime }}\",\n          \"number_of_tickets\": {{ inputs.parameters.number_of_tickets }}\n        }\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: showtime\n      - name: number_of_tickets"}, {"Id": 1075, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-555-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findroomtype\n        template: findroomtype\n        arguments:\n          parameters:\n          - name: hotelname\n            value: '{{ inputs.parameters.hotelname }}'\n          - name: guestNumber\n            value: '{{ inputs.parameters.guestNumber }}'\n      - name: hotelbooking\n        template: hotelbooking\n        dependencies:\n        - findroomtype\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: check_in_date\n            value: '{{ inputs.parameters.check_in_date }}'\n          - name: check_out_date\n            value: '{{ inputs.parameters.check_out_date }}'\n          - name: room_type\n            value: '{{ tasks.findroomtype.result }}'"}, {"Id": 1080, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: appointment-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: finddoctor\n        template: finddoctor\n        arguments:\n          parameters:\n          - name: specialty\n            value: '{{ inputs.parameters.specialty }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: createappointment\n        template: createappointment\n        dependencies:\n        - finddoctor\n        arguments:\n          parameters:\n          - name: doctorId\n            value: '{{ tasks.finddoctor.result }}'\n          - name: patientId\n            value: '{{ inputs.parameters.patientId }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: confirmappointment\n        template: confirmappointment\n        dependencies:\n        - createappointment\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ tasks.createappointment.result }}'"}, {"Id": 1088, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findshowtime\n        template: findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: booktickets\n        template: booktickets\n        dependencies:\n        - findshowtime\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ tasks.findshowtime.result }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'\n  arguments:\n    parameters:\n    - name: movie_name\n      value: 'drama'\n    - name: location\n      value: 'Seattle'\n    - name: date\n      value: 'December 25th'\n    - name: number_of_tickets\n      value: '6'"}, {"Id": 1093, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-booking-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendmovie\n        template: recommendmovie\n        arguments:\n          parameters:\n          - name: genre\n            value: '{{ inputs.parameters.genre }}'\n      - name: bookmovietickets\n        template: bookmovietickets\n        dependencies:\n        - recommendmovie\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ tasks.recommendmovie.result }}'\n          - name: show_time\n            value: '{{ inputs.parameters.show_time }}'\n          - name: seats\n            value: '{{ inputs.parameters.seats }}'\n  - name: recommendmovie\n    inputs:\n      parameters:\n      - name: genre\n    http:\n      url: http://example.com/recommendmovie\n      method: GET\n  - name: bookmovietickets\n    inputs:\n      parameters:\n      - name: movie_name\n      - name: show_time\n      - name: seats\n    http:\n      url: http://example.com/bookmovietickets\n      method: POST"}, {"Id": 1097, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-242-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpersonid\n        template: getpersonid\n        arguments:\n          parameters:\n          - name: person_name\n            value: '{{ inputs.parameters.person_name }}'\n      - name: getflightnumber\n        template: getflightnumber\n        dependencies:\n        - getpersonid\n        arguments:\n          parameters:\n          - name: person_ID\n            value: '{{ tasks.getpersonid.result }}'\n      - name: checkflightstatus\n        template: checkflightstatus\n        dependencies:\n        - getflightnumber\n        arguments:\n          parameters:\n          - name: flight_number\n            value: '{{ tasks.getflightnumber.result }}'"}, {"Id": 1112, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: restaurant-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findnearestcinema\n        template: findnearestcinema\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: resturantnearcinema\n        template: resturantnearcinema\n        dependencies:\n        - findnearestcinema\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cinema_name\n            value: '{{ tasks.findnearestcinema.result }}'\n      - name: makerestaurantreservation\n        template: makerestaurantreservation\n        dependencies:\n        - resturantnearcinema\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.resturantnearcinema.result }}'\n          - name: reservationDetails\n            value: '{{ inputs.parameters.reservationDetails }}'"}, {"Id": 1117, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1234-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbooktitle\n        template: getbooktitle\n        arguments:\n          parameters:\n          - name: ISBN\n            value: '{{ inputs.parameters.ISBN }}'\n      - name: pagecount\n        template: pagecount\n        dependencies:\n        - getbooktitle\n        arguments:\n          parameters:\n          - name: Title\n            value: '{{ tasks.getbooktitle.result }}'\n      - name: readingtime\n        template: readingtime\n        dependencies:\n        - pagecount\n        arguments:\n          parameters:\n          - name: Pages\n            value: '{{ tasks.pagecount.result }}'"}, {"Id": 1118, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: suggestoutfit\n        template: suggestoutfit\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - suggestoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.suggestoutfit.result }}'"}, {"Id": 1132, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-623-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getdrivingdistance\n        template: getdrivingdistance\n        arguments:\n          parameters:\n          - name: startPoint\n            value: '{{ inputs.parameters.origin }}'\n          - name: endPoint\n            value: '{{ inputs.parameters.destination }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getdrivingdistance\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.getdrivingdistance.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - getdrivingdistance\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.getdrivingdistance.result }}'\n          - name: time\n            value: '{{ tasks.calculatetime.result }}'"}, {"Id": 1165, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: stock-analysis-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: fetchstockdata\n        template: fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_symbol\n            value: '{{ inputs.parameters.stock_symbol }}'\n      - name: basicdataanalysis\n        template: basicdataanalysis\n        dependencies:\n        - fetchstockdata\n        arguments:\n          parameters:\n          - name: stock_data\n            value: '{{ tasks.fetchstockdata.result }}'\n      - name: generatereport\n        template: generatereport\n        dependencies:\n        - basicdataanalysis\n        arguments:\n          parameters:\n          - name: analyzed_data\n            value: '{{ tasks.basicdataanalysis.result }}'\n          - name: template\n            value: '{{ inputs.parameters.template }}'"}, {"Id": 1176, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: purchase-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getuserid\n        template: getuserid\n        arguments:\n          parameters:\n          - name: email\n            value: '{{ inputs.parameters.email }}'\n      - name: purchaseitem\n        template: purchaseitem\n        dependencies:\n        - getuserid\n        arguments:\n          parameters:\n          - name: user_ID\n            value: '{{ tasks.getuserid.result }}'\n          - name: product_ID\n            value: '{{ inputs.parameters.product_ID }}'\n          - name: quantity\n            value: '{{ inputs.parameters.quantity }}'\n  - name: getuserid\n    inputs:\n      parameters:\n      - name: email\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to get user ID from email\n        def get_user_id(email):\n            return 123  # Mock user ID\n        print(get_user_id('{{ inputs.parameters.email }}'))\n  - name: purchaseitem\n    inputs:\n      parameters:\n      - name: user_ID\n      - name: product_ID\n      - name: quantity\n    script:\n      image: python:3.8\n      command: [python]\n      source: |\n        # Mock function to purchase item\n        def purchase_item(user_ID, product_ID, quantity):\n            return \"success\"  # Mock purchase status\n        print(purchase_item('{{ inputs.parameters.user_ID }}', '{{ inputs.parameters.product_ID }}', '{{ inputs.parameters.quantity }}'))"}, {"Id": 1190, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-clothing-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getrecommendedclothing\n        template: getrecommendedclothing\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1209, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-22222-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getpricebyid\n        template: getpricebyid\n        arguments:\n          parameters:\n          - name: product_id\n            value: '{{ inputs.parameters.product_id }}'\n      - name: converttocurrency\n        template: converttocurrency\n        dependencies:\n        - getpricebyid\n        arguments:\n          parameters:\n          - name: Price\n            value: '{{ tasks.getpricebyid.result }}'\n          - name: Currency\n            value: '{{ inputs.parameters.currency }}'"}, {"Id": 1225, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: flightbooking\n        template: flightbooking\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: departure_date\n            value: '{{ inputs.parameters.departure_date }}'\n          - name: return_date\n            value: '{{ inputs.parameters.return_date }}'\n      - name: checkluggageallowance\n        template: checkluggageallowance\n        dependencies:\n        - flightbooking\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.flightbooking.result }}'\n      - name: suggestluggage\n        template: suggestluggage\n        dependencies:\n        - checkluggageallowance\n        arguments:\n          parameters:\n          - name: baggage_allowance\n            value: '{{ tasks.checkluggageallowance.result }}'\n          - name: trip_duration\n            value: '{{ inputs.parameters.trip_duration }}'"}, {"Id": 1227, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-ticket-booking-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkavailability\n        template: checkavailability\n        arguments:\n          parameters:\n          - name: cinema\n            value: '{{ inputs.parameters.cinema }}'\n          - name: showtimes\n            value: '{{ inputs.parameters.showtimes }}'\n      - name: bookmovieticket\n        template: bookmovieticket\n        dependencies:\n        - checkavailability\n        arguments:\n          parameters:\n          - name: movie_name\n            value: '{{ inputs.parameters.movie_name }}'\n          - name: showtime\n            value: '{{ inputs.parameters.showtime }}'\n          - name: number_of_tickets\n            value: '{{ inputs.parameters.number_of_tickets }}'"}, {"Id": 1236, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-1984-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getbookid\n        template: getbookid\n        arguments:\n          parameters:\n          - name: title\n            value: '{{ inputs.parameters.title }}'\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: author\n            value: '{{ inputs.parameters.author }}'\n      - name: locatebook\n        template: locatebook\n        dependencies:\n        - getbookid\n        - getauthorid\n        arguments:\n          parameters:\n          - name: book_ID\n            value: '{{ tasks.getbookid.result }}'\n          - name: author_ID\n            value: '{{ tasks.getauthorid.result }}'"}, {"Id": 1250, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-2023-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findevents\n        template: findevents\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: planactivities\n        template: planactivities\n        dependencies:\n        - checkweather\n        - findevents\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n          - name: events\n            value: '{{ tasks.findevents.result }}'\n      - name: bookevent\n        template: bookevent\n        dependencies:\n        - planactivities\n        arguments:\n          parameters:\n          - name: activity\n            value: '{{ tasks.planactivities.result }}'\n          - name: ticket_count\n            value: '{{ inputs.parameters.ticket_count }}'"}, {"Id": 1255, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: movie-showtimes-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findcinemas\n        template: findcinemas\n        arguments:\n          parameters:\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n      - name: checkshowtimes\n        template: checkshowtimes\n        dependencies:\n        - findcinemas\n        arguments:\n          parameters:\n          - name: cinemaLocations\n            value: '{{ tasks.findcinemas.result }}'\n          - name: movieDetails\n            value: '{{ inputs.parameters.movieDetails }}'\n  - name: findcinemas\n    inputs:\n      parameters:\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Finding cinemas for {{ inputs.parameters.movieDetails }}\"]\n  - name: checkshowtimes\n    inputs:\n      parameters:\n      - name: cinemaLocations\n      - name: movieDetails\n    container:\n      image: some-docker-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo Checking showtimes for {{ inputs.parameters.movieDetails }} at {{ inputs.parameters.cinemaLocations }}\"]"}, {"Id": 1259, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-345-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: hotel_name\n            value: '{{ inputs.parameters.hotel_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: bookrestaurant\n        template: bookrestaurant\n        arguments:\n          parameters:\n          - name: restaurant_name\n            value: '{{ inputs.parameters.restaurant_name }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: reservationbooking\n        template: reservationbooking\n        dependencies:\n        - bookhotel\n        - bookrestaurant\n        arguments:\n          parameters:\n          - name: hotelDetails\n            value: '{{ tasks.bookhotel.result }}'\n          - name: restaurantLocations\n            value: '{{ tasks.bookrestaurant.result }}'"}, {"Id": 1267, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dress-suggestion-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: checkweather\n        template: checkweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: dresssuggestion\n        template: dresssuggestion\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'\n      - name: findclothes\n        template: findclothes\n        dependencies:\n        - checkweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.checkweather.result }}'"}, {"Id": 1294, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-activity-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: verifyweather\n        template: verifyweather\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.ip_address }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: suggestactivity\n        template: suggestactivity\n        dependencies:\n        - verifyweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.verifyweather.result }}'\n  - name: verifyweather\n    inputs:\n      parameters:\n      - name: location\n      - name: date\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Weather status for location' $0 'on date' $1\"]\n  - name: suggestactivity\n    inputs:\n      parameters:\n      - name: weather\n    container:\n      image: some-image\n      command: [\"sh\", \"-c\"]\n      args: [\"echo 'Suggested activity based on weather' $0\"]"}, {"Id": 1298, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'\n  - name: getcurrentweather\n    inputs:\n      parameters:\n      - name: city\n    http:\n      url: \"http://weatherapi.com/current?city={{inputs.parameters.city}}\"\n      method: GET\n  - name: getweatherforecast\n    inputs:\n      parameters:\n      - name: city\n      - name: date\n    http:\n      url: \"http://weatherapi.com/forecast?city={{inputs.parameters.city}}&date={{inputs.parameters.date}}\"\n      method: GET\n  - name: compareweather\n    inputs:\n      parameters:\n      - name: current_weather\n      - name: weather_forecast\n    http:\n      url: \"http://compareweatherapi.com/compare?current={{inputs.parameters.current_weather}}&forecast={{inputs.parameters.weather_forecast}}\"\n      method: GET"}, {"Id": 1300, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-comparison-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getweatherforecast\n        template: getweatherforecast\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: compareweather\n        template: compareweather\n        dependencies:\n        - getcurrentweather\n        - getweatherforecast\n        arguments:\n          parameters:\n          - name: current_weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: weather_forecast\n            value: '{{ tasks.getweatherforecast.result }}'"}, {"Id": 1304, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-nyc-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: eventsuggestions\n        template: eventsuggestions\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: restaurantrecommend\n        template: restaurantrecommend\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n          - name: weather\n            value: '{{ inputs.parameters.weather }}'"}, {"Id": 1319, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: clothing-advice-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getweather\n        template: getweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: getclothingadvice\n        template: getclothingadvice\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: recommendoutfit\n        template: recommendoutfit\n        dependencies:\n        - getweather\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getweather.result }}'\n      - name: calculatecost\n        template: calculatecost\n        dependencies:\n        - recommendoutfit\n        arguments:\n          parameters:\n          - name: outfit\n            value: '{{ tasks.recommendoutfit.result }}'"}, {"Id": 1322, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-623-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getroute\n        template: getroute\n        arguments:\n          parameters:\n          - name: origin_location\n            value: '{{ inputs.parameters.origin_location }}'\n          - name: destination_location\n            value: '{{ inputs.parameters.destination_location }}'\n      - name: calculatetime\n        template: calculatetime\n        dependencies:\n        - getroute\n        arguments:\n          parameters:\n          - name: distance\n            value: '{{ tasks.getroute.result }}'\n          - name: speed\n            value: '{{ inputs.parameters.speed }}'\n      - name: routeplanner\n        template: routeplanner\n        dependencies:\n        - calculatetime\n        arguments:\n          parameters:\n          - name: origin\n            value: '{{ inputs.parameters.origin }}'\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: distance\n            value: '{{ tasks.getroute.result }}'\n          - name: time\n            value: '{{ tasks.calculatetime.result }}'"}, {"Id": 1351, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-542-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'"}, {"Id": 1354, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-fcbarcelona-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getteaminfo\n        template: getteaminfo\n        arguments:\n          parameters:\n          - name: team_name\n            value: '{{ inputs.parameters.team_name }}'\n      - name: getschedule\n        template: getschedule\n        dependencies:\n        - getteaminfo\n        arguments:\n          parameters:\n          - name: team_info\n            value: '{{ tasks.getteaminfo.result }}'\n      - name: getticketprice\n        template: getticketprice\n        dependencies:\n        - getschedule\n        arguments:\n          parameters:\n          - name: game_schedule\n            value: '{{ tasks.getschedule.result }}'"}, {"Id": 1359, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: bookflight\n        template: bookflight\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ inputs.parameters.destination }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: findhotel\n        template: findhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.destination }}'\n      - name: createtravelplan\n        template: createtravelplan\n        dependencies:\n        - bookflight\n        - findhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.bookflight.result }}'\n          - name: accommodation\n            value: '{{ tasks.findhotel.result }}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - findhotel\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ tasks.findhotel.result }}'\n          - name: restaurants\n            value: '{{ inputs.parameters.restaurants }}'\n      - name: itineraryplanner\n        template: itineraryplanner\n        dependencies:\n        - bookflight\n        - findhotel\n        arguments:\n          parameters:\n          - name: flight_details\n            value: '{{ tasks.bookflight.result }}'\n          - name: hotel_booking\n            value: '{{ tasks.findhotel.result }}'\n      - name: tripplanner\n        template: tripplanner\n        arguments:\n          parameters:\n          - name: weather_forecast\n            value: '{{ inputs.parameters.weather_forecast }}'\n          - name: activities\n            value: '{{ inputs.parameters.activities }}'\n          - name: suggested_restaurant\n            value: '{{ inputs.parameters.suggested_restaurant }}'"}, {"Id": 1367, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-401-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: recommendrestaurant\n        template: recommendrestaurant\n        arguments:\n          parameters:\n          - name: venue\n            value: '{{ inputs.parameters.venue }}'\n      - name: plantrip\n        template: plantrip\n        dependencies:\n        - recommendrestaurant\n        arguments:\n          parameters:\n          - name: hotel\n            value: '{{ inputs.parameters.hotel }}'\n          - name: restaurants\n            value: '{{ tasks.recommendreataurant.result }}'\n  - name: recommendrestaurant\n    http:\n      url: http://example.com/recommendreataurant\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"venue\": \"{{ inputs.parameters.venue }}\"}'\n  - name: plantrip\n    http:\n      url: http://example.com/plantrip\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{\"hotel\": \"{{ inputs.parameters.hotel }}\", \"restaurants\": \"{{ tasks.recommendreataurant.result }}\"}'\n  arguments:\n    parameters:\n    - name: venue\n      value: 'sumo match'\n    - name: hotel\n      value: 'Park Hyatt'"}, {"Id": 1380, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: weather-impact-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getcurrentweather\n        template: getcurrentweather\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: getpopulation\n        template: getpopulation\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: weatherimpactonpopulation\n        template: weatherimpactonpopulation\n        dependencies:\n        - getcurrentweather\n        - getpopulation\n        arguments:\n          parameters:\n          - name: weather\n            value: '{{ tasks.getcurrentweather.result }}'\n          - name: population\n            value: '{{ tasks.getpopulation.result }}'"}, {"Id": 1410, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-123-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getauthorid\n        template: getauthorid\n        arguments:\n          parameters:\n          - name: book_title\n            value: '{{ inputs.parameters.book_title }}'\n      - name: booksbyauthor\n        template: booksbyauthor\n        dependencies:\n        - getauthorid\n        arguments:\n          parameters:\n          - name: author_id\n            value: '{{ tasks.getauthorid.result }}'\n  - name: getauthorid\n    http:\n      url: http://example.com/AuthorOfBook\n      method: GET\n      parameters:\n      - name: book_id\n        value: '{{ inputs.parameters.book_id }}'\n  - name: booksbyauthor\n    http:\n      url: http://example.com/BooksByAuthor\n      method: GET\n      parameters:\n      - name: author_id\n        value: '{{ inputs.parameters.author_id }}'"}, {"Id": 1425, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-cost-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchfare\n        template: searchfare\n        arguments:\n          parameters:\n          - name: src\n            value: '{{ inputs.parameters.src }}'\n          - name: dest\n            value: '{{ inputs.parameters.dest }}'\n          - name: date\n            value: '{{ inputs.parameters.date }}'\n      - name: checkdiscount\n        template: checkdiscount\n        dependencies:\n        - searchfare\n        arguments:\n          parameters:\n          - name: coupon\n            value: '{{ inputs.parameters.coupon }}'\n          - name: fare_id\n            value: '{{ tasks.searchfare.result }}'\n      - name: calculatefinalfare\n        template: calculatefinalfare\n        dependencies:\n        - checkdiscount\n        arguments:\n          parameters:\n          - name: fare_id\n            value: '{{ tasks.searchfare.result }}'\n          - name: discount_amount\n            value: '{{ tasks.checkdiscount.result }}'"}, {"Id": 1459, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: travel-plan-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: findflight\n        template: findflight\n        arguments:\n          parameters:\n          - name: cityDeparture\n            value: '{{ inputs.parameters.cityDeparture }}'\n          - name: cityArrival\n            value: '{{ inputs.parameters.cityArrival }}'\n      - name: bookhotel\n        template: bookhotel\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.cityArrival }}'\n      - name: booktrip\n        template: booktrip\n        dependencies:\n        - findflight\n        - bookhotel\n        arguments:\n          parameters:\n          - name: flight\n            value: '{{ tasks.findflight.result }}'\n          - name: hotel\n            value: '{{ tasks.bookhotel.result }}'\n      - name: planitinerary\n        template: planitinerary\n        dependencies:\n        - booktrip\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.cityArrival }}'\n          - name: interests\n            value: '{{ inputs.parameters.interests }}'\n          - name: flight\n            value: '{{ tasks.findflight.result }}'\n          - name: hotel\n            value: '{{ tasks.bookhotel.result }}'"}, {"Id": 1509, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dinner-reservation-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: searchrestaurant\n        template: searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n          - name: cuisine\n            value: '{{ inputs.parameters.cuisine }}'\n      - name: restaurantlocation\n        template: restaurantlocation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: city\n            value: '{{ inputs.parameters.city }}'\n      - name: dinnerreservation\n        template: dinnerreservation\n        dependencies:\n        - searchrestaurant\n        arguments:\n          parameters:\n          - name: restaurant\n            value: '{{ tasks.searchrestaurant.result }}'\n          - name: time\n            value: '{{ inputs.parameters.time }}'\n      - name: findroute\n        template: findroute\n        dependencies:\n        - restaurantlocation\n        arguments:\n          parameters:\n          - name: start_location\n            value: '{{ inputs.parameters.start_location }}'\n          - name: end_location\n            value: '{{ tasks.restaurantlocation.result }}'"}, {"Id": 1532, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: dependency-workflow-bus-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ inputs.parameters.location }}'\n      - name: timecalculator\n        template: timecalculator\n        dependencies:\n        - gettrafficupdate\n        arguments:\n          parameters:\n          - name: traffic\n            value: '{{ tasks.gettrafficupdate.result }}'\n          - name: modeOfTransport\n            value: '{{ inputs.parameters.modeOfTransport }}'\n      - name: fetchnextbus\n        template: fetchnextbus\n        dependencies:\n        - timecalculator\n        arguments:\n          parameters:\n          - name: travel_time\n            value: '{{ tasks.timecalculator.result }}'\n          - name: bus_route\n            value: '{{ inputs.parameters.bus_route }}'"}, {"Id": 1535, "status": "Success", "workflow": "apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: traffic-check-workflow-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n      - name: getappointmentlocation\n        template: getappointmentlocation\n        arguments:\n          parameters:\n          - name: appointment_id\n            value: '{{ inputs.parameters.appointment_id }}'\n      - name: checktraffic\n        template: checktraffic\n        dependencies:\n        - getappointmentlocation\n        arguments:\n          parameters:\n          - name: destination\n            value: '{{ tasks.getappointmentlocation.result }}'\n      - name: gettrafficupdate\n        template: gettrafficupdate\n        dependencies:\n        - checktraffic\n        arguments:\n          parameters:\n          - name: location\n            value: '{{ tasks.checktraffic.result }}'"}]