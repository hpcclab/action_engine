[
    {
        "name": "Username2ID",
        "format": "Username2ID(user_name) -> user_ID",
        "Id": 1,
        "description": "This API is to convert a username to a user ID.",
        "summary": "This API is to convert a username to a user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Playlistname2ID",
        "format": "Playlistname2ID(playlist_name) -> playlist_ID",
        "Id": 2,
        "description": "This API is to convert a playlist name to a playlist ID.",
        "summary": "This API is to convert a playlist name to a playlist ID.",
        "input_parameters_with_datatype": [
            {
                "name": "playlist_name",
                "description": "the name of the playlist",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "playlist_ID",
                "description": "the ID of the playlist",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddSongToPlaylist",
        "format": "AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",
        "Id": 3,
        "description": "This API is to add a song to a playlist.",
        "summary": "This API is to add a song to a playlist.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "playlist_ID",
                "description": "the ID of the playlist",
                "datatype": "Integer"
            },
            {
                "name": "song_name",
                "description": "the name of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "playlist_songs",
                "description": "a list of the songs in the playlist",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GeoLocation2TimeZone",
        "format": "GeoLocation2TimeZone(geolocation) -> timezone",
        "Id": 4,
        "description": "This API is to convert geolocation to timezone.",
        "summary": "This API is to convert geolocation to timezone.",
        "input_parameters_with_datatype": [
            {
                "name": "geolocation",
                "description": "the geolocation of a place",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "timezone",
                "description": "the timezone of the geolocation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SetAlarm",
        "format": "SetAlarm(timezone, time) -> alarm_status",
        "Id": 5,
        "description": "This API allows the user to set an alarm in a specific timezone.",
        "summary": "This API allows the user to set an alarm in a specific timezone.",
        "input_parameters_with_datatype": [
            {
                "name": "timezone",
                "description": "the timezone where the alarm will be set",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time when the alarm will ring",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "alarm_status",
                "description": "the status of the alarm",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserGeolocation",
        "format": "GetUserGeolocation(user_name) -> user_geolocation",
        "Id": 6,
        "description": "This API returns the geolocation of a certain user.",
        "summary": "This API returns the geolocation of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_geolocation",
                "description": "the geolocation of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Songname2ID",
        "format": "Songname2ID(song_name) -> song_ID",
        "Id": 7,
        "description": "This API is to convert a song's name to song ID.",
        "summary": "This API is to convert a song's name to song ID.",
        "input_parameters_with_datatype": [
            {
                "name": "song_name",
                "description": "the name of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "song_ID",
                "description": "the ID of the song",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUsernameID",
        "format": "GetUsernameID(username) -> person_ID",
        "Id": 8,
        "description": "This API is to convert a username to user ID.",
        "summary": "This API is to convert a username to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Username2Email",
        "format": "Username2Email(username) -> user_email",
        "Id": 9,
        "description": "This API is used to convert a username to a user's email.",
        "summary": "This API is used to convert a username to a user's email.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_email",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Title2ISBN",
        "format": "Title2ISBN(title) -> title_ISBN",
        "Id": 10,
        "description": "This API is used to convert a book title to its ISBN.",
        "summary": "This API is used to convert a book title to its ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "title_ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckAvailability",
        "format": "CheckAvailability(ISBN,start_date,end_date) -> availability_status",
        "Id": 11,
        "description": "This API checks the availability of a book based on its ISBN and a given date range.",
        "summary": "This API checks the availability of a book based on its ISBN and a given date range.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            },
            {
                "name": "start_date",
                "description": "the start date of the range",
                "datatype": "Date"
            },
            {
                "name": "end_date",
                "description": "the end date of the range",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability_status",
                "description": "the availability status of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveBook",
        "format": "ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",
        "Id": 12,
        "description": "This API is used to reserve a book.",
        "summary": "This API is used to reserve a book.",
        "input_parameters_with_datatype": [
            {
                "name": "user_email",
                "description": "the email of the user",
                "datatype": "String"
            },
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            },
            {
                "name": "start_date",
                "description": "the start date of the reservation",
                "datatype": "Date"
            },
            {
                "name": "end_date",
                "description": "the end date of the reservation",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the status of the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OrderFood",
        "format": "OrderFood(dish_name, restaurant_name) -> order_status",
        "Id": 13,
        "description": "This API allows the user to order a specific food from a specified restaurant.",
        "summary": "This API allows the user to order a specific food from a specified restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "dish_name",
                "description": "the name of the dish",
                "datatype": "String"
            },
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_status",
                "description": "the status of the order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindPopularDishes",
        "format": "FindPopularDishes(city) -> dish_name",
        "Id": 14,
        "description": "This API recommends popular dishes in a given city.",
        "summary": "This API recommends popular dishes in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dish_name",
                "description": "the name of the popular dish",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TopRestaurants",
        "format": "TopRestaurants(city) -> restaurant_name",
        "Id": 15,
        "description": "This API provides the names of top ranked restaurants in a given city.",
        "summary": "This API provides the names of top ranked restaurants in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the top ranked restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindMovie",
        "format": "FindMovie(genre) -> movie_name",
        "Id": 16,
        "description": "This API provides the name of a movie based on the specified genre.",
        "summary": "This API provides the name of a movie based on the specified genre.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieShowtimes",
        "format": "MovieShowtimes(movie_name, city) -> show_time",
        "Id": 17,
        "description": "This API gives the showtimes for a specified movie in a chosen city.",
        "summary": "This API gives the showtimes for a specified movie in a chosen city.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "show_time",
                "description": "the showtimes for the movie in the chosen city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyMovieTickets",
        "format": "BuyMovieTickets(show_time, movie_name, seats) -> booking_status",
        "Id": 18,
        "description": "This API buys movie tickets for a specific show time, movie and chosen seats.",
        "summary": "This API buys movie tickets for a specific show time, movie and chosen seats.",
        "input_parameters_with_datatype": [
            {
                "name": "show_time",
                "description": "the show time of the movie",
                "datatype": "String"
            },
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "seats",
                "description": "the number of seats to buy",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckWeather",
        "format": "CheckWeather(location) -> weather",
        "Id": 19,
        "description": "This API checks the weather of a specific location.",
        "summary": "This API checks the weather of a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the specific location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather at the specific location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SelectOutfit",
        "format": "SelectOutfit(weather, occasion) -> outfit",
        "Id": 20,
        "description": "This API selects an appropriate outfit based on the weather and occasion.",
        "summary": "This API selects an appropriate outfit based on the weather and occasion.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather condition",
                "datatype": "String"
            },
            {
                "name": "occasion",
                "description": "the occasion",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the recommended outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRestaurant",
        "format": "FindRestaurant(location, type, rating) -> restaurant",
        "Id": 21,
        "description": "This API is to find a restaurant based on location, type and rating.",
        "summary": "This API is to find a restaurant based on location, type and rating.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the restaurant",
                "datatype": "String"
            },
            {
                "name": "type",
                "description": "the type of the restaurant",
                "datatype": "String"
            },
            {
                "name": "rating",
                "description": "the rating of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the restaurant found",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMenu",
        "format": "GetMenu(restaurant_id) -> menu",
        "Id": 22,
        "description": "This API is to get the menu of a specific restaurant.",
        "summary": "This API is to get the menu of a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_id",
                "description": "the ID of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "menu",
                "description": "the menu of the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightSchedule",
        "format": "FlightSchedule(airport) -> flightTimes",
        "Id": 23,
        "description": "This API is to get the departure and arrival times for flights at a specific airport.",
        "summary": "This API is to get the departure and arrival times for flights at a specific airport.",
        "input_parameters_with_datatype": [
            {
                "name": "airport",
                "description": "the name of the airport",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flightTimes",
                "description": "the departure and arrival times for flights",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetTrafficUpdate",
        "format": "GetTrafficUpdate(location) -> trafficDelay",
        "Id": 24,
        "description": "This API is to fetch the current traffic scenario and any possible delays happening at a given location.",
        "summary": "This API is to fetch the current traffic scenario and any possible delays happening at a given location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location for which traffic updates are needed",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "trafficDelay",
                "description": "the current traffic scenario and any possible delays",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateTravelTime",
        "format": "CalculateTravelTime(flightTimes, trafficDelay) -> travelTime",
        "Id": 25,
        "description": "This API is to estimate the travel time accounting for flight times and possible traffic delays.",
        "summary": "This API is to estimate the travel time accounting for flight times and possible traffic delays.",
        "input_parameters_with_datatype": [
            {
                "name": "flightTimes",
                "description": "the departure and arrival times for flights",
                "datatype": "List"
            },
            {
                "name": "trafficDelay",
                "description": "the current traffic scenario and any possible delays",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "travelTime",
                "description": "the estimated travel time",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HealthCheck",
        "format": "HealthCheck(Age, Weight) -> HealthScale",
        "Id": 26,
        "description": "This API is used to calculate health index based on age and weight.",
        "summary": "This API is used to calculate health index based on age and weight.",
        "input_parameters_with_datatype": [
            {
                "name": "Age",
                "description": "the age of the person",
                "datatype": "Integer"
            },
            {
                "name": "Weight",
                "description": "the weight of the person",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "HealthScale",
                "description": "the health index of the person",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendDiet",
        "format": "RecommendDiet(HealthScale) -> DietReport",
        "Id": 27,
        "description": "This API is used to recommend a diet chart considering the health index.",
        "summary": "This API is used to recommend a diet chart considering the health index.",
        "input_parameters_with_datatype": [
            {
                "name": "HealthScale",
                "description": "the health index of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "DietReport",
                "description": "the diet chart recommended for the person",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RetrieveUserInfo",
        "format": "RetrieveUserInfo(Username) -> Age, Weight",
        "Id": 28,
        "description": "This API retrieves Age and Weight of a specific user.",
        "summary": "This API retrieves Age and Weight of a specific user.",
        "input_parameters_with_datatype": [
            {
                "name": "Username",
                "description": "the username of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Age",
                "description": "the age of the person",
                "datatype": "Integer"
            },
            {
                "name": "Weight",
                "description": "the weight of the person",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyMovieTicket",
        "format": "BuyMovieTicket(movie_name, theater_name, date, time) -> booking status",
        "Id": 29,
        "description": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
        "summary": "This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "theater_name",
                "description": "the name of the theater",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the movie showing",
                "datatype": "Date"
            },
            {
                "name": "time",
                "description": "the time of the movie showing",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "Booking success or failure information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieTheaters",
        "format": "GetMovieTheaters(city) -> theater_name",
        "Id": 30,
        "description": "This API returns a recommended movie theaters in a given city.",
        "summary": "This API returns a recommended movie theaters in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "city name",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "theater_name",
                "description": "the name of the movie theaters",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "QueryEventTime",
        "format": "QueryEvent(event_name) -> time",
        "Id": 31,
        "description": "This API is to query event time.",
        "summary": "This API is to query event time.",
        "input_parameters_with_datatype": [
            {
                "name": "event_name",
                "description": "the name of the event",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the start time of the event",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateEvent",
        "format": "CreateEvent(event_name, location, time) -> event_confirmation",
        "Id": 32,
        "description": "This API is to create an event in your calendar.",
        "summary": "This API is to create an event in your calendar.",
        "input_parameters_with_datatype": [
            {
                "name": "event_name",
                "description": "the name of the event",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location of the event",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the start time of the event",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "event_confirmation",
                "description": "the confirmation of event creation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RemindEvent",
        "format": "RemindEvent(event_name, alert_time) -> reminder_confirmation",
        "Id": 33,
        "description": "This API is to set up a reminder for the event.",
        "summary": "This API is to set up a reminder for the event.",
        "input_parameters_with_datatype": [
            {
                "name": "event_name",
                "description": "the name of the event",
                "datatype": "String"
            },
            {
                "name": "alert_time",
                "description": "the time to set the reminder",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reminder_confirmation",
                "description": "the confirmation of reminder setup",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendHotel",
        "format": "RecommendHotel(city, star_level) -> hotel_name",
        "Id": 34,
        "description": "This API recommends a hotel name based on city and star level.",
        "summary": "This API recommends a hotel name based on city and star level.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city for hotel recommendation",
                "datatype": "String"
            },
            {
                "name": "star_level",
                "description": "the star level of the hotel",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the recommended hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCity",
        "format": "GetCity(user_ID) -> city",
        "Id": 35,
        "description": "This API will return the city of the user based on user ID.",
        "summary": "This API will return the city of the user based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookHotel",
        "format": "BookHotel(hotel_name, date) -> booking_status",
        "Id": 36,
        "description": "This API books a hotel for a certain date.",
        "summary": "This API books a hotel for a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the booking",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserID",
        "format": "GetUserID(username) -> user_ID",
        "Id": 37,
        "description": "This API retrieves the user ID by using the user name.",
        "summary": "This API retrieves the user ID by using the user name.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchHotel",
        "format": "SearchHotel(city, hotel_preferences) -> hotel_name",
        "Id": 38,
        "description": "This API searches a hotel in a given city based on user preferences.",
        "summary": "This API searches a hotel in a given city based on user preferences.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city name",
                "datatype": "String"
            },
            {
                "name": "hotel_preferences",
                "description": "the user preferences for the hotel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateDistance",
        "format": "CalculateDistance(start_point, end_point) -> distance",
        "Id": 39,
        "description": "This API is to calculate the distance between the start point and end point.",
        "summary": "This API is to calculate the distance between the start point and end point.",
        "input_parameters_with_datatype": [
            {
                "name": "start_point",
                "description": "the starting point of the journey",
                "datatype": "String"
            },
            {
                "name": "end_point",
                "description": "the ending point of the journey",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the distance between the start point and end point",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EstimateTravelTime",
        "format": "EstimateTravelTime(distance, mode_of_transport) -> time",
        "Id": 40,
        "description": "This API is to estimate the travel time based on the distance and mode of transportation.",
        "summary": "This API is to estimate the travel time based on the distance and mode of transportation.",
        "input_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the distance of the journey",
                "datatype": "Float"
            },
            {
                "name": "mode_of_transport",
                "description": "the mode of transportation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the estimated travel time",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AlertBeforeDeparture",
        "format": "AlertBeforeDeparture(event_time, travel_time) -> alert_time",
        "Id": 41,
        "description": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
        "summary": "This API is to calculate the time when the user needs to leave, given the event time and travel time.",
        "input_parameters_with_datatype": [
            {
                "name": "event_time",
                "description": "the time of the event",
                "datatype": "DateTime"
            },
            {
                "name": "travel_time",
                "description": "the estimated travel time",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "alert_time",
                "description": "the time when the user needs to leave",
                "datatype": "DateTime"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookRestaurant",
        "format": "BookRestaurant(restaurant_name, date, time) -> booking status",
        "Id": 42,
        "description": "This API allows the user to book a specific restaurant for a certain date and time",
        "summary": "This API allows the user to book a specific restaurant for a certain date and time",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of restarant",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "data",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "time",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking status",
                "description": "Booking success or failure information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendRestaurant",
        "format": "RecommendRestaurant(location,star_level) -> restaurant_name",
        "Id": 43,
        "description": "This API returns the name of a restaurant according to location and star_level",
        "summary": "This API returns the name of a restaurant according to location and star_level",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the restaurant",
                "datatype": "Location"
            },
            {
                "name": "star_level",
                "description": "the star level of the restaurant",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserLocation",
        "format": "GetUserLocation(user_ID) -> user_location",
        "Id": 44,
        "description": "This API returns the location of a certain user ID",
        "summary": "This API returns the location of a certain user ID",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user, please note that it should be number, not character",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_location",
                "description": "the location of the user ID",
                "datatype": "Location"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurantLevel",
        "format": "GetRestaurantLevel(restaurant_name) -> star_level",
        "Id": 45,
        "description": "This API returns the star level of a certain restaurant",
        "summary": "This API returns the star level of a certain restaurant",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "star_level",
                "description": "the star level of the restaurant",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchFlight",
        "format": "SearchFlight(from_location, to_location, date) -> flight_details",
        "Id": 46,
        "description": "This API generates flight details from one location to another at a specified date.",
        "summary": "This API generates flight details from one location to another at a specified date.",
        "input_parameters_with_datatype": [
            {
                "name": "from_location",
                "description": "the location from where the flight will depart",
                "datatype": "String"
            },
            {
                "name": "to_location",
                "description": "the location where the flight will arrive",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_details",
                "description": "the details of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserPreference",
        "format": "GetUserPreference(user_ID) -> preferred_flight_class",
        "Id": 47,
        "description": "This API returns a user's preferred flight class, e.g., economy, business.",
        "summary": "This API returns a user's preferred flight class, e.g., economy, business.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "preferred_flight_class",
                "description": "the preferred flight class of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookFlight",
        "format": "BookFlight(flight_details, preferred_flight_class) -> booking_status",
        "Id": 48,
        "description": "This API books a flight using the flight details and the user's preferred flight class.",
        "summary": "This API books a flight using the flight details and the user's preferred flight class.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_details",
                "description": "the details of the flight",
                "datatype": "String"
            },
            {
                "name": "preferred_flight_class",
                "description": "the preferred flight class of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MusicGenre2Artist",
        "format": "MusicGenre2Artist(music_genre) -> artist_name",
        "Id": 49,
        "description": "This API is to convert music genre to artist's name.",
        "summary": "This API is to convert music genre to artist's name.",
        "input_parameters_with_datatype": [
            {
                "name": "music_genre",
                "description": "the genre of the music",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "artist_name",
                "description": "the name of the artist",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlayMusic",
        "format": "PlayMusic(song_title) -> music_status",
        "Id": 50,
        "description": "This API allows the user to play music.",
        "summary": "This API allows the user to play music.",
        "input_parameters_with_datatype": [
            {
                "name": "song_title",
                "description": "the title of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "music_status",
                "description": "the status of the music playing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendSong",
        "format": "RecommendSong(user_mood) -> song_title",
        "Id": 51,
        "description": "This API returns the title of a song according to user's mood.",
        "summary": "This API returns the title of a song according to user's mood.",
        "input_parameters_with_datatype": [
            {
                "name": "user_mood",
                "description": "the mood of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "song_title",
                "description": "the title of the recommended song",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserMood",
        "format": "GetUserMood(user_name) -> user_mood",
        "Id": 52,
        "description": "This API returns the mood of a certain user.",
        "summary": "This API returns the mood of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_mood",
                "description": "the mood of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetWeather",
        "format": "GetWeather(city) -> weather",
        "Id": 53,
        "description": "This API retrieves the weather information for a given city.",
        "summary": "This API retrieves the weather information for a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendClothing",
        "format": "RecommendClothing(weather) -> clothingItems",
        "Id": 54,
        "description": "This API suggests clothing items to wear based on the current weather.",
        "summary": "This API suggests clothing items to wear based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothingItems",
                "description": "the suggested clothing items",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetStore",
        "format": "GetStore(city, clothingItem) -> storename",
        "Id": 55,
        "description": "This API finds stores where a certain clothing item is available in a given city.",
        "summary": "This API finds stores where a certain clothing item is available in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "clothingItem",
                "description": "the clothing item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "storename",
                "description": "the name of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyClothing",
        "format": "BuyClothing(storename, clothingItem) -> purchaseStatus",
        "Id": 56,
        "description": "This API is to purchase a clothing item from a certain store.",
        "summary": "This API is to purchase a clothing item from a certain store.",
        "input_parameters_with_datatype": [
            {
                "name": "storename",
                "description": "the name of the store",
                "datatype": "String"
            },
            {
                "name": "clothingItem",
                "description": "the clothing item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchaseStatus",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearestStore",
        "format": "FindNearestStore(city, store_type) -> store_name",
        "Id": 57,
        "description": "This API is to find the nearest store based on user location and the preferred product type.",
        "summary": "This API is to find the nearest store based on user location and the preferred product type.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the user is located",
                "datatype": "String"
            },
            {
                "name": "store_type",
                "description": "the preferred store type",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the nearest store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetProductPrice",
        "format": "GetProductPrice(store_name, product_name) -> price",
        "Id": 58,
        "description": "This API is to get the price of a specific product in a given store.",
        "summary": "This API is to get the price of a specific product in a given store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the store",
                "datatype": "String"
            },
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Customername2ID",
        "format": "Customername2ID(customer_name) -> customer_ID",
        "Id": 59,
        "description": "This API is to convert a customer name to a customer ID.",
        "summary": "This API is to convert a customer name to a customer ID.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_name",
                "description": "the name of the customer",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the ID of the customer",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Productname2ID",
        "format": "Productname2ID(book_name) -> product_ID",
        "Id": 60,
        "description": "This API is to convert a book name to a book ID.",
        "summary": "This API is to convert a book name to a book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PurchaseBook",
        "format": "PurchaseBook(customer_ID, product_ID) -> purchased_books",
        "Id": 61,
        "description": "This API is to process the purchase of books.",
        "summary": "This API is to process the purchase of books.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the ID of the customer,it should be number",
                "datatype": "Integer"
            },
            {
                "name": "product_ID",
                "description": "the ID of the book,it should be number",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchased_books",
                "description": "a list of purchased books",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Email2ID",
        "format": "Email2ID(email) -> person_ID",
        "Id": 62,
        "description": "This API is to convert user email to user ID.",
        "summary": "This API is to convert user email to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Subjectname2ID",
        "format": "Subjectname2ID(subject_name) -> subject_ID",
        "Id": 63,
        "description": "This API is to convert subject name to subject ID.",
        "summary": "This API is to convert subject name to subject ID.",
        "input_parameters_with_datatype": [
            {
                "name": "subject_name",
                "description": "the name of the subject",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "subject_ID",
                "description": "the ID of the subject",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EnrollCourse",
        "format": "EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",
        "Id": 64,
        "description": "This API is to enroll a user to a specific course.",
        "summary": "This API is to enroll a user to a specific course.",
        "input_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            },
            {
                "name": "subject_ID",
                "description": "the ID of the subject",
                "datatype": "Integer"
            },
            {
                "name": "semester",
                "description": "the semester of the enrollment",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Enrollment confirmation",
                "description": "the confirmation of the enrollment",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cityname2ID",
        "format": "Cityname2ID(city_name) -> City_ID",
        "Id": 65,
        "description": "This API is to convert city name to city ID.",
        "summary": "This API is to convert city name to city ID.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "City_ID",
                "description": "the ID of the city",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Eventname2ID",
        "format": "Eventname2ID(Event_name) -> Event_ID",
        "Id": 66,
        "description": "This API is to convert event name to event ID.",
        "summary": "This API is to convert event name to event ID.",
        "input_parameters_with_datatype": [
            {
                "name": "Event_name",
                "description": "the name of the event",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Event_ID",
                "description": "the ID of the event",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveTicket",
        "format": "ReserveTicket(City_ID,Event_ID,date) -> Ticket_confirmation",
        "Id": 67,
        "description": "This API is to reserve a ticket for an event.",
        "summary": "This API is to reserve a ticket for an event.",
        "input_parameters_with_datatype": [
            {
                "name": "City_ID",
                "description": "the ID of the city",
                "datatype": "Integer"
            },
            {
                "name": "Event_ID",
                "description": "the ID of the event",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the event",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Ticket_confirmation",
                "description": "the confirmation of the ticket",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Sendername2ID",
        "format": "Sendername2ID(sender_name) -> Sender_ID",
        "Id": 68,
        "description": "This API is to convert sender name to sender ID.",
        "summary": "This API is to convert sender name to sender ID.",
        "input_parameters_with_datatype": [
            {
                "name": "sender_name",
                "description": "the name of the sender",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Sender_ID",
                "description": "the ID of the sender",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Receivername2ID",
        "format": "Receivername2ID(receiver_name) -> Receiver_ID",
        "Id": 69,
        "description": "This API converts receiver name to receiver ID.",
        "summary": "This API converts receiver name to receiver ID.",
        "input_parameters_with_datatype": [
            {
                "name": "receiver_name",
                "description": "the name of the receiver",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Receiver_ID",
                "description": "the ID of the receiver",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TransferAmount",
        "format": "TransferAmount(Sender_ID,Receiver_ID,amount) -> Money transfer confirmation",
        "Id": 70,
        "description": "This API is to transfer money between two users.",
        "summary": "This API is to transfer money between two users.",
        "input_parameters_with_datatype": [
            {
                "name": "Sender_ID",
                "description": "the ID of the sender,it should be number",
                "datatype": "Integer"
            },
            {
                "name": "Receiver_ID",
                "description": "the ID of the receiver,it should be number",
                "datatype": "Integer"
            },
            {
                "name": "amount",
                "description": "the amount of money to be transferred",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Money transfer confirmation",
                "description": "confirmation message for the money transfer",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Address2GPS",
        "format": "Address2GPS(address) -> GPS coordinates",
        "Id": 71,
        "description": "This API is to convert an address to GPS coordinates.",
        "summary": "This API is to convert an address to GPS coordinates.",
        "input_parameters_with_datatype": [
            {
                "name": "address",
                "description": "the address",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "GPS coordinates",
                "description": "the GPS coordinates",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GPS2Weather",
        "format": "GPS2Weather(gps_coordinates) -> weather data",
        "Id": 72,
        "description": "This API is to convert GPS coordinates to weather information.",
        "summary": "This API is to convert GPS coordinates to weather information.",
        "input_parameters_with_datatype": [
            {
                "name": "gps_coordinates",
                "description": "the GPS coordinates",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather data",
                "description": "the weather data",
                "datatype": "JSON"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cityname2Address",
        "format": "Cityname2Address(city_name) -> address",
        "Id": 73,
        "description": "This API is to convert a city name to its detailed address.",
        "summary": "This API is to convert a city name to its detailed address.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "address",
                "description": "the detailed address",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Productname2Id",
        "format": "Productname2Id(product_name) -> Product_Id",
        "Id": 74,
        "description": "This API is to convert product name to its Id.",
        "summary": "This API is to convert product name to its Id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Product_Id",
                "description": "the Id of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductAvailability",
        "format": "ProductAvailability(product_id) -> availability",
        "Id": 75,
        "description": "API to check the availability of a product.",
        "summary": "API to check the availability of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the Id of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability",
                "description": "the availability of the product",
                "datatype": "Boolean"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindFlightByDestination",
        "format": "FindFlightByDestination(destination) -> flight_ID",
        "Id": 76,
        "description": "This API is used to retrieve flight ID by using the flight's destination.",
        "summary": "This API is used to retrieve flight ID by using the flight's destination.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_ID",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserDestination",
        "format": "GetUserDestination(user_ID) -> user_destination",
        "Id": 77,
        "description": "This API will return the user's travel destination based on user ID.",
        "summary": "This API will return the user's travel destination based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_destination",
                "description": "the travel destination of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ItemnameToID",
        "format": "ItemnameToID(item_name) -> item_ID",
        "Id": 78,
        "description": "This API is used to convert the name of the item to item ID.",
        "summary": "This API is used to convert the name of the item to item ID.",
        "input_parameters_with_datatype": [
            {
                "name": "item_name",
                "description": "the name of the item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "item_ID",
                "description": "the ID of the item",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuppliernameToID",
        "format": "SuppliernameToID(supplier_name) -> supplier_ID",
        "Id": 79,
        "description": "This API is used to convert the name of the supplier to supplier ID.",
        "summary": "This API is used to convert the name of the supplier to supplier ID.",
        "input_parameters_with_datatype": [
            {
                "name": "supplier_name",
                "description": "the name of the supplier",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "supplier_ID",
                "description": "the ID of the supplier",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlaceOrder",
        "format": "PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",
        "Id": 80,
        "description": "This API places the order for a particular item from a specified supplier.",
        "summary": "This API places the order for a particular item from a specified supplier.",
        "input_parameters_with_datatype": [
            {
                "name": "item_ID",
                "description": "the ID of the item",
                "datatype": "Integer"
            },
            {
                "name": "supplier_ID",
                "description": "the ID of the supplier",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the item",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_status",
                "description": "the status of the order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserEmailToID",
        "format": "UserEmailToID(email_address) -> user_ID",
        "Id": 81,
        "description": "This API is used to convert the user's email address to user ID.",
        "summary": "This API is used to convert the user's email address to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "email_address",
                "description": "the email address of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BooknameToID",
        "format": "BooknameToID(book_name) -> book_ID",
        "Id": 82,
        "description": "This API is to convert the book name to book ID.",
        "summary": "This API is to convert the book name to book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BorrowBook",
        "format": "BorrowBook(user_ID, book_ID) -> borrow_status",
        "Id": 83,
        "description": "This API borrows a book for a particular user.",
        "summary": "This API borrows a book for a particular user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "borrow_status",
                "description": "the status of the borrowing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightFromTo",
        "format": "FlightFromTo(city1, city2) -> flight_ID",
        "Id": 84,
        "description": "This API returns a flight id between two cities.",
        "summary": "This API returns a flight id between two cities.",
        "input_parameters_with_datatype": [
            {
                "name": "city1",
                "description": "the departure city",
                "datatype": "String"
            },
            {
                "name": "city2",
                "description": "the destination city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_ID",
                "description": "the id of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPassengerID",
        "format": "GetPassengerID(name) -> passenger_ID",
        "Id": 85,
        "description": "This API returns the id of a passenger.",
        "summary": "This API returns the id of a passenger.",
        "input_parameters_with_datatype": [
            {
                "name": "name",
                "description": "the name of the passenger",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "passenger_ID",
                "description": "the id of the passenger",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddToCart",
        "format": "AddToCart(customer_ID, product_ID) -> Cart status",
        "Id": 86,
        "description": "This API adds a product to a customer's shopping cart.",
        "summary": "This API adds a product to a customer's shopping cart.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the ID of the customer",
                "datatype": "Integer"
            },
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Cart status",
                "description": "the status of the cart",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindHotel",
        "format": "FindHotel(city) -> hotel_name",
        "Id": 87,
        "description": "This API returns a recommended hotel in a given city.",
        "summary": "This API returns a recommended hotel in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the recommended hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookRoom",
        "format": "BookRoom(hotel_name, date, number_of_nights) -> booking status",
        "Id": 88,
        "description": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
        "summary": "This API allows the user to book a room at a specific hotel for a specific number of nights and date.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the starting date of the booking",
                "datatype": "Date"
            },
            {
                "name": "number_of_nights",
                "description": "the number of nights for the booking",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetWeatherForecast",
        "format": "GetWeatherForecast(city, date) -> weather report",
        "Id": 89,
        "description": "This API returns the weather forecast of a specified city on a specific date.",
        "summary": "This API returns the weather forecast of a specified city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather report",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendOutfit",
        "format": "RecommendOutfit(weather) -> outfit details",
        "Id": 90,
        "description": "This API recommends an outfit based on the weather conditions.",
        "summary": "This API recommends an outfit based on the weather conditions.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit details",
                "description": "the recommended outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookFinder",
        "format": "BookFinder(genre, author, year) -> book",
        "Id": 91,
        "description": "This API is to find a specific book by genre, author, and year.",
        "summary": "This API is to find a specific book by genre, author, and year.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the book",
                "datatype": "String"
            },
            {
                "name": "author",
                "description": "the author of the book",
                "datatype": "String"
            },
            {
                "name": "year",
                "description": "the year the book was published",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book",
                "description": "the specific book matching the given criteria",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookSummary",
        "format": "BookSummary(book_name) -> summary",
        "Id": 92,
        "description": "This API is to get a summary of a particular book.",
        "summary": "This API is to get a summary of a particular book.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "summary",
                "description": "the summary of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MusicIdentifier",
        "format": "MusicIdentifier(genre, artist, album) -> song",
        "Id": 93,
        "description": "This API identifies a specific song from a certain genre, by an artist, from a specific album.",
        "summary": "This API identifies a specific song from a certain genre, by an artist, from a specific album.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the song",
                "datatype": "String"
            },
            {
                "name": "artist",
                "description": "the artist of the song",
                "datatype": "String"
            },
            {
                "name": "album",
                "description": "the album of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "song",
                "description": "the specific song identified",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LyricExtractor",
        "format": "LyricExtractor(song_name) -> lyrics",
        "Id": 94,
        "description": "This API extracts lyrics of a specific song.",
        "summary": "This API extracts lyrics of a specific song.",
        "input_parameters_with_datatype": [
            {
                "name": "song_name",
                "description": "the name of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "lyrics",
                "description": "the lyrics of the song",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieSuggestion",
        "format": "MovieSuggestion(genre, director, year) -> movie",
        "Id": 95,
        "description": "This API suggests a movie based on the genre, director, and the year.",
        "summary": "This API suggests a movie based on the genre, director, and the year.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            },
            {
                "name": "director",
                "description": "the director of the movie",
                "datatype": "String"
            },
            {
                "name": "year",
                "description": "the year of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the suggested movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieReview",
        "format": "MovieReview(movie_name) -> review",
        "Id": 96,
        "description": "This API provides a review of a particular movie.",
        "summary": "This API provides a review of a particular movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the review of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFlightDetails",
        "format": "GetFlightDetails(flight_id) -> details",
        "Id": 97,
        "description": "This API is to get detailed information about a specific flight.",
        "summary": "This API is to get detailed information about a specific flight.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_id",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "details",
                "description": "detailed information about the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetClothingRecommendation",
        "format": "GetClothingRecommendation(weather_info) -> clothing_recommendation",
        "Id": 98,
        "description": "This API is to get clothing recommendation based on the weather forecast.",
        "summary": "This API is to get clothing recommendation based on the weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_info",
                "description": "the weather forecast information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_recommendation",
                "description": "the recommended clothing based on the weather forecast",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetHotelAvailability",
        "format": "GetHotelAvailability(city, dates) -> hotel",
        "Id": 99,
        "description": "This API checks the availability of hotels in a specific city on specific dates.",
        "summary": "This API checks the availability of hotels in a specific city on specific dates.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "dates",
                "description": "specific dates",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel",
                "description": "list of available hotels",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurants",
        "format": "GetRestaurants(city) -> restaurants",
        "Id": 100,
        "description": "This API provides a list of restaurants in a specific city.",
        "summary": "This API provides a list of restaurants in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurants",
                "description": "list of restaurants",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanTrip",
        "format": "PlanTrip(hotel, restaurants) -> trip",
        "Id": 101,
        "description": "This API plans a trip including a hotel stay and restaurants visits.",
        "summary": "This API plans a trip including a hotel stay and restaurants visits.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel",
                "description": "list of available hotels",
                "datatype": "List"
            },
            {
                "name": "restaurants",
                "description": "list of restaurants",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "trip",
                "description": "planned trip details",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CurrentExchangeRate",
        "format": "CurrentExchangeRate(currency) -> exchangeRate",
        "Id": 102,
        "description": "This API is to get the current exchange rate for a specific currency.",
        "summary": "This API is to get the current exchange rate for a specific currency.",
        "input_parameters_with_datatype": [
            {
                "name": "currency",
                "description": "the currency code",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "exchangeRate",
                "description": "the current exchange rate",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BudgetInLocalCurrency",
        "format": "BudgetInLocalCurrency(budget, exchangeRate) -> localBudget",
        "Id": 103,
        "description": "This API is to calculate the budget in local currency using the original budget and current exchange rate.",
        "summary": "This API is to calculate the budget in local currency using the original budget and current exchange rate.",
        "input_parameters_with_datatype": [
            {
                "name": "budget",
                "description": "the original budget in USD",
                "datatype": "Float"
            },
            {
                "name": "exchangeRate",
                "description": "the current exchange rate",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "localBudget",
                "description": "the budget in local currency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestDiningOptions",
        "format": "SuggestDiningOptions(localBudget, location) -> diningOptions",
        "Id": 104,
        "description": "This API is to suggest dining options based on the local budget and location.",
        "summary": "This API is to suggest dining options based on the local budget and location.",
        "input_parameters_with_datatype": [
            {
                "name": "localBudget",
                "description": "the budget in local currency",
                "datatype": "Float"
            },
            {
                "name": "location",
                "description": "the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "diningOptions",
                "description": "a list of suggested dining options",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentFuelPrice",
        "format": "GetCurrentFuelPrice(city) -> fuelPrice",
        "Id": 105,
        "description": "This API is to get the current fuel price of a specific city.",
        "summary": "This API is to get the current fuel price of a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fuelPrice",
                "description": "the current fuel price",
                "datatype": "Decimal"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDrivingDistance",
        "format": "GetDrivingDistance(startPoint, endPoint) -> distance",
        "Id": 106,
        "description": "This API is to get the driving distance between two points.",
        "summary": "This API is to get the driving distance between two points.",
        "input_parameters_with_datatype": [
            {
                "name": "startPoint",
                "description": "the starting point of the journey",
                "datatype": "String"
            },
            {
                "name": "endPoint",
                "description": "the ending point of the journey",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the driving distance between the two points",
                "datatype": "Decimal"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateFuelCost",
        "format": "CalculateFuelCost(fuelPrice, distance) -> cost",
        "Id": 107,
        "description": "This API is to calculate the potential fuel cost based on the fuel price and distance.",
        "summary": "This API is to calculate the potential fuel cost based on the fuel price and distance.",
        "input_parameters_with_datatype": [
            {
                "name": "fuelPrice",
                "description": "the current fuel price",
                "datatype": "Decimal"
            },
            {
                "name": "distance",
                "description": "the driving distance",
                "datatype": "Decimal"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cost",
                "description": "the potential fuel cost",
                "datatype": "Decimal"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAverageHousePrice",
        "format": "GetAverageHousePrice(location) -> housePrice",
        "Id": 108,
        "description": "This API is to get the average house price of a specific location.",
        "summary": "This API is to get the average house price of a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the house",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "housePrice",
                "description": "the average house price",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLoanInterestRate",
        "format": "GetLoanInterestRate(bank) -> interestRate",
        "Id": 109,
        "description": "This API is to get the loan interest rate of a specific bank.",
        "summary": "This API is to get the loan interest rate of a specific bank.",
        "input_parameters_with_datatype": [
            {
                "name": "bank",
                "description": "the name of the bank",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "interestRate",
                "description": "the loan interest rate",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateMortgagePayment",
        "format": "CalculateMortgagePayment(housePrice, interestRate) -> mortgagePayment",
        "Id": 110,
        "description": "This API is to calculate the monthly mortgage payment based on the house price and interest rate.",
        "summary": "This API is to calculate the monthly mortgage payment based on the house price and interest rate.",
        "input_parameters_with_datatype": [
            {
                "name": "housePrice",
                "description": "the house price",
                "datatype": "Float"
            },
            {
                "name": "interestRate",
                "description": "the loan interest rate",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "mortgagePayment",
                "description": "the monthly mortgage payment",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTable",
        "format": "BookTable(restaurant_name, date, time) -> booking status",
        "Id": 111,
        "description": "This API allows the user to book a table at a specific restaurant for a given date and time.",
        "summary": "This API allows the user to book a table at a specific restaurant for a given date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the booking",
                "datatype": "Date"
            },
            {
                "name": "time",
                "description": "the time of the booking",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurant",
        "format": "GetRestaurant(city,cuisine) -> restaurant_name",
        "Id": 112,
        "description": "This API the name of the restaurant recommended based on city and cuisine.",
        "summary": "This API the name of the restaurant recommended based on city and cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city to search for restaurants",
                "datatype": "String"
            },
            {
                "name": "cuisine",
                "description": "the cuisine to search for restaurants",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the recommended restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchRecipe",
        "format": "SearchRecipe(cuisine, diet, ingredients) -> recipe",
        "Id": 113,
        "description": "This API is to search for recipe based on user preferences.",
        "summary": "This API is to search for recipe based on user preferences.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the cuisine preference",
                "datatype": "String"
            },
            {
                "name": "diet",
                "description": "the diet preference",
                "datatype": "String"
            },
            {
                "name": "ingredients",
                "description": "the list of ingredients",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recipe",
                "description": "the searched recipe",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRecipeInstructions",
        "format": "GetRecipeInstructions(recipe_name) -> instructions",
        "Id": 114,
        "description": "This API is to get the instructions to prepare a specific recipe.",
        "summary": "This API is to get the instructions to prepare a specific recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "recipe_name",
                "description": "the name of the recipe",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "instructions",
                "description": "the instructions for the recipe",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherForecast",
        "format": "WeatherForecast(location) -> temperature",
        "Id": 115,
        "description": "This API is to get the temperature for a specific location.",
        "summary": "This API is to get the temperature for a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "temperature",
                "description": "the temperature",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCityPopulation",
        "format": "GetCityPopulation(city) -> population",
        "Id": 116,
        "description": "This API is to get the population of a specific city.",
        "summary": "This API is to get the population of a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "city name",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "population",
                "description": "the population of the city",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendActivity",
        "format": "RecommendActivity(temperature, population) -> activity",
        "Id": 117,
        "description": "This API is to recommend an activity based on the temperature and population of a city.",
        "summary": "This API is to recommend an activity based on the temperature and population of a city.",
        "input_parameters_with_datatype": [
            {
                "name": "temperature",
                "description": "the temperature of the city",
                "datatype": "Float"
            },
            {
                "name": "population",
                "description": "the population of the city",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the recommended activity",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchRestaurant",
        "format": "SearchRestaurant(city, cuisine) -> restaurant_name",
        "Id": 118,
        "description": "This API finds a restaurant in a given city and with a certain cuisine.",
        "summary": "This API finds a restaurant in a given city and with a certain cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "city",
                "datatype": "String"
            },
            {
                "name": "cuisine",
                "description": "cuisine type",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "restaurant name",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendItems",
        "format": "RecommendItems(restaurant_name) -> recommend_items",
        "Id": 119,
        "description": "This API retrieves the menu of a given restaurant and recommend items.",
        "summary": "This API retrieves the menu of a given restaurant and recommend items.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "restaurant name",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recommend_items",
                "description": "recommended items in menu",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRoute",
        "format": "GetRoute(origin_location,destination_location) -> route",
        "Id": 120,
        "description": "This API provides the optimal driving route between two locations.",
        "summary": "This API provides the optimal driving route between two locations.",
        "input_parameters_with_datatype": [
            {
                "name": "origin_location",
                "description": "starting location,the format: (Latitude,longitude),eg.(23,145)",
                "datatype": "String"
            },
            {
                "name": "destination_location",
                "description": "destination location,the format: (Latitude,longitude),eg.(23,145)",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "route",
                "description": "optimal driving route",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Personname2ID",
        "format": "Personname2ID(person_name) -> person_ID",
        "Id": 121,
        "description": "This API is to convert user name to user ID.",
        "summary": "This API is to convert user name to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "person_name",
                "description": "the name of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cityname2Weather",
        "format": "Cityname2Weather(city_name) -> weather",
        "Id": 122,
        "description": "This API is to fetch the current weather for a specific city.",
        "summary": "This API is to fetch the current weather for a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ActivityRecommend",
        "format": "ActivityRecommend(city_name, weather) -> activity",
        "Id": 123,
        "description": "This API is to recommend suitable activities based on the weather in a specific city.",
        "summary": "This API is to recommend suitable activities based on the weather in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "weather",
                "description": "the current weather of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the recommended activity based on the weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ActivityBook",
        "format": "ActivityBook(activity, user_name) -> booking_confirmation",
        "Id": 124,
        "description": "This API is to book an activity for a specific user.",
        "summary": "This API is to book an activity for a specific user.",
        "input_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the activity to be booked",
                "datatype": "String"
            },
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_confirmation",
                "description": "the confirmation of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Restaurantname2ID",
        "format": "Restaurantname2ID(restaurant_name) -> restaurant_ID",
        "Id": 125,
        "description": "This API is to convert a restaurant name to a specific restaurant ID.",
        "summary": "This API is to convert a restaurant name to a specific restaurant ID.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MenuItem2ID",
        "format": "MenuItem2ID(menu_item, restaurant_id) -> menu_item_ID",
        "Id": 126,
        "description": "This API is to convert a menu item name with restaurant ID to a specific menu item ID.",
        "summary": "This API is to convert a menu item name with restaurant ID to a specific menu item ID.",
        "input_parameters_with_datatype": [
            {
                "name": "menu_item",
                "description": "the name of the menu item",
                "datatype": "String"
            },
            {
                "name": "restaurant_id",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "menu_item_ID",
                "description": "the ID of the menu item",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RetrieveEmail",
        "format": "RetrieveEmail(user_ID) -> email",
        "Id": 127,
        "description": "This API is to retrieve the email of a user.",
        "summary": "This API is to retrieve the email of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SendEmail",
        "format": "SendEmail(email, message) -> email_status",
        "Id": 128,
        "description": "This API is to send an email to a user.",
        "summary": "This API is to send an email to a user.",
        "input_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email of the user",
                "datatype": "String"
            },
            {
                "name": "message",
                "description": "the message to be sent",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "email_status",
                "description": "the status of the email sending",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Foodname2ID",
        "format": "Foodname2ID(food_name) -> food_ID",
        "Id": 129,
        "description": "This API is to convert a food name to a food ID.",
        "summary": "This API is to convert a food name to a food ID.",
        "input_parameters_with_datatype": [
            {
                "name": "food_name",
                "description": "the name of the food",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_ID",
                "description": "the ID of the food",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Carname2ID",
        "format": "Carname2ID(car_name) -> car_ID",
        "Id": 130,
        "description": "This API is to convert a car name to a car ID.",
        "summary": "This API is to convert a car name to a car ID.",
        "input_parameters_with_datatype": [
            {
                "name": "car_name",
                "description": "the name of the car",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "car_ID",
                "description": "the ID of the car",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Drivername2ID",
        "format": "Drivername2ID(driver_name) -> driver_ID",
        "Id": 131,
        "description": "This API is to convert a driver name to a driver ID.",
        "summary": "This API is to convert a driver name to a driver ID.",
        "input_parameters_with_datatype": [
            {
                "name": "driver_name",
                "description": "the name of the driver",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "driver_ID",
                "description": "the ID of the driver",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookCab",
        "format": "BookCab(driver_ID, car_ID) -> booked_cab",
        "Id": 132,
        "description": "This API is to book a cab.",
        "summary": "This API is to book a cab.",
        "input_parameters_with_datatype": [
            {
                "name": "driver_ID",
                "description": "the ID of the driver",
                "datatype": "Integer"
            },
            {
                "name": "car_ID",
                "description": "the ID of the car",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booked_cab",
                "description": "the status of the booked cab",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Email2Username",
        "format": "Email2Username(email) -> user_name",
        "Id": 133,
        "description": "This API is to convert an email to a username.",
        "summary": "This API is to convert an email to a username.",
        "input_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email address",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the username",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ISBN2Title",
        "format": "ISBN2Title(ISBN) -> book_title",
        "Id": 134,
        "description": "This API is to convert an ISBN to a book title.",
        "summary": "This API is to convert an ISBN to a book title.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddBookToReadingList",
        "format": "AddBookToReadingList(user_name, book_title) -> reading_list",
        "Id": 135,
        "description": "This API is to add a book to a user's reading list.",
        "summary": "This API is to add a book to a user's reading list.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the username of the user",
                "datatype": "String"
            },
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reading_list",
                "description": "the updated reading list",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Authorname2ID",
        "format": "Authorname2ID(author_name) -> author_ID",
        "Id": 136,
        "description": "This API is to convert an author name to an author ID.",
        "summary": "This API is to convert an author name to an author ID.",
        "input_parameters_with_datatype": [
            {
                "name": "author_name",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_ID",
                "description": "the ID of the author",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTitle2ID",
        "format": "BookTitle2ID(book_title) -> book_ID",
        "Id": 137,
        "description": "This API is to convert a book title to a book ID.",
        "summary": "This API is to convert a book title to a book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddBookToAuthor",
        "format": "AddBookToAuthor(author_ID, book_ID) -> author_books",
        "Id": 138,
        "description": "This API is to add a book to an author's library.",
        "summary": "This API is to add a book to an author's library.",
        "input_parameters_with_datatype": [
            {
                "name": "author_ID",
                "description": "the ID of the author",
                "datatype": "Integer"
            },
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_books",
                "description": "the updated library of the author",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddRestaurantToCity",
        "format": "AddRestaurantToCity(city_ID, restaurant_ID) -> city_restaurants",
        "Id": 139,
        "description": "This API is to add a restaurant to a city's list.",
        "summary": "This API is to add a restaurant to a city's list.",
        "input_parameters_with_datatype": [
            {
                "name": "city_ID",
                "description": "the ID of the city",
                "datatype": "Integer"
            },
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city_restaurants",
                "description": "the updated list of restaurants in the city",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightDestination2Code",
        "format": "FlightDestination2Code(destination) -> flight_code",
        "Id": 140,
        "description": "This API is to convert flight destination to its corresponding flight code.",
        "summary": "This API is to convert flight destination to its corresponding flight code.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_code",
                "description": "the code of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckFlightAvailability",
        "format": "CheckFlightAvailability(flight_code,date) -> flight_status",
        "Id": 141,
        "description": "This API is to check the availability of a flight using flight code and date.",
        "summary": "This API is to check the availability of a flight using flight code and date.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_code",
                "description": "the code of the flight",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the flight",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_status",
                "description": "the status of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightCode2ID",
        "format": "FlightCode2ID(Flight_code) -> Flight_ID",
        "Id": 142,
        "description": "This API is to convert flight code to flight ID.",
        "summary": "This API is to convert flight code to flight ID.",
        "input_parameters_with_datatype": [
            {
                "name": "Flight_code",
                "description": "the flight code",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Flight_ID",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DateConversion",
        "format": "DateConversion(date) -> standard_date",
        "Id": 143,
        "description": "This API is to convert date in any format to standard format.",
        "summary": "This API is to convert date in any format to standard format.",
        "input_parameters_with_datatype": [
            {
                "name": "date",
                "description": "the date in any format",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "standard_date",
                "description": "the date in standard format",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Hotelname2ID",
        "format": "Hotelname2ID(Hotel_name) -> Hotel_ID",
        "Id": 144,
        "description": "This API is to convert hotel name to hotel ID.",
        "summary": "This API is to convert hotel name to hotel ID.",
        "input_parameters_with_datatype": [
            {
                "name": "Hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Hotel_ID",
                "description": "the ID of the hotel",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RoomType2ID",
        "format": "RoomType2ID(Room_type) -> Room_ID",
        "Id": 145,
        "description": "This API is to convert room type to room ID.",
        "summary": "This API is to convert room type to room ID.",
        "input_parameters_with_datatype": [
            {
                "name": "Room_type",
                "description": "the type of the room",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Room_ID",
                "description": "the ID of the room",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Bookname2ID",
        "format": "Bookname2ID(book_name) -> Book_ID",
        "Id": 146,
        "description": "This API is to convert book name to book ID.",
        "summary": "This API is to convert book name to book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Email2UserID",
        "format": "Email2UserID(email) -> User_ID",
        "Id": 147,
        "description": "This API is to convert user's email to user ID.",
        "summary": "This API is to convert user's email to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "User_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTitle2BookID",
        "format": "BookTitle2BookID(book_title) -> Book_ID",
        "Id": 148,
        "description": "This API converts book title to book ID.",
        "summary": "This API converts book title to book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cityname2Timezone",
        "format": "Cityname2Timezone(city_name) -> timezone",
        "Id": 149,
        "description": "This API retrieves the timezone for a specific city.",
        "summary": "This API retrieves the timezone for a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "timezone",
                "description": "the timezone information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherAndTimezone2ClothingAdvice",
        "format": "WeatherAndTimezone2ClothingAdvice(weather, timezone) -> clothing_advice",
        "Id": 150,
        "description": "This API provides clothing advice based on the weather and timezone.",
        "summary": "This API provides clothing advice based on the weather and timezone.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather information",
                "datatype": "String"
            },
            {
                "name": "timezone",
                "description": "the timezone information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_advice",
                "description": "the clothing advice",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Satellitename2ID",
        "format": "Satellitename2ID(satellite_name) -> Satellite_ID",
        "Id": 151,
        "description": "This API is to convert satellite name to satellite ID.",
        "summary": "This API is to convert satellite name to satellite ID.",
        "input_parameters_with_datatype": [
            {
                "name": "satellite_name",
                "description": "the name of the satellite",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Satellite_ID",
                "description": "the ID of the satellite",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Frequency2ID",
        "format": "Frequency2ID(frequency) -> Frequency_ID",
        "Id": 152,
        "description": "This API converts frequency to frequency ID.",
        "summary": "This API converts frequency to frequency ID.",
        "input_parameters_with_datatype": [
            {
                "name": "frequency",
                "description": "the frequency value",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Frequency_ID",
                "description": "the ID of the frequency",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EstablishCommunication",
        "format": "EstablishCommunication(Satellite_ID, Frequency_ID, time) -> Communication_establishment_confirmation",
        "Id": 153,
        "description": "This API is to establish communication with a specific satellite at a specific frequency and time.",
        "summary": "This API is to establish communication with a specific satellite at a specific frequency and time.",
        "input_parameters_with_datatype": [
            {
                "name": "Satellite_ID",
                "description": "the ID of the satellite",
                "datatype": "Integer"
            },
            {
                "name": "Frequency_ID",
                "description": "the ID of the frequency",
                "datatype": "Integer"
            },
            {
                "name": "time",
                "description": "the time of communication",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Communication_establishment_confirmation",
                "description": "the confirmation of communication establishment",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookIdByTitle",
        "format": "GetBookIdByTitle(book_title) -> book_id",
        "Id": 154,
        "description": "This API finds the book's ID based on its title.",
        "summary": "This API finds the book's ID based on its title.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Username2UserId",
        "format": "Username2UserId(user_name) -> user_id",
        "Id": 155,
        "description": "This API converts user name to user id.",
        "summary": "This API converts user name to user id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductId2Cost",
        "format": "ProductId2Cost(product_id) -> product_cost",
        "Id": 156,
        "description": "This API gets the cost of a product based on its Id.",
        "summary": "This API gets the cost of a product based on its Id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the id of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_cost",
                "description": "the cost of the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CartId2TotalCost",
        "format": "CartId2TotalCost(cart_id) -> total_cost",
        "Id": 157,
        "description": "This API calculates the total cost of all products in a cart.",
        "summary": "This API calculates the total cost of all products in a cart.",
        "input_parameters_with_datatype": [
            {
                "name": "cart_id",
                "description": "the id of the cart",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "total_cost",
                "description": "the total cost of all products in the cart",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserId2CartId",
        "format": "UserId2CartId(user_id) -> cart_id",
        "Id": 158,
        "description": "This API finds the user's cart id based on the user id.",
        "summary": "This API finds the user's cart id based on the user id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cart_id",
                "description": "the id of the cart",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserId2Location",
        "format": "UserId2Location(user_id) -> user_location",
        "Id": 159,
        "description": "This API finds the user's current location based on user id.",
        "summary": "This API finds the user's current location based on user id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_location",
                "description": "the current location of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreId2OperatingHours",
        "format": "StoreId2OperatingHours(store_id) -> operating_hours",
        "Id": 160,
        "description": "This API finds the operating hours of a store based on store id.",
        "summary": "This API finds the operating hours of a store based on store id.",
        "input_parameters_with_datatype": [
            {
                "name": "store_id",
                "description": "the id of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "operating_hours",
                "description": "the operating hours of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductID2Availability",
        "format": "ProductID2Availability(product_id) -> product_availability",
        "Id": 161,
        "description": "This API checks the availability of a product based on its Id.",
        "summary": "This API checks the availability of a product based on its Id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the Id of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_availability",
                "description": "the availability status of the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Productname2ProductID",
        "format": "Productname2ProductID(product_name) -> product_id",
        "Id": 162,
        "description": "This API converts product name to product id.",
        "summary": "This API converts product name to product id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the Id of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Location2Coordinates",
        "format": "Location2Coordinates(location_name) -> coordinates",
        "Id": 163,
        "description": "This API converts the location name to its geographical coordinates.",
        "summary": "This API converts the location name to its geographical coordinates.",
        "input_parameters_with_datatype": [
            {
                "name": "location_name",
                "description": "the name of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "coordinates",
                "description": "the geographical coordinates of the location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherInfo",
        "format": "WeatherInfo(coordinates) -> weather_data",
        "Id": 164,
        "description": "This API retrieves the weather information for a specific location.",
        "summary": "This API retrieves the weather information for a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "coordinates",
                "description": "the geographical coordinates of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_data",
                "description": "the weather information for the location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GenerateWeatherReport",
        "format": "GenerateWeatherReport(weather_data) -> report",
        "Id": 165,
        "description": "This API generates a detailed weather report based on the provided weather data.",
        "summary": "This API generates a detailed weather report based on the provided weather data.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_data",
                "description": "the weather information for a specific location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "report",
                "description": "the detailed weather report",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserBudget",
        "format": "GetUserBudget(user_ID) -> budget",
        "Id": 166,
        "description": "This API returns a user's budget for hotel booking.",
        "summary": "This API returns a user's budget for hotel booking.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "budget",
                "description": "the budget for hotel booking",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Product2ID",
        "format": "Product2ID(product_name) -> product_ID",
        "Id": 167,
        "description": "This API generates the ID of a specific product through its product name.",
        "summary": "This API generates the ID of a specific product through its product name.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OrderProduct",
        "format": "OrderProduct(product_ID, user_ID, quantity) -> order_status",
        "Id": 168,
        "description": "This API allows the user to order a specific product in a certain quantity.",
        "summary": "This API allows the user to order a specific product in a certain quantity.",
        "input_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_status",
                "description": "the status of the order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendProduct",
        "format": "RecommendProduct(category) -> product_name",
        "Id": 169,
        "description": "This API suggests a product name according to the category preferred by the user.",
        "summary": "This API suggests a product name according to the category preferred by the user.",
        "input_parameters_with_datatype": [
            {
                "name": "category",
                "description": "the preferred category of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the suggested product name",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFavouriteCategory",
        "format": "GetFavouriteCategory(user_ID) -> category",
        "Id": 170,
        "description": "This API will provide the favourite category of the specified user.",
        "summary": "This API will provide the favourite category of the specified user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "category",
                "description": "the favourite category of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserEmail2ID",
        "format": "UserEmail2ID(user_email) -> user_ID",
        "Id": 171,
        "description": "This API generates the ID of a specific user through the user email.",
        "summary": "This API generates the ID of a specific user through the user email.",
        "input_parameters_with_datatype": [
            {
                "name": "user_email",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchMovieByGenre",
        "format": "SearchMovieByGenre(genre) -> movie_ID",
        "Id": 172,
        "description": "This API is used to retrieve a movie ID by using the movie's genre.",
        "summary": "This API is used to retrieve a movie ID by using the movie's genre.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserFavoriteGenre",
        "format": "GetUserFavoriteGenre(user_ID) -> user_genre",
        "Id": 173,
        "description": "This API will return the user's favorite movie genre based on user ID.",
        "summary": "This API will return the user's favorite movie genre based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_genre",
                "description": "the favorite genre of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveMovieTicket",
        "format": "ReserveMovieTicket(movie_ID, date) -> reservation_status",
        "Id": 174,
        "description": "This API reserves a movie ticket for a certain date.",
        "summary": "This API reserves a movie ticket for a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the movie ticket reservation",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the status of the movie ticket reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRestaurantByCuisine",
        "format": "FindRestaurantByCuisine(cuisine) -> restaurant_ID",
        "Id": 175,
        "description": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
        "summary": "This API is used to retrieve a restaurant ID by using the restaurant's cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the cuisine of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserFavoriteCuisine",
        "format": "GetUserFavoriteCuisine(user_ID) -> user_cuisine",
        "Id": 176,
        "description": "This API will return the user's favorite cuisine based on user ID.",
        "summary": "This API will return the user's favorite cuisine based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_cuisine",
                "description": "the favorite cuisine of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookRestaurantTable",
        "format": "BookRestaurantTable(restaurant_ID, date) -> booking_status",
        "Id": 177,
        "description": "This API books a table at a restaurant for a certain date.",
        "summary": "This API books a table at a restaurant for a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the booking",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserPreferredCuisine",
        "format": "GetUserPreferredCuisine(user_ID) -> user_cuisine",
        "Id": 178,
        "description": "This API will return the user's preferred cuisine based on user ID.",
        "summary": "This API will return the user's preferred cuisine based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_cuisine",
                "description": "the preferred cuisine of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveTable",
        "format": "ReserveTable(restaurant_ID, date, time) -> reservation_status",
        "Id": 179,
        "description": "This API reserves a table at a restaurant for a certain date and time.",
        "summary": "This API reserves a table at a restaurant for a certain date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the reservation",
                "datatype": "Date"
            },
            {
                "name": "time",
                "description": "the time of the reservation",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the status of the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Username2City",
        "format": "Username2City(username) -> city",
        "Id": 180,
        "description": "This API is to convert username to the city they live in.",
        "summary": "This API is to convert username to the city they live in.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city the person lives in",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "City2Weather",
        "format": "City2Weather(city) -> weather",
        "Id": 181,
        "description": "This API is to get the current weather of a specific city.",
        "summary": "This API is to get the current weather of a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Weather2Advice",
        "format": "Weather2Advice(weather) -> advice",
        "Id": 182,
        "description": "This API is to provide advice based on the current weather.",
        "summary": "This API is to provide advice based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "advice",
                "description": "advice based on the current weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Card2Number",
        "format": "Card2Number(card_id) -> card_number",
        "Id": 183,
        "description": "This API is to convert card ID to card number.",
        "summary": "This API is to convert card ID to card number.",
        "input_parameters_with_datatype": [
            {
                "name": "card_id",
                "description": "the ID of the card",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "card_number",
                "description": "the number of the card",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckCardBalance",
        "format": "CheckCardBalance(card_number) -> card_balance",
        "Id": 184,
        "description": "This API allows the user to check the balance in a card.",
        "summary": "This API allows the user to check the balance in a card.",
        "input_parameters_with_datatype": [
            {
                "name": "card_number",
                "description": "the number of the card",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "card_balance",
                "description": "the balance in the card",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EnoughBalance",
        "format": "EnoughBalance(product_price, card_balance) -> order_status",
        "Id": 185,
        "description": "This API checks if there is sufficient balance in the card for the product order and returns an order status.",
        "summary": "This API checks if there is sufficient balance in the card for the product order and returns an order status.",
        "input_parameters_with_datatype": [
            {
                "name": "product_price",
                "description": "the price of the product",
                "datatype": "Float"
            },
            {
                "name": "card_balance",
                "description": "the balance in the card",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_status",
                "description": "the status of the order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestApparel",
        "format": "SuggestApparel(weather_status) -> apparel",
        "Id": 186,
        "description": "This API suggests suitable apparel based on the weather status.",
        "summary": "This API suggests suitable apparel based on the weather status.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_status",
                "description": "the weather status",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "apparel",
                "description": "the suggested apparel based on the weather status",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserFavoriteFood",
        "format": "GetUserFavoriteFood(user_name) -> favorite_food",
        "Id": 187,
        "description": "This API provides the user's favorite food.",
        "summary": "This API provides the user's favorite food.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "favorite_food",
                "description": "the favorite food of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurantRating",
        "format": "GetRestaurantRating(restaurant) -> rating",
        "Id": 188,
        "description": "This API provides the rating of a particular restaurant.",
        "summary": "This API provides the rating of a particular restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rating",
                "description": "the rating of the restaurant",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestOutfit",
        "format": "SuggestOutfit(weather) -> outfit",
        "Id": 189,
        "description": "This API suggests an outfit based on the current weather.",
        "summary": "This API suggests an outfit based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the suggested outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserBirthday",
        "format": "GetUserBirthday(user_name) -> user_birthday",
        "Id": 190,
        "description": "The API returns the birthday of a certain user.",
        "summary": "The API returns the birthday of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_birthday",
                "description": "the birthday of the user",
                "datatype": "Date"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Birthday2ZodiacSign",
        "format": "Birthday2ZodiacSign(birthday) -> zodiac_sign",
        "Id": 191,
        "description": "This API is used to convert a user's birthday to their zodiac sign.",
        "summary": "This API is used to convert a user's birthday to their zodiac sign.",
        "input_parameters_with_datatype": [
            {
                "name": "birthday",
                "description": "the birthday of the user",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "zodiac_sign",
                "description": "the zodiac sign of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ZodiacSignHoroscope",
        "format": "ZodiacSignHoroscope(zodiac_sign) -> horoscope",
        "Id": 192,
        "description": "This API returns the daily horoscope for a specific zodiac sign.",
        "summary": "This API returns the daily horoscope for a specific zodiac sign.",
        "input_parameters_with_datatype": [
            {
                "name": "zodiac_sign",
                "description": "the zodiac sign of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "horoscope",
                "description": "the daily horoscope for the zodiac sign",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserCurrentWeather",
        "format": "GetUserCurrentWeather(user_name) -> user_weather",
        "Id": 193,
        "description": "This API returns the current weather at the location of a certain user.",
        "summary": "This API returns the current weather at the location of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_weather",
                "description": "the current weather at the user's location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearestRestaurant",
        "format": "FindNearestRestaurant(geolocation, cuisine_type) -> restaurant",
        "Id": 194,
        "description": "This API finds the nearest restaurant of a specific cuisine type according to the user's geolocation.",
        "summary": "This API finds the nearest restaurant of a specific cuisine type according to the user's geolocation.",
        "input_parameters_with_datatype": [
            {
                "name": "geolocation",
                "description": "the geolocation of the user",
                "datatype": "String"
            },
            {
                "name": "cuisine_type",
                "description": "the preferred type of cuisine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the nearest restaurant that serves the preferred type of cuisine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserCuisinePreference",
        "format": "GetUserCuisinePreference(user_name) -> user_cuisine_preference",
        "Id": 195,
        "description": "This API returns a user's preferred type of cuisine.",
        "summary": "This API returns a user's preferred type of cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_cuisine_preference",
                "description": "the preferred type of cuisine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCinema",
        "format": "GetCinema(city, movie) -> cinema_name",
        "Id": 196,
        "description": "This API fetches a cinema playing a given movie in a certain city.",
        "summary": "This API fetches a cinema playing a given movie in a certain city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckTime",
        "format": "CheckTime(cinema_name, movie) -> show_time",
        "Id": 197,
        "description": "This API checks the show time of a movie in a certain cinema.",
        "summary": "This API checks the show time of a movie in a certain cinema.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            },
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "show_time",
                "description": "the show time of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTicket",
        "format": "BookTicket(cinema_name, movie, show_time) -> ticket_status",
        "Id": 198,
        "description": "This API is used to book a movie ticket.",
        "summary": "This API is used to book a movie ticket.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            },
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "show_time",
                "description": "the show time of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ticket_status",
                "description": "the status of the ticket booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckVacancy",
        "format": "CheckVacancy(hotelname, date) -> roomAvailable",
        "Id": 199,
        "description": "This API checks if there is any room available for a certain date in a certain hotel.",
        "summary": "This API checks if there is any room available for a certain date in a certain hotel.",
        "input_parameters_with_datatype": [
            {
                "name": "hotelname",
                "description": "the name of the hotel",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date to check for room availability",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "roomAvailable",
                "description": "the availability of rooms",
                "datatype": "Boolean"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UsernameToID",
        "format": "UsernameToID(user_name) -> user_ID",
        "Id": 200,
        "description": "This API is used to convert the name of the user to user ID.",
        "summary": "This API is used to convert the name of the user to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CustomernameToID",
        "format": "CustomernameToID(customer_name) -> customer_ID",
        "Id": 201,
        "description": "This API is used to convert the name of the customer to customer ID.",
        "summary": "This API is used to convert the name of the customer to customer ID.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_name",
                "description": "the name of the customer",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the ID of the customer",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductnameToID",
        "format": "ProductnameToID(product_name) -> product_ID",
        "Id": 202,
        "description": "This API is used to convert the name of the product to product ID.",
        "summary": "This API is used to convert the name of the product to product ID.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddProductToCart",
        "format": "AddProductToCart(product_ID, customer_ID, quantity) -> cart_status",
        "Id": 203,
        "description": "This API adds a certain quantity of a particular product to the customer's cart.",
        "summary": "This API adds a certain quantity of a particular product to the customer's cart.",
        "input_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "customer_ID",
                "description": "the ID of the customer",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the product to be added to the cart",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cart_status",
                "description": "the status of the cart after adding the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StorenameToID",
        "format": "StorenameToID(store_name) -> store_ID",
        "Id": 204,
        "description": "This API is to convert the store name to store ID.",
        "summary": "This API is to convert the store name to store ID.",
        "input_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_ID",
                "description": "the ID of the store",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovienameToID",
        "format": "MovienameToID(movie_name) -> movie_ID",
        "Id": 205,
        "description": "This API is to convert the movie name to movie ID.",
        "summary": "This API is to convert the movie name to movie ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RentMovie",
        "format": "RentMovie(user_ID, movie_ID, date) -> rental_status",
        "Id": 206,
        "description": "This API rents a movie for a particular user on a specified date.",
        "summary": "This API rents a movie for a particular user on a specified date.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of rental",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rental_status",
                "description": "the status of the rental",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PurchaseProduct",
        "format": "PurchaseProduct(customer_ID, product_ID, quantity) -> purchase_status",
        "Id": 207,
        "description": "This API executes a product purchase for a particular customer with a specific quantity.",
        "summary": "This API executes a product purchase for a particular customer with a specific quantity.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the ID of the customer",
                "datatype": "Integer"
            },
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the product to purchase",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_status",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CitynameToID",
        "format": "CitynameToID(city_name) -> city_ID",
        "Id": 208,
        "description": "This API is used to convert the city name to city ID.",
        "summary": "This API is used to convert the city name to city ID.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city_ID",
                "description": "the ID of the city",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelnameToID",
        "format": "HotelnameToID(hotel_name) -> hotel_ID",
        "Id": 209,
        "description": "This API is to convert the hotel name to hotel ID.",
        "summary": "This API is to convert the hotel name to hotel ID.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_ID",
                "description": "the ID of the hotel",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductIDToname",
        "format": "ProductIDToname(product_ID) -> product_name",
        "Id": 210,
        "description": "This API is used to convert the product ID to product name.",
        "summary": "This API is used to convert the product ID to product name.",
        "input_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightNumberToID",
        "format": "FlightNumberToID(flight_number) -> flight_ID",
        "Id": 211,
        "description": "This API is used to convert the flight number to flight ID.",
        "summary": "This API is used to convert the flight number to flight ID.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_number",
                "description": "the flight number",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_ID",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PassengernameToID",
        "format": "PassengernameToID(passenger_name) -> passenger_ID",
        "Id": 212,
        "description": "This API is to convert the passenger name to passenger ID.",
        "summary": "This API is to convert the passenger name to passenger ID.",
        "input_parameters_with_datatype": [
            {
                "name": "passenger_name",
                "description": "the name of the passenger",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "passenger_ID",
                "description": "the ID of the passenger",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SongnameToID",
        "format": "SongnameToID(song_name) -> song_ID",
        "Id": 213,
        "description": "This API is used to convert the song's name to song ID.",
        "summary": "This API is used to convert the song's name to song ID.",
        "input_parameters_with_datatype": [
            {
                "name": "song_name",
                "description": "the name of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "song_ID",
                "description": "the ID of the song",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlaySong",
        "format": "PlaySong(user_ID, song_ID) -> play_status",
        "Id": 214,
        "description": "This API plays a song for a particular user.",
        "summary": "This API plays a song for a particular user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "song_ID",
                "description": "the ID of the song",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "play_status",
                "description": "the status of the song playback",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ISBNToBookname",
        "format": "ISBNToBookname(ISBN) -> book_name",
        "Id": 215,
        "description": "This API is used to convert the ISBN of a book to its name.",
        "summary": "This API is used to convert the ISBN of a book to its name.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReturnBook",
        "format": "ReturnBook(user_ID, book_name) -> return_status",
        "Id": 216,
        "description": "This API returns a book on behalf of a particular user.",
        "summary": "This API returns a book on behalf of a particular user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "return_status",
                "description": "the status of the return",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SongTitleToID",
        "format": "SongTitleToID(song_title) -> song_ID",
        "Id": 217,
        "description": "This API is to convert the song title to song ID.",
        "summary": "This API is to convert the song title to song ID.",
        "input_parameters_with_datatype": [
            {
                "name": "song_title",
                "description": "the title of the song",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "song_ID",
                "description": "the ID of the song",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductToID",
        "format": "ProductToID(product_name) -> product_ID",
        "Id": 218,
        "description": "This API is used to convert the product name to product ID.",
        "summary": "This API is used to convert the product name to product ID.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cartname2ID",
        "format": "Cartname2ID(cart_name) -> cart_ID",
        "Id": 219,
        "description": "This API is to convert a cart's name to cart ID.",
        "summary": "This API is to convert a cart's name to cart ID.",
        "input_parameters_with_datatype": [
            {
                "name": "cart_name",
                "description": "the name of the cart",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cart_ID",
                "description": "the ID of the cart",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Moviename2ID",
        "format": "Moviename2ID(movie_name) -> movie_ID",
        "Id": 220,
        "description": "This API is to convert a movie's name to movie ID.",
        "summary": "This API is to convert a movie's name to movie ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddMovieToWatchlist",
        "format": "AddMovieToWatchlist(watchlist_ID, movie_ID) -> movie_status",
        "Id": 221,
        "description": "This API is to add a movie to a watchlist.",
        "summary": "This API is to add a movie to a watchlist.",
        "input_parameters_with_datatype": [
            {
                "name": "watchlist_ID",
                "description": "the ID of the watchlist",
                "datatype": "Integer"
            },
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_status",
                "description": "the status of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Watchlistname2ID",
        "format": "Watchlistname2ID(watchlist_name) -> watchlist_ID",
        "Id": 222,
        "description": "This API is to convert a watchlist's name to watchlist ID.",
        "summary": "This API is to convert a watchlist's name to watchlist ID.",
        "input_parameters_with_datatype": [
            {
                "name": "watchlist_name",
                "description": "the name of the watchlist",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "watchlist_ID",
                "description": "the ID of the watchlist",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreIDToAddress",
        "format": "StoreIDToAddress(storeId) -> store_address",
        "Id": 223,
        "description": "This API is used to convert a store id to its address.",
        "summary": "This API is used to convert a store id to its address.",
        "input_parameters_with_datatype": [
            {
                "name": "storeId",
                "description": "the id of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_address",
                "description": "the address of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckProductAvailability",
        "format": "CheckProductAvailability(store_address, product_name) -> product_availability",
        "Id": 224,
        "description": "This API checks the availability of a product in a specific store.",
        "summary": "This API checks the availability of a product in a specific store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_address",
                "description": "the address of the store",
                "datatype": "String"
            },
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_availability",
                "description": "the availability of the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ISBN2Book",
        "format": "ISBN2Book(isbn) -> book_title",
        "Id": 225,
        "description": "This API is used to convert an ISBN to a book title.",
        "summary": "This API is used to convert an ISBN to a book title.",
        "input_parameters_with_datatype": [
            {
                "name": "isbn",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Book2Author",
        "format": "Book2Author(book_title) -> author_name",
        "Id": 226,
        "description": "This API is used to convert a book title to an author name.",
        "summary": "This API is used to convert a book title to an author name.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_name",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckAuthorAvailability",
        "format": "CheckAuthorAvailability(user_ID, author_name) -> availability_status",
        "Id": 227,
        "description": "This API checks if the author is available for a book discussion.",
        "summary": "This API checks if the author is available for a book discussion.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "String"
            },
            {
                "name": "author_name",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability_status",
                "description": "the availability status of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ScheduleDiscussion",
        "format": "ScheduleDiscussion(user_ID, author_name, date_time) -> schedule_status",
        "Id": 228,
        "description": "This API is used to schedule a book discussion with the author.",
        "summary": "This API is used to schedule a book discussion with the author.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "String"
            },
            {
                "name": "author_name",
                "description": "the name of the author",
                "datatype": "String"
            },
            {
                "name": "date_time",
                "description": "the date and time of the book discussion",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "schedule_status",
                "description": "the schedule status of the book discussion",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LocateCity",
        "format": "LocateCity(city) -> Coordinates",
        "Id": 229,
        "description": "This API returns the coordinates of a given city.",
        "summary": "This API returns the coordinates of a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Coordinates",
                "description": "the coordinates of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetClothingAdvice",
        "format": "GetClothingAdvice(weather) -> clothing_advice",
        "Id": 230,
        "description": "This API gives clothing advice based on the weather.",
        "summary": "This API gives clothing advice based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_advice",
                "description": "the clothing advice",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendDish",
        "format": "RecommendDish(menu) -> dish",
        "Id": 231,
        "description": "This API recommends a dish from a given menu.",
        "summary": "This API recommends a dish from a given menu.",
        "input_parameters_with_datatype": [
            {
                "name": "menu",
                "description": "the menu of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dish",
                "description": "the recommended dish",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Cityname2WeatherCode",
        "format": "Cityname2WeatherCode(city_name) -> weather_code",
        "Id": 232,
        "description": "This API converts a city name to its weather code.",
        "summary": "This API converts a city name to its weather code.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_code",
                "description": "the weather code of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherCode2Forecast",
        "format": "WeatherCode2Forecast(weather_code, date) -> weather_forecast",
        "Id": 233,
        "description": "This API provides the weather forecast for a specific date based on the weather code.",
        "summary": "This API provides the weather forecast for a specific date based on the weather code.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_code",
                "description": "the weather code of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date for the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_forecast",
                "description": "the weather forecast for the specific date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StringToDatetime",
        "format": "StringToDatetime(date_string) -> date",
        "Id": 234,
        "description": "This API converts a string to a datetime object.",
        "summary": "This API converts a string to a datetime object.",
        "input_parameters_with_datatype": [
            {
                "name": "date_string",
                "description": "the string representation of the date",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "date",
                "description": "the datetime object",
                "datatype": "Datetime"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Venuename2ID",
        "format": "Venuename2ID(venue_name) -> venue_ID",
        "Id": 235,
        "description": "This API converts a venue name to its ID.",
        "summary": "This API converts a venue name to its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "venue_name",
                "description": "the name of the venue",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "venue_ID",
                "description": "the ID of the venue",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookEventTicket",
        "format": "BookEventTicket(event_ID, venue_ID, date) -> Booking status",
        "Id": 236,
        "description": "This API books a ticket for a specified event on a specified date at a specified venue.",
        "summary": "This API books a ticket for a specified event on a specified date at a specified venue.",
        "input_parameters_with_datatype": [
            {
                "name": "event_ID",
                "description": "the ID of the event",
                "datatype": "Integer"
            },
            {
                "name": "venue_ID",
                "description": "the ID of the venue",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the event",
                "datatype": "Datetime"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Booking status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Coursename2ID",
        "format": "Coursename2ID(course_name) -> course_ID",
        "Id": 237,
        "description": "This API converts a course name to its ID.",
        "summary": "This API converts a course name to its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "course_name",
                "description": "the name of the course",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "course_ID",
                "description": "the ID of the course",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Instructorname2ID",
        "format": "Instructorname2ID(instructor_name) -> instructor_ID",
        "Id": 238,
        "description": "This API converts an instructor's name to their ID.",
        "summary": "This API converts an instructor's name to their ID.",
        "input_parameters_with_datatype": [
            {
                "name": "instructor_name",
                "description": "the name of the instructor",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "instructor_ID",
                "description": "the ID of the instructor",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Studentname2ID",
        "format": "Studentname2ID(student_name) -> student_ID",
        "Id": 239,
        "description": "This API converts a student's name to their ID.",
        "summary": "This API converts a student's name to their ID.",
        "input_parameters_with_datatype": [
            {
                "name": "student_name",
                "description": "the name of the student",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "student_ID",
                "description": "the ID of the student",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindIndoorActivities",
        "format": "FindIndoorActivities(city) -> activity_name",
        "Id": 240,
        "description": "This API suggests popular indoor activities in a given city.",
        "summary": "This API suggests popular indoor activities in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity_name",
                "description": "the name of the suggested indoor activity",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookActivity",
        "format": "BookActivity(activity_name, city) -> booking_status",
        "Id": 241,
        "description": "This API allows the user to book a particular indoor activity in a specific city.",
        "summary": "This API allows the user to book a particular indoor activity in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "activity_name",
                "description": "the name of the indoor activity",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckFlightStatus",
        "format": "CheckFlightStatus(flight_number) -> flight_status",
        "Id": 242,
        "description": "This API allows the user to check the current status of a certain flight.",
        "summary": "This API allows the user to check the current status of a certain flight.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_number",
                "description": "the number of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_status",
                "description": "the status of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearbyHotels",
        "format": "FindNearbyHotels(city) -> hotel_name",
        "Id": 243,
        "description": "This API provides the names of nearby hotels in a given city.",
        "summary": "This API provides the names of nearby hotels in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocationCoordinates",
        "format": "GetLocationCoordinates(city) -> (latitude, longitude)",
        "Id": 244,
        "description": "This API returns the geographical coordinates (latitude and longitude) of a specified city.",
        "summary": "This API returns the geographical coordinates (latitude and longitude) of a specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "latitude",
                "description": "the latitude coordinate of the city",
                "datatype": "Float"
            },
            {
                "name": "longitude",
                "description": "the longitude coordinate of the city",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PredictWeather",
        "format": "PredictWeather(coordinates, date) -> weather conditions",
        "Id": 245,
        "description": "This API provides the weather forecast for a location based on geographic coordinates on a specific date.",
        "summary": "This API provides the weather forecast for a location based on geographic coordinates on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "coordinates",
                "description": "the geographic coordinates (latitude and longitude) of the location",
                "datatype": "Tuple (Float, Float)"
            },
            {
                "name": "date",
                "description": "the specific date for the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather conditions",
                "description": "the weather conditions for the specified location and date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestActivity",
        "format": "SuggestActivity(weather) -> activity",
        "Id": 246,
        "description": "This API suggests an activity based on the weather conditions.",
        "summary": "This API suggests an activity based on the weather conditions.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather conditions",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the suggested activity based on the weather conditions",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchBook",
        "format": "SearchBook(title) -> book_id",
        "Id": 247,
        "description": "This API returns the ID of a book based on a specified title.",
        "summary": "This API returns the ID of a book based on a specified title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookReview",
        "format": "GetBookReview(book_id) -> review",
        "Id": 248,
        "description": "This API gives a review of a book given its ID.",
        "summary": "This API gives a review of a book given its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the review of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShareReview",
        "format": "ShareReview(review, social_media_platform) -> share_status",
        "Id": 249,
        "description": "This API allows the user to share a review on a specified social media platform.",
        "summary": "This API allows the user to share a review on a specified social media platform.",
        "input_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the review of the book",
                "datatype": "String"
            },
            {
                "name": "social_media_platform",
                "description": "the social media platform to share the review",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "share_status",
                "description": "the status of the sharing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetShowtimes",
        "format": "GetShowtimes(movie_title, city) -> showtime",
        "Id": 250,
        "description": "This API gives the showtime for a given movie in a specific city.",
        "summary": "This API gives the showtime for a given movie in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_title",
                "description": "the title of the movie",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the city where the showtime is requested",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the showtime of the movie in the specified city",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveTickets",
        "format": "ReserveTickets(showtime, number_of_tickets) -> reservation_status",
        "Id": 251,
        "description": "This API allows the user to reserve a certain number of tickets for a specific showtime.",
        "summary": "This API allows the user to reserve a certain number of tickets for a specific showtime.",
        "input_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the showtime of the movie",
                "datatype": "Time"
            },
            {
                "name": "number_of_tickets",
                "description": "the number of tickets to be reserved",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the status of the ticket reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LocateLibrary",
        "format": "LocateLibrary(city) -> library_name",
        "Id": 252,
        "description": "This API provides the name of a library in the specified city.",
        "summary": "This API provides the name of a library in the specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city name",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "library_name",
                "description": "the name of the library",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantLocator",
        "format": "RestaurantLocator(city, cuisine) -> restaurant",
        "Id": 253,
        "description": "This API is to find a specific restaurant by city and cuisine.",
        "summary": "This API is to find a specific restaurant by city and cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the restaurant is located",
                "datatype": "String"
            },
            {
                "name": "cuisine",
                "description": "the type of cuisine the restaurant serves",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the details of the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DishFinder",
        "format": "DishFinder(restaurant, dish) -> dish_details",
        "Id": 254,
        "description": "This API is to get information about a specific dish from a particular restaurant.",
        "summary": "This API is to get information about a specific dish from a particular restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the details of the restaurant",
                "datatype": "Object"
            },
            {
                "name": "dish",
                "description": "the name of the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dish_details",
                "description": "the details of the dish",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodReview",
        "format": "FoodReview(dish_details) -> review",
        "Id": 255,
        "description": "This API is to get reviews of a particular dish.",
        "summary": "This API is to get reviews of a particular dish.",
        "input_parameters_with_datatype": [
            {
                "name": "dish_details",
                "description": "the details of the dish",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the reviews of the dish",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodFinder",
        "format": "FoodFinder(cuisine, location) -> restaurant_name",
        "Id": 256,
        "description": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
        "summary": "This API identifies a specific restaurant serving a certain cuisine in a particular location.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the type of cuisine",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MenuDetails",
        "format": "MenuDetails(restaurant_name) -> menu",
        "Id": 257,
        "description": "This API provides the menu of a specific restaurant.",
        "summary": "This API provides the menu of a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "menu",
                "description": "the menu of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodIngredients",
        "format": "FoodIngredients(dish_name, restaurant_name) -> ingredients",
        "Id": 258,
        "description": "This API gives the ingredients of a specific dish from a certain restaurant.",
        "summary": "This API gives the ingredients of a specific dish from a certain restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "dish_name",
                "description": "the name of the dish",
                "datatype": "String"
            },
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ingredients",
                "description": "the ingredients of the dish",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearestBookStore",
        "format": "FindNearestBookStore(city) -> store_name",
        "Id": 259,
        "description": "This API is to find the nearest bookstore based on the user's location.",
        "summary": "This API is to find the nearest bookstore based on the user's location.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the user is located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the nearest bookstore",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalCinema",
        "format": "GetLocalCinema(city) -> cinema_name",
        "Id": 260,
        "description": "This API is to find the local cinema based on the user's location.",
        "summary": "This API is to find the local cinema based on the user's location.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentMovies",
        "format": "GetCurrentMovies(cinema_name) -> movie_list",
        "Id": 261,
        "description": "This API is to get the list of movies currently being shown in a given cinema.",
        "summary": "This API is to get the list of movies currently being shown in a given cinema.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_list",
                "description": "a list of movies currently being shown",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieReviews",
        "format": "GetMovieReviews(movie_name) -> reviews",
        "Id": 262,
        "description": "This API fetches the reviews of a specific movie.",
        "summary": "This API fetches the reviews of a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews of the movie",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurantMenu",
        "format": "GetRestaurantMenu(restaurant_id) -> menu_id",
        "Id": 263,
        "description": "This API is to get the menu from a specific restaurant.",
        "summary": "This API is to get the menu from a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_id",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "menu_id",
                "description": "the ID of the menu",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieDetails",
        "format": "GetMovieDetails(movie_name) -> movie_info",
        "Id": 264,
        "description": "This API is to get the details of a specific movie.",
        "summary": "This API is to get the details of a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_info",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetActorDetails",
        "format": "GetActorDetails(movie_info) -> actor_info",
        "Id": 265,
        "description": "This API is to get the details of actors in a specific movie.",
        "summary": "This API is to get the details of actors in a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_info",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "actor_info",
                "description": "the details of the actors",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieRecommendation",
        "format": "GetMovieRecommendation(actor_info) -> movie_recommendation",
        "Id": 266,
        "description": "This API is to get movie recommendations based on the actors' performances.",
        "summary": "This API is to get movie recommendations based on the actors' performances.",
        "input_parameters_with_datatype": [
            {
                "name": "actor_info",
                "description": "the details of the actors",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_recommendation",
                "description": "the recommended movies",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindOpenHours",
        "format": "FindOpenHours(restaurant_info) -> open_hours",
        "Id": 267,
        "description": "This API is used to find the opening hours of the selected restaurant.",
        "summary": "This API is used to find the opening hours of the selected restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_info",
                "description": "information about the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "open_hours",
                "description": "the opening hours of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MakeReservation",
        "format": "MakeReservation(open_hours, number_of_people, date_time) -> reservation_info",
        "Id": 268,
        "description": "This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.",
        "summary": "This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "open_hours",
                "description": "the opening hours of the restaurant",
                "datatype": "String"
            },
            {
                "name": "number_of_people",
                "description": "the number of people for the reservation",
                "datatype": "Integer"
            },
            {
                "name": "date_time",
                "description": "the date and time for the reservation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_info",
                "description": "information about the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckFlights",
        "format": "CheckFlights(source, destination) -> flight",
        "Id": 269,
        "description": "This API checks available flights from source to destination.",
        "summary": "This API checks available flights from source to destination.",
        "input_parameters_with_datatype": [
            {
                "name": "source",
                "description": "the source location",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the available flight details",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanItinerary",
        "format": "PlanItinerary(location, interests) -> itinerary",
        "Id": 270,
        "description": "This API plans an itinerary based on the location and the user's interests.",
        "summary": "This API plans an itinerary based on the location and the user's interests.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location for the itinerary",
                "datatype": "String"
            },
            {
                "name": "interests",
                "description": "the user's interests",
                "datatype": "String"
            },
            {
                "name": "flight",
                "description": "the flight details",
                "datatype": "Object"
            },
            {
                "name": "hotel",
                "description": "the hotel details",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "itinerary",
                "description": "the planned itinerary",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindAddress",
        "format": "FindAddress(contact) -> address",
        "Id": 271,
        "description": "This API finds the address of a specific contact.",
        "summary": "This API finds the address of a specific contact.",
        "input_parameters_with_datatype": [
            {
                "name": "contact",
                "description": "the name of the contact",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "address",
                "description": "the address of the contact",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckTraffic",
        "format": "CheckTraffic(destination) -> traffic_condition",
        "Id": 272,
        "description": "This API checks the current traffic condition to a specific destination.",
        "summary": "This API checks the current traffic condition to a specific destination.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination to check traffic condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "traffic_condition",
                "description": "the current traffic condition to the destination",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalEvents",
        "format": "GetLocalEvents(city, date) -> events",
        "Id": 273,
        "description": "This API provides a list of local events happening in a specific city on a specific date.",
        "summary": "This API provides a list of local events happening in a specific city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for the local events",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "events",
                "description": "a list of local events happening in the specified city and date",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanOutdoorActivities",
        "format": "PlanOutdoorActivities(weather, events) -> activities",
        "Id": 274,
        "description": "This API plans outdoor activities based on the weather forecast and local events.",
        "summary": "This API plans outdoor activities based on the weather forecast and local events.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast for a specific city and date",
                "datatype": "String"
            },
            {
                "name": "events",
                "description": "a list of local events happening in a specific city and date",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activities",
                "description": "a list of planned outdoor activities based on the weather forecast and local events",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindDoctor",
        "format": "FindDoctor(specialty, location) -> doctor",
        "Id": 275,
        "description": "This API is to find a doctor based on specialty and location.",
        "summary": "This API is to find a doctor based on specialty and location.",
        "input_parameters_with_datatype": [
            {
                "name": "specialty",
                "description": "the specialty of the doctor",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location where the doctor is located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "doctor",
                "description": "the information of the doctor",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAppointment",
        "format": "GetAppointment(doctor_id, date) -> appointment",
        "Id": 276,
        "description": "This API is to get an appointment with a specific doctor on a certain date.",
        "summary": "This API is to get an appointment with a specific doctor on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "doctor_id",
                "description": "the ID of the doctor",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the appointment",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "appointment",
                "description": "the information of the appointment",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConfirmAppointment",
        "format": "ConfirmAppointment(appointment_id) -> confirmation",
        "Id": 277,
        "description": "This API is to confirm a specific appointment.",
        "summary": "This API is to confirm a specific appointment.",
        "input_parameters_with_datatype": [
            {
                "name": "appointment_id",
                "description": "the ID of the appointment",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "confirmation",
                "description": "the confirmation status of the appointment",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookReservation",
        "format": "BookReservation(restaurantname, partySize, time) -> reservationStatus",
        "Id": 278,
        "description": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
        "summary": "This API is to book a reservation at a specific restaurant for a specific party size and time.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantname",
                "description": "the name of the specific restaurant",
                "datatype": "String"
            },
            {
                "name": "partySize",
                "description": "the size of the party",
                "datatype": "Integer"
            },
            {
                "name": "time",
                "description": "the specific time for the reservation",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservationStatus",
                "description": "the status of the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanDay",
        "format": "PlanDay(weatherForecast, clothingRecommendation) -> dayPlan",
        "Id": 279,
        "description": "This API is to plan the day's activities and outfits based on the weather and clothing recommendations.",
        "summary": "This API is to plan the day's activities and outfits based on the weather and clothing recommendations.",
        "input_parameters_with_datatype": [
            {
                "name": "weatherForecast",
                "description": "the weather forecast for planning the day",
                "datatype": "String"
            },
            {
                "name": "clothingRecommendation",
                "description": "the clothing recommendations for planning the day",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dayPlan",
                "description": "the plan for the day's activities and outfits",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindAccommodation",
        "format": "FindAccommodation(destination, budget) -> accommodation",
        "Id": 280,
        "description": "This API is to find accommodation in the destination within the specified budget.",
        "summary": "This API is to find accommodation in the destination within the specified budget.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            },
            {
                "name": "budget",
                "description": "the budget for accommodation",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "accommodation",
                "description": "the found accommodation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateTravelPlan",
        "format": "CreateTravelPlan(flight, accommodation) -> travelPlan",
        "Id": 281,
        "description": "This API is to create a travel plan including flight and accommodation.",
        "summary": "This API is to create a travel plan including flight and accommodation.",
        "input_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the booked flight",
                "datatype": "String"
            },
            {
                "name": "accommodation",
                "description": "the found accommodation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "travelPlan",
                "description": "the created travel plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentTemperature",
        "format": "GetCurrentTemperature(city) -> temperature",
        "Id": 282,
        "description": "This API is to get the current temperature for a specific city.",
        "summary": "This API is to get the current temperature for a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "temperature",
                "description": "the current temperature of the city",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DetermineTemperatureType",
        "format": "DetermineTemperatureType(temperature) -> temperatureType",
        "Id": 283,
        "description": "This API is to determine the type of temperature (Hot, Mild, Cold) based on the current temperature.",
        "summary": "This API is to determine the type of temperature (Hot, Mild, Cold) based on the current temperature.",
        "input_parameters_with_datatype": [
            {
                "name": "temperature",
                "description": "the current temperature",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "temperatureType",
                "description": "the type of temperature (Hot, Mild, Cold)",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestClothingOptions",
        "format": "SuggestClothingOptions(temperatureType, gender) -> clothingOptions",
        "Id": 284,
        "description": "This API is to suggest clothing options based on the temperature type and gender.",
        "summary": "This API is to suggest clothing options based on the temperature type and gender.",
        "input_parameters_with_datatype": [
            {
                "name": "temperatureType",
                "description": "the type of temperature (Hot, Mild, Cold)",
                "datatype": "String"
            },
            {
                "name": "gender",
                "description": "the gender of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothingOptions",
                "description": "the suggested clothing options",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetHealthInformation",
        "format": "GetHealthInformation(age, gender) -> HealthInformation",
        "Id": 285,
        "description": "This API provides general health information based on age and gender.",
        "summary": "This API provides general health information based on age and gender.",
        "input_parameters_with_datatype": [
            {
                "name": "age",
                "description": "the age of the person",
                "datatype": "Integer"
            },
            {
                "name": "gender",
                "description": "the gender of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "HealthInformation",
                "description": "the general health information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDietPlan",
        "format": "GetDietPlan(HealthInformation) -> DietPlan",
        "Id": 286,
        "description": "This API generates a diet plan based on the provided health information.",
        "summary": "This API generates a diet plan based on the provided health information.",
        "input_parameters_with_datatype": [
            {
                "name": "HealthInformation",
                "description": "the general health information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "DietPlan",
                "description": "the generated diet plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetExerciseRoutine",
        "format": "GetExerciseRoutine(HealthInformation) -> ExerciseRoutine",
        "Id": 287,
        "description": "This API recommends an exercise routine based on the health information.",
        "summary": "This API recommends an exercise routine based on the health information.",
        "input_parameters_with_datatype": [
            {
                "name": "HealthInformation",
                "description": "the general health information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ExerciseRoutine",
                "description": "the recommended exercise routine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateWellnessPlan",
        "format": "CreateWellnessPlan(DietPlan, ExerciseRoutine) -> WellnessPlan",
        "Id": 288,
        "description": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
        "summary": "This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.",
        "input_parameters_with_datatype": [
            {
                "name": "DietPlan",
                "description": "the generated diet plan",
                "datatype": "String"
            },
            {
                "name": "ExerciseRoutine",
                "description": "the recommended exercise routine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "WellnessPlan",
                "description": "the comprehensive wellness plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchMovieDetails",
        "format": "FetchMovieDetails(title) -> MovieDetails",
        "Id": 289,
        "description": "This API retrieves the details of a movie by its title.",
        "summary": "This API retrieves the details of a movie by its title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "MovieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDirectorFilmography",
        "format": "GetDirectorFilmography(Directorname) -> DirectorFilmography",
        "Id": 290,
        "description": "This API retrieves the filmography of a director by their name.",
        "summary": "This API retrieves the filmography of a director by their name.",
        "input_parameters_with_datatype": [
            {
                "name": "Directorname",
                "description": "the name of the director",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "DirectorFilmography",
                "description": "the filmography of the director",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestSimilarMovies",
        "format": "SuggestSimilarMovies(MovieDetails) -> SimilarMovies",
        "Id": 291,
        "description": "This API suggests similar movies based on the given movie details.",
        "summary": "This API suggests similar movies based on the given movie details.",
        "input_parameters_with_datatype": [
            {
                "name": "MovieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "SimilarMovies",
                "description": "the list of similar movies",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuildMoviePlaylist",
        "format": "BuildMoviePlaylist(MovieDetails, SimilarMovies, DirectorFilmography) -> MoviePlaylist",
        "Id": 292,
        "description": "This API builds a movie playlist including the main movie, similar movies and other movies from the same director.",
        "summary": "This API builds a movie playlist including the main movie, similar movies and other movies from the same director.",
        "input_parameters_with_datatype": [
            {
                "name": "MovieDetails",
                "description": "the details of the main movie",
                "datatype": "Object"
            },
            {
                "name": "SimilarMovies",
                "description": "the list of similar movies",
                "datatype": "Object"
            },
            {
                "name": "DirectorFilmography",
                "description": "the filmography of the director",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "MoviePlaylist",
                "description": "the movie playlist",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookGenre",
        "format": "GetBookGenre(bookTitle) -> BookGenre",
        "Id": 293,
        "description": "This API provides the genre of a specified book.",
        "summary": "This API provides the genre of a specified book.",
        "input_parameters_with_datatype": [
            {
                "name": "bookTitle",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "BookGenre",
                "description": "the genre of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAuthorDetails",
        "format": "GetAuthorDetails(bookTitle) -> AuthorDetails",
        "Id": 294,
        "description": "This API provides the details of the author of the specified book.",
        "summary": "This API provides the details of the author of the specified book.",
        "input_parameters_with_datatype": [
            {
                "name": "bookTitle",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "AuthorDetails",
                "description": "the details of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetSimilarBooks",
        "format": "GetSimilarBooks(BookGenre, AuthorDetails) -> SimilarBooksList",
        "Id": 295,
        "description": "This API provides a list of similar books based on the input of book genre and author details.",
        "summary": "This API provides a list of similar books based on the input of book genre and author details.",
        "input_parameters_with_datatype": [
            {
                "name": "BookGenre",
                "description": "the genre of the book",
                "datatype": "String"
            },
            {
                "name": "AuthorDetails",
                "description": "the details of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "SimilarBooksList",
                "description": "a list of similar books",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckInventory",
        "format": "CheckInventory(productID) -> InventoryStatus",
        "Id": 296,
        "description": "This API checks the inventory status of a specific product.",
        "summary": "This API checks the inventory status of a specific product.",
        "input_parameters_with_datatype": [
            {
                "name": "productID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "InventoryStatus",
                "description": "the inventory status of the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EstimateDeliveryTime",
        "format": "EstimateDeliveryTime(productID, location) -> DeliveryTime",
        "Id": 297,
        "description": "This API estimates the delivery time for a product to a specific location.",
        "summary": "This API estimates the delivery time for a product to a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "productID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "location",
                "description": "the location for delivery",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "DeliveryTime",
                "description": "the estimated delivery time for the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateShippingCost",
        "format": "CalculateShippingCost(productID, location) -> ShippingCost",
        "Id": 298,
        "description": "This API calculates the shipping cost for a product to a specific location.",
        "summary": "This API calculates the shipping cost for a product to a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "productID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "location",
                "description": "the location for delivery",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ShippingCost",
                "description": "the calculated shipping cost for the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindFlight",
        "format": "FindFlight(startPoint, endPoint) -> flight",
        "Id": 299,
        "description": "This API is to find the available flights from one point to another.",
        "summary": "This API is to find the available flights from one point to another.",
        "input_parameters_with_datatype": [
            {
                "name": "startPoint",
                "description": "the starting point of the flight",
                "datatype": "String"
            },
            {
                "name": "endPoint",
                "description": "the destination of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the available flight options",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFlightPrice",
        "format": "GetFlightPrice(flight) -> price",
        "Id": 300,
        "description": "This API is to get the price of a specific flight.",
        "summary": "This API is to get the price of a specific flight.",
        "input_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the flight option",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the flight",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckLuggageAllowance",
        "format": "CheckLuggageAllowance(flight) -> luggage",
        "Id": 301,
        "description": "This API is to check the luggage allowance of a specific flight.",
        "summary": "This API is to check the luggage allowance of a specific flight.",
        "input_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the flight option",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "luggage",
                "description": "the luggage allowance of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLuggageFee",
        "format": "GetLuggageFee(luggage, weight) -> fee",
        "Id": 302,
        "description": "This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.",
        "summary": "This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.",
        "input_parameters_with_datatype": [
            {
                "name": "luggage",
                "description": "the luggage allowance of the flight",
                "datatype": "String"
            },
            {
                "name": "weight",
                "description": "the weight of the luggage",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fee",
                "description": "the luggage fee",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetHotelRoomRate",
        "format": "GetHotelRoomRate(city) -> roomRate",
        "Id": 303,
        "description": "This API is to get the rate of a hotel room in a specific city.",
        "summary": "This API is to get the rate of a hotel room in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "roomRate",
                "description": "the rate of the hotel room",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMealCost",
        "format": "GetMealCost(city) -> mealCost",
        "Id": 304,
        "description": "This API is to get the cost of meals in a specific city.",
        "summary": "This API is to get the cost of meals in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "mealCost",
                "description": "the cost of meals",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetSightSeeingCost",
        "format": "GetSightSeeingCost(city) -> sightSeeingCost",
        "Id": 305,
        "description": "This API is to get the cost for sightseeing in a specific city.",
        "summary": "This API is to get the cost for sightseeing in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "sightSeeingCost",
                "description": "the cost for sightseeing",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateVacationCost",
        "format": "CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",
        "Id": 306,
        "description": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
        "summary": "This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.",
        "input_parameters_with_datatype": [
            {
                "name": "roomRate",
                "description": "the rate of the hotel room",
                "datatype": "Float"
            },
            {
                "name": "mealCost",
                "description": "the cost of meals",
                "datatype": "Float"
            },
            {
                "name": "sightSeeingCost",
                "description": "the cost for sightseeing",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "totalCost",
                "description": "the total cost of the vacation",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetSuitableClothing",
        "format": "GetSuitableClothing(weatherForecast) -> clothing",
        "Id": 307,
        "description": "This API is to recommend suitable clothing based on the weather forecast.",
        "summary": "This API is to recommend suitable clothing based on the weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "weatherForecast",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing",
                "description": "the recommended clothing based on the weather forecast",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPackingList",
        "format": "GetPackingList(destination, clothing, days) -> packingList",
        "Id": 308,
        "description": "This API is to generate a packing list for a trip to a certain destination, based on the clothing needed and the number of days to stay.",
        "summary": "This API is to generate a packing list for a trip to a certain destination, based on the clothing needed and the number of days to stay.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination of the trip",
                "datatype": "String"
            },
            {
                "name": "clothing",
                "description": "the recommended clothing",
                "datatype": "String"
            },
            {
                "name": "days",
                "description": "the number of days to stay",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "packingList",
                "description": "the generated packing list",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindOutdoorActivities",
        "format": "FindOutdoorActivities(city, weatherForecast) -> activities",
        "Id": 309,
        "description": "This API is to find suitable outdoor activities based on the city and weather forecast.",
        "summary": "This API is to find suitable outdoor activities based on the city and weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "weatherForecast",
                "description": "the weather forecast of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activities",
                "description": "the suitable outdoor activities based on the city and weather forecast",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRestaurants",
        "format": "FindRestaurants(city, cuisineType) -> restaurants",
        "Id": 310,
        "description": "This API is to find restaurants of a specific cuisine type in a specific city.",
        "summary": "This API is to find restaurants of a specific cuisine type in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "cuisineType",
                "description": "the specific cuisine type",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurants",
                "description": "the restaurants of the specific cuisine type in the specific city",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanDayOut",
        "format": "PlanDayOut(city, activities, restaurants) -> dayPlan",
        "Id": 311,
        "description": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
        "summary": "This API is to plan a day out including outdoor activities and restaurants in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "activities",
                "description": "the suitable outdoor activities",
                "datatype": "List"
            },
            {
                "name": "restaurants",
                "description": "the restaurants",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dayPlan",
                "description": "the plan for a day out including outdoor activities and restaurants",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPopulation",
        "format": "GetPopulation(location) -> population",
        "Id": 312,
        "description": "This API is to get the population of a specific location.",
        "summary": "This API is to get the population of a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the name of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "population",
                "description": "the population of the location",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetActiveCases",
        "format": "GetActiveCases(location) -> activeCases",
        "Id": 313,
        "description": "This API is to get the number of active COVID-19 cases in a specific location.",
        "summary": "This API is to get the number of active COVID-19 cases in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the name of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activeCases",
                "description": "the number of active COVID-19 cases",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateInfectionRate",
        "format": "CalculateInfectionRate(population, activeCases) -> infectionRate",
        "Id": 314,
        "description": "This API is to calculate the infection rate based on the population and the number of active COVID-19 cases.",
        "summary": "This API is to calculate the infection rate based on the population and the number of active COVID-19 cases.",
        "input_parameters_with_datatype": [
            {
                "name": "population",
                "description": "the population of the location",
                "datatype": "Integer"
            },
            {
                "name": "activeCases",
                "description": "the number of active COVID-19 cases",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "infectionRate",
                "description": "the infection rate",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalWeather",
        "format": "GetLocalWeather(city) -> weather",
        "Id": 315,
        "description": "This API is to get the current weather conditions of a specific city.",
        "summary": "This API is to get the current weather conditions of a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather conditions",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRecommendedClothing",
        "format": "GetRecommendedClothing(weather) -> clothing",
        "Id": 316,
        "description": "This API recommends suitable clothing based on the current weather.",
        "summary": "This API recommends suitable clothing based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather conditions",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing",
                "description": "the recommended clothing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDestinationTravelAdvice",
        "format": "GetDestinationTravelAdvice(city, clothing) -> travelAdvice",
        "Id": 317,
        "description": "This API provides travel advice for a specific city depending on the suitable clothing.",
        "summary": "This API provides travel advice for a specific city depending on the suitable clothing.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "clothing",
                "description": "the recommended clothing",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "travelAdvice",
                "description": "the travel advice for the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetStockPrice",
        "format": "GetStockPrice(stockId) -> price",
        "Id": 318,
        "description": "This API is to get the current price of a specific stock.",
        "summary": "This API is to get the current price of a specific stock.",
        "input_parameters_with_datatype": [
            {
                "name": "stockId",
                "description": "the ID of the stock",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the current price of the stock",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PredictFutureStockPrice",
        "format": "PredictFutureStockPrice(stockId, currentPrice) -> futurePrice",
        "Id": 319,
        "description": "This API predicts the future price of a stock based on its current price.",
        "summary": "This API predicts the future price of a stock based on its current price.",
        "input_parameters_with_datatype": [
            {
                "name": "stockId",
                "description": "the ID of the stock",
                "datatype": "String"
            },
            {
                "name": "currentPrice",
                "description": "the current price of the stock",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "futurePrice",
                "description": "the predicted future price of the stock",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestStockAction",
        "format": "SuggestStockAction(stockId, currentPrice, futurePrice) -> action",
        "Id": 320,
        "description": "This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.",
        "summary": "This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.",
        "input_parameters_with_datatype": [
            {
                "name": "stockId",
                "description": "the ID of the stock",
                "datatype": "String"
            },
            {
                "name": "currentPrice",
                "description": "the current price of the stock",
                "datatype": "Float"
            },
            {
                "name": "futurePrice",
                "description": "the predicted future price of the stock",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "action",
                "description": "the suggested action for the stock (buy, sell, or hold)",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieByname",
        "format": "GetMovieByname(moviename) -> movieDetails",
        "Id": 321,
        "description": "This API is to get the details of a movie by its name.",
        "summary": "This API is to get the details of a movie by its name.",
        "input_parameters_with_datatype": [
            {
                "name": "moviename",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearestCinema",
        "format": "FindNearestCinema(movieDetails) -> cinemaLocation",
        "Id": 322,
        "description": "This API is to find the nearest cinema that is currently showing the movie.",
        "summary": "This API is to find the nearest cinema that is currently showing the movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cinemaLocation",
                "description": "the location of the nearest cinema",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindTrendingFashion",
        "format": "FindTrendingFashion(city, season) -> fashion",
        "Id": 323,
        "description": "This API is to find the trending fashion in a particular season for a specific city.",
        "summary": "This API is to find the trending fashion in a particular season for a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "season",
                "description": "the current season",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fashion",
                "description": "the trending fashion",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GenerateOutfit",
        "format": "GenerateOutfit(clothing, fashion) -> outfit",
        "Id": 324,
        "description": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
        "summary": "This API is to generate a stylish outfit based on the recommended clothing and trending fashion.",
        "input_parameters_with_datatype": [
            {
                "name": "clothing",
                "description": "the recommended clothing",
                "datatype": "String"
            },
            {
                "name": "fashion",
                "description": "the trending fashion",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the generated outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocationData",
        "format": "GetLocationData(Username) -> Location",
        "Id": 325,
        "description": "This API retrieves location of a specific user.",
        "summary": "This API retrieves location of a specific user.",
        "input_parameters_with_datatype": [
            {
                "name": "Username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Location",
                "description": "the location of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TrackSpending",
        "format": "TrackSpending(Username) -> SpendingReport",
        "Id": 326,
        "description": "This API is used to track the spending of a specific user.",
        "summary": "This API is used to track the spending of a specific user.",
        "input_parameters_with_datatype": [
            {
                "name": "Username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "SpendingReport",
                "description": "the spending report of the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateSavings",
        "format": "CalculateSavings(SpendingReport) -> Savings",
        "Id": 327,
        "description": "This API calculates the possible savings based on the spending report of a user.",
        "summary": "This API calculates the possible savings based on the spending report of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "SpendingReport",
                "description": "the spending report of the user",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Savings",
                "description": "the possible savings of the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestInvestment",
        "format": "SuggestInvestment(Savings) -> InvestmentPlan",
        "Id": 328,
        "description": "This API suggests an investment plan based on the savings of a user.",
        "summary": "This API suggests an investment plan based on the savings of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "Savings",
                "description": "the possible savings of the user",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "InvestmentPlan",
                "description": "the suggested investment plan for the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantRecommendations",
        "format": "RestaurantRecommendations(City) -> Recommendations",
        "Id": 329,
        "description": "This API fetches restaurant recommendations for a specific city based on user reviews and ratings.",
        "summary": "This API fetches restaurant recommendations for a specific city based on user reviews and ratings.",
        "input_parameters_with_datatype": [
            {
                "name": "City",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Recommendations",
                "description": "the restaurant recommendations for the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OptimalTravelDate",
        "format": "OptimalTravelDate(WeatherForecast, RestaurantRecommendations) -> TravelDate",
        "Id": 330,
        "description": "This API calculates the optimal travel date considering both the weather forecast and availability of recommended restaurants.",
        "summary": "This API calculates the optimal travel date considering both the weather forecast and availability of recommended restaurants.",
        "input_parameters_with_datatype": [
            {
                "name": "WeatherForecast",
                "description": "the weather forecast for a specific city",
                "datatype": "String"
            },
            {
                "name": "RestaurantRecommendations",
                "description": "the restaurant recommendations for a specific city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "TravelDate",
                "description": "the optimal travel date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TouristAttractions",
        "format": "TouristAttractions(Location) -> Attractions",
        "Id": 331,
        "description": "This API provides the tourist attractions for a specific location.",
        "summary": "This API provides the tourist attractions for a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "Location",
                "description": "the location for which tourist attractions are needed",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Attractions",
                "description": "the tourist attractions for the specified location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindItemInWardrobe",
        "format": "FindItemInWardrobe(outfit) -> location",
        "Id": 332,
        "description": "This API is to find a specified outfit in my wardrobe.",
        "summary": "This API is to find a specified outfit in my wardrobe.",
        "input_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the outfit to find in the wardrobe",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the specified outfit in the wardrobe",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindClothes",
        "format": "FindClothes(weather) -> outfit",
        "Id": 333,
        "description": "This API finds the most appropriate outfit to wear based on the current weather.",
        "summary": "This API finds the most appropriate outfit to wear based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the recommended outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlanOutfit",
        "format": "PlanOutfit(event, outfit) -> final_outfit",
        "Id": 334,
        "description": "This API suggests a final outfit to wear based on the event and recommended outfit based on weather.",
        "summary": "This API suggests a final outfit to wear based on the event and recommended outfit based on weather.",
        "input_parameters_with_datatype": [
            {
                "name": "event",
                "description": "the event for which outfit is required",
                "datatype": "String"
            },
            {
                "name": "outfit",
                "description": "the recommended outfit based on weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "final_outfit",
                "description": "the final outfit suggestion",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchIngredients",
        "format": "FetchIngredients(dish_name) -> ingredients",
        "Id": 335,
        "description": "This API fetches the list of ingredients required for a particular dish.",
        "summary": "This API fetches the list of ingredients required for a particular dish.",
        "input_parameters_with_datatype": [
            {
                "name": "dish_name",
                "description": "the name of the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ingredients",
                "description": "the list of ingredients required for the dish",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindGroceryStores",
        "format": "FindGroceryStores(location) -> stores",
        "Id": 336,
        "description": "This API finds grocery stores in a given location.",
        "summary": "This API finds grocery stores in a given location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to search for grocery stores",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "stores",
                "description": "the list of grocery stores in the given location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ComparePrices",
        "format": "ComparePrices(ingredients, stores) -> cheapest_store",
        "Id": 337,
        "description": "This API compares the prices of ingredients in different stores and returns the store with the lowest cost.",
        "summary": "This API compares the prices of ingredients in different stores and returns the store with the lowest cost.",
        "input_parameters_with_datatype": [
            {
                "name": "ingredients",
                "description": "the list of ingredients to compare prices",
                "datatype": "List"
            },
            {
                "name": "stores",
                "description": "the list of grocery stores to compare prices",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cheapest_store",
                "description": "the grocery store with the lowest cost for the ingredients",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateCalories",
        "format": "CalculateCalories(menu_details) -> calorie_info",
        "Id": 338,
        "description": "This API is to calculate the total calories of dishes in the menu.",
        "summary": "This API is to calculate the total calories of dishes in the menu.",
        "input_parameters_with_datatype": [
            {
                "name": "menu_details",
                "description": "details of the menu",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "calorie_info",
                "description": "information about the total calories",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestFood",
        "format": "SuggestFood(menu, dietary_preferences) -> food_suggestion",
        "Id": 339,
        "description": "This API is to suggest food from the menu based on dietary preferences.",
        "summary": "This API is to suggest food from the menu based on dietary preferences.",
        "input_parameters_with_datatype": [
            {
                "name": "menu",
                "description": "the menu of the restaurant",
                "datatype": "String"
            },
            {
                "name": "dietary_preferences",
                "description": "the dietary preferences",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_suggestion",
                "description": "the suggested food",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateLuggageWeight",
        "format": "CalculateLuggageWeight(luggage_items) -> luggage_weight",
        "Id": 340,
        "description": "This API calculates the total weight of the luggage based on the inputted items.",
        "summary": "This API calculates the total weight of the luggage based on the inputted items.",
        "input_parameters_with_datatype": [
            {
                "name": "luggage_items",
                "description": "the items of luggage",
                "datatype": "List of Strings"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "luggage_weight",
                "description": "the total weight of the luggage",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CanCarryLuggage",
        "format": "CanCarryLuggage(luggage_weight, luggage_allowance) -> permission",
        "Id": 341,
        "description": "This API tells if the calculated luggage weight is within the allowed limit or not.",
        "summary": "This API tells if the calculated luggage weight is within the allowed limit or not.",
        "input_parameters_with_datatype": [
            {
                "name": "luggage_weight",
                "description": "the total weight of the luggage",
                "datatype": "Float"
            },
            {
                "name": "luggage_allowance",
                "description": "the luggage allowance for the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "permission",
                "description": "the permission to carry the luggage",
                "datatype": "Boolean"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindBook",
        "format": "FindBook(title) -> book",
        "Id": 342,
        "description": "This API is to find a book based on a specified title.",
        "summary": "This API is to find a book based on a specified title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book",
                "description": "the information of the book",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReadReview",
        "format": "ReadReview(book) -> review",
        "Id": 343,
        "description": "This API is to read a review of a specified book.",
        "summary": "This API is to read a review of a specified book.",
        "input_parameters_with_datatype": [
            {
                "name": "book",
                "description": "the information of the book",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the review of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SendReview",
        "format": "SendReview(contact_info, review) -> sent_confirmation",
        "Id": 344,
        "description": "This API is to send the book review to a specified contact.",
        "summary": "This API is to send the book review to a specified contact.",
        "input_parameters_with_datatype": [
            {
                "name": "contact_info",
                "description": "the contact information of the recipient",
                "datatype": "String"
            },
            {
                "name": "review",
                "description": "the review of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "sent_confirmation",
                "description": "the confirmation of the review sent",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SendTicket",
        "format": "SendTicket(contact_info, ticket) -> sent_confirmation",
        "Id": 345,
        "description": "This API is to send the flight ticket to a specified contact.",
        "summary": "This API is to send the flight ticket to a specified contact.",
        "input_parameters_with_datatype": [
            {
                "name": "contact_info",
                "description": "the contact information",
                "datatype": "String"
            },
            {
                "name": "ticket",
                "description": "the flight ticket",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "sent_confirmation",
                "description": "the confirmation of ticket sent",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieFinder",
        "format": "MovieFinder(movie_name) -> movie_id",
        "Id": 346,
        "description": "This API searches for the movie id of a specific movie name.",
        "summary": "This API searches for the movie id of a specific movie name.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the id of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRatings",
        "format": "MovieRatings(movie_id) -> ratingScores",
        "Id": 347,
        "description": "This API finds the rating scores for a specific movie id.",
        "summary": "This API finds the rating scores for a specific movie id.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the id of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ratingScores",
                "description": "the rating scores of the movie",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RatingAverage",
        "format": "RatingAverage(ratingScores) -> avgRating",
        "Id": 348,
        "description": "This API calculates the average rating of given rating scores.",
        "summary": "This API calculates the average rating of given rating scores.",
        "input_parameters_with_datatype": [
            {
                "name": "ratingScores",
                "description": "the rating scores of the movie",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "avgRating",
                "description": "the average rating of the movie",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieLookup",
        "format": "MovieLookup(movie_name) -> movie_id",
        "Id": 349,
        "description": "This API retrieves the movie id of a specific movie name.",
        "summary": "This API retrieves the movie id of a specific movie name.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the id of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRating",
        "format": "MovieRating(movie_id) -> rating_scores",
        "Id": 350,
        "description": "This API retrieves all the rating scores for a specific movie id.",
        "summary": "This API retrieves all the rating scores for a specific movie id.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the id of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rating_scores",
                "description": "the rating scores for the movie",
                "datatype": "List of Floats"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HighestRating",
        "format": "HighestRating(rating_scores) -> highest_rating",
        "Id": 351,
        "description": "This API retrieves the highest rating score from a list of rating scores.",
        "summary": "This API retrieves the highest rating score from a list of rating scores.",
        "input_parameters_with_datatype": [
            {
                "name": "rating_scores",
                "description": "the rating scores for the movie",
                "datatype": "List of Floats"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "highest_rating",
                "description": "the highest rating score",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightSearch",
        "format": "FlightSearch(destination, date) -> flight_id",
        "Id": 352,
        "description": "This API searches for flight id for a specific destination on a particular date.",
        "summary": "This API searches for flight id for a specific destination on a particular date.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination of the flight",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_id",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SeatSelection",
        "format": "SeatSelection(flight_id) -> seats",
        "Id": 353,
        "description": "This API checks the seat availability for a specific flight id.",
        "summary": "This API checks the seat availability for a specific flight id.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_id",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "seats",
                "description": "the available seats for the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UpgradeAvailability",
        "format": "UpgradeAvailability(seats) -> upgradeOptions",
        "Id": 354,
        "description": "This API checks if there is any seat upgrade options available for the given seat.",
        "summary": "This API checks if there is any seat upgrade options available for the given seat.",
        "input_parameters_with_datatype": [
            {
                "name": "seats",
                "description": "the seats to check for upgrade options",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "upgradeOptions",
                "description": "the available seat upgrade options",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SeatClassAvailability",
        "format": "SeatClassAvailability(flight_id) -> seat_classes",
        "Id": 355,
        "description": "This API checks the seat class availability for a specific flight id.",
        "summary": "This API checks the seat class availability for a specific flight id.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_id",
                "description": "the id of the flight",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "seat_classes",
                "description": "the available seat classes",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestSeatClass",
        "format": "BestSeatClass(seat_classes) -> bestSeatClass",
        "Id": 356,
        "description": "This API finds the best seat class available among the given seat class options.",
        "summary": "This API finds the best seat class available among the given seat class options.",
        "input_parameters_with_datatype": [
            {
                "name": "seat_classes",
                "description": "the available seat classes",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bestSeatClass",
                "description": "the best seat class",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelSearch",
        "format": "HotelSearch(city, check_in_date, check_out_date) -> hotel_id",
        "Id": 357,
        "description": "This API searches for hotel id for a specific city between check-in and check-out dates.",
        "summary": "This API searches for hotel id for a specific city between check-in and check-out dates.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "check_in_date",
                "description": "the check-in date",
                "datatype": "Date"
            },
            {
                "name": "check_out_date",
                "description": "the check-out date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_id",
                "description": "the ID of the hotel",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RoomAvailability",
        "format": "RoomAvailability(hotel_id) -> rooms",
        "Id": 358,
        "description": "This API checks the room availability for a specific hotel id.",
        "summary": "This API checks the room availability for a specific hotel id.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_id",
                "description": "the ID of the hotel",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rooms",
                "description": "the available rooms",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestRoom",
        "format": "BestRoom(rooms) -> bestRoom",
        "Id": 359,
        "description": "This API finds the best room available among the given room options.",
        "summary": "This API finds the best room available among the given room options.",
        "input_parameters_with_datatype": [
            {
                "name": "rooms",
                "description": "the available rooms",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bestRoom",
                "description": "the best room available",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookSearch",
        "format": "BookSearch(title, author) -> book_id",
        "Id": 360,
        "description": "This API searches for book id for a specific title and author.",
        "summary": "This API searches for book id for a specific title and author.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            },
            {
                "name": "author",
                "description": "the author of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookStoreAvailability",
        "format": "BookStoreAvailability(book_id) -> store_ids",
        "Id": 361,
        "description": "This API checks for the store availability for a specific book id.",
        "summary": "This API checks for the store availability for a specific book id.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_ids",
                "description": "the IDs of the stores where the book is available",
                "datatype": "List of Integers"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NearestStore",
        "format": "NearestStore(store_ids, user_location) -> nearest_store",
        "Id": 362,
        "description": "This API finds the nearest store among the given store options based on the user's location.",
        "summary": "This API finds the nearest store among the given store options based on the user's location.",
        "input_parameters_with_datatype": [
            {
                "name": "store_ids",
                "description": "the IDs of the stores",
                "datatype": "List of Integers"
            },
            {
                "name": "user_location",
                "description": "the location of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "nearest_store",
                "description": "the ID of the nearest store",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantSearch",
        "format": "RestaurantSearch(name, city) -> restaurant_id",
        "Id": 363,
        "description": "This API searches for restaurant id for a specific name in a particular city.",
        "summary": "This API searches for restaurant id for a specific name in a particular city.",
        "input_parameters_with_datatype": [
            {
                "name": "name",
                "description": "the name of the restaurant",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the city where the restaurant is located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_id",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TableAvailability",
        "format": "TableAvailability(restaurant_id, date) -> tables",
        "Id": 364,
        "description": "This API checks the table availability for a specific restaurant id on a specific date.",
        "summary": "This API checks the table availability for a specific restaurant id on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_id",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date for checking table availability",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "tables",
                "description": "the available tables for the given restaurant and date",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestTable",
        "format": "BestTable(tables) -> bestTable",
        "Id": 365,
        "description": "This API finds the best table available among the given table options.",
        "summary": "This API finds the best table available among the given table options.",
        "input_parameters_with_datatype": [
            {
                "name": "tables",
                "description": "the list of available tables",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bestTable",
                "description": "the best table among the given options",
                "datatype": "Table"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CurrencyConversion",
        "format": "CurrencyConversion(from_currency, to_currency) -> conversion_rate",
        "Id": 366,
        "description": "This API provides the conversion rate from one currency to another.",
        "summary": "This API provides the conversion rate from one currency to another.",
        "input_parameters_with_datatype": [
            {
                "name": "from_currency",
                "description": "the currency to convert from",
                "datatype": "String"
            },
            {
                "name": "to_currency",
                "description": "the currency to convert to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "conversion_rate",
                "description": "the conversion rate from the 'from_currency' to the 'to_currency'",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ItemPrice",
        "format": "ItemPrice(item_id) -> price",
        "Id": 367,
        "description": "This API provides the price of an item.",
        "summary": "This API provides the price of an item.",
        "input_parameters_with_datatype": [
            {
                "name": "item_id",
                "description": "the ID of the item",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the item",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculatePrice",
        "format": "CalculatePrice(price, conversion_rate) -> converted_price",
        "Id": 368,
        "description": "This API provides the final price of an item after currency conversion.",
        "summary": "This API provides the final price of an item after currency conversion.",
        "input_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the item",
                "datatype": "Float"
            },
            {
                "name": "conversion_rate",
                "description": "the conversion rate from the original currency to the target currency",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "converted_price",
                "description": "the final price of the item after currency conversion",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CurrentTime",
        "format": "CurrentTime(city) -> time",
        "Id": 369,
        "description": "This API provides the current time in a specified city.",
        "summary": "This API provides the current time in a specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the current time",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OpenMuseums",
        "format": "OpenMuseums(city, time) -> museums",
        "Id": 370,
        "description": "This API provides a list of museums that are currently open in a city at a given time.",
        "summary": "This API provides a list of museums that are currently open in a city at a given time.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the specified time",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "museums",
                "description": "a list of open museums",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ArtExhibit",
        "format": "ArtExhibit(museum) -> exhibits",
        "Id": 371,
        "description": "This API provides a list of current art exhibits at a specified museum.",
        "summary": "This API provides a list of current art exhibits at a specified museum.",
        "input_parameters_with_datatype": [
            {
                "name": "museum",
                "description": "the name of the museum",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "exhibits",
                "description": "a list of art exhibits",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightStatus",
        "format": "FlightStatus(airline, flight_number, date) -> flight_status",
        "Id": 372,
        "description": "This API is used to get the status of a specific flight on a certain date.",
        "summary": "This API is used to get the status of a specific flight on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "airline",
                "description": "the name of the airline",
                "datatype": "String"
            },
            {
                "name": "flight_number",
                "description": "the flight number",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_status",
                "description": "the status of the flight, including time",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AirportTransportation",
        "format": "AirportTransportation(city, date, time) -> transportation",
        "Id": 373,
        "description": "This API is used to suggest transportation options from the city to the airport on a certain date and time considering the flight status.",
        "summary": "This API is used to suggest transportation options from the city to the airport on a certain date and time considering the flight status.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the transportation",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time of the transportation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "transportation",
                "description": "the suggested transportation options",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TransportationBooking",
        "format": "TransportationBooking(city, transportation, date, time) -> booking",
        "Id": 374,
        "description": "This API is used to book a specific transportation in a certain city on a specific date and time.",
        "summary": "This API is used to book a specific transportation in a certain city on a specific date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "transportation",
                "description": "the transportation option",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the booking",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time of the booking",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking",
                "description": "the booking status",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TableReservation",
        "format": "TableReservation(weatherDetails, restaurantDetails, num_of_people, date) -> reservationDetails",
        "Id": 375,
        "description": "This API is used to reserve a table at a restaurant on a specific date. The API takes into consideration the weather details to suggest indoor or outdoor seating.",
        "summary": "This API is used to reserve a table at a restaurant on a specific date. The API takes into consideration the weather details to suggest indoor or outdoor seating.",
        "input_parameters_with_datatype": [
            {
                "name": "weatherDetails",
                "description": "the details of the weather forecast",
                "datatype": "String"
            },
            {
                "name": "restaurantDetails",
                "description": "the details of the searched restaurant",
                "datatype": "String"
            },
            {
                "name": "num_of_people",
                "description": "the number of people for the reservation",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the specific date for the reservation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservationDetails",
                "description": "the details of the table reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductLookup",
        "format": "ProductLookup(product_id) -> product_info",
        "Id": 376,
        "description": "This API is to query the product details given a product_id.",
        "summary": "This API is to query the product details given a product_id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_info",
                "description": "the details of the product",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CustomerPurchase",
        "format": "CustomerPurchase(product_info) -> purchase_info",
        "Id": 377,
        "description": "This API fetches the purchase history based on product details.",
        "summary": "This API fetches the purchase history based on product details.",
        "input_parameters_with_datatype": [
            {
                "name": "product_info",
                "description": "the details of the product",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_info",
                "description": "the purchase history",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductRating",
        "format": "ProductRating(purchase_info, number_of_ratings) -> ratings",
        "Id": 378,
        "description": "This API provides product ratings based on purchase history.",
        "summary": "This API provides product ratings based on purchase history.",
        "input_parameters_with_datatype": [
            {
                "name": "purchase_info",
                "description": "the purchase history",
                "datatype": "Object"
            },
            {
                "name": "number_of_ratings",
                "description": "the number of ratings to retrieve",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ratings",
                "description": "the product ratings",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookInfo",
        "format": "BookInfo(title) -> bookdetails",
        "Id": 379,
        "description": "This API provides details about a book based on its title.",
        "summary": "This API provides details about a book based on its title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bookdetails",
                "description": "the details of the book",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorBio",
        "format": "AuthorBio(author) -> authorData",
        "Id": 380,
        "description": "This API provides information about an author.",
        "summary": "This API provides information about an author.",
        "input_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "authorData",
                "description": "the information about the author",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReviewGenerator",
        "format": "ReviewGenerator(bookdetails, authorData) -> review",
        "Id": 381,
        "description": "This API generates a review based on the book and its author details.",
        "summary": "This API generates a review based on the book and its author details.",
        "input_parameters_with_datatype": [
            {
                "name": "bookdetails",
                "description": "the details of the book",
                "datatype": "Object"
            },
            {
                "name": "authorData",
                "description": "the information about the author",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the generated review",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CryptoPrice",
        "format": "CryptoPrice(cryptoType) -> price",
        "Id": 382,
        "description": "This API gives the current price of a specified cryptocurrency.",
        "summary": "This API gives the current price of a specified cryptocurrency.",
        "input_parameters_with_datatype": [
            {
                "name": "cryptoType",
                "description": "the type of cryptocurrency",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the current price of the cryptocurrency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StockPrice",
        "format": "StockPrice(stockname) -> price",
        "Id": 383,
        "description": "This API gives the current price of a specified stock.",
        "summary": "This API gives the current price of a specified stock.",
        "input_parameters_with_datatype": [
            {
                "name": "stockname",
                "description": "the name of the stock",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the current price of the stock",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "InvestmentSuggestion",
        "format": "InvestmentSuggestion(cryptoPrice, stockPrice) -> suggestion",
        "Id": 384,
        "description": "This API suggests where to invest considering the prices of cryptocurrency and stock.",
        "summary": "This API suggests where to invest considering the prices of cryptocurrency and stock.",
        "input_parameters_with_datatype": [
            {
                "name": "cryptoPrice",
                "description": "the current price of the cryptocurrency",
                "datatype": "Float"
            },
            {
                "name": "stockPrice",
                "description": "the current price of the stock",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "suggestion",
                "description": "the investment suggestion",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTitle",
        "format": "BookTitle(author, genre) -> title",
        "Id": 385,
        "description": "This API retrieves the title of a book given the author and genre.",
        "summary": "This API retrieves the title of a book given the author and genre.",
        "input_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the author of the book",
                "datatype": "String"
            },
            {
                "name": "genre",
                "description": "the genre of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookPrice",
        "format": "BookPrice(title) -> price",
        "Id": 386,
        "description": "This API gives the price of the specified book title.",
        "summary": "This API gives the price of the specified book title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the book",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShippingEstimate",
        "format": "ShippingEstimate(bookPrice, destination) -> estimate",
        "Id": 387,
        "description": "This API calculates the estimated shipping cost for the book based on its price and shipping destination.",
        "summary": "This API calculates the estimated shipping cost for the book based on its price and shipping destination.",
        "input_parameters_with_datatype": [
            {
                "name": "bookPrice",
                "description": "the price of the book",
                "datatype": "Float"
            },
            {
                "name": "destination",
                "description": "the shipping destination",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "estimate",
                "description": "the estimated shipping cost",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SendInvitation",
        "format": "SendInvitation(bookingID, email) -> invitationID",
        "Id": 388,
        "description": "This API sends an invitation for the booked table to the provided email.",
        "summary": "This API sends an invitation for the booked table to the provided email.",
        "input_parameters_with_datatype": [
            {
                "name": "bookingID",
                "description": "the ID of the table booking",
                "datatype": "Integer"
            },
            {
                "name": "email",
                "description": "the email address to send the invitation to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "invitationID",
                "description": "the ID of the sent invitation",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieSearch",
        "format": "MovieSearch(city, genre) -> movie",
        "Id": 389,
        "description": "This API finds the most popular movie in the specified city of the given genre.",
        "summary": "This API finds the most popular movie in the specified city of the given genre.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the most popular movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShowTiming",
        "format": "ShowTiming(movie, date) -> showtime",
        "Id": 390,
        "description": "This API provides the show timings for the selected movie on the specified date.",
        "summary": "This API provides the show timings for the selected movie on the specified date.",
        "input_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the selected movie",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specified date",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the show timings for the movie on the specified date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Weather",
        "format": "Weather(city) -> condition",
        "Id": 391,
        "description": "This API gives the current weather conditions for the given city.",
        "summary": "This API gives the current weather conditions for the given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "condition",
                "description": "the current weather conditions",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightDistance",
        "format": "FlightDistance(origin, destination) -> distance",
        "Id": 392,
        "description": "This API provides the flight distance between the origin and destination cities.",
        "summary": "This API provides the flight distance between the origin and destination cities.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the origin city",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the flight distance between the origin and destination cities",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FuelCostPerFlight",
        "format": "FuelCostPerFlight(distance, weatherCondition) -> cost",
        "Id": 393,
        "description": "This API calculates the fuel cost for the flight given the distance and weather conditions.",
        "summary": "This API calculates the fuel cost for the flight given the distance and weather conditions.",
        "input_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the flight distance",
                "datatype": "Float"
            },
            {
                "name": "weatherCondition",
                "description": "the current weather conditions",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cost",
                "description": "the fuel cost for the flight",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRecipe",
        "format": "FindRecipe(dish) -> recipe",
        "Id": 394,
        "description": "This API provides the recipe of a specified dish.",
        "summary": "This API provides the recipe of a specified dish.",
        "input_parameters_with_datatype": [
            {
                "name": "dish",
                "description": "the name of the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recipe",
                "description": "the recipe of the dish",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckPantry",
        "format": "CheckPantry(recipe) -> available_ingredients",
        "Id": 395,
        "description": "This API checks the pantry for available ingredients needed for a certain recipe.",
        "summary": "This API checks the pantry for available ingredients needed for a certain recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "recipe",
                "description": "the recipe of the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "available_ingredients",
                "description": "the available ingredients in the pantry",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GroceryList",
        "format": "GroceryList(available_ingredients, recipe) -> list",
        "Id": 396,
        "description": "This API generates a grocery list based on the available ingredients and the recipe.",
        "summary": "This API generates a grocery list based on the available ingredients and the recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "available_ingredients",
                "description": "the available ingredients in the pantry",
                "datatype": "List"
            },
            {
                "name": "recipe",
                "description": "the recipe of the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "list",
                "description": "the grocery list",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PharmacyLocator",
        "format": "PharmacyLocator(city) -> pharmacies",
        "Id": 397,
        "description": "This API locates all the pharmacies in a specific city.",
        "summary": "This API locates all the pharmacies in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "pharmacies",
                "description": "a list of pharmacies in the city",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MedicineAvailability",
        "format": "MedicineAvailability(pharmacy, medicine_name) -> medicine_stock",
        "Id": 398,
        "description": "This API checks the availability of specific medicine in a given pharmacy.",
        "summary": "This API checks the availability of specific medicine in a given pharmacy.",
        "input_parameters_with_datatype": [
            {
                "name": "pharmacy",
                "description": "the name of the pharmacy",
                "datatype": "String"
            },
            {
                "name": "medicine_name",
                "description": "the name of the medicine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "medicine_stock",
                "description": "the availability of the medicine in the pharmacy",
                "datatype": "Boolean"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OrderMedicine",
        "format": "OrderMedicine(pharmacy, medicine_name, quantity) -> order_confirmation",
        "Id": 399,
        "description": "This API places an order for a particular medicine at a chosen pharmacy.",
        "summary": "This API places an order for a particular medicine at a chosen pharmacy.",
        "input_parameters_with_datatype": [
            {
                "name": "pharmacy",
                "description": "the name of the pharmacy",
                "datatype": "String"
            },
            {
                "name": "medicine_name",
                "description": "the name of the medicine",
                "datatype": "String"
            },
            {
                "name": "quantity",
                "description": "the quantity of the medicine to order",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_confirmation",
                "description": "the confirmation of the order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovie",
        "format": "GetMovie(show) -> movie_info",
        "Id": 400,
        "description": "This API is to get the information about a specific movie show.",
        "summary": "This API is to get the information about a specific movie show.",
        "input_parameters_with_datatype": [
            {
                "name": "show",
                "description": "the name of the movie show",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_info",
                "description": "the information about the movie, including the venue",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantRecommendation",
        "format": "RestaurantRecommendation(venue) -> restaurant_list",
        "Id": 401,
        "description": "This API recommends restaurants based on the venue.",
        "summary": "This API recommends restaurants based on the venue.",
        "input_parameters_with_datatype": [
            {
                "name": "venue",
                "description": "the name of the venue",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_list",
                "description": "a list of recommended restaurants",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantDetails",
        "format": "RestaurantDetails(restaurantname) -> restaurantInfo",
        "Id": 402,
        "description": "This API returns information about a certain restaurant.",
        "summary": "This API returns information about a certain restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantname",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurantInfo",
                "description": "information about the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CuisineRecommendation",
        "format": "CuisineRecommendation(restaurantInfo) -> cuisineRec",
        "Id": 403,
        "description": "This API recommends cuisines based on the restaurant's information.",
        "summary": "This API recommends cuisines based on the restaurant's information.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantInfo",
                "description": "information about the restaurant",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cuisineRec",
                "description": "recommended cuisines",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MenuSelection",
        "format": "MenuSelection(restaurantInfo, cuisineRec) -> selectedMenu",
        "Id": 404,
        "description": "This API selects a menu based on the restaurant's information and recommended cuisine.",
        "summary": "This API selects a menu based on the restaurant's information and recommended cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantInfo",
                "description": "information about the restaurant",
                "datatype": "Object"
            },
            {
                "name": "cuisineRec",
                "description": "recommended cuisines",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "selectedMenu",
                "description": "selected menu",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ClothingRecommendation",
        "format": "ClothingRecommendation(weatherForecast) -> clothes",
        "Id": 405,
        "description": "This API provides clothing recommendations based on the current weather.",
        "summary": "This API provides clothing recommendations based on the current weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weatherForecast",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothes",
                "description": "the recommended clothes",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PackItems",
        "format": "PackItems(clothingRecommendation, tripDuration) -> packedItems",
        "Id": 406,
        "description": "This API generates a list of items to pack based on clothing recommendations and the duration of the trip.",
        "summary": "This API generates a list of items to pack based on clothing recommendations and the duration of the trip.",
        "input_parameters_with_datatype": [
            {
                "name": "clothingRecommendation",
                "description": "the recommended clothes",
                "datatype": "String"
            },
            {
                "name": "tripDuration",
                "description": "the duration of the trip",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "packedItems",
                "description": "the list of items to pack",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CarInfo",
        "format": "CarInfo(car_name, country) -> carDetails",
        "Id": 407,
        "description": "This API retrieves detailed information about a car including its price.",
        "summary": "This API retrieves detailed information about a car including its price.",
        "input_parameters_with_datatype": [
            {
                "name": "car_name",
                "description": "the name of the car",
                "datatype": "String"
            },
            {
                "name": "country",
                "description": "the country where the car is being purchased",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "carDetails",
                "description": "detailed information about the car including its price",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CountryTaxRate",
        "format": "CountryTaxRate(country) -> taxRate",
        "Id": 408,
        "description": "This API returns the tax rate in a certain country.",
        "summary": "This API returns the tax rate in a certain country.",
        "input_parameters_with_datatype": [
            {
                "name": "country",
                "description": "the country for which the tax rate is being retrieved",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "taxRate",
                "description": "the tax rate in the specified country",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TaxCostCalculator",
        "format": "TaxCostCalculator(price, tax_rate) -> taxCost",
        "Id": 409,
        "description": "This API calculates the tax cost of a certain price.",
        "summary": "This API calculates the tax cost of a certain price.",
        "input_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the item",
                "datatype": "Float"
            },
            {
                "name": "tax_rate",
                "description": "the tax rate to be applied",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "taxCost",
                "description": "the calculated tax cost",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightInfo",
        "format": "FlightInfo(city_from, city_to, date_from, date_to) -> flightDetails",
        "Id": 410,
        "description": "This API retrieves detailed information about flights including its cost.",
        "summary": "This API retrieves detailed information about flights including its cost.",
        "input_parameters_with_datatype": [
            {
                "name": "city_from",
                "description": "the city of departure",
                "datatype": "String"
            },
            {
                "name": "city_to",
                "description": "the city of arrival",
                "datatype": "String"
            },
            {
                "name": "date_from",
                "description": "the start date of the flight",
                "datatype": "Date"
            },
            {
                "name": "date_to",
                "description": "the end date of the flight",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flightDetails",
                "description": "detailed information about flights including its cost",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CountryWeather",
        "format": "CountryWeather(city, date) -> weatherDetails",
        "Id": 411,
        "description": "This API returns the weather information in a certain city at a certain date.",
        "summary": "This API returns the weather information in a certain city at a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city for which weather information is required",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for which weather information is required",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weatherDetails",
                "description": "the weather information in a certain city at a certain date",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherEffectPrice",
        "format": "WeatherEffectPrice(city, date, original_price) -> adjustedPrice",
        "Id": 412,
        "description": "This API calculates the potential effects of weather on flight prices.",
        "summary": "This API calculates the potential effects of weather on flight prices.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city for which weather effects on flight prices are to be calculated",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for which weather effects on flight prices are to be calculated",
                "datatype": "Date"
            },
            {
                "name": "original_price",
                "description": "the original price of the flight",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "adjustedPrice",
                "description": "the potential adjusted price of the flight considering weather effects",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ResturantNearCinema",
        "format": "ResturantNearCinema(city, cinema_name) -> restaurant",
        "Id": 413,
        "description": "This API finds a restaurant near a specific cinema in a city.",
        "summary": "This API finds a restaurant near a specific cinema in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "cinema_name",
                "description": "the name of the cinema",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the recommended restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TableBooking",
        "format": "TableBooking(restaurant_name, time) -> booking",
        "Id": 414,
        "description": "This API allows users to book a table in a specific restaurant at a specified time.",
        "summary": "This API allows users to book a table in a specific restaurant at a specified time.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time for table booking",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking",
                "description": "the booking status",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelFinder",
        "format": "HotelFinder(city, star_rating) -> hotel_name",
        "Id": 415,
        "description": "This API finds all hotels in a particular city with the specified star rating.",
        "summary": "This API finds all hotels in a particular city with the specified star rating.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "star_rating",
                "description": "the star rating of the hotel",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RoomBooking",
        "format": "RoomBooking(hotel_name, number_of_rooms, check_in_date, check_out_date) -> booking_confirmation",
        "Id": 416,
        "description": "This API books the specified number of rooms in the given hotel for the duration of stay.",
        "summary": "This API books the specified number of rooms in the given hotel for the duration of stay.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_name",
                "description": "the name of the hotel",
                "datatype": "String"
            },
            {
                "name": "number_of_rooms",
                "description": "the number of rooms to book",
                "datatype": "Integer"
            },
            {
                "name": "check_in_date",
                "description": "the check-in date",
                "datatype": "Date"
            },
            {
                "name": "check_out_date",
                "description": "the check-out date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_confirmation",
                "description": "the booking confirmation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightBooking",
        "format": "FlightBooking(origin, destination, departure_date, return_date) -> flight_details",
        "Id": 417,
        "description": "This API books a flight from the origin to the destination for the given dates.",
        "summary": "This API books a flight from the origin to the destination for the given dates.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the origin of the flight",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination of the flight",
                "datatype": "String"
            },
            {
                "name": "departure_date",
                "description": "the departure date",
                "datatype": "Date"
            },
            {
                "name": "return_date",
                "description": "the return date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_details",
                "description": "the details of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BoatDetail",
        "format": "BoatDetail(boat_id) -> boat_location",
        "Id": 418,
        "description": "This API is to query the location information of the boat.",
        "summary": "This API is to query the location information of the boat.",
        "input_parameters_with_datatype": [
            {
                "name": "boat_id",
                "description": "the ID of the boat",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "boat_location",
                "description": "the location of the boat",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TideCheck",
        "format": "TideCheck(boat_location) -> tide_status",
        "Id": 419,
        "description": "This API is to check the tide status of a location.",
        "summary": "This API is to check the tide status of a location.",
        "input_parameters_with_datatype": [
            {
                "name": "boat_location",
                "description": "the location of the boat",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "tide_status",
                "description": "the tide status of the location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BoatStatus",
        "format": "BoatStatus(boat_id) -> status",
        "Id": 420,
        "description": "This API is to check the status of the boat.",
        "summary": "This API is to check the status of the boat.",
        "input_parameters_with_datatype": [
            {
                "name": "boat_id",
                "description": "the ID of the boat",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "status",
                "description": "the status of the boat",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CityDetail",
        "format": "CityDetail(city_name) -> city_coordinates",
        "Id": 421,
        "description": "This API is to get the coordinates of a city.",
        "summary": "This API is to get the coordinates of a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city_coordinates",
                "description": "the coordinates of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PollutionCheck",
        "format": "PollutionCheck(city_coordinates) -> pollution_index",
        "Id": 422,
        "description": "This API is to check the pollution index of a location.",
        "summary": "This API is to check the pollution index of a location.",
        "input_parameters_with_datatype": [
            {
                "name": "city_coordinates",
                "description": "the coordinates of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "pollution_index",
                "description": "the pollution index of the location",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TrafficStatus",
        "format": "TrafficStatus(city_name) -> traffic_status",
        "Id": 423,
        "description": "This API is to check the traffic status in the city.",
        "summary": "This API is to check the traffic status in the city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "traffic_status",
                "description": "the traffic status in the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieSchedule",
        "format": "MovieSchedule(movie_id) -> schedule",
        "Id": 424,
        "description": "This API is to get the schedule of a movie.",
        "summary": "This API is to get the schedule of a movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the id of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "schedule",
                "description": "the schedule of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ClosetCinema",
        "format": "ClosetCinema(schedule) -> cinema_location",
        "Id": 425,
        "description": "This API is to get the nearest cinema playing a movie at a given schedule.",
        "summary": "This API is to get the nearest cinema playing a movie at a given schedule.",
        "input_parameters_with_datatype": [
            {
                "name": "schedule",
                "description": "the schedule of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cinema_location",
                "description": "the location of the nearest cinema",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantReview",
        "format": "RestaurantReview(restaurant_name) -> review_report",
        "Id": 426,
        "description": "This API is to provide the recent reviews of a specific restaurant.",
        "summary": "This API is to provide the recent reviews of a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review_report",
                "description": "the recent reviews of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CuisineRecommendations",
        "format": "CuisineRecommendations(review_report, dietary_preferences) -> cuisine",
        "Id": 427,
        "description": "This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.",
        "summary": "This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.",
        "input_parameters_with_datatype": [
            {
                "name": "review_report",
                "description": "the recent reviews of the restaurant",
                "datatype": "String"
            },
            {
                "name": "dietary_preferences",
                "description": "the dietary preferences of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the recommended cuisine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelBooking",
        "format": "HotelBooking(destination, check_in_date, check_out_date) -> hotel_booking",
        "Id": 428,
        "description": "This API books a hotel in the specific location for the given dates.",
        "summary": "This API books a hotel in the specific location for the given dates.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination city",
                "datatype": "String"
            },
            {
                "name": "check_in_date",
                "description": "the check-in date",
                "datatype": "Date"
            },
            {
                "name": "check_out_date",
                "description": "the check-out date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_booking",
                "description": "the booking details of the hotel",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ItineraryPlanner",
        "format": "ItineraryPlanner(flight_details, hotel_booking) -> itinerary",
        "Id": 429,
        "description": "This API plans an itinerary based on the flight and hotel booking details.",
        "summary": "This API plans an itinerary based on the flight and hotel booking details.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_details",
                "description": "the details of available flights",
                "datatype": "List"
            },
            {
                "name": "hotel_booking",
                "description": "the booking details of the hotel",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "itinerary",
                "description": "the planned itinerary",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodMenuQuery",
        "format": "FoodMenuQuery(restaurant) -> food_menu",
        "Id": 430,
        "description": "This API is used to find out the food menu of a specific restaurant.",
        "summary": "This API is used to find out the food menu of a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_menu",
                "description": "the menu of the specified restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantByLocation",
        "format": "RestaurantByLocation(location) -> restaurantData",
        "Id": 431,
        "description": "This API provides restaurant information in a specific location.",
        "summary": "This API provides restaurant information in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location where the user is",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurantData",
                "description": "the data of restaurants in the specified location",
                "datatype": "JSON"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CuisineByRestaurant",
        "format": "CuisineByRestaurant(restaurantData) -> cuisineData",
        "Id": 432,
        "description": "This API provides information on the cuisine offered by specific restaurants.",
        "summary": "This API provides information on the cuisine offered by specific restaurants.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantData",
                "description": "the data of restaurants",
                "datatype": "JSON"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cuisineData",
                "description": "the data of cuisines offered by the restaurants",
                "datatype": "JSON"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodDelivery",
        "format": "FoodDelivery(cuisineData) -> deliveryETA",
        "Id": 433,
        "description": "This API provides the estimated time of arrival for food delivery based on restaurant and cuisine details.",
        "summary": "This API provides the estimated time of arrival for food delivery based on restaurant and cuisine details.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisineData",
                "description": "the data of cuisines",
                "datatype": "JSON"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "deliveryETA",
                "description": "the estimated time of arrival for food delivery",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantByname",
        "format": "RestaurantByname(restaurant_name) -> restaurant_info",
        "Id": 434,
        "description": "This API provides detailed information about a specific restaurant.",
        "summary": "This API provides detailed information about a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_info",
                "description": "detailed information about the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodByDietType",
        "format": "FoodByDietType(diet_type) -> food_list",
        "Id": 435,
        "description": "This API provides a list of foods based on a specific diet type.",
        "summary": "This API provides a list of foods based on a specific diet type.",
        "input_parameters_with_datatype": [
            {
                "name": "diet_type",
                "description": "the type of diet",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_list",
                "description": "a list of foods based on the diet type",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestOrder",
        "format": "BestOrder(restaurant_info, food_list) -> order_info",
        "Id": 436,
        "description": "This API provides the best order suggestion based on the restaurant and diet type.",
        "summary": "This API provides the best order suggestion based on the restaurant and diet type.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_info",
                "description": "detailed information about the restaurant",
                "datatype": "Object"
            },
            {
                "name": "food_list",
                "description": "a list of foods based on the diet type",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_info",
                "description": "the best order suggestion",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EventFinder",
        "format": "EventFinder(city, date) -> events",
        "Id": 437,
        "description": "This API provides information about events happening in a city on a certain date.",
        "summary": "This API provides information about events happening in a city on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for the event search",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "events",
                "description": "a list of events happening in the city on the specified date",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TripAdvisor",
        "format": "TripAdvisor(weather, restaurants, events) -> trip_advice",
        "Id": 438,
        "description": "This API helps in advising your trip by combining weather, restaurants, and events information.",
        "summary": "This API helps in advising your trip by combining weather, restaurants, and events information.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast for the city on the specified date",
                "datatype": "String"
            },
            {
                "name": "restaurants",
                "description": "a list of recommended restaurants in the city",
                "datatype": "List"
            },
            {
                "name": "events",
                "description": "a list of events happening in the city on the specified date",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "trip_advice",
                "description": "advice for your trip based on the weather, restaurants, and events information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchMovie",
        "format": "SearchMovie(genre, location) -> movie_details",
        "Id": 439,
        "description": "This API is to search a movie of a specified genre at a specific location.",
        "summary": "This API is to search a movie of a specified genre at a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location where the movie is searched",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_details",
                "description": "the details of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckShowtimes",
        "format": "CheckShowtimes(movie_name, date) -> showtime_details",
        "Id": 440,
        "description": "This API is to check the showtimes for a specified movie on a certain date.",
        "summary": "This API is to check the showtimes for a specified movie on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for which showtimes are checked",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtime_details",
                "description": "the details of the showtimes",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTickets",
        "format": "BookTickets(movie_name, showtime, number_of_tickets) -> booking_status",
        "Id": 441,
        "description": "This API is to book a specified number of tickets for a movie at a certain showtime.",
        "summary": "This API is to book a specified number of tickets for a movie at a certain showtime.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "showtime",
                "description": "the showtime for which tickets are booked",
                "datatype": "String"
            },
            {
                "name": "number_of_tickets",
                "description": "the number of tickets to be booked",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindEventCity",
        "format": "FindEventCity(event_name) -> city name",
        "Id": 442,
        "description": "This API is to find the city where a specific event will take place.",
        "summary": "This API is to find the city where a specific event will take place.",
        "input_parameters_with_datatype": [
            {
                "name": "event_name",
                "description": "the name of the event",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city name",
                "description": "the name of the city where the event will take place",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindEventDate",
        "format": "FindEventDate(event_name) -> date",
        "Id": 443,
        "description": "This API is to find the date when a specific event will take place.",
        "summary": "This API is to find the date when a specific event will take place.",
        "input_parameters_with_datatype": [
            {
                "name": "event_name",
                "description": "the name of the event",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "date",
                "description": "the date when the event will take place",
                "datatype": "Date"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRoomType",
        "format": "FindRoomType(hotelname, guestNumber) -> room type",
        "Id": 444,
        "description": "This API is used to find suitable room type in a hotel for specific number of guests.",
        "summary": "This API is used to find suitable room type in a hotel for specific number of guests.",
        "input_parameters_with_datatype": [
            {
                "name": "hotelname",
                "description": "the name of the hotel",
                "datatype": "String"
            },
            {
                "name": "guestNumber",
                "description": "the number of guests",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "room type",
                "description": "the type of the hotel room",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateAppointment",
        "format": "CreateAppointment(doctorId, patientId, date, time) -> appointment status",
        "Id": 445,
        "description": "This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.",
        "summary": "This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "doctorId",
                "description": "the ID of the doctor",
                "datatype": "Integer"
            },
            {
                "name": "patientId",
                "description": "the ID of the patient",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the appointment",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time of the appointment",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "appointment status",
                "description": "the status of the appointment",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindPatient",
        "format": "FindPatient(patientname) -> patient id",
        "Id": 446,
        "description": "This API is used to find a patient based on patient name.",
        "summary": "This API is used to find a patient based on patient name.",
        "input_parameters_with_datatype": [
            {
                "name": "patientname",
                "description": "the name of the patient",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "patient id",
                "description": "the ID of the patient",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLunchRecommendation",
        "format": "GetLunchRecommendation(weather_info) -> food_recommendation",
        "Id": 447,
        "description": "This API is to get lunch recommendation based on the weather.",
        "summary": "This API is to get lunch recommendation based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_info",
                "description": "the weather information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_recommendation",
                "description": "the lunch recommendation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindShowtime",
        "format": "FindShowtime(movie_name, location, date) -> showtime",
        "Id": 448,
        "description": "This API is to find the showtime for a specific movie in a given location on a specific date.",
        "summary": "This API is to find the showtime for a specific movie in a given location on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location where the movie is available",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for which the showtime is required",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the showtime of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookMovieTicket",
        "format": "BookMovieTicket(movie_name, showtime, number_of_tickets) -> booking confirmation",
        "Id": 449,
        "description": "This API is to book movie tickets for a specific movie at a specific showtime.",
        "summary": "This API is to book movie tickets for a specific movie at a specific showtime.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            },
            {
                "name": "showtime",
                "description": "the showtime of the movie",
                "datatype": "String"
            },
            {
                "name": "number_of_tickets",
                "description": "the number of tickets to be booked",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking confirmation",
                "description": "the confirmation of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchUserDetails",
        "format": "FetchUserDetails(user_id) -> user_details",
        "Id": 450,
        "description": "This API is to fetch user details based on the user_id.",
        "summary": "This API is to fetch user details based on the user_id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the ID of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_details",
                "description": "the details of the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GenerateOrderSummary",
        "format": "GenerateOrderSummary(order_id) -> order_summary",
        "Id": 451,
        "description": "This API is to generate a summary of the order using the order_id.",
        "summary": "This API is to generate a summary of the order using the order_id.",
        "input_parameters_with_datatype": [
            {
                "name": "order_id",
                "description": "the ID of the order",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_summary",
                "description": "the summary of the order",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EmailUser",
        "format": "EmailUser(user_details, message) -> email_status",
        "Id": 452,
        "description": "This API is to send an email to a user.",
        "summary": "This API is to send an email to a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_details",
                "description": "the details of the user",
                "datatype": "Object"
            },
            {
                "name": "message",
                "description": "the message to be sent",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "email_status",
                "description": "the status of the email",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodOrder",
        "format": "FoodOrder(user_ID, restaurant_ID, food_item) -> order_status",
        "Id": 453,
        "description": "This API is to order food.",
        "summary": "This API is to order food.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "restaurant_ID",
                "description": "the ID of the restaurant",
                "datatype": "Integer"
            },
            {
                "name": "food_item",
                "description": "the name of the food item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_status",
                "description": "the status of the food order",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Bookname2ISBN",
        "format": "Bookname2ISBN(book_name) -> isbn",
        "Id": 454,
        "description": "This API is to convert book name to book ISBN.",
        "summary": "This API is to convert book name to book ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "isbn",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Library2ID",
        "format": "Library2ID(library_name) -> library_id",
        "Id": 455,
        "description": "This API is to convert library name to library ID.",
        "summary": "This API is to convert library name to library ID.",
        "input_parameters_with_datatype": [
            {
                "name": "library_name",
                "description": "the name of the library",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "library_id",
                "description": "the ID of the library",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Storename2ID",
        "format": "Storename2ID(store_name) -> store_ID",
        "Id": 456,
        "description": "This API is to convert store name to store ID.",
        "summary": "This API is to convert store name to store ID.",
        "input_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_ID",
                "description": "the ID of the store",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddProductToStore",
        "format": "AddProductToStore(product_ID, store_ID, quantity) -> status",
        "Id": 457,
        "description": "This API is to add a product to a store.",
        "summary": "This API is to add a product to a store.",
        "input_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "store_ID",
                "description": "the ID of the store",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the product to add",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "status",
                "description": "the status of the operation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTitle2ISBN",
        "format": "BookTitle2ISBN(book_title) -> ISBN",
        "Id": 458,
        "description": "This API is to convert book title to book ISBN.",
        "summary": "This API is to convert book title to book ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyBook",
        "format": "BuyBook(user_ID, ISBN) -> purchase_status",
        "Id": 459,
        "description": "This API is to purchase a book for a user.",
        "summary": "This API is to purchase a book for a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "String"
            },
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_status",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Recipename2ID",
        "format": "Recipename2ID(recipe_name) -> recipe_ID",
        "Id": 460,
        "description": "This API is to convert recipe name to recipe ID.",
        "summary": "This API is to convert recipe name to recipe ID.",
        "input_parameters_with_datatype": [
            {
                "name": "recipe_name",
                "description": "the name of the recipe",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recipe_ID",
                "description": "the ID of the recipe",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Ingredientname2ID",
        "format": "Ingredientname2ID(ingredient_name) -> ingredient_ID",
        "Id": 461,
        "description": "This API is to convert ingredient name to ingredient ID.",
        "summary": "This API is to convert ingredient name to ingredient ID.",
        "input_parameters_with_datatype": [
            {
                "name": "ingredient_name",
                "description": "the name of the ingredient",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ingredient_ID",
                "description": "the ID of the ingredient",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRecipe",
        "format": "GetRecipe(Recipe_ID, Ingredient_ID) -> recipe",
        "Id": 462,
        "description": "This API is to get a recipe.",
        "summary": "This API is to get a recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "recipe_ID",
                "description": "the ID of the recipe",
                "datatype": "Integer"
            },
            {
                "name": "ingredient_ID",
                "description": "the ID of the ingredient",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recipe",
                "description": "the recipe details",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LocateBook",
        "format": "LocateBook(Book_ID, Author_ID) -> location",
        "Id": 463,
        "description": "This API is to locate a book in the library.",
        "summary": "This API is to locate a book in the library.",
        "input_parameters_with_datatype": [
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            },
            {
                "name": "author_ID",
                "description": "the ID of the author",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the book in the library",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CuisineType2ID",
        "format": "CuisineType2ID(cuisine_type) -> Cuisine_ID",
        "Id": 464,
        "description": "This API is to convert cuisine type to cuisine ID.",
        "summary": "This API is to convert cuisine type to cuisine ID.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine_type",
                "description": "the type of cuisine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Cuisine_ID",
                "description": "the ID of the cuisine",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserEmail2UserId",
        "format": "UserEmail2UserId(user_email) -> user_id",
        "Id": 465,
        "description": "This API is to convert user email to user ID.",
        "summary": "This API is to convert user email to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_email",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieTitle2MovieId",
        "format": "MovieTitle2MovieId(movie_title) -> movie_id",
        "Id": 466,
        "description": "This API is to convert movie title to movie ID.",
        "summary": "This API is to convert movie title to movie ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_title",
                "description": "the title of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserIDByUser",
        "format": "GetUserIDByUser(user_name) -> user_ID",
        "Id": 467,
        "description": "This API is to convert user name to user ID.",
        "summary": "This API is to convert user name to user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookIDByTitle",
        "format": "GetBookIDByTitle(book_title) -> book_ID",
        "Id": 468,
        "description": "This API is to convert book title to book ID.",
        "summary": "This API is to convert book title to book ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendBookByGenre",
        "format": "RecommendBookByGenre(user_ID, genre) -> recommended_book",
        "Id": 469,
        "description": "This API is to recommend a book based on genre.",
        "summary": "This API is to recommend a book based on genre.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "genre",
                "description": "the genre of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recommended_book",
                "description": "the recommended book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserFavouriteGenre",
        "format": "GetUserFavouriteGenre(user_ID) -> genre",
        "Id": 470,
        "description": "This API is to get the favourite genre of a user.",
        "summary": "This API is to get the favourite genre of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the favourite genre of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindMovieByGenre",
        "format": "FindMovieByGenre(genre) -> movie_ID",
        "Id": 471,
        "description": "This API is to find a movie by genre.",
        "summary": "This API is to find a movie by genre.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserCar",
        "format": "GetUserCar(user_name) -> car_id",
        "Id": 472,
        "description": "This API is to get the car ID of a user.",
        "summary": "This API is to get the car ID of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "car_id",
                "description": "the ID of the user's car",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetServiceStationNearMe",
        "format": "GetServiceStationNearMe(user_location) -> service_station_id",
        "Id": 473,
        "description": "This API is to get the nearest service station based on user location.",
        "summary": "This API is to get the nearest service station based on user location.",
        "input_parameters_with_datatype": [
            {
                "name": "user_location",
                "description": "the location of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "service_station_id",
                "description": "the ID of the nearest service station",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookCarService",
        "format": "BookCarService(car_id, service_station_id, user_name) -> booking_status",
        "Id": 474,
        "description": "This API is to book a car service at a service station.",
        "summary": "This API is to book a car service at a service station.",
        "input_parameters_with_datatype": [
            {
                "name": "car_id",
                "description": "the ID of the car",
                "datatype": "Integer"
            },
            {
                "name": "service_station_id",
                "description": "the ID of the service station",
                "datatype": "Integer"
            },
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Favoritename2ID",
        "format": "Favoritename2ID(favorite_name) -> favorite_ID",
        "Id": 475,
        "description": "This API is to convert favorite name to favorite ID.",
        "summary": "This API is to convert favorite name to favorite ID.",
        "input_parameters_with_datatype": [
            {
                "name": "favorite_name",
                "description": "the name of the favorite list",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "favorite_ID",
                "description": "the ID of the favorite list",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddMovieToFavorites",
        "format": "AddMovieToFavorites(favorite_ID, movie_ID) -> status",
        "Id": 476,
        "description": "This API is to add a movie to a favorite list.",
        "summary": "This API is to add a movie to a favorite list.",
        "input_parameters_with_datatype": [
            {
                "name": "favorite_ID",
                "description": "the ID of the favorite list",
                "datatype": "Integer"
            },
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "status",
                "description": "the status of adding the movie to the favorite list",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReadingListname2ID",
        "format": "ReadingListname2ID(readinglist_name) -> readinglist_ID",
        "Id": 477,
        "description": "This API is to convert reading list name to reading list ID.",
        "summary": "This API is to convert reading list name to reading list ID.",
        "input_parameters_with_datatype": [
            {
                "name": "readinglist_name",
                "description": "the name of the reading list",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "readinglist_ID",
                "description": "the ID of the reading list",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDueDate",
        "format": "GetDueDate(user_ID, book_ID) -> due_date",
        "Id": 478,
        "description": "This API is to get the due date of a book.",
        "summary": "This API is to get the due date of a book.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "book_ID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "due_date",
                "description": "the due date of the book",
                "datatype": "Date"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserIdToname",
        "format": "UserIdToname(userId) -> user_name",
        "Id": 479,
        "description": "This API is to convert user ID to user name.",
        "summary": "This API is to convert user ID to user name.",
        "input_parameters_with_datatype": [
            {
                "name": "userId",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RouteToLocation",
        "format": "RouteToLocation(route) -> location_coordinates",
        "Id": 480,
        "description": "This API is to convert route name to location coordinates.",
        "summary": "This API is to convert route name to location coordinates.",
        "input_parameters_with_datatype": [
            {
                "name": "route",
                "description": "the name of the bus route",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location_coordinates",
                "description": "the coordinates of the bus route location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckBusSchedule",
        "format": "CheckBusSchedule(location_coordinates, date, time) -> bus_schedule_info",
        "Id": 481,
        "description": "This API is to check the bus schedule.",
        "summary": "This API is to check the bus schedule.",
        "input_parameters_with_datatype": [
            {
                "name": "location_coordinates",
                "description": "the coordinates of the bus route location",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the bus schedule",
                "datatype": "Date"
            },
            {
                "name": "time",
                "description": "the time of the bus schedule",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bus_schedule_info",
                "description": "the information of the bus schedule",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookBusSeat",
        "format": "BookBusSeat(user_name, bus_schedule_info) -> booking_status",
        "Id": 482,
        "description": "This API is to book a bus seat.",
        "summary": "This API is to book a bus seat.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            },
            {
                "name": "bus_schedule_info",
                "description": "the information of the bus schedule",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Address2Coordinates",
        "format": "Address2Coordinates(address) -> coordinates",
        "Id": 483,
        "description": "This API is to convert address to coordinates.",
        "summary": "This API is to convert address to coordinates.",
        "input_parameters_with_datatype": [
            {
                "name": "address",
                "description": "the address of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "coordinates",
                "description": "the coordinates of the location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Libraryname2ID",
        "format": "Libraryname2ID(library_name) -> library_ID",
        "Id": 484,
        "description": "This API is to convert library name to library ID.",
        "summary": "This API is to convert library name to library ID.",
        "input_parameters_with_datatype": [
            {
                "name": "library_name",
                "description": "the name of the library",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "library_ID",
                "description": "the ID of the library",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendAttire",
        "format": "RecommendAttire(weather) -> attire",
        "Id": 485,
        "description": "This API is to recommend attire based on the weather.",
        "summary": "This API is to recommend attire based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "attire",
                "description": "the recommended attire",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ActorExtractor",
        "format": "ActorExtractor(movie_id) -> actor_name",
        "Id": 486,
        "description": "This API is to extract the actor name from the movie ID.",
        "summary": "This API is to extract the actor name from the movie ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "actor_name",
                "description": "the name of the actor",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieDatabase",
        "format": "MovieDatabase(title, year) -> movie_id",
        "Id": 487,
        "description": "This API is to retrieve the movie information based on the title and year.",
        "summary": "This API is to retrieve the movie information based on the title and year.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the movie",
                "datatype": "String"
            },
            {
                "name": "year",
                "description": "the year of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRatingChecker",
        "format": "MovieRatingChecker(actor_name, movie_id) -> rating",
        "Id": 488,
        "description": "This API is to check the rating of a movie.",
        "summary": "This API is to check the rating of a movie.",
        "input_parameters_with_datatype": [
            {
                "name": "actor_name",
                "description": "the name of the actor",
                "datatype": "String"
            },
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rating",
                "description": "the rating of the movie",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalTheater",
        "format": "GetLocalTheater(city) -> theater_name",
        "Id": 489,
        "description": "This API is to get the nearest theater in a specific city.",
        "summary": "This API is to get the nearest theater in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "theater_name",
                "description": "the name of the theater",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentPlays",
        "format": "GetCurrentPlays(theater_name) -> play_name",
        "Id": 490,
        "description": "This API is to get the currently performed plays at a specific theater.",
        "summary": "This API is to get the currently performed plays at a specific theater.",
        "input_parameters_with_datatype": [
            {
                "name": "theater_name",
                "description": "the name of the theater",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "play_name",
                "description": "the name of the play",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPlayReviews",
        "format": "GetPlayReviews(play_name) -> reviews",
        "Id": 491,
        "description": "This API is to get the reviews for a specific play.",
        "summary": "This API is to get the reviews for a specific play.",
        "input_parameters_with_datatype": [
            {
                "name": "play_name",
                "description": "the name of the play",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews for the play",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalMusicStore",
        "format": "GetLocalMusicStore(city) -> store_name",
        "Id": 492,
        "description": "This API is to get the nearest music store in a specific city.",
        "summary": "This API is to get the nearest music store in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the music store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentAlbums",
        "format": "GetCurrentAlbums(store_name) -> album_name",
        "Id": 493,
        "description": "This API is to get the currently playing albums at a music store.",
        "summary": "This API is to get the currently playing albums at a music store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the music store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "album_name",
                "description": "the name of the album",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAlbumReviews",
        "format": "GetAlbumReviews(album_name) -> reviews",
        "Id": 494,
        "description": "This API is to get the reviews for a specific album.",
        "summary": "This API is to get the reviews for a specific album.",
        "input_parameters_with_datatype": [
            {
                "name": "album_name",
                "description": "the name of the album",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews for the album",
                "datatype": "List of Strings"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocalMuseum",
        "format": "GetLocalMuseum(city) -> museum_name",
        "Id": 495,
        "description": "This API is to get the local museum in a specific city.",
        "summary": "This API is to get the local museum in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "museum_name",
                "description": "the name of the museum",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentExhibitions",
        "format": "GetCurrentExhibitions(museum_name) -> exhibition_name",
        "Id": 496,
        "description": "This API is to get the current exhibitions being showcased at a museum.",
        "summary": "This API is to get the current exhibitions being showcased at a museum.",
        "input_parameters_with_datatype": [
            {
                "name": "museum_name",
                "description": "the name of the museum",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "exhibition_name",
                "description": "the name of the exhibition",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetExhibitionReviews",
        "format": "GetExhibitionReviews(exhibition_name) -> reviews",
        "Id": 497,
        "description": "This API is to get the reviews for a specific exhibition.",
        "summary": "This API is to get the reviews for a specific exhibition.",
        "input_parameters_with_datatype": [
            {
                "name": "exhibition_name",
                "description": "the name of the exhibition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews for the exhibition",
                "datatype": "List of Strings"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckLibraryAvailability",
        "format": "CheckLibraryAvailability(bookDetails) -> libraryStatus",
        "Id": 498,
        "description": "This API is to check the availability of a book in the library.",
        "summary": "This API is to check the availability of a book in the library.",
        "input_parameters_with_datatype": [
            {
                "name": "bookDetails",
                "description": "the details of the book",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "libraryStatus",
                "description": "the availability status of the book in the library",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchParts",
        "format": "FetchParts(item) -> parts",
        "Id": 499,
        "description": "This API is to fetch parts for a specific item.",
        "summary": "This API is to fetch parts for a specific item.",
        "input_parameters_with_datatype": [
            {
                "name": "item",
                "description": "the item for which parts need to be fetched",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "parts",
                "description": "a list of parts for the specified item",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindElectronicsStores",
        "format": "FindElectronicsStores(location) -> stores",
        "Id": 500,
        "description": "This API is to find electronics stores in a specific location.",
        "summary": "This API is to find electronics stores in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location for which electronics stores need to be found",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "stores",
                "description": "a list of electronics stores in the specified location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchComponents",
        "format": "FetchComponents(product) -> components",
        "Id": 501,
        "description": "This API is to fetch components for a bicycle.",
        "summary": "This API is to fetch components for a bicycle.",
        "input_parameters_with_datatype": [
            {
                "name": "product",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "components",
                "description": "a list of components for the product",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindSportingGoodsStores",
        "format": "FindSportingGoodsStores(location) -> stores",
        "Id": 502,
        "description": "This API is to find sporting goods stores in a specific location.",
        "summary": "This API is to find sporting goods stores in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to search for sporting goods stores",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "stores",
                "description": "a list of sporting goods stores in the location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchBooks",
        "format": "FetchBooks(course_name) -> books",
        "Id": 503,
        "description": "This API is to fetch books based on a specific course.",
        "summary": "This API is to fetch books based on a specific course.",
        "input_parameters_with_datatype": [
            {
                "name": "course_name",
                "description": "the name of the course",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "books",
                "description": "a list of books related to the course",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindBookStores",
        "format": "FindBookStores(location) -> bookstores",
        "Id": 504,
        "description": "This API is to find bookstores in a specific location.",
        "summary": "This API is to find bookstores in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to search for bookstores",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bookstores",
                "description": "a list of bookstores in the location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchSupplies",
        "format": "FetchSupplies(class_name) -> supplies_list",
        "Id": 505,
        "description": "This API is to fetch supplies for a specific class.",
        "summary": "This API is to fetch supplies for a specific class.",
        "input_parameters_with_datatype": [
            {
                "name": "class_name",
                "description": "the name of the class",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "supplies_list",
                "description": "a list of supplies for the class",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindArtSuppliesStores",
        "format": "FindArtSuppliesStores(location) -> store_list",
        "Id": 506,
        "description": "This API is to find art supplies stores in a specific location.",
        "summary": "This API is to find art supplies stores in a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to search for art supplies stores",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_list",
                "description": "a list of art supplies stores in the location",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductSearch",
        "format": "ProductSearch(product_name) -> product_id",
        "Id": 507,
        "description": "This API is to search for a product by its name.",
        "summary": "This API is to search for a product by its name.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductReviews",
        "format": "ProductReviews(product_id) -> review_scores",
        "Id": 508,
        "description": "This API is to get the reviews of a product.",
        "summary": "This API is to get the reviews of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review_scores",
                "description": "the scores of the reviews",
                "datatype": "List of Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReviewAverage",
        "format": "ReviewAverage(review_scores) -> average_score",
        "Id": 509,
        "description": "This API is to calculate the average review score.",
        "summary": "This API is to calculate the average review score.",
        "input_parameters_with_datatype": [
            {
                "name": "review_scores",
                "description": "the scores of the reviews",
                "datatype": "List of Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "average_score",
                "description": "the average review score",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AverageRating",
        "format": "AverageRating(ratingScores) -> average_rating",
        "Id": 510,
        "description": "This API is to calculate the average rating of a movie.",
        "summary": "This API is to calculate the average rating of a movie.",
        "input_parameters_with_datatype": [
            {
                "name": "ratingScores",
                "description": "the ratings of the movie",
                "datatype": "List of Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "average_rating",
                "description": "the average rating of the movie",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AverageReview",
        "format": "AverageReview(reviewScores) -> averageReview",
        "Id": 511,
        "description": "This API is to calculate the average review score.",
        "summary": "This API is to calculate the average review score.",
        "input_parameters_with_datatype": [
            {
                "name": "reviewScores",
                "description": "the review scores for the product",
                "datatype": "List of Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "averageReview",
                "description": "the average review score",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodFestival",
        "format": "FoodFestival(park)",
        "Id": 512,
        "description": "This API is to get the food festivals currently open in parks in a specific city.",
        "summary": "This API is to get the food festivals currently open in parks in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "park",
                "description": "the name of the park",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "food_festivals",
                "description": "a list of food festivals",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OpenParks",
        "format": "OpenParks(city, time)",
        "Id": 513,
        "description": "This API is to get the list of open parks in a specific city at the current time.",
        "summary": "This API is to get the list of open parks in a specific city at the current time.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the current time",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "open_parks",
                "description": "a list of open parks",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TheatrePlay",
        "format": "TheatrePlay(theatre)",
        "Id": 514,
        "description": "This API is to get the theatre plays currently showing in theatres in a specific city.",
        "summary": "This API is to get the theatre plays currently showing in theatres in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "theatre",
                "description": "the name of the theatre",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "theatre_plays",
                "description": "a list of theatre plays",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OpenTheatres",
        "format": "OpenTheatres(city, time)",
        "Id": 515,
        "description": "This API is to get the list of open theatres in a specific city at the current time.",
        "summary": "This API is to get the list of open theatres in a specific city at the current time.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the current time",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "open_theatres",
                "description": "a list of open theatres",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TrainSchedule",
        "format": "TrainSchedule(source, destination, date) -> train_details",
        "Id": 516,
        "description": "This API is to get the train schedule from source to destination on a specific date.",
        "summary": "This API is to get the train schedule from source to destination on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "source",
                "description": "the source city",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of travel",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "train_details",
                "description": "the details of the train schedule",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PackageBooking",
        "format": "PackageBooking(trainDetails, hotelDetails, num_of_people) -> booking_status",
        "Id": 517,
        "description": "This API is to book a package including train and hotel for a specific number of people.",
        "summary": "This API is to book a package including train and hotel for a specific number of people.",
        "input_parameters_with_datatype": [
            {
                "name": "trainDetails",
                "description": "the details of the train schedule",
                "datatype": "Object"
            },
            {
                "name": "hotelDetails",
                "description": "the details of the available hotels",
                "datatype": "Object"
            },
            {
                "name": "num_of_people",
                "description": "the number of people for the package",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_status",
                "description": "the status of the package booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherInquiry",
        "format": "WeatherInquiry(location, date) -> weather_info",
        "Id": 518,
        "description": "This API is to inquire about the weather in a specific location on a specific date.",
        "summary": "This API is to inquire about the weather in a specific location on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to inquire about the weather",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date to inquire about the weather",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_info",
                "description": "the weather information for the specified location and date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantSelection",
        "format": "RestaurantSelection(cuisine, location) -> restaurant_details",
        "Id": 519,
        "description": "This API is to select a restaurant based on cuisine and location.",
        "summary": "This API is to select a restaurant based on cuisine and location.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the cuisine type to search for",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location to search for the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_details",
                "description": "the details of the selected restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherVerification",
        "format": "WeatherVerification(location, date) -> weather_status",
        "Id": 520,
        "description": "This API is to verify the weather in a specific location on a specific date.",
        "summary": "This API is to verify the weather in a specific location on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to verify the weather",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date to verify the weather",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_status",
                "description": "the status of the weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DinnerReservation",
        "format": "DinnerReservation(restaurant, time) -> reservation_status",
        "Id": 521,
        "description": "This API is to book a table for dinner.",
        "summary": "This API is to book a table for dinner.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the recommended restaurant",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the reservation time",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the status of the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserEmailRetriever",
        "format": "UserEmailRetriever(username) -> userEmail",
        "Id": 522,
        "description": "This API is to retrieve the email of a user based on their username.",
        "summary": "This API is to retrieve the email of a user based on their username.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "userEmail",
                "description": "the email of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EmailCompose",
        "format": "EmailCompose(userEmail, subject, body) -> email",
        "Id": 523,
        "description": "This API is to compose an email with a subject and body.",
        "summary": "This API is to compose an email with a subject and body.",
        "input_parameters_with_datatype": [
            {
                "name": "userEmail",
                "description": "the email of the user",
                "datatype": "String"
            },
            {
                "name": "subject",
                "description": "the subject of the email",
                "datatype": "String"
            },
            {
                "name": "body",
                "description": "the body of the email",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the composed email",
                "datatype": "Email"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EmailSender",
        "format": "EmailSender(email) -> status",
        "Id": 524,
        "description": "This API is to send an email to a user.",
        "summary": "This API is to send an email to a user.",
        "input_parameters_with_datatype": [
            {
                "name": "email",
                "description": "the email to be sent",
                "datatype": "Email"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "status",
                "description": "the status of the email sending",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindTransport",
        "format": "FindTransport(BusStation, Destination) -> Transportation",
        "Id": 525,
        "description": "This API is to find the optimal way to get to a destination from a bus station.",
        "summary": "This API is to find the optimal way to get to a destination from a bus station.",
        "input_parameters_with_datatype": [
            {
                "name": "BusStation",
                "description": "the name of the bus station",
                "datatype": "String"
            },
            {
                "name": "Destination",
                "description": "the destination to be reached",
                "datatype": "API: RestaurantFinder"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Transportation",
                "description": "the optimal transportation method to reach the destination",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantFinder",
        "format": "RestaurantFinder(Cityname, CuisineType) -> Restaurantname",
        "Id": 526,
        "description": "This API is to find a restaurant based on the city name and cuisine type.",
        "summary": "This API is to find a restaurant based on the city name and cuisine type.",
        "input_parameters_with_datatype": [
            {
                "name": "Cityname",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "CuisineType",
                "description": "the type of cuisine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Restaurantname",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CinemaLocation",
        "format": "CinemaLocation(Cityname, ShowTime) -> Cinemaname",
        "Id": 527,
        "description": "This API is to convert city name to cinema location.",
        "summary": "This API is to convert city name to cinema location.",
        "input_parameters_with_datatype": [
            {
                "name": "Cityname",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "ShowTime",
                "description": "the showtime of the movie",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Cinemaname",
                "description": "the name of the cinema",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchMovie",
        "format": "FetchMovie(Moviename) -> ShowTime",
        "Id": 528,
        "description": "This API is to fetch movie details.",
        "summary": "This API is to fetch movie details.",
        "input_parameters_with_datatype": [
            {
                "name": "Moviename",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ShowTime",
                "description": "the showtime of the movie",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNutritionalInfo",
        "format": "FindNutritionalInfo(MenuItems='MenuItems') -> NutritionalInfo",
        "Id": 529,
        "description": "This API is to find the nutritional information for menu items.",
        "summary": "This API is to find the nutritional information for menu items.",
        "input_parameters_with_datatype": [
            {
                "name": "MenuItems",
                "description": "the list of menu items",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "NutritionalInfo",
                "description": "the nutritional information for the menu items",
                "datatype": "Dictionary"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindClothingType",
        "format": "FindClothingType(WeatherCondition) -> clothing_type",
        "Id": 530,
        "description": "This API is to find the appropriate clothing type based on the weather condition.",
        "summary": "This API is to find the appropriate clothing type based on the weather condition.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_condition",
                "description": "the current weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_type",
                "description": "the recommended clothing type",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindStore",
        "format": "FindStore(ClothingType, location) -> store_list",
        "Id": 531,
        "description": "This API is to find the stores where the clothing type can be purchased.",
        "summary": "This API is to find the stores where the clothing type can be purchased.",
        "input_parameters_with_datatype": [
            {
                "name": "ClothingType",
                "description": "the recommended clothing type",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the name of the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_list",
                "description": "a list of stores where the clothing type can be purchased",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetShoppingSites",
        "format": "GetShoppingSites(ClothesList)",
        "Id": 532,
        "description": "This API is to get the shopping sites where clothing can be purchased.",
        "summary": "This API is to get the shopping sites where clothing can be purchased.",
        "input_parameters_with_datatype": [
            {
                "name": "ClothesList",
                "description": "the list of recommended clothing",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ShoppingSites",
                "description": "the list of shopping sites",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetIngredientsList",
        "format": "GetIngredientsList(Recipe)",
        "Id": 533,
        "description": "This API is to get the list of ingredients for a specific recipe.",
        "summary": "This API is to get the list of ingredients for a specific recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "Recipe",
                "description": "the recipe for the dish",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "IngredientsList",
                "description": "the list of ingredients for the recipe",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetGroceryStores",
        "format": "GetGroceryStores(IngredientsList)",
        "Id": 534,
        "description": "This API is to get the nearest grocery stores where ingredients can be found.",
        "summary": "This API is to get the nearest grocery stores where ingredients can be found.",
        "input_parameters_with_datatype": [
            {
                "name": "IngredientsList",
                "description": "the list of ingredients",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "GroceryStores",
                "description": "the nearest grocery stores",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookDetails",
        "format": "GetBookDetails(BookID) -> BookDetails",
        "Id": 535,
        "description": "This API is to get the details of a book by its ID.",
        "summary": "This API is to get the details of a book by its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "BookID",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "BookDetails",
                "description": "the details of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConvertToAudio",
        "format": "ConvertToAudio(BookDetails, Language) -> AudioFile",
        "Id": 536,
        "description": "This API is to convert book details to audio in a specific language.",
        "summary": "This API is to convert book details to audio in a specific language.",
        "input_parameters_with_datatype": [
            {
                "name": "BookDetails",
                "description": "the details of the book",
                "datatype": "String"
            },
            {
                "name": "Language",
                "description": "the language to convert the audio to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "AudioFile",
                "description": "the audio file of the book details in the specified language",
                "datatype": "File"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveAirportTransport",
        "format": "ReserveAirportTransport(flightDetails, hotelConfirmation) -> reservation_confirmation",
        "Id": 537,
        "description": "This API is to reserve airport transportation based on flight details and hotel confirmation.",
        "summary": "This API is to reserve airport transportation based on flight details and hotel confirmation.",
        "input_parameters_with_datatype": [
            {
                "name": "flightDetails",
                "description": "the details of the flight",
                "datatype": "String"
            },
            {
                "name": "hotelConfirmation",
                "description": "the confirmation details of the hotel reservation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_confirmation",
                "description": "the confirmation details of the airport transportation reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookReviews",
        "format": "BookReviews(author_info, num_of_reviews) -> reviews",
        "Id": 538,
        "description": "This API is to book reviews for a book.",
        "summary": "This API is to book reviews for a book.",
        "input_parameters_with_datatype": [
            {
                "name": "author_info",
                "description": "the information of the author",
                "datatype": "AuthorInfo"
            },
            {
                "name": "num_of_reviews",
                "description": "the number of reviews needed",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "a list of reviews",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorInfo",
        "format": "AuthorInfo(book_details) -> author_info",
        "Id": 539,
        "description": "This API is to get the information of an author.",
        "summary": "This API is to get the information of an author.",
        "input_parameters_with_datatype": [
            {
                "name": "book_details",
                "description": "the details of the book",
                "datatype": "BookSearch"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_info",
                "description": "the information of the author",
                "datatype": "Author"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TripPlan",
        "format": "TripPlan(city, hotel, location) -> itinerary",
        "Id": 540,
        "description": "This API is to organize a travel itinerary for a trip.",
        "summary": "This API is to organize a travel itinerary for a trip.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city of the trip",
                "datatype": "String"
            },
            {
                "name": "hotel",
                "description": "the information of the hotel",
                "datatype": "HotelInfo"
            },
            {
                "name": "location",
                "description": "the location of the restaurant",
                "datatype": "RestaurantLocation"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "itinerary",
                "description": "the travel itinerary",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelInfo",
        "format": "HotelInfo(city) -> hotel_info",
        "Id": 541,
        "description": "This API is to get information about a top-rated hotel in a city.",
        "summary": "This API is to get information about a top-rated hotel in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city of the hotel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel_info",
                "description": "the information of the hotel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantLocation",
        "format": "RestaurantLocation(city) -> restaurant_location",
        "Id": 542,
        "description": "This API is to get the location of a renowned restaurant in a city.",
        "summary": "This API is to get the location of a renowned restaurant in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_location",
                "description": "the location of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCityByZip",
        "format": "GetCityByZip(zip_code) -> city",
        "Id": 543,
        "description": "This API retrieves the city given a zip code.",
        "summary": "This API retrieves the city given a zip code.",
        "input_parameters_with_datatype": [
            {
                "name": "zip_code",
                "description": "the zip code",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city corresponding to the zip code",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetOutfitStore",
        "format": "GetOutfitStore(city, outfit) -> store_name",
        "Id": 544,
        "description": "This API finds stores in a given city where the recommended outfit can be purchased.",
        "summary": "This API finds stores in a given city where the recommended outfit can be purchased.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city for which stores are to be found",
                "datatype": "String"
            },
            {
                "name": "outfit",
                "description": "the recommended outfit",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the store where the recommended outfit can be purchased",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetClothing",
        "format": "GetClothing(weather_status) -> clothing_suggestion",
        "Id": 545,
        "description": "This API suggests clothing based on the current weather status.",
        "summary": "This API suggests clothing based on the current weather status.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_status",
                "description": "the current weather status",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_suggestion",
                "description": "the suggested clothing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetIngredients",
        "format": "GetIngredients(recipe_name) -> ingredients",
        "Id": 546,
        "description": "This API provides the list of ingredients required for a given recipe.",
        "summary": "This API provides the list of ingredients required for a given recipe.",
        "input_parameters_with_datatype": [
            {
                "name": "recipe_name",
                "description": "the name of the recipe",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ingredients",
                "description": "the list of ingredients required for the recipe",
                "datatype": "List of Strings"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckStock",
        "format": "CheckStock(product_ID) -> stock_status",
        "Id": 547,
        "description": "This API checks the stock status of a product.",
        "summary": "This API checks the stock status of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "stock_status",
                "description": "the stock status of the product",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PurchaseItem",
        "format": "PurchaseItem(user_ID, product_ID, quantity) -> purchase_status",
        "Id": 548,
        "description": "This API is to purchase a product.",
        "summary": "This API is to purchase a product.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "product_ID",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "quantity",
                "description": "the quantity of the product to purchase",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_status",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieTimes",
        "format": "GetMovieTimes(movie_name) -> showtimes",
        "Id": 549,
        "description": "This API is to get the showtimes for a specific movie.",
        "summary": "This API is to get the showtimes for a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtimes",
                "description": "the showtimes for the movie",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookMovieTickets",
        "format": "BookMovieTickets(showtime) -> ticket",
        "Id": 550,
        "description": "This API is to book movie tickets for a specific showtime.",
        "summary": "This API is to book movie tickets for a specific showtime.",
        "input_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the showtime for the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ticket",
                "description": "the ticket for the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCityLocation",
        "format": "GetCityLocation(city_name) -> latitude, longitude",
        "Id": 551,
        "description": "This API is to find the geographical location of a city.",
        "summary": "This API is to find the geographical location of a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "latitude",
                "description": "the latitude of the city",
                "datatype": "Float"
            },
            {
                "name": "longitude",
                "description": "the longitude of the city",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserAge",
        "format": "GetUserAge(username) -> age",
        "Id": 552,
        "description": "This API is to get the user's age based on their username.",
        "summary": "This API is to get the user's age based on their username.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "age",
                "description": "the age of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDailyCalorieIntake",
        "format": "GetDailyCalorieIntake(age) -> recommended daily calorie intake",
        "Id": 553,
        "description": "This API is to find the appropriate daily calorie intake for someone of a specific age.",
        "summary": "This API is to find the appropriate daily calorie intake for someone of a specific age.",
        "input_parameters_with_datatype": [
            {
                "name": "age",
                "description": "the age of the person",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "recommended daily calorie intake",
                "description": "the recommended daily calorie intake for the person",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetNutritionPlan",
        "format": "GetNutritionPlan(calorie_intake) -> nutrition plan",
        "Id": 554,
        "description": "This API is to generate a nutrition plan based on a certain calorie intake.",
        "summary": "This API is to generate a nutrition plan based on a certain calorie intake.",
        "input_parameters_with_datatype": [
            {
                "name": "calorie_intake",
                "description": "the calorie intake for the nutrition plan",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "nutrition plan",
                "description": "the generated nutrition plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LocatePharmacy",
        "format": "LocatePharmacy(city, drug) -> pharmacy_name",
        "Id": 555,
        "description": "This API locates a pharmacy in a given city that has a certain drug in stock.",
        "summary": "This API locates a pharmacy in a given city that has a certain drug in stock.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "drug",
                "description": "the name of the drug",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "pharmacy_name",
                "description": "the name of the pharmacy",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveMedicine",
        "format": "ReserveMedicine(pharmacy_name, drug, patient_name) -> reservation_status",
        "Id": 556,
        "description": "This API allows the user to reserve a medicine in a specific pharmacy.",
        "summary": "This API allows the user to reserve a medicine in a specific pharmacy.",
        "input_parameters_with_datatype": [
            {
                "name": "pharmacy_name",
                "description": "the name of the pharmacy",
                "datatype": "String"
            },
            {
                "name": "drug",
                "description": "the name of the drug",
                "datatype": "String"
            },
            {
                "name": "patient_name",
                "description": "the name of the patient",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the reservation status of the medicine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFlightNumber",
        "format": "GetFlightNumber(person_ID) -> flight_number",
        "Id": 557,
        "description": "This API retrieves the flight number a certain person booked.",
        "summary": "This API retrieves the flight number a certain person booked.",
        "input_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_number",
                "description": "the number of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckBaggageAllowance",
        "format": "CheckBaggageAllowance(airline) -> baggage_allowance",
        "Id": 558,
        "description": "This API is to check the baggage allowance of a specific airline.",
        "summary": "This API is to check the baggage allowance of a specific airline.",
        "input_parameters_with_datatype": [
            {
                "name": "airline",
                "description": "the specific airline",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "baggage_allowance",
                "description": "the baggage allowance of the airline",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestLuggage",
        "format": "SuggestLuggage(baggage_allowance, trip_duration) -> luggage_suggestions",
        "Id": 559,
        "description": "This API is to suggest the type and amount of luggage based on baggage allowance and trip duration.",
        "summary": "This API is to suggest the type and amount of luggage based on baggage allowance and trip duration.",
        "input_parameters_with_datatype": [
            {
                "name": "baggage_allowance",
                "description": "the baggage allowance of the airline",
                "datatype": "Object"
            },
            {
                "name": "trip_duration",
                "description": "the duration of the trip",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "luggage_suggestions",
                "description": "the suggested type and amount of luggage",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetExchangeRate",
        "format": "GetExchangeRate(from_currency, to_currency) -> exchange_rate",
        "Id": 560,
        "description": "This API is to get the exchange rate from one currency to another.",
        "summary": "This API is to get the exchange rate from one currency to another.",
        "input_parameters_with_datatype": [
            {
                "name": "from_currency",
                "description": "the currency to convert from",
                "datatype": "String"
            },
            {
                "name": "to_currency",
                "description": "the currency to convert to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "exchange_rate",
                "description": "the exchange rate from the from_currency to the to_currency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateCost",
        "format": "CalculateCost(price, exchange_rate) -> cost",
        "Id": 561,
        "description": "This API is to calculate the cost of a product in a different currency.",
        "summary": "This API is to calculate the cost of a product in a different currency.",
        "input_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of the product",
                "datatype": "Float"
            },
            {
                "name": "exchange_rate",
                "description": "the exchange rate from the currency of the price to the desired currency",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cost",
                "description": "the cost of the product in the desired currency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetTravelTime",
        "format": "GetTravelTime(source,destination) -> travel_time",
        "Id": 562,
        "description": "This API is to get the approximate travel time between two locations.",
        "summary": "This API is to get the approximate travel time between two locations.",
        "input_parameters_with_datatype": [
            {
                "name": "source",
                "description": "the starting location",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "travel_time",
                "description": "the approximate travel time between the two locations",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchMovieDatabase",
        "format": "SearchMovieDatabase(movie) -> movie_details",
        "Id": 563,
        "description": "This API is to search for the details of a specified movie.",
        "summary": "This API is to search for the details of a specified movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_details",
                "description": "the details of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckCinemaSchedule",
        "format": "CheckCinemaSchedule(movie_details) -> schedule",
        "Id": 564,
        "description": "This API is used to check the schedule of the specified movie in the nearest cinemas.",
        "summary": "This API is used to check the schedule of the specified movie in the nearest cinemas.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_details",
                "description": "the details of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "schedule",
                "description": "the schedule of the movie in the nearest cinemas",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindBookStore",
        "format": "FindBookStore(book_information) -> bookstore_location",
        "Id": 565,
        "description": "This API is to find a bookstore that has the searched book in stock.",
        "summary": "This API is to find a bookstore that has the searched book in stock.",
        "input_parameters_with_datatype": [
            {
                "name": "book_information",
                "description": "information about the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bookstore_location",
                "description": "location of the bookstore",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDirections",
        "format": "GetDirections(destination) -> direction_information",
        "Id": 566,
        "description": "This API is to generate directions to a specified destination.",
        "summary": "This API is to generate directions to a specified destination.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "the destination to get directions to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "direction_information",
                "description": "information about the directions",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyTickets",
        "format": "BuyTickets(showtime, number_of_tickets) -> ticket_confirmation",
        "Id": 567,
        "description": "This API is to buy a specified number of tickets for a specified showtime.",
        "summary": "This API is to buy a specified number of tickets for a specified showtime.",
        "input_parameters_with_datatype": [
            {
                "name": "showtime",
                "description": "the showtime of the movie",
                "datatype": "String"
            },
            {
                "name": "number_of_tickets",
                "description": "the number of tickets to buy",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ticket_confirmation",
                "description": "the confirmation of the ticket purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantReviews",
        "format": "RestaurantReviews(restaurant_id) -> reviewScores",
        "Id": 568,
        "description": "This API finds the review scores for a specific restaurant id.",
        "summary": "This API finds the review scores for a specific restaurant id.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_id",
                "description": "the id of the restaurant",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviewScores",
                "description": "the review scores of the restaurant",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AverageScore",
        "format": "AverageScore(reviewScores) -> avgScore",
        "Id": 569,
        "description": "This API calculates the average score of given review scores.",
        "summary": "This API calculates the average score of given review scores.",
        "input_parameters_with_datatype": [
            {
                "name": "reviewScores",
                "description": "the review scores of the restaurant",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "avgScore",
                "description": "the average score of the review scores",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Reservation",
        "format": "Reservation(table_id, date, time) -> confirmation",
        "Id": 570,
        "description": "This API reserves a table at the given date and time and returns a confirmation.",
        "summary": "This API reserves a table at the given date and time and returns a confirmation.",
        "input_parameters_with_datatype": [
            {
                "name": "table_id",
                "description": "the ID of the table",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the reservation",
                "datatype": "Date"
            },
            {
                "name": "time",
                "description": "the time of the reservation",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "confirmation",
                "description": "the confirmation of the reservation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetHotelDetails",
        "format": "GetHotelDetails(city, date) -> hotel",
        "Id": 571,
        "description": "This API provides hotel availability and pricing in a specific city on a specific date.",
        "summary": "This API provides hotel availability and pricing in a specific city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the hotel booking",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel",
                "description": "the details of the hotel",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CarRentalSearch",
        "format": "CarRentalSearch(city, date) -> rentalCarDetails",
        "Id": 572,
        "description": "This API is used to search for cars available for rent in a certain city on a specific date.",
        "summary": "This API is used to search for cars available for rent in a certain city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the car rental is being searched",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date for the car rental search",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rentalCarDetails",
                "description": "the details of the available rental cars",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CinemaFinder",
        "format": "CinemaFinder(movieDetails) -> cinemaLocations",
        "Id": 573,
        "description": "This API finds the cinemas where the searched movie is being shown.",
        "summary": "This API finds the cinemas where the searched movie is being shown.",
        "input_parameters_with_datatype": [
            {
                "name": "movieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cinemaLocations",
                "description": "the locations of the cinemas",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShowtimeCheck",
        "format": "ShowtimeCheck(cinemaLocations, movieDetails) -> showTimes",
        "Id": 574,
        "description": "This API checks the showtimes for a specific movie at the found cinemas.",
        "summary": "This API checks the showtimes for a specific movie at the found cinemas.",
        "input_parameters_with_datatype": [
            {
                "name": "cinemaLocations",
                "description": "the locations of the cinemas",
                "datatype": "Object"
            },
            {
                "name": "movieDetails",
                "description": "the details of the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showTimes",
                "description": "the showtimes of the movie at the cinemas",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreLocator",
        "format": "StoreLocator(productDetails) -> storeLocations",
        "Id": 575,
        "description": "This API finds the store where the searched product is available.",
        "summary": "This API finds the store where the searched product is available.",
        "input_parameters_with_datatype": [
            {
                "name": "productDetails",
                "description": "the details of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "storeLocations",
                "description": "the locations of the stores where the product is available",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreWorkingHours",
        "format": "StoreWorkingHours(storeLocations) -> workingHours",
        "Id": 576,
        "description": "This API provides the working hours of the selected store.",
        "summary": "This API provides the working hours of the selected store.",
        "input_parameters_with_datatype": [
            {
                "name": "storeLocations",
                "description": "the locations of the stores",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "workingHours",
                "description": "the working hours of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CarRentalService",
        "format": "CarRentalService(hotelBookingConfirmation) -> carRentalConfirmation",
        "Id": 577,
        "description": "This API books a car rental service based on the hotel booking confirmation.",
        "summary": "This API books a car rental service based on the hotel booking confirmation.",
        "input_parameters_with_datatype": [
            {
                "name": "hotelBookingConfirmation",
                "description": "the confirmation of the hotel booking",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "carRentalConfirmation",
                "description": "the confirmation of the car rental service",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieTime",
        "format": "GetMovieTime(movie_name) -> ShowTime",
        "Id": 578,
        "description": "This API gets the showtime for a specific movie.",
        "summary": "This API gets the showtime for a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ShowTime",
                "description": "the showtime for the movie",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindClothing",
        "format": "FindClothing(WeatherStatus) -> ClothingRecommendation",
        "Id": 579,
        "description": "This API recommends the clothing based on the weather status.",
        "summary": "This API recommends the clothing based on the weather status.",
        "input_parameters_with_datatype": [
            {
                "name": "WeatherStatus",
                "description": "the weather status",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ClothingRecommendation",
                "description": "the recommended clothing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckFlight",
        "format": "CheckFlight(flight_number) -> ArrivalTime",
        "Id": 580,
        "description": "This API checks the arrival time for a specific flight.",
        "summary": "This API checks the arrival time for a specific flight.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_number",
                "description": "the number of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ArrivalTime",
                "description": "the arrival time of the flight",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindTaxi",
        "format": "FindTaxi(ArrivalTime) -> TaxiInfo",
        "Id": 581,
        "description": "This API finds a taxi available for the specific arrival time.",
        "summary": "This API finds a taxi available for the specific arrival time.",
        "input_parameters_with_datatype": [
            {
                "name": "ArrivalTime",
                "description": "the arrival time of the flight",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "TaxiInfo",
                "description": "information about the available taxi",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateFare",
        "format": "CalculateFare(TaxiInfo, destination) -> Fare",
        "Id": 582,
        "description": "This API calculates the fare for the taxi ride based on taxi information and destination.",
        "summary": "This API calculates the fare for the taxi ride based on taxi information and destination.",
        "input_parameters_with_datatype": [
            {
                "name": "TaxiInfo",
                "description": "information about the available taxi",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination of the taxi ride",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Fare",
                "description": "the fare for the taxi ride",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieFinderAPI",
        "format": "MovieFinderAPI(Genre, Year) -> MovieList",
        "Id": 583,
        "description": "This API provides a list of movies based on genre and the year of release.",
        "summary": "This API provides a list of movies based on genre and the year of release.",
        "input_parameters_with_datatype": [
            {
                "name": "Genre",
                "description": "the genre of the movie",
                "datatype": "String"
            },
            {
                "name": "Year",
                "description": "the year of release of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "MovieList",
                "description": "a list of movies",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRatingAPI",
        "format": "MovieRatingAPI(Moviename) -> MovieRating",
        "Id": 584,
        "description": "This API provides the rating for a specific movie.",
        "summary": "This API provides the rating for a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "Moviename",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "MovieRating",
                "description": "the rating of the movie",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieSuggestionAPI",
        "format": "MovieSuggestionAPI(MovieList, MovieRating) -> MovieSuggestion",
        "Id": 585,
        "description": "This API suggests a movie to watch based on the movie list and highest movie rating.",
        "summary": "This API suggests a movie to watch based on the movie list and highest movie rating.",
        "input_parameters_with_datatype": [
            {
                "name": "MovieList",
                "description": "a list of movies",
                "datatype": "List"
            },
            {
                "name": "MovieRating",
                "description": "the rating of the movie",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "MovieSuggestion",
                "description": "the suggested movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConvertToCurrency",
        "format": "ConvertToCurrency(Price, Currency) -> Amount",
        "Id": 586,
        "description": "This API converts a book price into a specific currency.",
        "summary": "This API converts a book price into a specific currency.",
        "input_parameters_with_datatype": [
            {
                "name": "Price",
                "description": "the price of the book",
                "datatype": "Float"
            },
            {
                "name": "Currency",
                "description": "the target currency",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Amount",
                "description": "the converted price in the target currency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PageCount",
        "format": "PageCount(Title) -> Pages",
        "Id": 587,
        "description": "This API fetches the number of pages in a book using its title.",
        "summary": "This API fetches the number of pages in a book using its title.",
        "input_parameters_with_datatype": [
            {
                "name": "Title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Pages",
                "description": "the number of pages in the book",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReadingTime",
        "format": "ReadingTime(Pages) -> Time",
        "Id": 588,
        "description": "This API estimates the time it will take to read a book based on the number of pages.",
        "summary": "This API estimates the time it will take to read a book based on the number of pages.",
        "input_parameters_with_datatype": [
            {
                "name": "Pages",
                "description": "the number of pages in the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Time",
                "description": "the estimated time to read the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OutfitSuggestion",
        "format": "OutfitSuggestion(WeatherCondition) -> Outfit",
        "Id": 589,
        "description": "This API suggests an outfit based on the weather condition.",
        "summary": "This API suggests an outfit based on the weather condition.",
        "input_parameters_with_datatype": [
            {
                "name": "WeatherCondition",
                "description": "the current weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Outfit",
                "description": "the suggested outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Shop",
        "format": "Shop(Outfit) -> Stores",
        "Id": 590,
        "description": "This API finds stores that have the suggested outfit in stock.",
        "summary": "This API finds stores that have the suggested outfit in stock.",
        "input_parameters_with_datatype": [
            {
                "name": "Outfit",
                "description": "the suggested outfit",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Stores",
                "description": "the stores that have the suggested outfit in stock",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AlbumArtist",
        "format": "AlbumArtist(album_name) -> artist",
        "Id": 591,
        "description": "This API is to query the artist who created a certain album.",
        "summary": "This API is to query the artist who created a certain album.",
        "input_parameters_with_datatype": [
            {
                "name": "album_name",
                "description": "the name of the album",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "artist",
                "description": "the artist who created the album",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ArtistGenre",
        "format": "ArtistGenre(artist_name) -> genre",
        "Id": 592,
        "description": "This API is to query the genre of a certain artist.",
        "summary": "This API is to query the genre of a certain artist.",
        "input_parameters_with_datatype": [
            {
                "name": "artist_name",
                "description": "the name of the artist",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the artist",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MusicRecommend",
        "format": "MusicRecommend(artist, genre, year) -> music",
        "Id": 593,
        "description": "This API recommends music based on the certain artist, genre and year.",
        "summary": "This API recommends music based on the certain artist, genre and year.",
        "input_parameters_with_datatype": [
            {
                "name": "artist",
                "description": "the artist of the song",
                "datatype": "String"
            },
            {
                "name": "genre",
                "description": "the genre of the song",
                "datatype": "String"
            },
            {
                "name": "year",
                "description": "the year of the song",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "music",
                "description": "the recommended music",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookAuthor",
        "format": "BookAuthor(book_name) -> author",
        "Id": 594,
        "description": "This API is to query the author information of a book.",
        "summary": "This API is to query the author information of a book.",
        "input_parameters_with_datatype": [
            {
                "name": "book_name",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the author of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorBirthplace",
        "format": "AuthorBirthplace(author) -> birthplace",
        "Id": 595,
        "description": "This API retrieves the birthplace of a specific author.",
        "summary": "This API retrieves the birthplace of a specific author.",
        "input_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "birthplace",
                "description": "the birthplace of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FoodCuisine",
        "format": "FoodCuisine(food_name) -> cuisine",
        "Id": 596,
        "description": "This API retrieves the cuisine of a particular food.",
        "summary": "This API retrieves the cuisine of a particular food.",
        "input_parameters_with_datatype": [
            {
                "name": "food_name",
                "description": "the name of the food",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the cuisine of the food",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CuisineOrigin",
        "format": "CuisineOrigin(cuisine) -> country",
        "Id": 597,
        "description": "This API provides the origin country of a specific cuisine.",
        "summary": "This API provides the origin country of a specific cuisine.",
        "input_parameters_with_datatype": [
            {
                "name": "cuisine",
                "description": "the cuisine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "country",
                "description": "the origin country of the cuisine",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CountryCapital",
        "format": "CountryCapital(country) -> capital",
        "Id": 598,
        "description": "This API retrieves the capital city of a specific country.",
        "summary": "This API retrieves the capital city of a specific country.",
        "input_parameters_with_datatype": [
            {
                "name": "country",
                "description": "the country",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "capital",
                "description": "the capital city of the country",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserSearch",
        "format": "UserSearch(username) -> user_details",
        "Id": 599,
        "description": "This API is used to find the details of the user.",
        "summary": "This API is used to find the details of the user.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_details",
                "description": "the details of the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OrderHistory",
        "format": "OrderHistory(user_id) -> order_history",
        "Id": 600,
        "description": "This API is used to find out the order history of a user.",
        "summary": "This API is used to find out the order history of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_history",
                "description": "the order history of the user",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OrderSearch",
        "format": "OrderSearch(order_id) -> order_details",
        "Id": 601,
        "description": "This API is used to find the details of the specific order.",
        "summary": "This API is used to find the details of the specific order.",
        "input_parameters_with_datatype": [
            {
                "name": "order_id",
                "description": "the ID of the order",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "order_details",
                "description": "the details of the order",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserProfile",
        "format": "UserProfile(username) -> user profile",
        "Id": 602,
        "description": "This API is used to find user's profile.",
        "summary": "This API is used to find user's profile.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user profile",
                "description": "the profile of the user",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateCalorie",
        "format": "CalculateCalorie(food) -> calorie",
        "Id": 603,
        "description": "This API calculates calorie of a given food.",
        "summary": "This API calculates calorie of a given food.",
        "input_parameters_with_datatype": [
            {
                "name": "food",
                "description": "the name of the food",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "calorie",
                "description": "the calorie count of the food",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MealSuggestion",
        "format": "MealSuggestion(calorie, dietary_restrictions) -> suggested meals",
        "Id": 604,
        "description": "This API suggests meals based on calorie count and dietary restrictions.",
        "summary": "This API suggests meals based on calorie count and dietary restrictions.",
        "input_parameters_with_datatype": [
            {
                "name": "calorie",
                "description": "the calorie count",
                "datatype": "Integer"
            },
            {
                "name": "dietary_restrictions",
                "description": "the dietary restrictions",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "suggested meals",
                "description": "the suggested meals",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrentWeather",
        "format": "GetCurrentWeather(location) -> current_weather",
        "Id": 605,
        "description": "This API retrieves the current weather for a given location.",
        "summary": "This API retrieves the current weather for a given location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location for which to retrieve the current weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "current_weather",
                "description": "the current weather for the given location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CompareWeather",
        "format": "CompareWeather(current_weather, weather_forecast) -> weather_comparison",
        "Id": 606,
        "description": "This API compares the current weather with the forecasted weather.",
        "summary": "This API compares the current weather with the forecasted weather.",
        "input_parameters_with_datatype": [
            {
                "name": "current_weather",
                "description": "the current weather for a location",
                "datatype": "String"
            },
            {
                "name": "weather_forecast",
                "description": "the weather forecast for the next seven days for a location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_comparison",
                "description": "the comparison result of the current weather with the forecasted weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantRecommend",
        "format": "RestaurantRecommend(city, cuisine, weather) -> restaurants",
        "Id": 607,
        "description": "This API recommends restaurants in a certain city that serve a particular cuisine depending on the weather.",
        "summary": "This API recommends restaurants in a certain city that serve a particular cuisine depending on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "cuisine",
                "description": "the type of cuisine",
                "datatype": "String"
            },
            {
                "name": "weather",
                "description": "the weather forecast information",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurants",
                "description": "the recommended restaurants",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EventSearch",
        "format": "EventSearch(city, date) -> event",
        "Id": 608,
        "description": "This API provides details on events happening in the specified city on a given date.",
        "summary": "This API provides details on events happening in the specified city on a given date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the event",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "event",
                "description": "the details of the event",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CityGuide",
        "format": "CityGuide(restaurant, event) -> guide",
        "Id": 609,
        "description": "This API creates a guide containing restaurant and event information.",
        "summary": "This API creates a guide containing restaurant and event information.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the details of the restaurant",
                "datatype": "Object"
            },
            {
                "name": "event",
                "description": "the details of the event",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "guide",
                "description": "the guide containing restaurant and event information",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TravelPlan",
        "format": "TravelPlan(weather, restaurant) -> plan",
        "Id": 610,
        "description": "This API generates a travel plan based on the weather and restaurant recommendation.",
        "summary": "This API generates a travel plan based on the weather and restaurant recommendation.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast",
                "datatype": "String"
            },
            {
                "name": "restaurant",
                "description": "the recommended restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "plan",
                "description": "the generated travel plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NewsHeadlines",
        "format": "NewsHeadlines(company) -> news",
        "Id": 611,
        "description": "This API gives the most recent news headlines about the specified company.",
        "summary": "This API gives the most recent news headlines about the specified company.",
        "input_parameters_with_datatype": [
            {
                "name": "company",
                "description": "the name of the company",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "news",
                "description": "the most recent news headlines about the company",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "InvestmentStrategy",
        "format": "InvestmentStrategy(stockPrice, news) -> strategy",
        "Id": 612,
        "description": "This API generates an investment strategy based on the stock price and news headlines.",
        "summary": "This API generates an investment strategy based on the stock price and news headlines.",
        "input_parameters_with_datatype": [
            {
                "name": "stockPrice",
                "description": "the current price of the company's stock",
                "datatype": "Float"
            },
            {
                "name": "news",
                "description": "the most recent news headlines about the company",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "strategy",
                "description": "the generated investment strategy",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantRating",
        "format": "RestaurantRating(city, restaurant) -> rating",
        "Id": 613,
        "description": "This API gives the current rating of a restaurant in a specified city.",
        "summary": "This API gives the current rating of a restaurant in a specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "restaurant",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rating",
                "description": "the current rating of the restaurant",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantPriceRange",
        "format": "RestaurantPriceRange(city, restaurant) -> priceRange",
        "Id": 614,
        "description": "This API gives the price range for a restaurant in the specified city.",
        "summary": "This API gives the price range for a restaurant in the specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "restaurant",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "priceRange",
                "description": "the price range of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TransportFare",
        "format": "TransportFare(city, destination) -> fare",
        "Id": 615,
        "description": "This API gives the one-way transportation fare to the destination in a specified city.",
        "summary": "This API gives the one-way transportation fare to the destination in a specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fare",
                "description": "the one-way transportation fare",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TotalDinnerCost",
        "format": "TotalDinnerCost(restaurantPriceRange, transportFare) -> totalCost",
        "Id": 616,
        "description": "This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.",
        "summary": "This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurantPriceRange",
                "description": "the price range of the restaurant",
                "datatype": "String"
            },
            {
                "name": "transportFare",
                "description": "the one-way transportation fare",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "totalCost",
                "description": "the total cost of dinner",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ClothingSuggestion",
        "format": "ClothingSuggestion(weather) -> clothes",
        "Id": 617,
        "description": "This API suggests suitable clothing based on the weather.",
        "summary": "This API suggests suitable clothing based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothes",
                "description": "the suggested clothing based on the weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FashionStore",
        "format": "FashionStore(clothes, location) -> price",
        "Id": 618,
        "description": "This API gives the price of suggested clothing in the local stores of the given location.",
        "summary": "This API gives the price of suggested clothing in the local stores of the given location.",
        "input_parameters_with_datatype": [
            {
                "name": "clothes",
                "description": "the suggested clothing",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location for which price is required",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the price of suggested clothing in the local stores",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DistanceCalculator",
        "format": "DistanceCalculator(origin, destination) -> distance",
        "Id": 619,
        "description": "This API calculates the distance between two locations.",
        "summary": "This API calculates the distance between two locations.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the starting location",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the calculated distance",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TrafficEstimator",
        "format": "TrafficEstimator(distance) -> traffic",
        "Id": 620,
        "description": "This API estimates the traffic based on the distance.",
        "summary": "This API estimates the traffic based on the distance.",
        "input_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the distance between two locations",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "traffic",
                "description": "the estimated traffic",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TimeCalculator",
        "format": "TimeCalculator(traffic, modeOfTransport) -> time",
        "Id": 621,
        "description": "This API calculates the time taken to travel based on the traffic and mode of transport.",
        "summary": "This API calculates the time taken to travel based on the traffic and mode of transport.",
        "input_parameters_with_datatype": [
            {
                "name": "traffic",
                "description": "the estimated traffic",
                "datatype": "String"
            },
            {
                "name": "modeOfTransport",
                "description": "the mode of transport",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the calculated time taken to travel",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateTime",
        "format": "CalculateTime(distance, speed) -> time",
        "Id": 622,
        "description": "This API calculates the travel time based on distance and speed.",
        "summary": "This API calculates the travel time based on distance and speed.",
        "input_parameters_with_datatype": [
            {
                "name": "distance",
                "description": "the distance of the journey",
                "datatype": "Float"
            },
            {
                "name": "speed",
                "description": "the average speed of the journey",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the estimated travel time",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RoutePlanner",
        "format": "RoutePlanner(origin, destination, distance, time) -> route",
        "Id": 623,
        "description": "This API provides a travel route plan from origin to destination with distance and estimated time.",
        "summary": "This API provides a travel route plan from origin to destination with distance and estimated time.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the starting point of the journey",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination point of the journey",
                "datatype": "String"
            },
            {
                "name": "distance",
                "description": "the distance of the journey",
                "datatype": "Float"
            },
            {
                "name": "time",
                "description": "the estimated travel time",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "route",
                "description": "the travel route plan",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserLocation",
        "format": "UserLocation(userID) -> location",
        "Id": 624,
        "description": "This API gets the location of a specific user.",
        "summary": "This API gets the location of a specific user.",
        "input_parameters_with_datatype": [
            {
                "name": "userID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherCheck",
        "format": "WeatherCheck(location) -> weather",
        "Id": 625,
        "description": "This API checks the weather of a specific location.",
        "summary": "This API checks the weather of a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location to check the weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather of the location",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DressSuggestion",
        "format": "DressSuggestion(weather) -> dress",
        "Id": 626,
        "description": "This API suggests a dress based on the weather.",
        "summary": "This API suggests a dress based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather to suggest a dress",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "dress",
                "description": "the suggested dress based on the weather",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OutdoorActivityRecommend",
        "format": "OutdoorActivityRecommend(city, weather) -> activity",
        "Id": 627,
        "description": "This API recommends outdoor activities based on the weather and city.",
        "summary": "This API recommends outdoor activities based on the weather and city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "weather",
                "description": "the weather forecast for the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the recommended outdoor activity based on the weather and city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BusSchedule",
        "format": "BusSchedule(bus_number) -> bus_info",
        "Id": 628,
        "description": "This API is to query the schedule and route details of a specific bus.",
        "summary": "This API is to query the schedule and route details of a specific bus.",
        "input_parameters_with_datatype": [
            {
                "name": "bus_number",
                "description": "the number of the bus",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bus_info",
                "description": "the schedule and route details of the bus",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ParkRecommend",
        "format": "ParkRecommend(city, weather) -> parks",
        "Id": 629,
        "description": "This API recommends parks in a city that are suitable for particular weather.",
        "summary": "This API recommends parks in a city that are suitable for particular weather.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "weather",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "parks",
                "description": "the recommended parks in the city",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MenuGetter",
        "format": "MenuGetter(restaurant) -> menu",
        "Id": 630,
        "description": "This API is used to get the menu from a specified restaurant.",
        "summary": "This API is used to get the menu from a specified restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "menu",
                "description": "the menu of the restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FootballTeamInfo",
        "format": "FootballTeamInfo(team_name) -> team_info",
        "Id": 631,
        "description": "This API is to query the detailed information of the football team.",
        "summary": "This API is to query the detailed information of the football team.",
        "input_parameters_with_datatype": [
            {
                "name": "team_name",
                "description": "the name of the football team",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "team_info",
                "description": "the detailed information of the football team",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GameSchedule",
        "format": "GameSchedule(team_info) -> game_schedule",
        "Id": 632,
        "description": "This API provides a schedule for the team's games based on the team information.",
        "summary": "This API provides a schedule for the team's games based on the team information.",
        "input_parameters_with_datatype": [
            {
                "name": "team_info",
                "description": "the detailed information of the football team",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "game_schedule",
                "description": "the schedule for the team's games",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TicketPrice",
        "format": "TicketPrice(game_schedule) -> ticket_price",
        "Id": 633,
        "description": "This API calculates the ticket price based on the game schedule.",
        "summary": "This API calculates the ticket price based on the game schedule.",
        "input_parameters_with_datatype": [
            {
                "name": "game_schedule",
                "description": "the schedule for the team's games",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ticket_price",
                "description": "the price for watching the team's games",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieRatings",
        "format": "GetMovieRatings(movie) -> rating_info",
        "Id": 634,
        "description": "This API returns the rating information of a specific movie.",
        "summary": "This API returns the rating information of a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "rating_info",
                "description": "the rating information of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindMovieGenre",
        "format": "FindMovieGenre(movie) -> genre",
        "Id": 635,
        "description": "This API finds out the genre of a specific movie.",
        "summary": "This API finds out the genre of a specific movie.",
        "input_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookDetails",
        "format": "BookDetails(title) -> bookInfo",
        "Id": 636,
        "description": "This API returns details about a certain book.",
        "summary": "This API returns details about a certain book.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bookInfo",
                "description": "the information about the book",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorInformation",
        "format": "AuthorInformation(author) -> authorBio",
        "Id": 637,
        "description": "This API provides information about an author.",
        "summary": "This API provides information about an author.",
        "input_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "authorBio",
                "description": "the information about the author",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReadingSuggestion",
        "format": "ReadingSuggestion(bookInfo, authorBio) -> readingPlan",
        "Id": 638,
        "description": "This API generates a reading plan based on book and author information.",
        "summary": "This API generates a reading plan based on book and author information.",
        "input_parameters_with_datatype": [
            {
                "name": "bookInfo",
                "description": "the information about the book",
                "datatype": "Object"
            },
            {
                "name": "authorBio",
                "description": "the information about the author",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "readingPlan",
                "description": "the generated reading plan",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelReservation",
        "format": "HotelReservation(city, date) -> hotelInfo",
        "Id": 639,
        "description": "This API returns information about hotel reservations in a certain city on a particular date.",
        "summary": "This API returns information about hotel reservations in a certain city on a particular date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the hotel reservation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotelInfo",
                "description": "information about hotel reservations",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EventSuggestions",
        "format": "EventSuggestions(city, date) -> eventDetails",
        "Id": 640,
        "description": "This API provides suggestions for events happening in a certain city on a specific date.",
        "summary": "This API provides suggestions for events happening in a certain city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the event suggestions",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "eventDetails",
                "description": "suggestions for events happening in the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FuelConsumption",
        "format": "FuelConsumption(flightID, distance) -> fuelAmount",
        "Id": 641,
        "description": "This API estimates the fuel amount consumed by a certain flight on a certain distance.",
        "summary": "This API estimates the fuel amount consumed by a certain flight on a certain distance.",
        "input_parameters_with_datatype": [
            {
                "name": "flightID",
                "description": "the ID of the flight",
                "datatype": "Integer"
            },
            {
                "name": "distance",
                "description": "the distance of the flight",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fuelAmount",
                "description": "the estimated fuel amount consumed by the flight",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OutfitStoreSearch",
        "format": "OutfitStoreSearch(clothing, city) -> store",
        "Id": 642,
        "description": "This API searches for stores that sell the recommended clothing in the city.",
        "summary": "This API searches for stores that sell the recommended clothing in the city.",
        "input_parameters_with_datatype": [
            {
                "name": "clothing",
                "description": "the recommended clothing",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store",
                "description": "the stores that sell the recommended clothing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CityPopulation",
        "format": "CityPopulation(city) -> population",
        "Id": 643,
        "description": "This API retrieves the population of a given city.",
        "summary": "This API retrieves the population of a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "population",
                "description": "the population of the city",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherImpactOnPopulation",
        "format": "WeatherImpactOnPopulation(weather, population) -> impact",
        "Id": 644,
        "description": "This API estimates the impact of weather conditions on the population.",
        "summary": "This API estimates the impact of weather conditions on the population.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the current weather conditions",
                "datatype": "String"
            },
            {
                "name": "population",
                "description": "the population of the city",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "impact",
                "description": "the estimated impact of weather conditions on the population",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRecommender",
        "format": "MovieRecommender(genre) -> movie",
        "Id": 645,
        "description": "This API recommends a movie based on a specific genre.",
        "summary": "This API recommends a movie based on a specific genre.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie",
                "description": "the recommended movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReservationMaker",
        "format": "ReservationMaker(restaurant_name, time) -> reservation",
        "Id": 646,
        "description": "This API makes a reservation at a specific restaurant for a certain time.",
        "summary": "This API makes a reservation at a specific restaurant for a certain time.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_name",
                "description": "the name of the restaurant",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the time of the reservation",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation",
                "description": "the reservation details",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieDetails",
        "format": "MovieDetails(movie_title) -> movie_id",
        "Id": 647,
        "description": "This API is to get the movie ID using the movie title.",
        "summary": "This API is to get the movie ID using the movie title.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_title",
                "description": "the title of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieReviews",
        "format": "MovieReviews(movie_id) -> reviews",
        "Id": 648,
        "description": "This API is to gather reviews of a movie using the movie ID.",
        "summary": "This API is to gather reviews of a movie using the movie ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_id",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews of the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SentimentAnalysis",
        "format": "SentimentAnalysis(reviews) -> sentiment",
        "Id": 649,
        "description": "This API is to perform sentiment analysis on a set of reviews to determine public opinion about a movie.",
        "summary": "This API is to perform sentiment analysis on a set of reviews to determine public opinion about a movie.",
        "input_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the set of reviews",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "sentiment",
                "description": "the public sentiment about the movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Bookname",
        "format": "Bookname(ISBN) -> title",
        "Id": 650,
        "description": "This API is used to get the title of the book given its ISBN.",
        "summary": "This API is used to get the title of the book given its ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Authorname",
        "format": "Authorname(title) -> author",
        "Id": 651,
        "description": "This API is used to fetch the name of the author of a book given its title.",
        "summary": "This API is used to fetch the name of the author of a book given its title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Publisher",
        "format": "Publisher(author) -> publisher",
        "Id": 652,
        "description": "This API is used to get the publisher of the book given its author.",
        "summary": "This API is used to get the publisher of the book given its author.",
        "input_parameters_with_datatype": [
            {
                "name": "author",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "publisher",
                "description": "the publisher of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TrainInfo",
        "format": "TrainInfo(train_name, city) -> train_station",
        "Id": 653,
        "description": "This API is to query the location information of the train station.",
        "summary": "This API is to query the location information of the train station.",
        "input_parameters_with_datatype": [
            {
                "name": "train_name",
                "description": "the name of the train",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "train_station",
                "description": "the location information of the train station",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreFinder",
        "format": "StoreFinder(zip_code, store_type) -> store_location",
        "Id": 654,
        "description": "This API is to find the nearest store of a given type located in the given zip code.",
        "summary": "This API is to find the nearest store of a given type located in the given zip code.",
        "input_parameters_with_datatype": [
            {
                "name": "zip_code",
                "description": "the zip code of the location",
                "datatype": "String"
            },
            {
                "name": "store_type",
                "description": "the type of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_location",
                "description": "the location of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreRating",
        "format": "StoreRating(store_location) -> store_rating",
        "Id": 655,
        "description": "This API is to find the customer rating of a particular store.",
        "summary": "This API is to find the customer rating of a particular store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_location",
                "description": "the location of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_rating",
                "description": "the rating of the store",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductPriceQuery",
        "format": "ProductPriceQuery(store_location, product_name) -> product_price",
        "Id": 656,
        "description": "This API is to find the price of a specific product in the given store.",
        "summary": "This API is to find the price of a specific product in the given store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_location",
                "description": "the location of the store",
                "datatype": "String"
            },
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_price",
                "description": "the price of the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConnectivityCheck",
        "format": "ConnectivityCheck(origin, destination) -> connection_status",
        "Id": 657,
        "description": "This API checks the internet connectivity status between the origin and destination.",
        "summary": "This API checks the internet connectivity status between the origin and destination.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the origin location",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "connection_status",
                "description": "the status of the internet connectivity",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SpeedTest",
        "format": "SpeedTest(connection_status) -> speed_details",
        "Id": 658,
        "description": "This API performs a speed test for the connection and provides the details.",
        "summary": "This API performs a speed test for the connection and provides the details.",
        "input_parameters_with_datatype": [
            {
                "name": "connection_status",
                "description": "the status of the internet connectivity",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "speed_details",
                "description": "the details of the internet connection speed",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FileTransfer",
        "format": "FileTransfer(speed_details, file_size) -> transfer_time",
        "Id": 659,
        "description": "This API calculates the time required to transfer a file of a certain size over the input internet connection speed.",
        "summary": "This API calculates the time required to transfer a file of a certain size over the input internet connection speed.",
        "input_parameters_with_datatype": [
            {
                "name": "speed_details",
                "description": "the details of the internet connection speed",
                "datatype": "String"
            },
            {
                "name": "file_size",
                "description": "the size of the file to be transferred",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "transfer_time",
                "description": "the time required to transfer the file",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ActivitySuggestion",
        "format": "ActivitySuggestion(weather_condition) -> activity_type",
        "Id": 660,
        "description": "This API suggests suitable activities based on the weather condition.",
        "summary": "This API suggests suitable activities based on the weather condition.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_condition",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity_type",
                "description": "the suggested activity type",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PlacesRecommender",
        "format": "PlacesRecommender(city, activity_type) -> place_name",
        "Id": 661,
        "description": "This API recommends places to do the suggested activity in the city.",
        "summary": "This API recommends places to do the suggested activity in the city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "activity_type",
                "description": "the suggested activity type",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "place_name",
                "description": "the recommended place name",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherForecaster",
        "format": "WeatherForecaster(city, date) -> weather_condition",
        "Id": 662,
        "description": "This API provides the weather condition of a city on a specific date.",
        "summary": "This API provides the weather condition of a city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_condition",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OutfitRecommender",
        "format": "OutfitRecommender(weather_condition) -> outfit",
        "Id": 663,
        "description": "This API suggests an appropriate outfit based on the weather condition.",
        "summary": "This API suggests an appropriate outfit based on the weather condition.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_condition",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the recommended outfit",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShoppingAssistant",
        "format": "ShoppingAssistant(outfit, city) -> store_address",
        "Id": 664,
        "description": "This API locates the nearest store where the recommended outfit can be purchased.",
        "summary": "This API locates the nearest store where the recommended outfit can be purchased.",
        "input_parameters_with_datatype": [
            {
                "name": "outfit",
                "description": "the recommended outfit",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_address",
                "description": "the address of the nearest store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CarRentalAvailability",
        "format": "CarRentalAvailability(city, date) -> available_cars",
        "Id": 665,
        "description": "This API provides information about the availability of rental cars in a city on a certain date.",
        "summary": "This API provides information about the availability of rental cars in a city on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for car rental availability",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "available_cars",
                "description": "the information about the availability of rental cars in the city on the specified date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConferenceDetails",
        "format": "ConferenceDetails(city) -> conferences",
        "Id": 666,
        "description": "This API provides information about conferences in a city.",
        "summary": "This API provides information about conferences in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "conferences",
                "description": "the information about conferences in the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BusinessTripPlanner",
        "format": "BusinessTripPlanner(weather, available_cars, conferences) -> business_plan",
        "Id": 667,
        "description": "This API helps in planning your business trip by combining weather, car rental, and conference information.",
        "summary": "This API helps in planning your business trip by combining weather, car rental, and conference information.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather forecast for the city on the specified date",
                "datatype": "String"
            },
            {
                "name": "available_cars",
                "description": "the information about the availability of rental cars in the city on the specified date",
                "datatype": "String"
            },
            {
                "name": "conferences",
                "description": "the information about conferences in the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "business_plan",
                "description": "the business trip plan combining weather, car rental, and conference information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OutdoorActivities",
        "format": "OutdoorActivities(city, weather_forecast) -> activities",
        "Id": 668,
        "description": "This API provides information about possible outdoor activities in a city based on the weather forecast.",
        "summary": "This API provides information about possible outdoor activities in a city based on the weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "weather_forecast",
                "description": "the weather forecast for the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activities",
                "description": "the possible outdoor activities in the city based on the weather forecast",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantSuggestion",
        "format": "RestaurantSuggestion(city, food_preference) -> suggested_restaurant",
        "Id": 669,
        "description": "This API provides suggestions for restaurants based on food preferences in a city.",
        "summary": "This API provides suggestions for restaurants based on food preferences in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "food_preference",
                "description": "the food preference",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "suggested_restaurant",
                "description": "the suggested restaurant based on food preferences in the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TripPlanner",
        "format": "TripPlanner(weather_forecast, activities, suggested_restaurant) -> trip_plan",
        "Id": 670,
        "description": "This API helps in planning your trip by combining weather forecast, outdoor activities and restaurant suggestions.",
        "summary": "This API helps in planning your trip by combining weather forecast, outdoor activities and restaurant suggestions.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_forecast",
                "description": "the weather forecast for the city",
                "datatype": "String"
            },
            {
                "name": "activities",
                "description": "the possible outdoor activities in the city based on the weather forecast",
                "datatype": "String"
            },
            {
                "name": "suggested_restaurant",
                "description": "the suggested restaurant based on food preferences in the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "trip_plan",
                "description": "the trip plan combining weather forecast, outdoor activities and restaurant suggestions",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAuthor",
        "format": "GetAuthor(book_id) -> author_name",
        "Id": 671,
        "description": "This API is used to get the author name of a specific book.",
        "summary": "This API is used to get the author name of a specific book.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_name",
                "description": "the name of the author",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFlightID",
        "format": "GetFlightID(flight_options, weather_status) -> flight_id",
        "Id": 672,
        "description": "This API returns the flight id considering the weather status.",
        "summary": "This API returns the flight id considering the weather status.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_options",
                "description": "the available flight options",
                "datatype": "List"
            },
            {
                "name": "weather_status",
                "description": "the current weather status",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_id",
                "description": "the id of the flight",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchFare",
        "format": "SearchFare(src, dest, date) -> fare_id",
        "Id": 673,
        "description": "This API is used to search for the fare between source and destination on a particular date.",
        "summary": "This API is used to search for the fare between source and destination on a particular date.",
        "input_parameters_with_datatype": [
            {
                "name": "src",
                "description": "the source location",
                "datatype": "String"
            },
            {
                "name": "dest",
                "description": "the destination location",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of travel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "fare_id",
                "description": "the ID of the fare",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckDiscount",
        "format": "CheckDiscount(coupon, fare_id) -> discount_amount",
        "Id": 674,
        "description": "This API is used to check the discount available on a particular fare using a coupon.",
        "summary": "This API is used to check the discount available on a particular fare using a coupon.",
        "input_parameters_with_datatype": [
            {
                "name": "coupon",
                "description": "the coupon code",
                "datatype": "String"
            },
            {
                "name": "fare_id",
                "description": "the ID of the fare",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "discount_amount",
                "description": "the amount of discount",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateFinalFare",
        "format": "CalculateFinalFare(fare_id, discount_amount) -> final_fare",
        "Id": 675,
        "description": "This API calculates the final fare after applying the discount.",
        "summary": "This API calculates the final fare after applying the discount.",
        "input_parameters_with_datatype": [
            {
                "name": "fare_id",
                "description": "the ID of the fare",
                "datatype": "Integer"
            },
            {
                "name": "discount_amount",
                "description": "the amount of discount",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "final_fare",
                "description": "the final fare after applying the discount",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchProduct",
        "format": "SearchProduct(productId) -> product details",
        "Id": 676,
        "description": "This API is to search for a product based on its ID.",
        "summary": "This API is to search for a product based on its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "productId",
                "description": "the ID of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product details",
                "description": "the details of the product",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetLocation",
        "format": "GetLocation(product) -> location",
        "Id": 677,
        "description": "This API is to fetch the location where the product is available.",
        "summary": "This API is to fetch the location where the product is available.",
        "input_parameters_with_datatype": [
            {
                "name": "product",
                "description": "the product details",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location where the product is available",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetOutdoorActivity",
        "format": "GetOutdoorActivity(weather_forecast) -> activity",
        "Id": 678,
        "description": "This API is to suggest an outdoor activity based on the weather forecast.",
        "summary": "This API is to suggest an outdoor activity based on the weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_forecast",
                "description": "the forecast of the weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity",
                "description": "the suggested outdoor activity",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "IdentifyBook",
        "format": "IdentifyBook(title) -> book_details",
        "Id": 679,
        "description": "This API is to find the book details when the user specifies a book title.",
        "summary": "This API is to find the book details when the user specifies a book title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_details",
                "description": "the details of the book",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookStore",
        "format": "BookStore(book_id) -> availability",
        "Id": 680,
        "description": "This API checks the availability of the book in the store given a book id.",
        "summary": "This API checks the availability of the book in the store given a book id.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the id of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability",
                "description": "the availability of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchFilm",
        "format": "SearchFilm(title) -> film_id",
        "Id": 681,
        "description": "This API is to find the film id when the user specifies a film title.",
        "summary": "This API is to find the film id when the user specifies a film title.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the film",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "film_id",
                "description": "the id of the film",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ShowTimes",
        "format": "ShowTimes(film_id, date) -> show_times",
        "Id": 682,
        "description": "This API returns the available show times for a specific film on a specific date.",
        "summary": "This API returns the available show times for a specific film on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "film_id",
                "description": "the id of the film",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the show",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "show_times",
                "description": "the available show times",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookMovie",
        "format": "BookMovie(film_id, date, show_time) -> booking confirmation",
        "Id": 683,
        "description": "This API is to book movie tickets for a specific film, date and show time.",
        "summary": "This API is to book movie tickets for a specific film, date and show time.",
        "input_parameters_with_datatype": [
            {
                "name": "film_id",
                "description": "the id of the film",
                "datatype": "Integer"
            },
            {
                "name": "date",
                "description": "the date of the show",
                "datatype": "String"
            },
            {
                "name": "show_time",
                "description": "the show time",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking confirmation",
                "description": "the confirmation of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBookISBN",
        "format": "GetBookISBN(book_title) -> ISBN",
        "Id": 684,
        "description": "This API retrieves the ISBN of a specific book title.",
        "summary": "This API retrieves the ISBN of a specific book title.",
        "input_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAvailability",
        "format": "GetAvailability(ISBN) -> availability",
        "Id": 685,
        "description": "This API checks the availability of a book by its ISBN.",
        "summary": "This API checks the availability of a book by its ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability",
                "description": "the availability of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchStockData",
        "format": "FetchStockData(stock_symbol) -> stock_data",
        "Id": 686,
        "description": "This API is to retrieve real-time stock data for a given stock symbol.",
        "summary": "This API is to retrieve real-time stock data for a given stock symbol.",
        "input_parameters_with_datatype": [
            {
                "name": "stock_symbol",
                "description": "the symbol of the stock",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "stock_data",
                "description": "the real-time stock data",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BasicDataAnalysis",
        "format": "BasicDataAnalysis(stock_data) -> analyzed_data",
        "Id": 687,
        "description": "This API performs a basic data analysis on the input stock data.",
        "summary": "This API performs a basic data analysis on the input stock data.",
        "input_parameters_with_datatype": [
            {
                "name": "stock_data",
                "description": "the real-time stock data",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "analyzed_data",
                "description": "the analyzed stock data",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GenerateReport",
        "format": "GenerateReport(analyzed_data, template) -> report",
        "Id": 688,
        "description": "This API generates a stock analysis report based on the analyzed data and a specific template.",
        "summary": "This API generates a stock analysis report based on the analyzed data and a specific template.",
        "input_parameters_with_datatype": [
            {
                "name": "analyzed_data",
                "description": "the analyzed stock data",
                "datatype": "Object"
            },
            {
                "name": "template",
                "description": "the specific template for the report",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "report",
                "description": "the generated stock analysis report",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchProductDetails",
        "format": "FetchProductDetails(product_id) -> product_info",
        "Id": 689,
        "description": "This API fetches the product details using product id.",
        "summary": "This API fetches the product details using product id.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the id of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_info",
                "description": "the details of the product",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateShoppingCart",
        "format": "CreateShoppingCart(user_id, product_info) -> shopping_cart_id",
        "Id": 690,
        "description": "This API creates a shopping cart with the provided user id and product info.",
        "summary": "This API creates a shopping cart with the provided user id and product info.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "String"
            },
            {
                "name": "product_info",
                "description": "the details of the product",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "shopping_cart_id",
                "description": "the id of the shopping cart",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckoutShoppingCart",
        "format": "CheckoutShoppingCart(shopping_cart_id) -> checkout_status",
        "Id": 691,
        "description": "This API checks out the shopping cart and completes the purchase.",
        "summary": "This API checks out the shopping cart and completes the purchase.",
        "input_parameters_with_datatype": [
            {
                "name": "shopping_cart_id",
                "description": "the id of the shopping cart",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "checkout_status",
                "description": "the status of the checkout",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPassengerId",
        "format": "GetPassengerId(name, dob) -> passenger_id",
        "Id": 692,
        "description": "This API is to get the passenger id using the name and date of birth.",
        "summary": "This API is to get the passenger id using the name and date of birth.",
        "input_parameters_with_datatype": [
            {
                "name": "name",
                "description": "the name of the passenger",
                "datatype": "String"
            },
            {
                "name": "dob",
                "description": "the date of birth of the passenger",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "passenger_id",
                "description": "the ID of the passenger",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchLocation",
        "format": "SearchLocation(person) -> location",
        "Id": 693,
        "description": "This API is to find the location based on person's name.",
        "summary": "This API is to find the location based on person's name.",
        "input_parameters_with_datatype": [
            {
                "name": "person",
                "description": "the name of the person",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the person",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestClothing",
        "format": "SuggestClothing(weather_status) -> clothing_suggestion",
        "Id": 694,
        "description": "This API is to suggest clothing based on the weather status.",
        "summary": "This API is to suggest clothing based on the weather status.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_status",
                "description": "the status of the weather",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_suggestion",
                "description": "suggested clothing based on the weather status",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookAvailability",
        "format": "BookAvailability(book_id) -> availability",
        "Id": 695,
        "description": "This API is to check the availability of a book by its ID.",
        "summary": "This API is to check the availability of a book by its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability",
                "description": "the availability status of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookLocation",
        "format": "BookLocation(book_availability) -> location",
        "Id": 696,
        "description": "This API is to find the location of a book in the library.",
        "summary": "This API is to find the location of a book in the library.",
        "input_parameters_with_datatype": [
            {
                "name": "book_availability",
                "description": "the availability status of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the book in the library",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FilmFinder",
        "format": "FilmFinder(genre, location) -> film_id",
        "Id": 697,
        "description": "This API is to find the film ID based on genre and location.",
        "summary": "This API is to find the film ID based on genre and location.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the film",
                "datatype": "String"
            },
            {
                "name": "location",
                "description": "the location where film is played",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "film_id",
                "description": "the ID of the film",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TicketBooking",
        "format": "TicketBooking(eventDetails, num_of_tickets) -> booking confirmation.",
        "Id": 698,
        "description": "This API is to book tickets for an event.",
        "summary": "This API is to book tickets for an event.",
        "input_parameters_with_datatype": [
            {
                "name": "eventDetails",
                "description": "the details of the event",
                "datatype": "String"
            },
            {
                "name": "num_of_tickets",
                "description": "the number of tickets to book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking confirmation",
                "description": "the confirmation of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReservationBooking",
        "format": "ReservationBooking(hotelDetails, restaurantLocations) -> booking status",
        "Id": 699,
        "description": "This API is to book a hotel and a restaurant.",
        "summary": "This API is to book a hotel and a restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "hotelDetails",
                "description": "the details of the hotel",
                "datatype": "Object"
            },
            {
                "name": "restaurantLocations",
                "description": "the locations of the restaurants",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherAPI",
        "format": "WeatherAPI(City) -> WeatherConditions",
        "Id": 700,
        "description": "This API is to get the current weather conditions of a specified city.",
        "summary": "This API is to get the current weather conditions of a specified city.",
        "input_parameters_with_datatype": [
            {
                "name": "City",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "WeatherConditions",
                "description": "the current weather conditions of the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PackingListGenerator",
        "format": "PackingListGenerator(numberOfDays, Clothes) -> Packing List",
        "Id": 701,
        "description": "This API is to generate a packing list for a trip.",
        "summary": "This API is to generate a packing list for a trip.",
        "input_parameters_with_datatype": [
            {
                "name": "numberOfDays",
                "description": "the number of the days of the trip",
                "datatype": "String"
            },
            {
                "name": "Clothes",
                "description": "the suggestion of clothes",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Packing List",
                "description": "the generated packing list for the trip",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "IPGeolocation",
        "format": "IPGeolocation(ip) -> location",
        "Id": 702,
        "description": "This API is to get the location based on the IP address.",
        "summary": "This API is to get the location based on the IP address.",
        "input_parameters_with_datatype": [
            {
                "name": "ip",
                "description": "the IP address",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the IP address",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorDetails",
        "format": "AuthorDetails(book_details) -> author_info",
        "Id": 703,
        "description": "This API is to get the details of an author from a book.",
        "summary": "This API is to get the details of an author from a book.",
        "input_parameters_with_datatype": [
            {
                "name": "book_details",
                "description": "the details of the book",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_info",
                "description": "the information of the author",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TopBooks",
        "format": "TopBooks(author_info, num_of_books) -> Top_Books",
        "Id": 704,
        "description": "This API is to get the top rated books of an author.",
        "summary": "This API is to get the top rated books of an author.",
        "input_parameters_with_datatype": [
            {
                "name": "author_info",
                "description": "the information of the author",
                "datatype": "Object"
            },
            {
                "name": "num_of_books",
                "description": "the number of top rated books to retrieve",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Top_Books",
                "description": "the list of top rated books of the author",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DirectorDetails",
        "format": "DirectorDetails(movie_info) -> director_info",
        "Id": 705,
        "description": "This API is to get the details about a director based on a movie's information.",
        "summary": "This API is to get the details about a director based on a movie's information.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_info",
                "description": "The information about the movie, including director information",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "director_info",
                "description": "The information about the director",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TopMovies",
        "format": "TopMovies(director_info, num_of_movies) -> top_movies",
        "Id": 706,
        "description": "This API is to get the top movies directed by a specific director.",
        "summary": "This API is to get the top movies directed by a specific director.",
        "input_parameters_with_datatype": [
            {
                "name": "director_info",
                "description": "The information about the director",
                "datatype": "Object"
            },
            {
                "name": "num_of_movies",
                "description": "The number of top movies to recommend",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "top_movies",
                "description": "A list of the top movies directed by the director",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RealEstatePrice",
        "format": "RealEstatePrice(city, propertyType) -> propertyPrice",
        "Id": 707,
        "description": "This API is to get the price of a specific type of property in a specific city.",
        "summary": "This API is to get the price of a specific type of property in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the property is located",
                "datatype": "String"
            },
            {
                "name": "propertyType",
                "description": "the type of the property",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "propertyPrice",
                "description": "the price of the specific property",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MortgageCalculator",
        "format": "MortgageCalculator(propertyPrice, downPayment, interestRate, term) -> mortgagePayment",
        "Id": 708,
        "description": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
        "summary": "This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.",
        "input_parameters_with_datatype": [
            {
                "name": "propertyPrice",
                "description": "the price of the property",
                "datatype": "Float"
            },
            {
                "name": "downPayment",
                "description": "the down payment for the property",
                "datatype": "Float"
            },
            {
                "name": "interestRate",
                "description": "the interest rate of the mortgage",
                "datatype": "Float"
            },
            {
                "name": "term",
                "description": "the term of the mortgage",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "mortgagePayment",
                "description": "the mortgage payment",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TaxEstimator",
        "format": "TaxEstimator(propertyPrice, city) -> tax",
        "Id": 709,
        "description": "This API is to estimate the tax based on property price and city.",
        "summary": "This API is to estimate the tax based on property price and city.",
        "input_parameters_with_datatype": [
            {
                "name": "propertyPrice",
                "description": "the price of the property",
                "datatype": "Float"
            },
            {
                "name": "city",
                "description": "the city where the property is located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "tax",
                "description": "the estimated tax",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "PropertyOwnershipCost",
        "format": "PropertyOwnershipCost(mortgagePayment, tax) -> ownershipCost",
        "Id": 710,
        "description": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
        "summary": "This API is to calculate the overall cost of property ownership including mortgage payment and tax.",
        "input_parameters_with_datatype": [
            {
                "name": "mortgagePayment",
                "description": "the mortgage payment",
                "datatype": "Float"
            },
            {
                "name": "tax",
                "description": "the property tax",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ownershipCost",
                "description": "the overall cost of property ownership",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelAvailability",
        "format": "HotelAvailability(city, date) -> hotel",
        "Id": 711,
        "description": "This API is to check the availability of hotels in a specific city on a specific date.",
        "summary": "This API is to check the availability of hotels in a specific city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the hotel is located",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for checking the hotel availability",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotel",
                "description": "the available hotels",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookTrip",
        "format": "BookTrip(flight, hotel) -> booking status.",
        "Id": 712,
        "description": "This API is to book a trip including flight and hotel.",
        "summary": "This API is to book a trip including flight and hotel.",
        "input_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the flight to be booked",
                "datatype": "String"
            },
            {
                "name": "hotel",
                "description": "the hotel to be booked",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking status",
                "description": "the status of the booking",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindFlights",
        "format": "FindFlights(city1, city2, date) -> flight",
        "Id": 713,
        "description": "This API is to find flights between two cities on a specific date.",
        "summary": "This API is to find flights between two cities on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city1",
                "description": "the departure city",
                "datatype": "String"
            },
            {
                "name": "city2",
                "description": "the destination city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of the flight",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight",
                "description": "the flight details",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FlightDetails",
        "format": "FlightDetails(destination, departure_date) -> flight_info",
        "Id": 714,
        "description": "This API is to get the flight details.",
        "summary": "This API is to get the flight details.",
        "input_parameters_with_datatype": [
            {
                "name": "destination",
                "description": "The destination of the trip",
                "datatype": "String"
            },
            {
                "name": "departure_date",
                "description": "The departure date of the flight",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_info",
                "description": "Information of the flight to the destination on the specified date",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ActivityPlanning",
        "format": "ActivityPlanning(hotel_reservation, destination) -> activity_plan",
        "Id": 715,
        "description": "This API is to plan activities.",
        "summary": "This API is to plan activities.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_reservation",
                "description": "Information of the hotel reservation",
                "datatype": "Object"
            },
            {
                "name": "destination",
                "description": "The destination of the trip",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "activity_plan",
                "description": "Plan of activities at the destination",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ClothingSuggestionAPI",
        "format": "ClothingSuggestionAPI(weather) -> clothing_info",
        "Id": 716,
        "description": "This API is to recommend clothing based on the weather.",
        "summary": "This API is to recommend clothing based on the weather.",
        "input_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather condition",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "clothing_info",
                "description": "the information of recommended clothing",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "StoreSearchAPI",
        "format": "StoreSearchAPI(city, clothing_info) -> store_info",
        "Id": 717,
        "description": "This API is to find the store based on city and recommended clothing.",
        "summary": "This API is to find the store based on city and recommended clothing.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "clothing_info",
                "description": "the information of recommended clothing",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "store_info",
                "description": "the information of the store",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyOnlineAPI",
        "format": "BuyOnlineAPI(store_info) -> purchase_status",
        "Id": 718,
        "description": "This API is to purchase clothing online from the recommended store.",
        "summary": "This API is to purchase clothing online from the recommended store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_info",
                "description": "the information of the store",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_status",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookValue",
        "format": "BookValue(ISBN, authorDetails) -> book_value",
        "Id": 719,
        "description": "This API is to get the value of a book.",
        "summary": "This API is to get the value of a book.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            },
            {
                "name": "authorDetails",
                "description": "the details of the author of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_value",
                "description": "the value of the book",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieRecommendation",
        "format": "MovieRecommendation(genre) -> movie_name",
        "Id": 720,
        "description": "This API is to recommend a movie based on genre.",
        "summary": "This API is to recommend a movie based on genre.",
        "input_parameters_with_datatype": [
            {
                "name": "genre",
                "description": "the genre of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the recommended movie",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GameDetails",
        "format": "GameDetails(game_title) -> game_id",
        "Id": 721,
        "description": "This API is to get the details of a game using the game title.",
        "summary": "This API is to get the details of a game using the game title.",
        "input_parameters_with_datatype": [
            {
                "name": "game_title",
                "description": "The title of the video game",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "game_id",
                "description": "The unique identifier of the game",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GameReviews",
        "format": "GameReviews(game_id) -> reviews",
        "Id": 722,
        "description": "This API is to get the reviews of a game using the game id.",
        "summary": "This API is to get the reviews of a game using the game id.",
        "input_parameters_with_datatype": [
            {
                "name": "game_id",
                "description": "The unique identifier of the game",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "The reviews of the game",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DocumentaryDetails",
        "format": "DocumentaryDetails(doc_title) -> doc_id",
        "Id": 723,
        "description": "This API is to get details of a documentary.",
        "summary": "This API is to get details of a documentary.",
        "input_parameters_with_datatype": [
            {
                "name": "doc_title",
                "description": "the title of the documentary",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "doc_id",
                "description": "the ID of the documentary",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DocumentaryReviews",
        "format": "DocumentaryReviews(doc_id) -> reviews",
        "Id": 724,
        "description": "This API is to retrieve reviews of a documentary.",
        "summary": "This API is to retrieve reviews of a documentary.",
        "input_parameters_with_datatype": [
            {
                "name": "doc_id",
                "description": "the ID of the documentary",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviews",
                "description": "the reviews of the documentary",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestTravelTime",
        "format": "BestTravelTime(weather_condition, attraction) -> best_time",
        "Id": 725,
        "description": "This API is to get the most favourable time to visit a certain attraction given the weather condition.",
        "summary": "This API is to get the most favourable time to visit a certain attraction given the weather condition.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_condition",
                "description": "the weather condition of the city where the attraction is located",
                "datatype": "String"
            },
            {
                "name": "attraction",
                "description": "the name of the attraction",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "best_time",
                "description": "the most favourable time to visit the attraction",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AuthorOfBook",
        "format": "AuthorOfBook(book_id) -> author_id",
        "Id": 726,
        "description": "This API is to find the author's ID by the book's ID.",
        "summary": "This API is to find the author's ID by the book's ID.",
        "input_parameters_with_datatype": [
            {
                "name": "book_id",
                "description": "the ID of the book",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "author_id",
                "description": "the ID of the author",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BooksByAuthor",
        "format": "BooksByAuthor(author_id) -> book_list",
        "Id": 727,
        "description": "This API is to find the books written by the author.",
        "summary": "This API is to find the books written by the author.",
        "input_parameters_with_datatype": [
            {
                "name": "author_id",
                "description": "the ID of the author",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_list",
                "description": "the list of books written by the author",
                "datatype": "List of Strings"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieTheaterLocator",
        "format": "MovieTheaterLocator(city) -> theater_address",
        "Id": 728,
        "description": "This API locates the movie theaters in a given city.",
        "summary": "This API locates the movie theaters in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the user wants to find a movie theater",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "theater_address",
                "description": "the address of the located movie theater in the given city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetMovieTheater",
        "format": "GetMovieTheater(movie_name) -> theater_name",
        "Id": 729,
        "description": "This API is to get the theater where the movie is showing.",
        "summary": "This API is to get the theater where the movie is showing.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_name",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "theater_name",
                "description": "the name of the theater",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetTheaterLocation",
        "format": "GetTheaterLocation(theater_name) -> location",
        "Id": 730,
        "description": "This API is to get the location of the theater.",
        "summary": "This API is to get the location of the theater.",
        "input_parameters_with_datatype": [
            {
                "name": "theater_name",
                "description": "the name of the theater",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the theater",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherInCity",
        "format": "WeatherInCity(city, date) -> weather",
        "Id": 731,
        "description": "This API is to determine the weather in a specific city.",
        "summary": "This API is to determine the weather in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for weather forecast",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather condition in the city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NearbyHospitalQuery",
        "format": "NearbyHospitalQuery(coordinate_position) -> hospital",
        "Id": 732,
        "description": "This API is to find a hospital near a given location.",
        "summary": "This API is to find a hospital near a given location.",
        "input_parameters_with_datatype": [
            {
                "name": "coordinate_position",
                "description": "the coordinates of the location",
                "datatype": "Coordinate"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hospital",
                "description": "the name of the nearby hospital",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "DoctorAvailabilityQuery",
        "format": "DoctorAvailabilityQuery(hospital, specialty) -> availability",
        "Id": 733,
        "description": "This API is to check the availability of a doctor at a given hospital.",
        "summary": "This API is to check the availability of a doctor at a given hospital.",
        "input_parameters_with_datatype": [
            {
                "name": "hospital",
                "description": "the name of the hospital",
                "datatype": "String"
            },
            {
                "name": "specialty",
                "description": "the specialty of the doctor",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability",
                "description": "the availability of the doctor",
                "datatype": "Boolean"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NearbyFarmersMarketQuery",
        "format": "NearbyFarmersMarketQuery(coordinate_position) -> farmers_market",
        "Id": 734,
        "description": "This API is to find a nearby farmers market based on the coordinate position of a grocery store.",
        "summary": "This API is to find a nearby farmers market based on the coordinate position of a grocery store.",
        "input_parameters_with_datatype": [
            {
                "name": "coordinate_position",
                "description": "the coordinate position of the grocery store",
                "datatype": "CoordinatePosition"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "farmers_market",
                "description": "the nearby farmers market",
                "datatype": "FarmersMarket"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GroceryStoreDetail",
        "format": "GroceryStoreDetail(store_name, city) -> coordinate_position",
        "Id": 735,
        "description": "This API is to get the details of a grocery store.",
        "summary": "This API is to get the details of a grocery store.",
        "input_parameters_with_datatype": [
            {
                "name": "store_name",
                "description": "the name of the grocery store",
                "datatype": "String"
            },
            {
                "name": "city",
                "description": "the city where the grocery store is located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "coordinate_position",
                "description": "the coordinate position of the grocery store",
                "datatype": "CoordinatePosition"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProduceAvailabilityQuery",
        "format": "ProduceAvailabilityQuery(farmers_market, produce_type) -> availability_status",
        "Id": 736,
        "description": "This API is to check the availability of a produce at a farmers market.",
        "summary": "This API is to check the availability of a produce at a farmers market.",
        "input_parameters_with_datatype": [
            {
                "name": "farmers_market",
                "description": "the farmers market to check",
                "datatype": "FarmersMarket"
            },
            {
                "name": "produce_type",
                "description": "the type of produce to check",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability_status",
                "description": "the availability status of the produce",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "OpenVenues",
        "format": "OpenVenues(city, time) -> venues",
        "Id": 737,
        "description": "This API is to get a list of open venues in a specific city at the current time.",
        "summary": "This API is to get a list of open venues in a specific city at the current time.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "time",
                "description": "the current time in the city",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "venues",
                "description": "a list of open venues in the city",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MusicConcert",
        "format": "MusicConcert(venue) -> concerts",
        "Id": 738,
        "description": "This API is to get a list of music concerts happening in specific venues.",
        "summary": "This API is to get a list of music concerts happening in specific venues.",
        "input_parameters_with_datatype": [
            {
                "name": "venue",
                "description": "the name of the venue",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "concerts",
                "description": "a list of music concerts happening in the venue",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "HotelInformation",
        "format": "HotelInformation(city) -> hotelDetails",
        "Id": 739,
        "description": "This API provides information about hotels in a given city.",
        "summary": "This API provides information about hotels in a given city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "The city where the user wants to find a hotel",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hotelDetails",
                "description": "Details of selected hotels in the specified city",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TravelItinerary",
        "format": "TravelItinerary(hotelDetails, restaurantChoices) -> itinerary",
        "Id": 740,
        "description": "This API creates a travel itinerary based on hotel details and restaurant choices.",
        "summary": "This API creates a travel itinerary based on hotel details and restaurant choices.",
        "input_parameters_with_datatype": [
            {
                "name": "hotelDetails",
                "description": "Details of the selected hotels",
                "datatype": "String"
            },
            {
                "name": "restaurantChoices",
                "description": "List of selected restaurants",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "itinerary",
                "description": "A travel itinerary based on the provided hotel details and restaurant choices",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherQuery",
        "format": "WeatherQuery(city, date) -> weather",
        "Id": 741,
        "description": "This API is to provide the weather in a specific city on a specific date.",
        "summary": "This API is to provide the weather in a specific city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date to check the weather",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather",
                "description": "the weather of the city on the specific date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "WeatherInformation",
        "format": "WeatherInformation(city, date) -> weather_info",
        "Id": 742,
        "description": "This API is to provide weather information for a specific city and date.",
        "summary": "This API is to provide weather information for a specific city and date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date for which weather information is required",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "weather_info",
                "description": "the weather information for the specified city and date",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookStoreLocator",
        "format": "BookStoreLocator(city) -> bookstore_address",
        "Id": 743,
        "description": "This API is to find the closest bookstore in a specific city.",
        "summary": "This API is to find the closest bookstore in a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the user is currently located",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bookstore_address",
                "description": "the address of the nearest bookstore",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookRecommender",
        "format": "BookRecommender(bookstore_address) -> book_genre",
        "Id": 744,
        "description": "This API is to recommend books based on the bookstore location.",
        "summary": "This API is to recommend books based on the bookstore location.",
        "input_parameters_with_datatype": [
            {
                "name": "bookstore_address",
                "description": "the address of the bookstore",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_genre",
                "description": "the genre of the books",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BestSeller",
        "format": "BestSeller(book_genre) -> best_selling_book",
        "Id": 745,
        "description": "This API is to find the most popular book in a specific genre.",
        "summary": "This API is to find the most popular book in a specific genre.",
        "input_parameters_with_datatype": [
            {
                "name": "book_genre",
                "description": "the genre of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "best_selling_book",
                "description": "the most popular book in a specific genre",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Username2Id",
        "format": "Username2Id(username) -> user_id",
        "Id": 746,
        "description": "This API converts username to user id.",
        "summary": "This API converts username to user id.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Id2AllergyList",
        "format": "Id2AllergyList(user_id) -> allergy_list",
        "Id": 747,
        "description": "This API finds the allergy list of a user based on its Id.",
        "summary": "This API finds the allergy list of a user based on its Id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "allergy_list",
                "description": "the list of allergies of the user",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Productname2Ingredients",
        "format": "Productname2Ingredients(product_name) -> ingredients",
        "Id": 748,
        "description": "This API finds the ingredients of a product.",
        "summary": "This API finds the ingredients of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ingredients",
                "description": "the list of ingredients of the product",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Disease2Symptoms",
        "format": "Disease2Symptoms(disease_name) -> symptoms_list",
        "Id": 749,
        "description": "This API is to convert a disease name to its symptom list.",
        "summary": "This API is to convert a disease name to its symptom list.",
        "input_parameters_with_datatype": [
            {
                "name": "disease_name",
                "description": "the name of the disease",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "symptoms_list",
                "description": "a list of symptoms related to the disease",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Symptoms2Diagnosis",
        "format": "Symptoms2Diagnosis(symptoms) -> potential_diseases",
        "Id": 750,
        "description": "This API is to convert a list of symptoms to potential related diseases.",
        "summary": "This API is to convert a list of symptoms to potential related diseases.",
        "input_parameters_with_datatype": [
            {
                "name": "symptoms",
                "description": "a list of symptoms",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "potential_diseases",
                "description": "a list of potential diseases related to the symptoms",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Diagnosis2Treatment",
        "format": "Diagnosis2Treatment(disease) -> treatment_plan",
        "Id": 751,
        "description": "This API is to convert a disease name to its treatment plan.",
        "summary": "This API is to convert a disease name to its treatment plan.",
        "input_parameters_with_datatype": [
            {
                "name": "disease",
                "description": "the name of the disease",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "treatment_plan",
                "description": "the treatment plan for the disease",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetReview",
        "format": "GetReview(bookname) -> review",
        "Id": 752,
        "description": "This API gets the review of a book.",
        "summary": "This API gets the review of a book.",
        "input_parameters_with_datatype": [
            {
                "name": "bookname",
                "description": "the name of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "review",
                "description": "the review of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ISBN2BookTitle",
        "format": "ISBN2BookTitle(ISBN) -> book_title",
        "Id": 753,
        "description": "This API is to convert an ISBN to its corresponding book title.",
        "summary": "This API is to convert an ISBN to its corresponding book title.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "book_title",
                "description": "the title of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NotifyUser",
        "format": "NotifyUser(person_ID, message) -> Notification status",
        "Id": 754,
        "description": "This API is to send a notification to the user.",
        "summary": "This API is to send a notification to the user.",
        "input_parameters_with_datatype": [
            {
                "name": "person_ID",
                "description": "the ID of the person",
                "datatype": "Integer"
            },
            {
                "name": "message",
                "description": "the notification message",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Notification status",
                "description": "the status of the notification",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ReserveHotel",
        "format": "ReserveHotel(city, date, weather_status) -> reservation_status",
        "Id": 755,
        "description": "This API allows the user to reserve a hotel in a certain city considering the weather status on a specific date.",
        "summary": "This API allows the user to reserve a hotel in a certain city considering the weather status on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date",
                "datatype": "Date"
            },
            {
                "name": "weather_status",
                "description": "the weather status",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reservation_status",
                "description": "the reservation status",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCountryCurrency",
        "format": "GetCountryCurrency(country) -> currency",
        "Id": 756,
        "description": "This API provides the official currency of a specific country.",
        "summary": "This API provides the official currency of a specific country.",
        "input_parameters_with_datatype": [
            {
                "name": "country",
                "description": "the name of the country",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "currency",
                "description": "the official currency of the country",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CurrencyConverter",
        "format": "CurrencyConverter(base_currency, target_currency, amount) -> converted_amount",
        "Id": 757,
        "description": "This API provides a conversion tool from one currency to another.",
        "summary": "This API provides a conversion tool from one currency to another.",
        "input_parameters_with_datatype": [
            {
                "name": "base_currency",
                "description": "the base currency to convert from",
                "datatype": "String"
            },
            {
                "name": "target_currency",
                "description": "the target currency to convert to",
                "datatype": "String"
            },
            {
                "name": "amount",
                "description": "the amount to convert",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "converted_amount",
                "description": "the converted amount in the target currency",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CountryBudgetPlanner",
        "format": "CountryBudgetPlanner(country, budget) -> plan",
        "Id": 758,
        "description": "This API helps to generate a budget plan for a country based on the provided budget in the country's currency.",
        "summary": "This API helps to generate a budget plan for a country based on the provided budget in the country's currency.",
        "input_parameters_with_datatype": [
            {
                "name": "country",
                "description": "the name of the country",
                "datatype": "String"
            },
            {
                "name": "budget",
                "description": "the budget for the trip",
                "datatype": "Float"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "plan",
                "description": "the budget plan for the trip",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RestaurantDetail",
        "format": "RestaurantDetail(city_name, cuisine_type) -> restaurant_list",
        "Id": 759,
        "description": "This API is to query the restaurant information of a specific cuisine type in a city.",
        "summary": "This API is to query the restaurant information of a specific cuisine type in a city.",
        "input_parameters_with_datatype": [
            {
                "name": "city_name",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "cuisine_type",
                "description": "the type of cuisine",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_list",
                "description": "a list of restaurants",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MealPlan",
        "format": "MealPlan(restaurant_list, preferences) -> meal_plan",
        "Id": 760,
        "description": "This API provides a meal plan based on the restaurant list and user preferences.",
        "summary": "This API provides a meal plan based on the restaurant list and user preferences.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_list",
                "description": "a list of restaurants",
                "datatype": "List"
            },
            {
                "name": "preferences",
                "description": "user preferences",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "meal_plan",
                "description": "a meal plan",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookingMake",
        "format": "BookingMake(meal_plan, date_time) -> booking_confirmation",
        "Id": 761,
        "description": "This API makes a booking based on the meal plan and the preferred date and time.",
        "summary": "This API makes a booking based on the meal plan and the preferred date and time.",
        "input_parameters_with_datatype": [
            {
                "name": "meal_plan",
                "description": "a meal plan",
                "datatype": "List"
            },
            {
                "name": "date_time",
                "description": "preferred date and time",
                "datatype": "DateTime"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "booking_confirmation",
                "description": "booking confirmation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BookReviewRating",
        "format": "BookReviewRating(bookInformation, authorBio) -> reviewRating",
        "Id": 762,
        "description": "This API generates a review and rating based on the book's information and author's bio.",
        "summary": "This API generates a review and rating based on the book's information and author's bio.",
        "input_parameters_with_datatype": [
            {
                "name": "bookInformation",
                "description": "information about the book",
                "datatype": "String"
            },
            {
                "name": "authorBio",
                "description": "biography of the author",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "reviewRating",
                "description": "review and rating of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieInfo",
        "format": "MovieInfo(title) -> movieDetails",
        "Id": 763,
        "description": "This API retrieves detailed information about a movie.",
        "summary": "This API retrieves detailed information about a movie.",
        "input_parameters_with_datatype": [
            {
                "name": "title",
                "description": "the title of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movieDetails",
                "description": "detailed information about the movie",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CinemaShowtimes",
        "format": "CinemaShowtimes(cinema, movieDetails) -> showtimes",
        "Id": 764,
        "description": "This API retrieves the showtimes of a movie in a specific cinema.",
        "summary": "This API retrieves the showtimes of a movie in a specific cinema.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema",
                "description": "the name of the cinema",
                "datatype": "String"
            },
            {
                "name": "movieDetails",
                "description": "detailed information about the movie",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "showtimes",
                "description": "the showtimes of the movie in the cinema",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "TicketAvailability",
        "format": "TicketAvailability(cinema, showtimes) -> ticketStatus",
        "Id": 765,
        "description": "This API checks the availability of tickets for a showtime in a cinema.",
        "summary": "This API checks the availability of tickets for a showtime in a cinema.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema",
                "description": "the name of the cinema",
                "datatype": "String"
            },
            {
                "name": "showtimes",
                "description": "the showtimes of the movie in the cinema",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "ticketStatus",
                "description": "the availability status of tickets",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CreateInvoice",
        "format": "CreateInvoice(customer_id, product_id, quantity) -> invoice",
        "Id": 766,
        "description": "This API is to create an invoice based on the customer ID, product ID and the quantity purchased.",
        "summary": "This API is to create an invoice based on the customer ID, product ID and the quantity purchased.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_id",
                "description": "the ID of the customer",
                "datatype": "String"
            },
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "String"
            },
            {
                "name": "quantity",
                "description": "the quantity purchased",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "invoice",
                "description": "the created invoice",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateTotal",
        "format": "CalculateTotal(invoice) -> total_cost",
        "Id": 767,
        "description": "This API is to calculate the total cost of the items in the invoice.",
        "summary": "This API is to calculate the total cost of the items in the invoice.",
        "input_parameters_with_datatype": [
            {
                "name": "invoice",
                "description": "the invoice object",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "total_cost",
                "description": "the total cost of the items in the invoice",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UsernameToId",
        "format": "UsernameToId(user_name) -> User_Id",
        "Id": 768,
        "description": "This API is to convert user name to its Id.",
        "summary": "This API is to convert user name to its Id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "User_Id",
                "description": "the Id of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserShoppingHistory",
        "format": "UserShoppingHistory(user_id) -> shopping_history",
        "Id": 769,
        "description": "API to get the shopping history of a user.",
        "summary": "API to get the shopping history of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the Id of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "shopping_history",
                "description": "the shopping history of the user",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ProductPriceHistory",
        "format": "ProductPriceHistory(product_id) -> price_history",
        "Id": 770,
        "description": "API to get the price history of a product.",
        "summary": "API to get the price history of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the Id of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price_history",
                "description": "the price history of the product",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "User2Age",
        "format": "User2Age(user_name) -> user_age",
        "Id": 771,
        "description": "This API generates the age of a specific user through its user name.",
        "summary": "This API generates the age of a specific user through its user name.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_age",
                "description": "the age of the user",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "BuyAlcohol",
        "format": "BuyAlcohol(user_age) -> purchase_status",
        "Id": 772,
        "description": "This API allows the user to purchase alcohol if their age is over the legal limit.",
        "summary": "This API allows the user to purchase alcohol if their age is over the legal limit.",
        "input_parameters_with_datatype": [
            {
                "name": "user_age",
                "description": "the age of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "purchase_status",
                "description": "the status of the purchase",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RecommendDrink",
        "format": "RecommendDrink(user_preference) -> drink",
        "Id": 773,
        "description": "This API suggests a type of drink according to user preference.",
        "summary": "This API suggests a type of drink according to user preference.",
        "input_parameters_with_datatype": [
            {
                "name": "user_preference",
                "description": "the preference of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "drink",
                "description": "the suggested drink",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "UserPreference",
        "format": "UserPreference(user_name) -> user_preference",
        "Id": 774,
        "description": "This API will provide the preferred type of drink of the specified user.",
        "summary": "This API will provide the preferred type of drink of the specified user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_preference",
                "description": "the preferred type of drink",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNearbyRestaurant",
        "format": "FindNearbyRestaurant(user_location) -> restaurant",
        "Id": 775,
        "description": "This API finds a nearby restaurant based on the user's current location.",
        "summary": "This API finds a nearby restaurant based on the user's current location.",
        "input_parameters_with_datatype": [
            {
                "name": "user_location",
                "description": "the current location of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the nearby restaurant",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserDietaryRestrictions",
        "format": "GetUserDietaryRestrictions(user_name) -> restrictions",
        "Id": 776,
        "description": "This API returns the user's dietary restrictions.",
        "summary": "This API returns the user's dietary restrictions.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restrictions",
                "description": "the dietary restrictions of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FilterRestaurantByDietaryRestrictions",
        "format": "FilterRestaurantByDietaryRestrictions(restaurant, restrictions) -> filtered_restaurant",
        "Id": 777,
        "description": "This API filters the restaurant options based on dietary restrictions.",
        "summary": "This API filters the restaurant options based on dietary restrictions.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant",
                "description": "the nearby restaurant",
                "datatype": "String"
            },
            {
                "name": "restrictions",
                "description": "the dietary restrictions of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "filtered_restaurant",
                "description": "the filtered restaurant options",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserNextMeeting",
        "format": "GetUserNextMeeting(user_name) -> next_meeting",
        "Id": 778,
        "description": "This API returns the next scheduled meeting of a user.",
        "summary": "This API returns the next scheduled meeting of a user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_name",
                "description": "the name of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "next_meeting",
                "description": "the next scheduled meeting",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Meeting2TimeZone",
        "format": "Meeting2TimeZone(meeting) -> timezone",
        "Id": 779,
        "description": "This API converts a meeting to the timezone where it will be held.",
        "summary": "This API converts a meeting to the timezone where it will be held.",
        "input_parameters_with_datatype": [
            {
                "name": "meeting",
                "description": "the meeting to be converted",
                "datatype": "Time"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "timezone",
                "description": "the timezone where the meeting will be held",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ConvertTime",
        "format": "ConvertTime(time, source_timezone, target_timezone) -> converted_time",
        "Id": 780,
        "description": "This API converts a specific time from the source timezone to the target timezone.",
        "summary": "This API converts a specific time from the source timezone to the target timezone.",
        "input_parameters_with_datatype": [
            {
                "name": "time",
                "description": "the specific time to be converted",
                "datatype": "Time"
            },
            {
                "name": "source_timezone",
                "description": "the source timezone of the time",
                "datatype": "String"
            },
            {
                "name": "target_timezone",
                "description": "the target timezone to convert the time to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "converted_time",
                "description": "the converted time in the target timezone",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AvailabilityCheck",
        "format": "AvailabilityCheck(ISBN) -> availability_status",
        "Id": 781,
        "description": "This API checks the availability of a book using its ISBN.",
        "summary": "This API checks the availability of a book using its ISBN.",
        "input_parameters_with_datatype": [
            {
                "name": "ISBN",
                "description": "the ISBN of the book",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "availability_status",
                "description": "the availability status of the book",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserLocationByUsername",
        "format": "GetUserLocationByUsername(username) -> user_location",
        "Id": 782,
        "description": "This API is used to get a user's location based on their username.",
        "summary": "This API is used to get a user's location based on their username.",
        "input_parameters_with_datatype": [
            {
                "name": "username",
                "description": "the username of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "user_location",
                "description": "the location of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetTimeZoneByLocation",
        "format": "GetTimeZoneByLocation(location) -> timezone",
        "Id": 783,
        "description": "This API is used to determine the timezone based on a given location.",
        "summary": "This API is used to determine the timezone based on a given location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "timezone",
                "description": "the timezone",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ScheduleMeeting",
        "format": "ScheduleMeeting(user_email, start_time, end_time, timezone) -> meeting_status",
        "Id": 784,
        "description": "This API schedules a meeting.",
        "summary": "This API schedules a meeting.",
        "input_parameters_with_datatype": [
            {
                "name": "user_email",
                "description": "the email of the user",
                "datatype": "String"
            },
            {
                "name": "start_time",
                "description": "the start time of the meeting",
                "datatype": "Time"
            },
            {
                "name": "end_time",
                "description": "the end time of the meeting",
                "datatype": "Time"
            },
            {
                "name": "timezone",
                "description": "the timezone of the meeting",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "meeting_status",
                "description": "the status of the meeting",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetPriceByID",
        "format": "GetPriceByID(product_id) -> product_price",
        "Id": 785,
        "description": "This API retrieves the price for a product by its ID.",
        "summary": "This API retrieves the price for a product by its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_price",
                "description": "the price of the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetDiscount",
        "format": "GetDiscount(product_id, coupon_code) -> discount_price",
        "Id": 786,
        "description": "This API gives the discounted price of the product after applying a coupon code.",
        "summary": "This API gives the discounted price of the product after applying a coupon code.",
        "input_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the ID of the product",
                "datatype": "Integer"
            },
            {
                "name": "coupon_code",
                "description": "the coupon code",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "discount_price",
                "description": "the discounted price of the product",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindRestaurantByname",
        "format": "FindRestaurantByname(name) -> restaurant_ID",
        "Id": 787,
        "description": "This API returns the id of a restaurant by its name.",
        "summary": "This API returns the id of a restaurant by its name.",
        "input_parameters_with_datatype": [
            {
                "name": "name",
                "description": "the name of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_ID",
                "description": "the id of the restaurant",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindProductId",
        "format": "FindProductId(product_name) -> product_id",
        "Id": 788,
        "description": "This API returns the id of a product.",
        "summary": "This API returns the id of a product.",
        "input_parameters_with_datatype": [
            {
                "name": "product_name",
                "description": "the name of the product",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "product_id",
                "description": "the id of the product",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCustomerID",
        "format": "GetCustomerID(name) -> customer_ID",
        "Id": 789,
        "description": "This API returns the id of a customer.",
        "summary": "This API returns the id of a customer.",
        "input_parameters_with_datatype": [
            {
                "name": "name",
                "description": "the name of the customer",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the id of the customer",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CheckOutCart",
        "format": "CheckOutCart(customer_ID) -> checkout_status",
        "Id": 790,
        "description": "This API checks out a customer's cart.",
        "summary": "This API checks out a customer's cart.",
        "input_parameters_with_datatype": [
            {
                "name": "customer_ID",
                "description": "the id of the customer",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "checkout_status",
                "description": "the status of the checkout",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRoomType",
        "format": "GetRoomType(hotel_ID, room_type) -> room_ID",
        "Id": 791,
        "description": "This API returns the ID of a specific room type in a particular hotel.",
        "summary": "This API returns the ID of a specific room type in a particular hotel.",
        "input_parameters_with_datatype": [
            {
                "name": "hotel_ID",
                "description": "the ID of the hotel",
                "datatype": "Integer"
            },
            {
                "name": "room_type",
                "description": "the type of the room",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "room_ID",
                "description": "the ID of the room",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "MovieTitle2ID",
        "format": "MovieTitle2ID(movie_title) -> movie_ID",
        "Id": 792,
        "description": "This API converts a movie title to its ID.",
        "summary": "This API converts a movie title to its ID.",
        "input_parameters_with_datatype": [
            {
                "name": "movie_title",
                "description": "the title of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "AddToWatchlist",
        "format": "AddToWatchlist(user_ID, movie_ID) -> Watchlist status",
        "Id": 793,
        "description": "This API adds a movie to a user's watchlist.",
        "summary": "This API adds a movie to a user's watchlist.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "movie_ID",
                "description": "the ID of the movie",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Watchlist status",
                "description": "the status of adding the movie to the watchlist",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "EmailNotification",
        "format": "EmailNotification(user_ID, message) -> Notification status",
        "Id": 794,
        "description": "This API sends a notification email to the user.",
        "summary": "This API sends a notification email to the user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            },
            {
                "name": "message",
                "description": "the notification message",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Notification status",
                "description": "the status of sending the notification email",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetBoardingPass",
        "format": "GetBoardingPass(reservation_id, email) -> boarding_pass",
        "Id": 795,
        "description": "This API generates a boarding pass for a confirmed reservation and sends it to a specified email.",
        "summary": "This API generates a boarding pass for a confirmed reservation and sends it to a specified email.",
        "input_parameters_with_datatype": [
            {
                "name": "reservation_id",
                "description": "the ID of the confirmed reservation",
                "datatype": "Integer"
            },
            {
                "name": "email",
                "description": "the email address to which the boarding pass will be sent",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "boarding_pass",
                "description": "the generated boarding pass",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindNutritionInfo",
        "format": "FindNutritionInfo(menu_item) -> nutrition_details",
        "Id": 796,
        "description": "This API is to find the nutritional information of a specific menu item.",
        "summary": "This API is to find the nutritional information of a specific menu item.",
        "input_parameters_with_datatype": [
            {
                "name": "menu_item",
                "description": "the name of the menu item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "nutrition_details",
                "description": "the nutritional information of the menu item",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCalories",
        "format": "GetCalories(menu_item) -> calories",
        "Id": 797,
        "description": "This API is to get the calories of a specific menu item.",
        "summary": "This API is to get the calories of a specific menu item.",
        "input_parameters_with_datatype": [
            {
                "name": "menu_item",
                "description": "the specific menu item",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "calories",
                "description": "the calories of the menu item",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurantDetails",
        "format": "GetRestaurantDetails(location) -> restaurant_info",
        "Id": 798,
        "description": "This API is to get the restaurant details of a specific location.",
        "summary": "This API is to get the restaurant details of a specific location.",
        "input_parameters_with_datatype": [
            {
                "name": "location",
                "description": "the location of the restaurant",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_info",
                "description": "the details of the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetRestaurantReview",
        "format": "GetRestaurantReview(restaurant_info) -> restaurant_review",
        "Id": 799,
        "description": "This API is to get reviews of a specific restaurant.",
        "summary": "This API is to get reviews of a specific restaurant.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_info",
                "description": "the details of the restaurant",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "restaurant_review",
                "description": "the reviews of the restaurant",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCuisineRecommendation",
        "format": "GetCuisineRecommendation(restaurant_review) -> cuisine_recommendation",
        "Id": 800,
        "description": "This API is to get cuisine recommendation based on the restaurant review.",
        "summary": "This API is to get cuisine recommendation based on the restaurant review.",
        "input_parameters_with_datatype": [
            {
                "name": "restaurant_review",
                "description": "the reviews of the restaurant",
                "datatype": "Object"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cuisine_recommendation",
                "description": "the cuisine recommendation",
                "datatype": "Object"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "RetrieveLocalTrafficInfo",
        "format": "RetrieveLocalTrafficInfo(city) -> traffic_info",
        "Id": 801,
        "description": "This API is to get real-time traffic information on the roads of a specific city.",
        "summary": "This API is to get real-time traffic information on the roads of a specific city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "traffic_info",
                "description": "the real-time traffic information",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchNextBus",
        "format": "FetchNextBus(travel_time, bus_route) -> bus_info",
        "Id": 802,
        "description": "This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.",
        "summary": "This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.",
        "input_parameters_with_datatype": [
            {
                "name": "travel_time",
                "description": "the calculated travel time",
                "datatype": "Time"
            },
            {
                "name": "bus_route",
                "description": "the specific bus route",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "bus_info",
                "description": "the timing of the next bus on the specific route",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SearchEvent",
        "format": "SearchEvent(city, type) -> event",
        "Id": 803,
        "description": "This API searches for a specific type of event in a certain city.",
        "summary": "This API searches for a specific type of event in a certain city.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city where the event is searched",
                "datatype": "String"
            },
            {
                "name": "type",
                "description": "the type of event to search",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "event",
                "description": "the specific event found",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindTickets",
        "format": "FindTickets(event, number) -> tickets",
        "Id": 804,
        "description": "This API finds the required number of tickets for a specific event.",
        "summary": "This API finds the required number of tickets for a specific event.",
        "input_parameters_with_datatype": [
            {
                "name": "event",
                "description": "the specific event to find tickets for",
                "datatype": "String"
            },
            {
                "name": "number",
                "description": "the number of tickets required",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "tickets",
                "description": "the required number of tickets",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "ArrangeTransportation",
        "format": "ArrangeTransportation(city, date) -> transportation",
        "Id": 805,
        "description": "This API arranges transportation to a specific city on a certain date.",
        "summary": "This API arranges transportation to a specific city on a certain date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the specific city to arrange transportation to",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the date of transportation",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "transportation",
                "description": "the arranged transportation",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetEventCalendar",
        "format": "GetEventCalendar(user_id) -> event",
        "Id": 806,
        "description": "This API retrieves the user's event calendar based on their user id.",
        "summary": "This API retrieves the user's event calendar based on their user id.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the id of the user",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "event",
                "description": "the user's event calendar",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindTravelTime",
        "format": "FindTravelTime(start_location, end_location) -> travel_time",
        "Id": 807,
        "description": "This API finds the estimated travel time between two locations.",
        "summary": "This API finds the estimated travel time between two locations.",
        "input_parameters_with_datatype": [
            {
                "name": "start_location",
                "description": "the starting location",
                "datatype": "String"
            },
            {
                "name": "end_location",
                "description": "the ending location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "travel_time",
                "description": "the estimated travel time",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetAvailableFlights",
        "format": "GetAvailableFlights(origin, destination) -> flights",
        "Id": 808,
        "description": "This API is to get available flights from an origin to a destination.",
        "summary": "This API is to get available flights from an origin to a destination.",
        "input_parameters_with_datatype": [
            {
                "name": "origin",
                "description": "the origin location",
                "datatype": "String"
            },
            {
                "name": "destination",
                "description": "the destination location",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flights",
                "description": "a list of available flights",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FindCheapestFlight",
        "format": "FindCheapestFlight(flights) -> cheapestFlight",
        "Id": 809,
        "description": "This API is to find the cheapest flight from the list of available flights.",
        "summary": "This API is to find the cheapest flight from the list of available flights.",
        "input_parameters_with_datatype": [
            {
                "name": "flights",
                "description": "a list of available flights",
                "datatype": "List"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "cheapestFlight",
                "description": "the cheapest flight from the list",
                "datatype": "Flight"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetTicketPrice",
        "format": "GetTicketPrice(cinema, movie) -> price",
        "Id": 810,
        "description": "This API is to get the ticket price of a specific movie at a specific cinema.",
        "summary": "This API is to get the ticket price of a specific movie at a specific cinema.",
        "input_parameters_with_datatype": [
            {
                "name": "cinema",
                "description": "the name of the cinema",
                "datatype": "String"
            },
            {
                "name": "movie",
                "description": "the name of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "price",
                "description": "the ticket price",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateTotalMovieOutingTime",
        "format": "CalculateTotalMovieOutingTime(travelTime, movieLength) -> totalOutingTime",
        "Id": 811,
        "description": "This API is to calculate the total time of the movie outing considering the travel time and the movie length.",
        "summary": "This API is to calculate the total time of the movie outing considering the travel time and the movie length.",
        "input_parameters_with_datatype": [
            {
                "name": "travelTime",
                "description": "the estimated travel time",
                "datatype": "Time"
            },
            {
                "name": "movieLength",
                "description": "the length of the movie",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "totalOutingTime",
                "description": "the total time of the movie outing",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "SuggestMealType",
        "format": "SuggestMealType(weather_forecast) -> meal_type",
        "Id": 812,
        "description": "This API is to suggest a meal type based on the weather forecast.",
        "summary": "This API is to suggest a meal type based on the weather forecast.",
        "input_parameters_with_datatype": [
            {
                "name": "weather_forecast",
                "description": "the weather forecast",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "meal_type",
                "description": "the suggested meal type",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "LibraryHours",
        "format": "LibraryHours(city, date) -> hours",
        "Id": 813,
        "description": "This API is used to check the opening hours of a library in a certain city on a specific date.",
        "summary": "This API is used to check the opening hours of a library in a certain city on a specific date.",
        "input_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the name of the city",
                "datatype": "String"
            },
            {
                "name": "date",
                "description": "the specific date",
                "datatype": "Date"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "hours",
                "description": "the opening hours of the library",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchFlightID",
        "format": "FetchFlightID(flight_name) -> flight_ID",
        "Id": 814,
        "description": "This API retrieves the flight ID using the flight name.",
        "summary": "This API retrieves the flight ID using the flight name.",
        "input_parameters_with_datatype": [
            {
                "name": "flight_name",
                "description": "the name of the flight",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight_ID",
                "description": "the ID of the flight",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchCity",
        "format": "FetchCity(user_ID) -> city",
        "Id": 815,
        "description": "This API will return the city of the user based on user ID.",
        "summary": "This API will return the city of the user based on user ID.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "city",
                "description": "the city of the user",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "Plate2VehicleID",
        "format": "Plate2VehicleID(plate_number) -> vehicle_ID",
        "Id": 816,
        "description": "This API is to convert a vehicle's plate number to vehicle ID.",
        "summary": "This API is to convert a vehicle's plate number to vehicle ID.",
        "input_parameters_with_datatype": [
            {
                "name": "plate_number",
                "description": "the plate number of the vehicle",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "vehicle_ID",
                "description": "the ID of the vehicle",
                "datatype": "Integer"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CurrentLocation",
        "format": "CurrentLocation(vehicle_ID) -> location_info",
        "Id": 817,
        "description": "This API gives the current location of a vehicle based on vehicle ID.",
        "summary": "This API gives the current location of a vehicle based on vehicle ID.",
        "input_parameters_with_datatype": [
            {
                "name": "vehicle_ID",
                "description": "the ID of the vehicle",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "location_info",
                "description": "the current location information of the vehicle",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "NotifyOwner",
        "format": "NotifyOwner(vehicle_ID, message) -> Notification status",
        "Id": 818,
        "description": "This API is to send a notification to the vehicle's owner.",
        "summary": "This API is to send a notification to the vehicle's owner.",
        "input_parameters_with_datatype": [
            {
                "name": "vehicle_ID",
                "description": "the ID of the vehicle",
                "datatype": "Integer"
            },
            {
                "name": "message",
                "description": "the notification message",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "Notification status",
                "description": "the status of the notification",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "CalculateDistances",
        "format": "CalculateDistances(city_from, city_to) -> distance between cities",
        "Id": 819,
        "description": "This API is to calculate the distance between two cities.",
        "summary": "This API is to calculate the distance between two cities.",
        "input_parameters_with_datatype": [
            {
                "name": "city_from",
                "description": "the name of the starting city",
                "datatype": "String"
            },
            {
                "name": "city_to",
                "description": "the name of the destination city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "distance between cities",
                "description": "the distance between the two cities",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetFlightDuration",
        "format": "GetFlightDuration(city_from, city_to) -> flight duration",
        "Id": 820,
        "description": "This API is to get the flight duration between two cities.",
        "summary": "This API is to get the flight duration between two cities.",
        "input_parameters_with_datatype": [
            {
                "name": "city_from",
                "description": "the name of the starting city",
                "datatype": "String"
            },
            {
                "name": "city_to",
                "description": "the name of the destination city",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "flight duration",
                "description": "the duration of the flight between the two cities",
                "datatype": "Time"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetCurrencyExchangeRate",
        "format": "GetCurrencyExchangeRate(currency_from, currency_to) -> exchange rate",
        "Id": 821,
        "description": "This API is to get the exchange rate between two currencies.",
        "summary": "This API is to get the exchange rate between two currencies.",
        "input_parameters_with_datatype": [
            {
                "name": "currency_from",
                "description": "the currency to convert from",
                "datatype": "String"
            },
            {
                "name": "currency_to",
                "description": "the currency to convert to",
                "datatype": "String"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "exchange rate",
                "description": "the exchange rate between the two currencies",
                "datatype": "Float"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "FetchUserPlaylist",
        "format": "FetchUserPlaylist(user_id) -> playlist",
        "Id": 822,
        "description": "This API allows the user to fetch a playlist of a certain user.",
        "summary": "This API allows the user to fetch a playlist of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_id",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "playlist",
                "description": "the playlist of the user",
                "datatype": "List"
            }
        ],
        "url": null,
        "method": null
    },
    {
        "name": "GetUserPreferences",
        "format": "GetUserPreferences(user_ID) -> movie_genre",
        "Id": 823,
        "description": "This API returns the preferred movie genre of a certain user.",
        "summary": "This API returns the preferred movie genre of a certain user.",
        "input_parameters_with_datatype": [
            {
                "name": "user_ID",
                "description": "the ID of the user",
                "datatype": "Integer"
            }
        ],
        "output_parameters_with_datatype": [
            {
                "name": "movie_genre",
                "description": "the preferred movie genre",
                "datatype": "String"
            }
        ],
        "url": null,
        "method": null
    }
]