name,format,Id,description,summary,input_parameters_with_datatype,output_parameters_with_datatype,url,method
Username2ID,Username2ID(user_name) -> user_ID,1,This API is to convert a username to a user ID.,This API is to convert a username to a user ID.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
Playlistname2ID,Playlistname2ID(playlist_name) -> playlist_ID,2,This API is to convert a playlist name to a playlist ID.,This API is to convert a playlist name to a playlist ID.,"[{'name': 'playlist_name', 'description': 'the name of the playlist', 'datatype': 'String'}]","[{'name': 'playlist_ID', 'description': 'the ID of the playlist', 'datatype': 'Integer'}]",,
AddSongToPlaylist,"AddSongToPlaylist(user_ID, playlist_ID, song_name) -> playlist_songs",3,This API is to add a song to a playlist.,This API is to add a song to a playlist.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'playlist_ID', 'description': 'the ID of the playlist', 'datatype': 'Integer'}, {'name': 'song_name', 'description': 'the name of the song', 'datatype': 'String'}]","[{'name': 'playlist_songs', 'description': 'a list of the songs in the playlist', 'datatype': 'List'}]",,
GeoLocation2TimeZone,GeoLocation2TimeZone(geolocation) -> timezone,4,This API is to convert geolocation to timezone.,This API is to convert geolocation to timezone.,"[{'name': 'geolocation', 'description': 'the geolocation of a place', 'datatype': 'String'}]","[{'name': 'timezone', 'description': 'the timezone of the geolocation', 'datatype': 'String'}]",,
SetAlarm,"SetAlarm(timezone, time) -> alarm_status",5,This API allows the user to set an alarm in a specific timezone.,This API allows the user to set an alarm in a specific timezone.,"[{'name': 'timezone', 'description': 'the timezone where the alarm will be set', 'datatype': 'String'}, {'name': 'time', 'description': 'the time when the alarm will ring', 'datatype': 'Time'}]","[{'name': 'alarm_status', 'description': 'the status of the alarm', 'datatype': 'String'}]",,
GetUserGeolocation,GetUserGeolocation(user_name) -> user_geolocation,6,This API returns the geolocation of a certain user.,This API returns the geolocation of a certain user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_geolocation', 'description': 'the geolocation of the user', 'datatype': 'String'}]",,
Songname2ID,Songname2ID(song_name) -> song_ID,7,This API is to convert a song's name to song ID.,This API is to convert a song's name to song ID.,"[{'name': 'song_name', 'description': 'the name of the song', 'datatype': 'String'}]","[{'name': 'song_ID', 'description': 'the ID of the song', 'datatype': 'Integer'}]",,
GetUsernameID,GetUsernameID(username) -> person_ID,8,This API is to convert a username to user ID.,This API is to convert a username to user ID.,"[{'name': 'username', 'description': 'the username', 'datatype': 'String'}]","[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}]",,
Username2Email,Username2Email(username) -> user_email,9,This API is used to convert a username to a user's email.,This API is used to convert a username to a user's email.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'user_email', 'description': 'the email of the user', 'datatype': 'String'}]",,
Title2ISBN,Title2ISBN(title) -> title_ISBN,10,This API is used to convert a book title to its ISBN.,This API is used to convert a book title to its ISBN.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'title_ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]",,
CheckAvailability,"CheckAvailability(ISBN,start_date,end_date) -> availability_status",11,This API checks the availability of a book based on its ISBN and a given date range.,This API checks the availability of a book based on its ISBN and a given date range.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}, {'name': 'start_date', 'description': 'the start date of the range', 'datatype': 'Date'}, {'name': 'end_date', 'description': 'the end date of the range', 'datatype': 'Date'}]","[{'name': 'availability_status', 'description': 'the availability status of the book', 'datatype': 'String'}]",,
ReserveBook,"ReserveBook(user_email,ISBN,start_date,end_date) -> reservation_status",12,This API is used to reserve a book.,This API is used to reserve a book.,"[{'name': 'user_email', 'description': 'the email of the user', 'datatype': 'String'}, {'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}, {'name': 'start_date', 'description': 'the start date of the reservation', 'datatype': 'Date'}, {'name': 'end_date', 'description': 'the end date of the reservation', 'datatype': 'Date'}]","[{'name': 'reservation_status', 'description': 'the status of the reservation', 'datatype': 'String'}]",,
OrderFood,"OrderFood(dish_name, restaurant_name) -> order_status",13,This API allows the user to order a specific food from a specified restaurant.,This API allows the user to order a specific food from a specified restaurant.,"[{'name': 'dish_name', 'description': 'the name of the dish', 'datatype': 'String'}, {'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'order_status', 'description': 'the status of the order', 'datatype': 'String'}]",,
FindPopularDishes,FindPopularDishes(city) -> dish_name,14,This API recommends popular dishes in a given city.,This API recommends popular dishes in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'dish_name', 'description': 'the name of the popular dish', 'datatype': 'String'}]",,
TopRestaurants,TopRestaurants(city) -> restaurant_name,15,This API provides the names of top ranked restaurants in a given city.,This API provides the names of top ranked restaurants in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'restaurant_name', 'description': 'the name of the top ranked restaurant', 'datatype': 'String'}]",,
FindMovie,FindMovie(genre) -> movie_name,16,This API provides the name of a movie based on the specified genre.,This API provides the name of a movie based on the specified genre.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]",,
MovieShowtimes,"MovieShowtimes(movie_name, city) -> show_time",17,This API gives the showtimes for a specified movie in a chosen city.,This API gives the showtimes for a specified movie in a chosen city.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'show_time', 'description': 'the showtimes for the movie in the chosen city', 'datatype': 'String'}]",,
BuyMovieTickets,"BuyMovieTickets(show_time, movie_name, seats) -> booking_status",18,"This API buys movie tickets for a specific show time, movie and chosen seats.","This API buys movie tickets for a specific show time, movie and chosen seats.","[{'name': 'show_time', 'description': 'the show time of the movie', 'datatype': 'String'}, {'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'seats', 'description': 'the number of seats to buy', 'datatype': 'Integer'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
CheckWeather,CheckWeather(location) -> weather,19,This API checks the weather of a specific location.,This API checks the weather of a specific location.,"[{'name': 'location', 'description': 'the specific location', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the weather at the specific location', 'datatype': 'String'}]",,
SelectOutfit,"SelectOutfit(weather, occasion) -> outfit",20,This API selects an appropriate outfit based on the weather and occasion.,This API selects an appropriate outfit based on the weather and occasion.,"[{'name': 'weather', 'description': 'the weather condition', 'datatype': 'String'}, {'name': 'occasion', 'description': 'the occasion', 'datatype': 'String'}]","[{'name': 'outfit', 'description': 'the recommended outfit', 'datatype': 'String'}]",,
FindRestaurant,"FindRestaurant(location, type, rating) -> restaurant",21,"This API is to find a restaurant based on location, type and rating.","This API is to find a restaurant based on location, type and rating.","[{'name': 'location', 'description': 'the location of the restaurant', 'datatype': 'String'}, {'name': 'type', 'description': 'the type of the restaurant', 'datatype': 'String'}, {'name': 'rating', 'description': 'the rating of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant', 'description': 'the restaurant found', 'datatype': 'Object'}]",,
GetMenu,GetMenu(restaurant_id) -> menu,22,This API is to get the menu of a specific restaurant.,This API is to get the menu of a specific restaurant.,"[{'name': 'restaurant_id', 'description': 'the ID of the restaurant', 'datatype': 'String'}]","[{'name': 'menu', 'description': 'the menu of the restaurant', 'datatype': 'Object'}]",,
FlightSchedule,FlightSchedule(airport) -> flightTimes,23,This API is to get the departure and arrival times for flights at a specific airport.,This API is to get the departure and arrival times for flights at a specific airport.,"[{'name': 'airport', 'description': 'the name of the airport', 'datatype': 'String'}]","[{'name': 'flightTimes', 'description': 'the departure and arrival times for flights', 'datatype': 'List'}]",,
GetTrafficUpdate,GetTrafficUpdate(location) -> trafficDelay,24,This API is to fetch the current traffic scenario and any possible delays happening at a given location.,This API is to fetch the current traffic scenario and any possible delays happening at a given location.,"[{'name': 'location', 'description': 'the location for which traffic updates are needed', 'datatype': 'String'}]","[{'name': 'trafficDelay', 'description': 'the current traffic scenario and any possible delays', 'datatype': 'String'}]",,
CalculateTravelTime,"CalculateTravelTime(flightTimes, trafficDelay) -> travelTime",25,This API is to estimate the travel time accounting for flight times and possible traffic delays.,This API is to estimate the travel time accounting for flight times and possible traffic delays.,"[{'name': 'flightTimes', 'description': 'the departure and arrival times for flights', 'datatype': 'List'}, {'name': 'trafficDelay', 'description': 'the current traffic scenario and any possible delays', 'datatype': 'String'}]","[{'name': 'travelTime', 'description': 'the estimated travel time', 'datatype': 'String'}]",,
HealthCheck,"HealthCheck(Age, Weight) -> HealthScale",26,This API is used to calculate health index based on age and weight.,This API is used to calculate health index based on age and weight.,"[{'name': 'Age', 'description': 'the age of the person', 'datatype': 'Integer'}, {'name': 'Weight', 'description': 'the weight of the person', 'datatype': 'Float'}]","[{'name': 'HealthScale', 'description': 'the health index of the person', 'datatype': 'String'}]",,
RecommendDiet,RecommendDiet(HealthScale) -> DietReport,27,This API is used to recommend a diet chart considering the health index.,This API is used to recommend a diet chart considering the health index.,"[{'name': 'HealthScale', 'description': 'the health index of the person', 'datatype': 'String'}]","[{'name': 'DietReport', 'description': 'the diet chart recommended for the person', 'datatype': 'String'}]",,
RetrieveUserInfo,"RetrieveUserInfo(Username) -> Age, Weight",28,This API retrieves Age and Weight of a specific user.,This API retrieves Age and Weight of a specific user.,"[{'name': 'Username', 'description': 'the username of the person', 'datatype': 'String'}]","[{'name': 'Age', 'description': 'the age of the person', 'datatype': 'Integer'}, {'name': 'Weight', 'description': 'the weight of the person', 'datatype': 'Float'}]",,
BuyMovieTicket,"BuyMovieTicket(movie_name, theater_name, date, time) -> booking status",29,"This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.","This API allows the user to purchase a movie ticket for a specific movie, theater, date, and time.","[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'theater_name', 'description': 'the name of the theater', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the movie showing', 'datatype': 'Date'}, {'name': 'time', 'description': 'the time of the movie showing', 'datatype': 'Time'}]","[{'name': 'booking_status', 'description': 'Booking success or failure information', 'datatype': 'String'}]",,
GetMovieTheaters,GetMovieTheaters(city) -> theater_name,30,This API returns a recommended movie theaters in a given city.,This API returns a recommended movie theaters in a given city.,"[{'name': 'city', 'description': 'city name', 'datatype': 'String'}]","[{'name': 'theater_name', 'description': 'the name of the movie theaters', 'datatype': 'String'}]",,
QueryEventTime,QueryEvent(event_name) -> time,31,This API is to query event time.,This API is to query event time.,"[{'name': 'event_name', 'description': 'the name of the event', 'datatype': 'String'}]","[{'name': 'time', 'description': 'the start time of the event', 'datatype': 'Time'}]",,
CreateEvent,"CreateEvent(event_name, location, time) -> event_confirmation",32,This API is to create an event in your calendar.,This API is to create an event in your calendar.,"[{'name': 'event_name', 'description': 'the name of the event', 'datatype': 'String'}, {'name': 'location', 'description': 'the location of the event', 'datatype': 'String'}, {'name': 'time', 'description': 'the start time of the event', 'datatype': 'Time'}]","[{'name': 'event_confirmation', 'description': 'the confirmation of event creation', 'datatype': 'String'}]",,
RemindEvent,"RemindEvent(event_name, alert_time) -> reminder_confirmation",33,This API is to set up a reminder for the event.,This API is to set up a reminder for the event.,"[{'name': 'event_name', 'description': 'the name of the event', 'datatype': 'String'}, {'name': 'alert_time', 'description': 'the time to set the reminder', 'datatype': 'Time'}]","[{'name': 'reminder_confirmation', 'description': 'the confirmation of reminder setup', 'datatype': 'String'}]",,
RecommendHotel,"RecommendHotel(city, star_level) -> hotel_name",34,This API recommends a hotel name based on city and star level.,This API recommends a hotel name based on city and star level.,"[{'name': 'city', 'description': 'the city for hotel recommendation', 'datatype': 'String'}, {'name': 'star_level', 'description': 'the star level of the hotel', 'datatype': 'Integer'}]","[{'name': 'hotel_name', 'description': 'the name of the recommended hotel', 'datatype': 'String'}]",,
GetCity,GetCity(user_ID) -> city,35,This API will return the city of the user based on user ID.,This API will return the city of the user based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'city', 'description': 'the city of the user', 'datatype': 'String'}]",,
BookHotel,"BookHotel(hotel_name, date) -> booking_status",36,This API books a hotel for a certain date.,This API books a hotel for a certain date.,"[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the booking', 'datatype': 'String'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
GetUserID,GetUserID(username) -> user_ID,37,This API retrieves the user ID by using the user name.,This API retrieves the user ID by using the user name.,"[{'name': 'username', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
SearchHotel,"SearchHotel(city, hotel_preferences) -> hotel_name",38,This API searches a hotel in a given city based on user preferences.,This API searches a hotel in a given city based on user preferences.,"[{'name': 'city', 'description': 'the city name', 'datatype': 'String'}, {'name': 'hotel_preferences', 'description': 'the user preferences for the hotel', 'datatype': 'String'}]","[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}]",,
CalculateDistance,"CalculateDistance(start_point, end_point) -> distance",39,This API is to calculate the distance between the start point and end point.,This API is to calculate the distance between the start point and end point.,"[{'name': 'start_point', 'description': 'the starting point of the journey', 'datatype': 'String'}, {'name': 'end_point', 'description': 'the ending point of the journey', 'datatype': 'String'}]","[{'name': 'distance', 'description': 'the distance between the start point and end point', 'datatype': 'Float'}]",,
EstimateTravelTime,"EstimateTravelTime(distance, mode_of_transport) -> time",40,This API is to estimate the travel time based on the distance and mode of transportation.,This API is to estimate the travel time based on the distance and mode of transportation.,"[{'name': 'distance', 'description': 'the distance of the journey', 'datatype': 'Float'}, {'name': 'mode_of_transport', 'description': 'the mode of transportation', 'datatype': 'String'}]","[{'name': 'time', 'description': 'the estimated travel time', 'datatype': 'String'}]",,
AlertBeforeDeparture,"AlertBeforeDeparture(event_time, travel_time) -> alert_time",41,"This API is to calculate the time when the user needs to leave, given the event time and travel time.","This API is to calculate the time when the user needs to leave, given the event time and travel time.","[{'name': 'event_time', 'description': 'the time of the event', 'datatype': 'DateTime'}, {'name': 'travel_time', 'description': 'the estimated travel time', 'datatype': 'String'}]","[{'name': 'alert_time', 'description': 'the time when the user needs to leave', 'datatype': 'DateTime'}]",,
BookRestaurant,"BookRestaurant(restaurant_name, date, time) -> booking status",42,This API allows the user to book a specific restaurant for a certain date and time,This API allows the user to book a specific restaurant for a certain date and time,"[{'name': 'restaurant_name', 'description': 'the name of restarant', 'datatype': 'String'}, {'name': 'date', 'description': 'data', 'datatype': 'String'}, {'name': 'time', 'description': 'time', 'datatype': 'String'}]","[{'name': 'booking status', 'description': 'Booking success or failure information', 'datatype': 'String'}]",,
RecommendRestaurant,"RecommendRestaurant(location,star_level) -> restaurant_name",43,This API returns the name of a restaurant according to location and star_level,This API returns the name of a restaurant according to location and star_level,"[{'name': 'location', 'description': 'the location of the restaurant', 'datatype': 'Location'}, {'name': 'star_level', 'description': 'the star level of the restaurant', 'datatype': 'Integer'}]","[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]",,
GetUserLocation,GetUserLocation(user_ID) -> user_location,44,This API returns the location of a certain user ID,This API returns the location of a certain user ID,"[{'name': 'user_ID', 'description': 'the ID of the user, please note that it should be number, not character', 'datatype': 'Integer'}]","[{'name': 'user_location', 'description': 'the location of the user ID', 'datatype': 'Location'}]",,
GetRestaurantLevel,GetRestaurantLevel(restaurant_name) -> star_level,45,This API returns the star level of a certain restaurant,This API returns the star level of a certain restaurant,"[{'name': 'restaurant_name', 'description': 'the name of restaurant', 'datatype': 'String'}]","[{'name': 'star_level', 'description': 'the star level of the restaurant', 'datatype': 'Integer'}]",,
SearchFlight,"SearchFlight(from_location, to_location, date) -> flight_details",46,This API generates flight details from one location to another at a specified date.,This API generates flight details from one location to another at a specified date.,"[{'name': 'from_location', 'description': 'the location from where the flight will depart', 'datatype': 'String'}, {'name': 'to_location', 'description': 'the location where the flight will arrive', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the flight', 'datatype': 'String'}]","[{'name': 'flight_details', 'description': 'the details of the flight', 'datatype': 'String'}]",,
GetUserPreference,GetUserPreference(user_ID) -> preferred_flight_class,47,"This API returns a user's preferred flight class, e.g., economy, business.","This API returns a user's preferred flight class, e.g., economy, business.","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'preferred_flight_class', 'description': 'the preferred flight class of the user', 'datatype': 'String'}]",,
BookFlight,"BookFlight(flight_details, preferred_flight_class) -> booking_status",48,This API books a flight using the flight details and the user's preferred flight class.,This API books a flight using the flight details and the user's preferred flight class.,"[{'name': 'flight_details', 'description': 'the details of the flight', 'datatype': 'String'}, {'name': 'preferred_flight_class', 'description': 'the preferred flight class of the user', 'datatype': 'String'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
MusicGenre2Artist,MusicGenre2Artist(music_genre) -> artist_name,49,This API is to convert music genre to artist's name.,This API is to convert music genre to artist's name.,"[{'name': 'music_genre', 'description': 'the genre of the music', 'datatype': 'String'}]","[{'name': 'artist_name', 'description': 'the name of the artist', 'datatype': 'String'}]",,
PlayMusic,PlayMusic(song_title) -> music_status,50,This API allows the user to play music.,This API allows the user to play music.,"[{'name': 'song_title', 'description': 'the title of the song', 'datatype': 'String'}]","[{'name': 'music_status', 'description': 'the status of the music playing', 'datatype': 'String'}]",,
RecommendSong,RecommendSong(user_mood) -> song_title,51,This API returns the title of a song according to user's mood.,This API returns the title of a song according to user's mood.,"[{'name': 'user_mood', 'description': 'the mood of the user', 'datatype': 'String'}]","[{'name': 'song_title', 'description': 'the title of the recommended song', 'datatype': 'String'}]",,
GetUserMood,GetUserMood(user_name) -> user_mood,52,This API returns the mood of a certain user.,This API returns the mood of a certain user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_mood', 'description': 'the mood of the user', 'datatype': 'String'}]",,
GetWeather,GetWeather(city) -> weather,53,This API retrieves the weather information for a given city.,This API retrieves the weather information for a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the weather information', 'datatype': 'String'}]",,
RecommendClothing,RecommendClothing(weather) -> clothingItems,54,This API suggests clothing items to wear based on the current weather.,This API suggests clothing items to wear based on the current weather.,"[{'name': 'weather', 'description': 'the current weather', 'datatype': 'String'}]","[{'name': 'clothingItems', 'description': 'the suggested clothing items', 'datatype': 'List'}]",,
GetStore,"GetStore(city, clothingItem) -> storename",55,This API finds stores where a certain clothing item is available in a given city.,This API finds stores where a certain clothing item is available in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'clothingItem', 'description': 'the clothing item', 'datatype': 'String'}]","[{'name': 'storename', 'description': 'the name of the store', 'datatype': 'String'}]",,
BuyClothing,"BuyClothing(storename, clothingItem) -> purchaseStatus",56,This API is to purchase a clothing item from a certain store.,This API is to purchase a clothing item from a certain store.,"[{'name': 'storename', 'description': 'the name of the store', 'datatype': 'String'}, {'name': 'clothingItem', 'description': 'the clothing item', 'datatype': 'String'}]","[{'name': 'purchaseStatus', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
FindNearestStore,"FindNearestStore(city, store_type) -> store_name",57,This API is to find the nearest store based on user location and the preferred product type.,This API is to find the nearest store based on user location and the preferred product type.,"[{'name': 'city', 'description': 'the city where the user is located', 'datatype': 'String'}, {'name': 'store_type', 'description': 'the preferred store type', 'datatype': 'String'}]","[{'name': 'store_name', 'description': 'the name of the nearest store', 'datatype': 'String'}]",,
GetProductPrice,"GetProductPrice(store_name, product_name) -> price",58,This API is to get the price of a specific product in a given store.,This API is to get the price of a specific product in a given store.,"[{'name': 'store_name', 'description': 'the name of the store', 'datatype': 'String'}, {'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the price of the product', 'datatype': 'Float'}]",,
Customername2ID,Customername2ID(customer_name) -> customer_ID,59,This API is to convert a customer name to a customer ID.,This API is to convert a customer name to a customer ID.,"[{'name': 'customer_name', 'description': 'the name of the customer', 'datatype': 'String'}]","[{'name': 'customer_ID', 'description': 'the ID of the customer', 'datatype': 'Integer'}]",,
Productname2ID,Productname2ID(book_name) -> product_ID,60,This API is to convert a book name to a book ID.,This API is to convert a book name to a book ID.,"[{'name': 'book_name', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'product_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
PurchaseBook,"PurchaseBook(customer_ID, product_ID) -> purchased_books",61,This API is to process the purchase of books.,This API is to process the purchase of books.,"[{'name': 'customer_ID', 'description': 'the ID of the customer,it should be number', 'datatype': 'Integer'}, {'name': 'product_ID', 'description': 'the ID of the book,it should be number', 'datatype': 'Integer'}]","[{'name': 'purchased_books', 'description': 'a list of purchased books', 'datatype': 'List'}]",,
Email2ID,Email2ID(email) -> person_ID,62,This API is to convert user email to user ID.,This API is to convert user email to user ID.,"[{'name': 'email', 'description': 'the email of the person', 'datatype': 'String'}]","[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}]",,
Subjectname2ID,Subjectname2ID(subject_name) -> subject_ID,63,This API is to convert subject name to subject ID.,This API is to convert subject name to subject ID.,"[{'name': 'subject_name', 'description': 'the name of the subject', 'datatype': 'String'}]","[{'name': 'subject_ID', 'description': 'the ID of the subject', 'datatype': 'Integer'}]",,
EnrollCourse,"EnrollCourse(person_ID,subject_ID,semester) -> Enrollment confirmation",64,This API is to enroll a user to a specific course.,This API is to enroll a user to a specific course.,"[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}, {'name': 'subject_ID', 'description': 'the ID of the subject', 'datatype': 'Integer'}, {'name': 'semester', 'description': 'the semester of the enrollment', 'datatype': 'String'}]","[{'name': 'Enrollment confirmation', 'description': 'the confirmation of the enrollment', 'datatype': 'String'}]",,
Cityname2ID,Cityname2ID(city_name) -> City_ID,65,This API is to convert city name to city ID.,This API is to convert city name to city ID.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'City_ID', 'description': 'the ID of the city', 'datatype': 'Integer'}]",,
Eventname2ID,Eventname2ID(Event_name) -> Event_ID,66,This API is to convert event name to event ID.,This API is to convert event name to event ID.,"[{'name': 'Event_name', 'description': 'the name of the event', 'datatype': 'String'}]","[{'name': 'Event_ID', 'description': 'the ID of the event', 'datatype': 'Integer'}]",,
ReserveTicket,"ReserveTicket(City_ID,Event_ID,date) -> Ticket_confirmation",67,This API is to reserve a ticket for an event.,This API is to reserve a ticket for an event.,"[{'name': 'City_ID', 'description': 'the ID of the city', 'datatype': 'Integer'}, {'name': 'Event_ID', 'description': 'the ID of the event', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the event', 'datatype': 'Date'}]","[{'name': 'Ticket_confirmation', 'description': 'the confirmation of the ticket', 'datatype': 'String'}]",,
Sendername2ID,Sendername2ID(sender_name) -> Sender_ID,68,This API is to convert sender name to sender ID.,This API is to convert sender name to sender ID.,"[{'name': 'sender_name', 'description': 'the name of the sender', 'datatype': 'String'}]","[{'name': 'Sender_ID', 'description': 'the ID of the sender', 'datatype': 'Integer'}]",,
Receivername2ID,Receivername2ID(receiver_name) -> Receiver_ID,69,This API converts receiver name to receiver ID.,This API converts receiver name to receiver ID.,"[{'name': 'receiver_name', 'description': 'the name of the receiver', 'datatype': 'String'}]","[{'name': 'Receiver_ID', 'description': 'the ID of the receiver', 'datatype': 'Integer'}]",,
TransferAmount,"TransferAmount(Sender_ID,Receiver_ID,amount) -> Money transfer confirmation",70,This API is to transfer money between two users.,This API is to transfer money between two users.,"[{'name': 'Sender_ID', 'description': 'the ID of the sender,it should be number', 'datatype': 'Integer'}, {'name': 'Receiver_ID', 'description': 'the ID of the receiver,it should be number', 'datatype': 'Integer'}, {'name': 'amount', 'description': 'the amount of money to be transferred', 'datatype': 'Float'}]","[{'name': 'Money transfer confirmation', 'description': 'confirmation message for the money transfer', 'datatype': 'String'}]",,
Address2GPS,Address2GPS(address) -> GPS coordinates,71,This API is to convert an address to GPS coordinates.,This API is to convert an address to GPS coordinates.,"[{'name': 'address', 'description': 'the address', 'datatype': 'String'}]","[{'name': 'GPS coordinates', 'description': 'the GPS coordinates', 'datatype': 'String'}]",,
GPS2Weather,GPS2Weather(gps_coordinates) -> weather data,72,This API is to convert GPS coordinates to weather information.,This API is to convert GPS coordinates to weather information.,"[{'name': 'gps_coordinates', 'description': 'the GPS coordinates', 'datatype': 'String'}]","[{'name': 'weather data', 'description': 'the weather data', 'datatype': 'JSON'}]",,
Cityname2Address,Cityname2Address(city_name) -> address,73,This API is to convert a city name to its detailed address.,This API is to convert a city name to its detailed address.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'address', 'description': 'the detailed address', 'datatype': 'String'}]",,
Productname2Id,Productname2Id(product_name) -> Product_Id,74,This API is to convert product name to its Id.,This API is to convert product name to its Id.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'Product_Id', 'description': 'the Id of the product', 'datatype': 'Integer'}]",,
ProductAvailability,ProductAvailability(product_id) -> availability,75,API to check the availability of a product.,API to check the availability of a product.,"[{'name': 'product_id', 'description': 'the Id of the product', 'datatype': 'Integer'}]","[{'name': 'availability', 'description': 'the availability of the product', 'datatype': 'Boolean'}]",,
FindFlightByDestination,FindFlightByDestination(destination) -> flight_ID,76,This API is used to retrieve flight ID by using the flight's destination.,This API is used to retrieve flight ID by using the flight's destination.,"[{'name': 'destination', 'description': 'the destination of the flight', 'datatype': 'String'}]","[{'name': 'flight_ID', 'description': 'the ID of the flight', 'datatype': 'Integer'}]",,
GetUserDestination,GetUserDestination(user_ID) -> user_destination,77,This API will return the user's travel destination based on user ID.,This API will return the user's travel destination based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'user_destination', 'description': 'the travel destination of the user', 'datatype': 'String'}]",,
ItemnameToID,ItemnameToID(item_name) -> item_ID,78,This API is used to convert the name of the item to item ID.,This API is used to convert the name of the item to item ID.,"[{'name': 'item_name', 'description': 'the name of the item', 'datatype': 'String'}]","[{'name': 'item_ID', 'description': 'the ID of the item', 'datatype': 'Integer'}]",,
SuppliernameToID,SuppliernameToID(supplier_name) -> supplier_ID,79,This API is used to convert the name of the supplier to supplier ID.,This API is used to convert the name of the supplier to supplier ID.,"[{'name': 'supplier_name', 'description': 'the name of the supplier', 'datatype': 'String'}]","[{'name': 'supplier_ID', 'description': 'the ID of the supplier', 'datatype': 'Integer'}]",,
PlaceOrder,"PlaceOrder(item_ID, supplier_ID, quantity) -> order_status",80,This API places the order for a particular item from a specified supplier.,This API places the order for a particular item from a specified supplier.,"[{'name': 'item_ID', 'description': 'the ID of the item', 'datatype': 'Integer'}, {'name': 'supplier_ID', 'description': 'the ID of the supplier', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the item', 'datatype': 'Integer'}]","[{'name': 'order_status', 'description': 'the status of the order', 'datatype': 'String'}]",,
UserEmailToID,UserEmailToID(email_address) -> user_ID,81,This API is used to convert the user's email address to user ID.,This API is used to convert the user's email address to user ID.,"[{'name': 'email_address', 'description': 'the email address of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
BooknameToID,BooknameToID(book_name) -> book_ID,82,This API is to convert the book name to book ID.,This API is to convert the book name to book ID.,"[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
BorrowBook,"BorrowBook(user_ID, book_ID) -> borrow_status",83,This API borrows a book for a particular user.,This API borrows a book for a particular user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'borrow_status', 'description': 'the status of the borrowing', 'datatype': 'String'}]",,
FlightFromTo,"FlightFromTo(city1, city2) -> flight_ID",84,This API returns a flight id between two cities.,This API returns a flight id between two cities.,"[{'name': 'city1', 'description': 'the departure city', 'datatype': 'String'}, {'name': 'city2', 'description': 'the destination city', 'datatype': 'String'}]","[{'name': 'flight_ID', 'description': 'the id of the flight', 'datatype': 'Integer'}]",,
GetPassengerID,GetPassengerID(name) -> passenger_ID,85,This API returns the id of a passenger.,This API returns the id of a passenger.,"[{'name': 'name', 'description': 'the name of the passenger', 'datatype': 'String'}]","[{'name': 'passenger_ID', 'description': 'the id of the passenger', 'datatype': 'Integer'}]",,
AddToCart,"AddToCart(customer_ID, product_ID) -> Cart status",86,This API adds a product to a customer's shopping cart.,This API adds a product to a customer's shopping cart.,"[{'name': 'customer_ID', 'description': 'the ID of the customer', 'datatype': 'Integer'}, {'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'Cart status', 'description': 'the status of the cart', 'datatype': 'String'}]",,
FindHotel,FindHotel(city) -> hotel_name,87,This API returns a recommended hotel in a given city.,This API returns a recommended hotel in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'hotel_name', 'description': 'the name of the recommended hotel', 'datatype': 'String'}]",,
BookRoom,"BookRoom(hotel_name, date, number_of_nights) -> booking status",88,This API allows the user to book a room at a specific hotel for a specific number of nights and date.,This API allows the user to book a room at a specific hotel for a specific number of nights and date.,"[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}, {'name': 'date', 'description': 'the starting date of the booking', 'datatype': 'Date'}, {'name': 'number_of_nights', 'description': 'the number of nights for the booking', 'datatype': 'Integer'}]","[{'name': 'booking status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
GetWeatherForecast,"GetWeatherForecast(city, date) -> weather report",89,This API returns the weather forecast of a specified city on a specific date.,This API returns the weather forecast of a specified city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date', 'datatype': 'Date'}]","[{'name': 'weather report', 'description': 'the weather forecast', 'datatype': 'String'}]",,
RecommendOutfit,RecommendOutfit(weather) -> outfit details,90,This API recommends an outfit based on the weather conditions.,This API recommends an outfit based on the weather conditions.,"[{'name': 'weather', 'description': 'the weather condition', 'datatype': 'String'}]","[{'name': 'outfit details', 'description': 'the recommended outfit', 'datatype': 'String'}]",,
BookFinder,"BookFinder(genre, author, year) -> book",91,"This API is to find a specific book by genre, author, and year.","This API is to find a specific book by genre, author, and year.","[{'name': 'genre', 'description': 'the genre of the book', 'datatype': 'String'}, {'name': 'author', 'description': 'the author of the book', 'datatype': 'String'}, {'name': 'year', 'description': 'the year the book was published', 'datatype': 'String'}]","[{'name': 'book', 'description': 'the specific book matching the given criteria', 'datatype': 'String'}]",,
BookSummary,BookSummary(book_name) -> summary,92,This API is to get a summary of a particular book.,This API is to get a summary of a particular book.,"[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'summary', 'description': 'the summary of the book', 'datatype': 'String'}]",,
MusicIdentifier,"MusicIdentifier(genre, artist, album) -> song",93,"This API identifies a specific song from a certain genre, by an artist, from a specific album.","This API identifies a specific song from a certain genre, by an artist, from a specific album.","[{'name': 'genre', 'description': 'the genre of the song', 'datatype': 'String'}, {'name': 'artist', 'description': 'the artist of the song', 'datatype': 'String'}, {'name': 'album', 'description': 'the album of the song', 'datatype': 'String'}]","[{'name': 'song', 'description': 'the specific song identified', 'datatype': 'String'}]",,
LyricExtractor,LyricExtractor(song_name) -> lyrics,94,This API extracts lyrics of a specific song.,This API extracts lyrics of a specific song.,"[{'name': 'song_name', 'description': 'the name of the song', 'datatype': 'String'}]","[{'name': 'lyrics', 'description': 'the lyrics of the song', 'datatype': 'String'}]",,
MovieSuggestion,"MovieSuggestion(genre, director, year) -> movie",95,"This API suggests a movie based on the genre, director, and the year.","This API suggests a movie based on the genre, director, and the year.","[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}, {'name': 'director', 'description': 'the director of the movie', 'datatype': 'String'}, {'name': 'year', 'description': 'the year of the movie', 'datatype': 'Integer'}]","[{'name': 'movie', 'description': 'the suggested movie', 'datatype': 'String'}]",,
MovieReview,MovieReview(movie_name) -> review,96,This API provides a review of a particular movie.,This API provides a review of a particular movie.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'review', 'description': 'the review of the movie', 'datatype': 'String'}]",,
GetFlightDetails,GetFlightDetails(flight_id) -> details,97,This API is to get detailed information about a specific flight.,This API is to get detailed information about a specific flight.,"[{'name': 'flight_id', 'description': 'the ID of the flight', 'datatype': 'Integer'}]","[{'name': 'details', 'description': 'detailed information about the flight', 'datatype': 'String'}]",,
GetClothingRecommendation,GetClothingRecommendation(weather_info) -> clothing_recommendation,98,This API is to get clothing recommendation based on the weather forecast.,This API is to get clothing recommendation based on the weather forecast.,"[{'name': 'weather_info', 'description': 'the weather forecast information', 'datatype': 'String'}]","[{'name': 'clothing_recommendation', 'description': 'the recommended clothing based on the weather forecast', 'datatype': 'String'}]",,
GetHotelAvailability,"GetHotelAvailability(city, dates) -> hotel",99,This API checks the availability of hotels in a specific city on specific dates.,This API checks the availability of hotels in a specific city on specific dates.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'dates', 'description': 'specific dates', 'datatype': 'String'}]","[{'name': 'hotel', 'description': 'list of available hotels', 'datatype': 'List'}]",,
GetRestaurants,GetRestaurants(city) -> restaurants,100,This API provides a list of restaurants in a specific city.,This API provides a list of restaurants in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'restaurants', 'description': 'list of restaurants', 'datatype': 'List'}]",,
PlanTrip,"PlanTrip(hotel, restaurants) -> trip",101,This API plans a trip including a hotel stay and restaurants visits.,This API plans a trip including a hotel stay and restaurants visits.,"[{'name': 'hotel', 'description': 'list of available hotels', 'datatype': 'List'}, {'name': 'restaurants', 'description': 'list of restaurants', 'datatype': 'List'}]","[{'name': 'trip', 'description': 'planned trip details', 'datatype': 'Object'}]",,
CurrentExchangeRate,CurrentExchangeRate(currency) -> exchangeRate,102,This API is to get the current exchange rate for a specific currency.,This API is to get the current exchange rate for a specific currency.,"[{'name': 'currency', 'description': 'the currency code', 'datatype': 'String'}]","[{'name': 'exchangeRate', 'description': 'the current exchange rate', 'datatype': 'Float'}]",,
BudgetInLocalCurrency,"BudgetInLocalCurrency(budget, exchangeRate) -> localBudget",103,This API is to calculate the budget in local currency using the original budget and current exchange rate.,This API is to calculate the budget in local currency using the original budget and current exchange rate.,"[{'name': 'budget', 'description': 'the original budget in USD', 'datatype': 'Float'}, {'name': 'exchangeRate', 'description': 'the current exchange rate', 'datatype': 'Float'}]","[{'name': 'localBudget', 'description': 'the budget in local currency', 'datatype': 'Float'}]",,
SuggestDiningOptions,"SuggestDiningOptions(localBudget, location) -> diningOptions",104,This API is to suggest dining options based on the local budget and location.,This API is to suggest dining options based on the local budget and location.,"[{'name': 'localBudget', 'description': 'the budget in local currency', 'datatype': 'Float'}, {'name': 'location', 'description': 'the location', 'datatype': 'String'}]","[{'name': 'diningOptions', 'description': 'a list of suggested dining options', 'datatype': 'List'}]",,
GetCurrentFuelPrice,GetCurrentFuelPrice(city) -> fuelPrice,105,This API is to get the current fuel price of a specific city.,This API is to get the current fuel price of a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'fuelPrice', 'description': 'the current fuel price', 'datatype': 'Decimal'}]",,
GetDrivingDistance,"GetDrivingDistance(startPoint, endPoint) -> distance",106,This API is to get the driving distance between two points.,This API is to get the driving distance between two points.,"[{'name': 'startPoint', 'description': 'the starting point of the journey', 'datatype': 'String'}, {'name': 'endPoint', 'description': 'the ending point of the journey', 'datatype': 'String'}]","[{'name': 'distance', 'description': 'the driving distance between the two points', 'datatype': 'Decimal'}]",,
CalculateFuelCost,"CalculateFuelCost(fuelPrice, distance) -> cost",107,This API is to calculate the potential fuel cost based on the fuel price and distance.,This API is to calculate the potential fuel cost based on the fuel price and distance.,"[{'name': 'fuelPrice', 'description': 'the current fuel price', 'datatype': 'Decimal'}, {'name': 'distance', 'description': 'the driving distance', 'datatype': 'Decimal'}]","[{'name': 'cost', 'description': 'the potential fuel cost', 'datatype': 'Decimal'}]",,
GetAverageHousePrice,GetAverageHousePrice(location) -> housePrice,108,This API is to get the average house price of a specific location.,This API is to get the average house price of a specific location.,"[{'name': 'location', 'description': 'the location of the house', 'datatype': 'String'}]","[{'name': 'housePrice', 'description': 'the average house price', 'datatype': 'Float'}]",,
GetLoanInterestRate,GetLoanInterestRate(bank) -> interestRate,109,This API is to get the loan interest rate of a specific bank.,This API is to get the loan interest rate of a specific bank.,"[{'name': 'bank', 'description': 'the name of the bank', 'datatype': 'String'}]","[{'name': 'interestRate', 'description': 'the loan interest rate', 'datatype': 'Float'}]",,
CalculateMortgagePayment,"CalculateMortgagePayment(housePrice, interestRate) -> mortgagePayment",110,This API is to calculate the monthly mortgage payment based on the house price and interest rate.,This API is to calculate the monthly mortgage payment based on the house price and interest rate.,"[{'name': 'housePrice', 'description': 'the house price', 'datatype': 'Float'}, {'name': 'interestRate', 'description': 'the loan interest rate', 'datatype': 'Float'}]","[{'name': 'mortgagePayment', 'description': 'the monthly mortgage payment', 'datatype': 'Float'}]",,
BookTable,"BookTable(restaurant_name, date, time) -> booking status",111,This API allows the user to book a table at a specific restaurant for a given date and time.,This API allows the user to book a table at a specific restaurant for a given date and time.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the booking', 'datatype': 'Date'}, {'name': 'time', 'description': 'the time of the booking', 'datatype': 'Time'}]","[{'name': 'booking status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
GetRestaurant,"GetRestaurant(city,cuisine) -> restaurant_name",112,This API the name of the restaurant recommended based on city and cuisine.,This API the name of the restaurant recommended based on city and cuisine.,"[{'name': 'city', 'description': 'the city to search for restaurants', 'datatype': 'String'}, {'name': 'cuisine', 'description': 'the cuisine to search for restaurants', 'datatype': 'String'}]","[{'name': 'restaurant_name', 'description': 'the name of the recommended restaurant', 'datatype': 'String'}]",,
SearchRecipe,"SearchRecipe(cuisine, diet, ingredients) -> recipe",113,This API is to search for recipe based on user preferences.,This API is to search for recipe based on user preferences.,"[{'name': 'cuisine', 'description': 'the cuisine preference', 'datatype': 'String'}, {'name': 'diet', 'description': 'the diet preference', 'datatype': 'String'}, {'name': 'ingredients', 'description': 'the list of ingredients', 'datatype': 'List'}]","[{'name': 'recipe', 'description': 'the searched recipe', 'datatype': 'String'}]",,
GetRecipeInstructions,GetRecipeInstructions(recipe_name) -> instructions,114,This API is to get the instructions to prepare a specific recipe.,This API is to get the instructions to prepare a specific recipe.,"[{'name': 'recipe_name', 'description': 'the name of the recipe', 'datatype': 'String'}]","[{'name': 'instructions', 'description': 'the instructions for the recipe', 'datatype': 'String'}]",,
WeatherForecast,WeatherForecast(location) -> temperature,115,This API is to get the temperature for a specific location.,This API is to get the temperature for a specific location.,"[{'name': 'location', 'description': 'location', 'datatype': 'String'}]","[{'name': 'temperature', 'description': 'the temperature', 'datatype': 'Float'}]",,
GetCityPopulation,GetCityPopulation(city) -> population,116,This API is to get the population of a specific city.,This API is to get the population of a specific city.,"[{'name': 'city', 'description': 'city name', 'datatype': 'String'}]","[{'name': 'population', 'description': 'the population of the city', 'datatype': 'Integer'}]",,
RecommendActivity,"RecommendActivity(temperature, population) -> activity",117,This API is to recommend an activity based on the temperature and population of a city.,This API is to recommend an activity based on the temperature and population of a city.,"[{'name': 'temperature', 'description': 'the temperature of the city', 'datatype': 'Float'}, {'name': 'population', 'description': 'the population of the city', 'datatype': 'Integer'}]","[{'name': 'activity', 'description': 'the recommended activity', 'datatype': 'String'}]",,
SearchRestaurant,"SearchRestaurant(city, cuisine) -> restaurant_name",118,This API finds a restaurant in a given city and with a certain cuisine.,This API finds a restaurant in a given city and with a certain cuisine.,"[{'name': 'city', 'description': 'city', 'datatype': 'String'}, {'name': 'cuisine', 'description': 'cuisine type', 'datatype': 'String'}]","[{'name': 'restaurant_name', 'description': 'restaurant name', 'datatype': 'String'}]",,
RecommendItems,RecommendItems(restaurant_name) -> recommend_items,119,This API retrieves the menu of a given restaurant and recommend items.,This API retrieves the menu of a given restaurant and recommend items.,"[{'name': 'restaurant_name', 'description': 'restaurant name', 'datatype': 'String'}]","[{'name': 'recommend_items', 'description': 'recommended items in menu', 'datatype': 'List'}]",,
GetRoute,"GetRoute(origin_location,destination_location) -> route",120,This API provides the optimal driving route between two locations.,This API provides the optimal driving route between two locations.,"[{'name': 'origin_location', 'description': 'starting location,the format: (Latitude,longitude),eg.(23,145)', 'datatype': 'String'}, {'name': 'destination_location', 'description': 'destination location,the format: (Latitude,longitude),eg.(23,145)', 'datatype': 'String'}]","[{'name': 'route', 'description': 'optimal driving route', 'datatype': 'String'}]",,
Personname2ID,Personname2ID(person_name) -> person_ID,121,This API is to convert user name to user ID.,This API is to convert user name to user ID.,"[{'name': 'person_name', 'description': 'the name of the person', 'datatype': 'String'}]","[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}]",,
Cityname2Weather,Cityname2Weather(city_name) -> weather,122,This API is to fetch the current weather for a specific city.,This API is to fetch the current weather for a specific city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the current weather of the city', 'datatype': 'String'}]",,
ActivityRecommend,"ActivityRecommend(city_name, weather) -> activity",123,This API is to recommend suitable activities based on the weather in a specific city.,This API is to recommend suitable activities based on the weather in a specific city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'weather', 'description': 'the current weather of the city', 'datatype': 'String'}]","[{'name': 'activity', 'description': 'the recommended activity based on the weather', 'datatype': 'String'}]",,
ActivityBook,"ActivityBook(activity, user_name) -> booking_confirmation",124,This API is to book an activity for a specific user.,This API is to book an activity for a specific user.,"[{'name': 'activity', 'description': 'the activity to be booked', 'datatype': 'String'}, {'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'booking_confirmation', 'description': 'the confirmation of the booking', 'datatype': 'String'}]",,
Restaurantname2ID,Restaurantname2ID(restaurant_name) -> restaurant_ID,125,This API is to convert a restaurant name to a specific restaurant ID.,This API is to convert a restaurant name to a specific restaurant ID.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]",,
MenuItem2ID,"MenuItem2ID(menu_item, restaurant_id) -> menu_item_ID",126,This API is to convert a menu item name with restaurant ID to a specific menu item ID.,This API is to convert a menu item name with restaurant ID to a specific menu item ID.,"[{'name': 'menu_item', 'description': 'the name of the menu item', 'datatype': 'String'}, {'name': 'restaurant_id', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]","[{'name': 'menu_item_ID', 'description': 'the ID of the menu item', 'datatype': 'Integer'}]",,
RetrieveEmail,RetrieveEmail(user_ID) -> email,127,This API is to retrieve the email of a user.,This API is to retrieve the email of a user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'email', 'description': 'the email of the user', 'datatype': 'String'}]",,
SendEmail,"SendEmail(email, message) -> email_status",128,This API is to send an email to a user.,This API is to send an email to a user.,"[{'name': 'email', 'description': 'the email of the user', 'datatype': 'String'}, {'name': 'message', 'description': 'the message to be sent', 'datatype': 'String'}]","[{'name': 'email_status', 'description': 'the status of the email sending', 'datatype': 'String'}]",,
Foodname2ID,Foodname2ID(food_name) -> food_ID,129,This API is to convert a food name to a food ID.,This API is to convert a food name to a food ID.,"[{'name': 'food_name', 'description': 'the name of the food', 'datatype': 'String'}]","[{'name': 'food_ID', 'description': 'the ID of the food', 'datatype': 'Integer'}]",,
Carname2ID,Carname2ID(car_name) -> car_ID,130,This API is to convert a car name to a car ID.,This API is to convert a car name to a car ID.,"[{'name': 'car_name', 'description': 'the name of the car', 'datatype': 'String'}]","[{'name': 'car_ID', 'description': 'the ID of the car', 'datatype': 'Integer'}]",,
Drivername2ID,Drivername2ID(driver_name) -> driver_ID,131,This API is to convert a driver name to a driver ID.,This API is to convert a driver name to a driver ID.,"[{'name': 'driver_name', 'description': 'the name of the driver', 'datatype': 'String'}]","[{'name': 'driver_ID', 'description': 'the ID of the driver', 'datatype': 'Integer'}]",,
BookCab,"BookCab(driver_ID, car_ID) -> booked_cab",132,This API is to book a cab.,This API is to book a cab.,"[{'name': 'driver_ID', 'description': 'the ID of the driver', 'datatype': 'Integer'}, {'name': 'car_ID', 'description': 'the ID of the car', 'datatype': 'Integer'}]","[{'name': 'booked_cab', 'description': 'the status of the booked cab', 'datatype': 'String'}]",,
Email2Username,Email2Username(email) -> user_name,133,This API is to convert an email to a username.,This API is to convert an email to a username.,"[{'name': 'email', 'description': 'the email address', 'datatype': 'String'}]","[{'name': 'user_name', 'description': 'the username', 'datatype': 'String'}]",,
ISBN2Title,ISBN2Title(ISBN) -> book_title,134,This API is to convert an ISBN to a book title.,This API is to convert an ISBN to a book title.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]",,
AddBookToReadingList,"AddBookToReadingList(user_name, book_title) -> reading_list",135,This API is to add a book to a user's reading list.,This API is to add a book to a user's reading list.,"[{'name': 'user_name', 'description': 'the username of the user', 'datatype': 'String'}, {'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'reading_list', 'description': 'the updated reading list', 'datatype': 'List'}]",,
Authorname2ID,Authorname2ID(author_name) -> author_ID,136,This API is to convert an author name to an author ID.,This API is to convert an author name to an author ID.,"[{'name': 'author_name', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'author_ID', 'description': 'the ID of the author', 'datatype': 'Integer'}]",,
BookTitle2ID,BookTitle2ID(book_title) -> book_ID,137,This API is to convert a book title to a book ID.,This API is to convert a book title to a book ID.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
AddBookToAuthor,"AddBookToAuthor(author_ID, book_ID) -> author_books",138,This API is to add a book to an author's library.,This API is to add a book to an author's library.,"[{'name': 'author_ID', 'description': 'the ID of the author', 'datatype': 'Integer'}, {'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'author_books', 'description': 'the updated library of the author', 'datatype': 'List'}]",,
AddRestaurantToCity,"AddRestaurantToCity(city_ID, restaurant_ID) -> city_restaurants",139,This API is to add a restaurant to a city's list.,This API is to add a restaurant to a city's list.,"[{'name': 'city_ID', 'description': 'the ID of the city', 'datatype': 'Integer'}, {'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]","[{'name': 'city_restaurants', 'description': 'the updated list of restaurants in the city', 'datatype': 'List'}]",,
FlightDestination2Code,FlightDestination2Code(destination) -> flight_code,140,This API is to convert flight destination to its corresponding flight code.,This API is to convert flight destination to its corresponding flight code.,"[{'name': 'destination', 'description': 'the destination of the flight', 'datatype': 'String'}]","[{'name': 'flight_code', 'description': 'the code of the flight', 'datatype': 'String'}]",,
CheckFlightAvailability,"CheckFlightAvailability(flight_code,date) -> flight_status",141,This API is to check the availability of a flight using flight code and date.,This API is to check the availability of a flight using flight code and date.,"[{'name': 'flight_code', 'description': 'the code of the flight', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the flight', 'datatype': 'Date'}]","[{'name': 'flight_status', 'description': 'the status of the flight', 'datatype': 'String'}]",,
FlightCode2ID,FlightCode2ID(Flight_code) -> Flight_ID,142,This API is to convert flight code to flight ID.,This API is to convert flight code to flight ID.,"[{'name': 'Flight_code', 'description': 'the flight code', 'datatype': 'String'}]","[{'name': 'Flight_ID', 'description': 'the ID of the flight', 'datatype': 'Integer'}]",,
DateConversion,DateConversion(date) -> standard_date,143,This API is to convert date in any format to standard format.,This API is to convert date in any format to standard format.,"[{'name': 'date', 'description': 'the date in any format', 'datatype': 'String'}]","[{'name': 'standard_date', 'description': 'the date in standard format', 'datatype': 'String'}]",,
Hotelname2ID,Hotelname2ID(Hotel_name) -> Hotel_ID,144,This API is to convert hotel name to hotel ID.,This API is to convert hotel name to hotel ID.,"[{'name': 'Hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}]","[{'name': 'Hotel_ID', 'description': 'the ID of the hotel', 'datatype': 'Integer'}]",,
RoomType2ID,RoomType2ID(Room_type) -> Room_ID,145,This API is to convert room type to room ID.,This API is to convert room type to room ID.,"[{'name': 'Room_type', 'description': 'the type of the room', 'datatype': 'String'}]","[{'name': 'Room_ID', 'description': 'the ID of the room', 'datatype': 'Integer'}]",,
Bookname2ID,Bookname2ID(book_name) -> Book_ID,146,This API is to convert book name to book ID.,This API is to convert book name to book ID.,"[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'Book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
Email2UserID,Email2UserID(email) -> User_ID,147,This API is to convert user's email to user ID.,This API is to convert user's email to user ID.,"[{'name': 'email', 'description': 'the email of the user', 'datatype': 'String'}]","[{'name': 'User_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
BookTitle2BookID,BookTitle2BookID(book_title) -> Book_ID,148,This API converts book title to book ID.,This API converts book title to book ID.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'Book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
Cityname2Timezone,Cityname2Timezone(city_name) -> timezone,149,This API retrieves the timezone for a specific city.,This API retrieves the timezone for a specific city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'timezone', 'description': 'the timezone information', 'datatype': 'String'}]",,
WeatherAndTimezone2ClothingAdvice,"WeatherAndTimezone2ClothingAdvice(weather, timezone) -> clothing_advice",150,This API provides clothing advice based on the weather and timezone.,This API provides clothing advice based on the weather and timezone.,"[{'name': 'weather', 'description': 'the weather information', 'datatype': 'String'}, {'name': 'timezone', 'description': 'the timezone information', 'datatype': 'String'}]","[{'name': 'clothing_advice', 'description': 'the clothing advice', 'datatype': 'String'}]",,
Satellitename2ID,Satellitename2ID(satellite_name) -> Satellite_ID,151,This API is to convert satellite name to satellite ID.,This API is to convert satellite name to satellite ID.,"[{'name': 'satellite_name', 'description': 'the name of the satellite', 'datatype': 'String'}]","[{'name': 'Satellite_ID', 'description': 'the ID of the satellite', 'datatype': 'Integer'}]",,
Frequency2ID,Frequency2ID(frequency) -> Frequency_ID,152,This API converts frequency to frequency ID.,This API converts frequency to frequency ID.,"[{'name': 'frequency', 'description': 'the frequency value', 'datatype': 'String'}]","[{'name': 'Frequency_ID', 'description': 'the ID of the frequency', 'datatype': 'Integer'}]",,
EstablishCommunication,"EstablishCommunication(Satellite_ID, Frequency_ID, time) -> Communication_establishment_confirmation",153,This API is to establish communication with a specific satellite at a specific frequency and time.,This API is to establish communication with a specific satellite at a specific frequency and time.,"[{'name': 'Satellite_ID', 'description': 'the ID of the satellite', 'datatype': 'Integer'}, {'name': 'Frequency_ID', 'description': 'the ID of the frequency', 'datatype': 'Integer'}, {'name': 'time', 'description': 'the time of communication', 'datatype': 'Time'}]","[{'name': 'Communication_establishment_confirmation', 'description': 'the confirmation of communication establishment', 'datatype': 'String'}]",,
GetBookIdByTitle,GetBookIdByTitle(book_title) -> book_id,154,This API finds the book's ID based on its title.,This API finds the book's ID based on its title.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
Username2UserId,Username2UserId(user_name) -> user_id,155,This API converts user name to user id.,This API converts user name to user id.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_id', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
ProductId2Cost,ProductId2Cost(product_id) -> product_cost,156,This API gets the cost of a product based on its Id.,This API gets the cost of a product based on its Id.,"[{'name': 'product_id', 'description': 'the id of the product', 'datatype': 'String'}]","[{'name': 'product_cost', 'description': 'the cost of the product', 'datatype': 'Float'}]",,
CartId2TotalCost,CartId2TotalCost(cart_id) -> total_cost,157,This API calculates the total cost of all products in a cart.,This API calculates the total cost of all products in a cart.,"[{'name': 'cart_id', 'description': 'the id of the cart', 'datatype': 'String'}]","[{'name': 'total_cost', 'description': 'the total cost of all products in the cart', 'datatype': 'Float'}]",,
UserId2CartId,UserId2CartId(user_id) -> cart_id,158,This API finds the user's cart id based on the user id.,This API finds the user's cart id based on the user id.,"[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'String'}]","[{'name': 'cart_id', 'description': 'the id of the cart', 'datatype': 'String'}]",,
UserId2Location,UserId2Location(user_id) -> user_location,159,This API finds the user's current location based on user id.,This API finds the user's current location based on user id.,"[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'String'}]","[{'name': 'user_location', 'description': 'the current location of the user', 'datatype': 'String'}]",,
StoreId2OperatingHours,StoreId2OperatingHours(store_id) -> operating_hours,160,This API finds the operating hours of a store based on store id.,This API finds the operating hours of a store based on store id.,"[{'name': 'store_id', 'description': 'the id of the store', 'datatype': 'String'}]","[{'name': 'operating_hours', 'description': 'the operating hours of the store', 'datatype': 'String'}]",,
ProductID2Availability,ProductID2Availability(product_id) -> product_availability,161,This API checks the availability of a product based on its Id.,This API checks the availability of a product based on its Id.,"[{'name': 'product_id', 'description': 'the Id of the product', 'datatype': 'Integer'}]","[{'name': 'product_availability', 'description': 'the availability status of the product', 'datatype': 'String'}]",,
Productname2ProductID,Productname2ProductID(product_name) -> product_id,162,This API converts product name to product id.,This API converts product name to product id.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_id', 'description': 'the Id of the product', 'datatype': 'Integer'}]",,
Location2Coordinates,Location2Coordinates(location_name) -> coordinates,163,This API converts the location name to its geographical coordinates.,This API converts the location name to its geographical coordinates.,"[{'name': 'location_name', 'description': 'the name of the location', 'datatype': 'String'}]","[{'name': 'coordinates', 'description': 'the geographical coordinates of the location', 'datatype': 'String'}]",,
WeatherInfo,WeatherInfo(coordinates) -> weather_data,164,This API retrieves the weather information for a specific location.,This API retrieves the weather information for a specific location.,"[{'name': 'coordinates', 'description': 'the geographical coordinates of the location', 'datatype': 'String'}]","[{'name': 'weather_data', 'description': 'the weather information for the location', 'datatype': 'String'}]",,
GenerateWeatherReport,GenerateWeatherReport(weather_data) -> report,165,This API generates a detailed weather report based on the provided weather data.,This API generates a detailed weather report based on the provided weather data.,"[{'name': 'weather_data', 'description': 'the weather information for a specific location', 'datatype': 'String'}]","[{'name': 'report', 'description': 'the detailed weather report', 'datatype': 'String'}]",,
GetUserBudget,GetUserBudget(user_ID) -> budget,166,This API returns a user's budget for hotel booking.,This API returns a user's budget for hotel booking.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'budget', 'description': 'the budget for hotel booking', 'datatype': 'Float'}]",,
Product2ID,Product2ID(product_name) -> product_ID,167,This API generates the ID of a specific product through its product name.,This API generates the ID of a specific product through its product name.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]",,
OrderProduct,"OrderProduct(product_ID, user_ID, quantity) -> order_status",168,This API allows the user to order a specific product in a certain quantity.,This API allows the user to order a specific product in a certain quantity.,"[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the product', 'datatype': 'Integer'}]","[{'name': 'order_status', 'description': 'the status of the order', 'datatype': 'String'}]",,
RecommendProduct,RecommendProduct(category) -> product_name,169,This API suggests a product name according to the category preferred by the user.,This API suggests a product name according to the category preferred by the user.,"[{'name': 'category', 'description': 'the preferred category of the user', 'datatype': 'String'}]","[{'name': 'product_name', 'description': 'the suggested product name', 'datatype': 'String'}]",,
GetFavouriteCategory,GetFavouriteCategory(user_ID) -> category,170,This API will provide the favourite category of the specified user.,This API will provide the favourite category of the specified user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'category', 'description': 'the favourite category of the user', 'datatype': 'String'}]",,
UserEmail2ID,UserEmail2ID(user_email) -> user_ID,171,This API generates the ID of a specific user through the user email.,This API generates the ID of a specific user through the user email.,"[{'name': 'user_email', 'description': 'the email of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
SearchMovieByGenre,SearchMovieByGenre(genre) -> movie_ID,172,This API is used to retrieve a movie ID by using the movie's genre.,This API is used to retrieve a movie ID by using the movie's genre.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
GetUserFavoriteGenre,GetUserFavoriteGenre(user_ID) -> user_genre,173,This API will return the user's favorite movie genre based on user ID.,This API will return the user's favorite movie genre based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'user_genre', 'description': 'the favorite genre of the user', 'datatype': 'String'}]",,
ReserveMovieTicket,"ReserveMovieTicket(movie_ID, date) -> reservation_status",174,This API reserves a movie ticket for a certain date.,This API reserves a movie ticket for a certain date.,"[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the movie ticket reservation', 'datatype': 'Date'}]","[{'name': 'reservation_status', 'description': 'the status of the movie ticket reservation', 'datatype': 'String'}]",,
FindRestaurantByCuisine,FindRestaurantByCuisine(cuisine) -> restaurant_ID,175,This API is used to retrieve a restaurant ID by using the restaurant's cuisine.,This API is used to retrieve a restaurant ID by using the restaurant's cuisine.,"[{'name': 'cuisine', 'description': 'the cuisine of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]",,
GetUserFavoriteCuisine,GetUserFavoriteCuisine(user_ID) -> user_cuisine,176,This API will return the user's favorite cuisine based on user ID.,This API will return the user's favorite cuisine based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'user_cuisine', 'description': 'the favorite cuisine of the user', 'datatype': 'String'}]",,
BookRestaurantTable,"BookRestaurantTable(restaurant_ID, date) -> booking_status",177,This API books a table at a restaurant for a certain date.,This API books a table at a restaurant for a certain date.,"[{'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the booking', 'datatype': 'Date'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
GetUserPreferredCuisine,GetUserPreferredCuisine(user_ID) -> user_cuisine,178,This API will return the user's preferred cuisine based on user ID.,This API will return the user's preferred cuisine based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'user_cuisine', 'description': 'the preferred cuisine of the user', 'datatype': 'String'}]",,
ReserveTable,"ReserveTable(restaurant_ID, date, time) -> reservation_status",179,This API reserves a table at a restaurant for a certain date and time.,This API reserves a table at a restaurant for a certain date and time.,"[{'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the reservation', 'datatype': 'Date'}, {'name': 'time', 'description': 'the time of the reservation', 'datatype': 'Time'}]","[{'name': 'reservation_status', 'description': 'the status of the reservation', 'datatype': 'String'}]",,
Username2City,Username2City(username) -> city,180,This API is to convert username to the city they live in.,This API is to convert username to the city they live in.,"[{'name': 'username', 'description': 'the username of the person', 'datatype': 'String'}]","[{'name': 'city', 'description': 'the city the person lives in', 'datatype': 'String'}]",,
City2Weather,City2Weather(city) -> weather,181,This API is to get the current weather of a specific city.,This API is to get the current weather of a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the current weather of the city', 'datatype': 'String'}]",,
Weather2Advice,Weather2Advice(weather) -> advice,182,This API is to provide advice based on the current weather.,This API is to provide advice based on the current weather.,"[{'name': 'weather', 'description': 'the current weather', 'datatype': 'String'}]","[{'name': 'advice', 'description': 'advice based on the current weather', 'datatype': 'String'}]",,
Card2Number,Card2Number(card_id) -> card_number,183,This API is to convert card ID to card number.,This API is to convert card ID to card number.,"[{'name': 'card_id', 'description': 'the ID of the card', 'datatype': 'String'}]","[{'name': 'card_number', 'description': 'the number of the card', 'datatype': 'String'}]",,
CheckCardBalance,CheckCardBalance(card_number) -> card_balance,184,This API allows the user to check the balance in a card.,This API allows the user to check the balance in a card.,"[{'name': 'card_number', 'description': 'the number of the card', 'datatype': 'String'}]","[{'name': 'card_balance', 'description': 'the balance in the card', 'datatype': 'Float'}]",,
EnoughBalance,"EnoughBalance(product_price, card_balance) -> order_status",185,This API checks if there is sufficient balance in the card for the product order and returns an order status.,This API checks if there is sufficient balance in the card for the product order and returns an order status.,"[{'name': 'product_price', 'description': 'the price of the product', 'datatype': 'Float'}, {'name': 'card_balance', 'description': 'the balance in the card', 'datatype': 'Float'}]","[{'name': 'order_status', 'description': 'the status of the order', 'datatype': 'String'}]",,
SuggestApparel,SuggestApparel(weather_status) -> apparel,186,This API suggests suitable apparel based on the weather status.,This API suggests suitable apparel based on the weather status.,"[{'name': 'weather_status', 'description': 'the weather status', 'datatype': 'String'}]","[{'name': 'apparel', 'description': 'the suggested apparel based on the weather status', 'datatype': 'String'}]",,
GetUserFavoriteFood,GetUserFavoriteFood(user_name) -> favorite_food,187,This API provides the user's favorite food.,This API provides the user's favorite food.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'favorite_food', 'description': 'the favorite food of the user', 'datatype': 'String'}]",,
GetRestaurantRating,GetRestaurantRating(restaurant) -> rating,188,This API provides the rating of a particular restaurant.,This API provides the rating of a particular restaurant.,"[{'name': 'restaurant', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'rating', 'description': 'the rating of the restaurant', 'datatype': 'Float'}]",,
SuggestOutfit,SuggestOutfit(weather) -> outfit,189,This API suggests an outfit based on the current weather.,This API suggests an outfit based on the current weather.,"[{'name': 'weather', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'outfit', 'description': 'the suggested outfit', 'datatype': 'String'}]",,
GetUserBirthday,GetUserBirthday(user_name) -> user_birthday,190,The API returns the birthday of a certain user.,The API returns the birthday of a certain user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_birthday', 'description': 'the birthday of the user', 'datatype': 'Date'}]",,
Birthday2ZodiacSign,Birthday2ZodiacSign(birthday) -> zodiac_sign,191,This API is used to convert a user's birthday to their zodiac sign.,This API is used to convert a user's birthday to their zodiac sign.,"[{'name': 'birthday', 'description': 'the birthday of the user', 'datatype': 'Date'}]","[{'name': 'zodiac_sign', 'description': 'the zodiac sign of the user', 'datatype': 'String'}]",,
ZodiacSignHoroscope,ZodiacSignHoroscope(zodiac_sign) -> horoscope,192,This API returns the daily horoscope for a specific zodiac sign.,This API returns the daily horoscope for a specific zodiac sign.,"[{'name': 'zodiac_sign', 'description': 'the zodiac sign of the user', 'datatype': 'String'}]","[{'name': 'horoscope', 'description': 'the daily horoscope for the zodiac sign', 'datatype': 'String'}]",,
GetUserCurrentWeather,GetUserCurrentWeather(user_name) -> user_weather,193,This API returns the current weather at the location of a certain user.,This API returns the current weather at the location of a certain user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_weather', 'description': ""the current weather at the user's location"", 'datatype': 'String'}]",,
FindNearestRestaurant,"FindNearestRestaurant(geolocation, cuisine_type) -> restaurant",194,This API finds the nearest restaurant of a specific cuisine type according to the user's geolocation.,This API finds the nearest restaurant of a specific cuisine type according to the user's geolocation.,"[{'name': 'geolocation', 'description': 'the geolocation of the user', 'datatype': 'String'}, {'name': 'cuisine_type', 'description': 'the preferred type of cuisine', 'datatype': 'String'}]","[{'name': 'restaurant', 'description': 'the nearest restaurant that serves the preferred type of cuisine', 'datatype': 'String'}]",,
GetUserCuisinePreference,GetUserCuisinePreference(user_name) -> user_cuisine_preference,195,This API returns a user's preferred type of cuisine.,This API returns a user's preferred type of cuisine.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_cuisine_preference', 'description': 'the preferred type of cuisine', 'datatype': 'String'}]",,
GetCinema,"GetCinema(city, movie) -> cinema_name",196,This API fetches a cinema playing a given movie in a certain city.,This API fetches a cinema playing a given movie in a certain city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}]",,
CheckTime,"CheckTime(cinema_name, movie) -> show_time",197,This API checks the show time of a movie in a certain cinema.,This API checks the show time of a movie in a certain cinema.,"[{'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}, {'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'show_time', 'description': 'the show time of the movie', 'datatype': 'String'}]",,
BookTicket,"BookTicket(cinema_name, movie, show_time) -> ticket_status",198,This API is used to book a movie ticket.,This API is used to book a movie ticket.,"[{'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}, {'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'show_time', 'description': 'the show time of the movie', 'datatype': 'String'}]","[{'name': 'ticket_status', 'description': 'the status of the ticket booking', 'datatype': 'String'}]",,
CheckVacancy,"CheckVacancy(hotelname, date) -> roomAvailable",199,This API checks if there is any room available for a certain date in a certain hotel.,This API checks if there is any room available for a certain date in a certain hotel.,"[{'name': 'hotelname', 'description': 'the name of the hotel', 'datatype': 'String'}, {'name': 'date', 'description': 'the date to check for room availability', 'datatype': 'Date'}]","[{'name': 'roomAvailable', 'description': 'the availability of rooms', 'datatype': 'Boolean'}]",,
UsernameToID,UsernameToID(user_name) -> user_ID,200,This API is used to convert the name of the user to user ID.,This API is used to convert the name of the user to user ID.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
CustomernameToID,CustomernameToID(customer_name) -> customer_ID,201,This API is used to convert the name of the customer to customer ID.,This API is used to convert the name of the customer to customer ID.,"[{'name': 'customer_name', 'description': 'the name of the customer', 'datatype': 'String'}]","[{'name': 'customer_ID', 'description': 'the ID of the customer', 'datatype': 'Integer'}]",,
ProductnameToID,ProductnameToID(product_name) -> product_ID,202,This API is used to convert the name of the product to product ID.,This API is used to convert the name of the product to product ID.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]",,
AddProductToCart,"AddProductToCart(product_ID, customer_ID, quantity) -> cart_status",203,This API adds a certain quantity of a particular product to the customer's cart.,This API adds a certain quantity of a particular product to the customer's cart.,"[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'customer_ID', 'description': 'the ID of the customer', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the product to be added to the cart', 'datatype': 'Integer'}]","[{'name': 'cart_status', 'description': 'the status of the cart after adding the product', 'datatype': 'String'}]",,
StorenameToID,StorenameToID(store_name) -> store_ID,204,This API is to convert the store name to store ID.,This API is to convert the store name to store ID.,"[{'name': 'store_name', 'description': 'the name of the store', 'datatype': 'String'}]","[{'name': 'store_ID', 'description': 'the ID of the store', 'datatype': 'Integer'}]",,
MovienameToID,MovienameToID(movie_name) -> movie_ID,205,This API is to convert the movie name to movie ID.,This API is to convert the movie name to movie ID.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
RentMovie,"RentMovie(user_ID, movie_ID, date) -> rental_status",206,This API rents a movie for a particular user on a specified date.,This API rents a movie for a particular user on a specified date.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of rental', 'datatype': 'Date'}]","[{'name': 'rental_status', 'description': 'the status of the rental', 'datatype': 'String'}]",,
PurchaseProduct,"PurchaseProduct(customer_ID, product_ID, quantity) -> purchase_status",207,This API executes a product purchase for a particular customer with a specific quantity.,This API executes a product purchase for a particular customer with a specific quantity.,"[{'name': 'customer_ID', 'description': 'the ID of the customer', 'datatype': 'Integer'}, {'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the product to purchase', 'datatype': 'Integer'}]","[{'name': 'purchase_status', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
CitynameToID,CitynameToID(city_name) -> city_ID,208,This API is used to convert the city name to city ID.,This API is used to convert the city name to city ID.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'city_ID', 'description': 'the ID of the city', 'datatype': 'Integer'}]",,
HotelnameToID,HotelnameToID(hotel_name) -> hotel_ID,209,This API is to convert the hotel name to hotel ID.,This API is to convert the hotel name to hotel ID.,"[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}]","[{'name': 'hotel_ID', 'description': 'the ID of the hotel', 'datatype': 'Integer'}]",,
ProductIDToname,ProductIDToname(product_ID) -> product_name,210,This API is used to convert the product ID to product name.,This API is used to convert the product ID to product name.,"[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]",,
FlightNumberToID,FlightNumberToID(flight_number) -> flight_ID,211,This API is used to convert the flight number to flight ID.,This API is used to convert the flight number to flight ID.,"[{'name': 'flight_number', 'description': 'the flight number', 'datatype': 'String'}]","[{'name': 'flight_ID', 'description': 'the ID of the flight', 'datatype': 'Integer'}]",,
PassengernameToID,PassengernameToID(passenger_name) -> passenger_ID,212,This API is to convert the passenger name to passenger ID.,This API is to convert the passenger name to passenger ID.,"[{'name': 'passenger_name', 'description': 'the name of the passenger', 'datatype': 'String'}]","[{'name': 'passenger_ID', 'description': 'the ID of the passenger', 'datatype': 'Integer'}]",,
SongnameToID,SongnameToID(song_name) -> song_ID,213,This API is used to convert the song's name to song ID.,This API is used to convert the song's name to song ID.,"[{'name': 'song_name', 'description': 'the name of the song', 'datatype': 'String'}]","[{'name': 'song_ID', 'description': 'the ID of the song', 'datatype': 'Integer'}]",,
PlaySong,"PlaySong(user_ID, song_ID) -> play_status",214,This API plays a song for a particular user.,This API plays a song for a particular user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'song_ID', 'description': 'the ID of the song', 'datatype': 'Integer'}]","[{'name': 'play_status', 'description': 'the status of the song playback', 'datatype': 'String'}]",,
ISBNToBookname,ISBNToBookname(ISBN) -> book_name,215,This API is used to convert the ISBN of a book to its name.,This API is used to convert the ISBN of a book to its name.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]",,
ReturnBook,"ReturnBook(user_ID, book_name) -> return_status",216,This API returns a book on behalf of a particular user.,This API returns a book on behalf of a particular user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'return_status', 'description': 'the status of the return', 'datatype': 'String'}]",,
SongTitleToID,SongTitleToID(song_title) -> song_ID,217,This API is to convert the song title to song ID.,This API is to convert the song title to song ID.,"[{'name': 'song_title', 'description': 'the title of the song', 'datatype': 'String'}]","[{'name': 'song_ID', 'description': 'the ID of the song', 'datatype': 'Integer'}]",,
ProductToID,ProductToID(product_name) -> product_ID,218,This API is used to convert the product name to product ID.,This API is used to convert the product name to product ID.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]",,
Cartname2ID,Cartname2ID(cart_name) -> cart_ID,219,This API is to convert a cart's name to cart ID.,This API is to convert a cart's name to cart ID.,"[{'name': 'cart_name', 'description': 'the name of the cart', 'datatype': 'String'}]","[{'name': 'cart_ID', 'description': 'the ID of the cart', 'datatype': 'Integer'}]",,
Moviename2ID,Moviename2ID(movie_name) -> movie_ID,220,This API is to convert a movie's name to movie ID.,This API is to convert a movie's name to movie ID.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
AddMovieToWatchlist,"AddMovieToWatchlist(watchlist_ID, movie_ID) -> movie_status",221,This API is to add a movie to a watchlist.,This API is to add a movie to a watchlist.,"[{'name': 'watchlist_ID', 'description': 'the ID of the watchlist', 'datatype': 'Integer'}, {'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]","[{'name': 'movie_status', 'description': 'the status of the movie', 'datatype': 'String'}]",,
Watchlistname2ID,Watchlistname2ID(watchlist_name) -> watchlist_ID,222,This API is to convert a watchlist's name to watchlist ID.,This API is to convert a watchlist's name to watchlist ID.,"[{'name': 'watchlist_name', 'description': 'the name of the watchlist', 'datatype': 'String'}]","[{'name': 'watchlist_ID', 'description': 'the ID of the watchlist', 'datatype': 'Integer'}]",,
StoreIDToAddress,StoreIDToAddress(storeId) -> store_address,223,This API is used to convert a store id to its address.,This API is used to convert a store id to its address.,"[{'name': 'storeId', 'description': 'the id of the store', 'datatype': 'String'}]","[{'name': 'store_address', 'description': 'the address of the store', 'datatype': 'String'}]",,
CheckProductAvailability,"CheckProductAvailability(store_address, product_name) -> product_availability",224,This API checks the availability of a product in a specific store.,This API checks the availability of a product in a specific store.,"[{'name': 'store_address', 'description': 'the address of the store', 'datatype': 'String'}, {'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_availability', 'description': 'the availability of the product', 'datatype': 'String'}]",,
ISBN2Book,ISBN2Book(isbn) -> book_title,225,This API is used to convert an ISBN to a book title.,This API is used to convert an ISBN to a book title.,"[{'name': 'isbn', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]",,
Book2Author,Book2Author(book_title) -> author_name,226,This API is used to convert a book title to an author name.,This API is used to convert a book title to an author name.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'author_name', 'description': 'the name of the author', 'datatype': 'String'}]",,
CheckAuthorAvailability,"CheckAuthorAvailability(user_ID, author_name) -> availability_status",227,This API checks if the author is available for a book discussion.,This API checks if the author is available for a book discussion.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'String'}, {'name': 'author_name', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'availability_status', 'description': 'the availability status of the author', 'datatype': 'String'}]",,
ScheduleDiscussion,"ScheduleDiscussion(user_ID, author_name, date_time) -> schedule_status",228,This API is used to schedule a book discussion with the author.,This API is used to schedule a book discussion with the author.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'String'}, {'name': 'author_name', 'description': 'the name of the author', 'datatype': 'String'}, {'name': 'date_time', 'description': 'the date and time of the book discussion', 'datatype': 'String'}]","[{'name': 'schedule_status', 'description': 'the schedule status of the book discussion', 'datatype': 'String'}]",,
LocateCity,LocateCity(city) -> Coordinates,229,This API returns the coordinates of a given city.,This API returns the coordinates of a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'Coordinates', 'description': 'the coordinates of the city', 'datatype': 'String'}]",,
GetClothingAdvice,GetClothingAdvice(weather) -> clothing_advice,230,This API gives clothing advice based on the weather.,This API gives clothing advice based on the weather.,"[{'name': 'weather', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'clothing_advice', 'description': 'the clothing advice', 'datatype': 'String'}]",,
RecommendDish,RecommendDish(menu) -> dish,231,This API recommends a dish from a given menu.,This API recommends a dish from a given menu.,"[{'name': 'menu', 'description': 'the menu of the restaurant', 'datatype': 'String'}]","[{'name': 'dish', 'description': 'the recommended dish', 'datatype': 'String'}]",,
Cityname2WeatherCode,Cityname2WeatherCode(city_name) -> weather_code,232,This API converts a city name to its weather code.,This API converts a city name to its weather code.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'weather_code', 'description': 'the weather code of the city', 'datatype': 'String'}]",,
WeatherCode2Forecast,"WeatherCode2Forecast(weather_code, date) -> weather_forecast",233,This API provides the weather forecast for a specific date based on the weather code.,This API provides the weather forecast for a specific date based on the weather code.,"[{'name': 'weather_code', 'description': 'the weather code of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date for the weather forecast', 'datatype': 'String'}]","[{'name': 'weather_forecast', 'description': 'the weather forecast for the specific date', 'datatype': 'String'}]",,
StringToDatetime,StringToDatetime(date_string) -> date,234,This API converts a string to a datetime object.,This API converts a string to a datetime object.,"[{'name': 'date_string', 'description': 'the string representation of the date', 'datatype': 'String'}]","[{'name': 'date', 'description': 'the datetime object', 'datatype': 'Datetime'}]",,
Venuename2ID,Venuename2ID(venue_name) -> venue_ID,235,This API converts a venue name to its ID.,This API converts a venue name to its ID.,"[{'name': 'venue_name', 'description': 'the name of the venue', 'datatype': 'String'}]","[{'name': 'venue_ID', 'description': 'the ID of the venue', 'datatype': 'Integer'}]",,
BookEventTicket,"BookEventTicket(event_ID, venue_ID, date) -> Booking status",236,This API books a ticket for a specified event on a specified date at a specified venue.,This API books a ticket for a specified event on a specified date at a specified venue.,"[{'name': 'event_ID', 'description': 'the ID of the event', 'datatype': 'Integer'}, {'name': 'venue_ID', 'description': 'the ID of the venue', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the event', 'datatype': 'Datetime'}]","[{'name': 'Booking status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
Coursename2ID,Coursename2ID(course_name) -> course_ID,237,This API converts a course name to its ID.,This API converts a course name to its ID.,"[{'name': 'course_name', 'description': 'the name of the course', 'datatype': 'String'}]","[{'name': 'course_ID', 'description': 'the ID of the course', 'datatype': 'Integer'}]",,
Instructorname2ID,Instructorname2ID(instructor_name) -> instructor_ID,238,This API converts an instructor's name to their ID.,This API converts an instructor's name to their ID.,"[{'name': 'instructor_name', 'description': 'the name of the instructor', 'datatype': 'String'}]","[{'name': 'instructor_ID', 'description': 'the ID of the instructor', 'datatype': 'Integer'}]",,
Studentname2ID,Studentname2ID(student_name) -> student_ID,239,This API converts a student's name to their ID.,This API converts a student's name to their ID.,"[{'name': 'student_name', 'description': 'the name of the student', 'datatype': 'String'}]","[{'name': 'student_ID', 'description': 'the ID of the student', 'datatype': 'Integer'}]",,
FindIndoorActivities,FindIndoorActivities(city) -> activity_name,240,This API suggests popular indoor activities in a given city.,This API suggests popular indoor activities in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'activity_name', 'description': 'the name of the suggested indoor activity', 'datatype': 'String'}]",,
BookActivity,"BookActivity(activity_name, city) -> booking_status",241,This API allows the user to book a particular indoor activity in a specific city.,This API allows the user to book a particular indoor activity in a specific city.,"[{'name': 'activity_name', 'description': 'the name of the indoor activity', 'datatype': 'String'}, {'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
CheckFlightStatus,CheckFlightStatus(flight_number) -> flight_status,242,This API allows the user to check the current status of a certain flight.,This API allows the user to check the current status of a certain flight.,"[{'name': 'flight_number', 'description': 'the number of the flight', 'datatype': 'String'}]","[{'name': 'flight_status', 'description': 'the status of the flight', 'datatype': 'String'}]",,
FindNearbyHotels,FindNearbyHotels(city) -> hotel_name,243,This API provides the names of nearby hotels in a given city.,This API provides the names of nearby hotels in a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}]",,
GetLocationCoordinates,"GetLocationCoordinates(city) -> (latitude, longitude)",244,This API returns the geographical coordinates (latitude and longitude) of a specified city.,This API returns the geographical coordinates (latitude and longitude) of a specified city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'latitude', 'description': 'the latitude coordinate of the city', 'datatype': 'Float'}, {'name': 'longitude', 'description': 'the longitude coordinate of the city', 'datatype': 'Float'}]",,
PredictWeather,"PredictWeather(coordinates, date) -> weather conditions",245,This API provides the weather forecast for a location based on geographic coordinates on a specific date.,This API provides the weather forecast for a location based on geographic coordinates on a specific date.,"[{'name': 'coordinates', 'description': 'the geographic coordinates (latitude and longitude) of the location', 'datatype': 'Tuple (Float, Float)'}, {'name': 'date', 'description': 'the specific date for the weather forecast', 'datatype': 'String'}]","[{'name': 'weather conditions', 'description': 'the weather conditions for the specified location and date', 'datatype': 'String'}]",,
SuggestActivity,SuggestActivity(weather) -> activity,246,This API suggests an activity based on the weather conditions.,This API suggests an activity based on the weather conditions.,"[{'name': 'weather', 'description': 'the weather conditions', 'datatype': 'String'}]","[{'name': 'activity', 'description': 'the suggested activity based on the weather conditions', 'datatype': 'String'}]",,
SearchBook,SearchBook(title) -> book_id,247,This API returns the ID of a book based on a specified title.,This API returns the ID of a book based on a specified title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
GetBookReview,GetBookReview(book_id) -> review,248,This API gives a review of a book given its ID.,This API gives a review of a book given its ID.,"[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'review', 'description': 'the review of the book', 'datatype': 'String'}]",,
ShareReview,"ShareReview(review, social_media_platform) -> share_status",249,This API allows the user to share a review on a specified social media platform.,This API allows the user to share a review on a specified social media platform.,"[{'name': 'review', 'description': 'the review of the book', 'datatype': 'String'}, {'name': 'social_media_platform', 'description': 'the social media platform to share the review', 'datatype': 'String'}]","[{'name': 'share_status', 'description': 'the status of the sharing', 'datatype': 'String'}]",,
GetShowtimes,"GetShowtimes(movie_title, city) -> showtime",250,This API gives the showtime for a given movie in a specific city.,This API gives the showtime for a given movie in a specific city.,"[{'name': 'movie_title', 'description': 'the title of the movie', 'datatype': 'String'}, {'name': 'city', 'description': 'the city where the showtime is requested', 'datatype': 'String'}]","[{'name': 'showtime', 'description': 'the showtime of the movie in the specified city', 'datatype': 'Time'}]",,
ReserveTickets,"ReserveTickets(showtime, number_of_tickets) -> reservation_status",251,This API allows the user to reserve a certain number of tickets for a specific showtime.,This API allows the user to reserve a certain number of tickets for a specific showtime.,"[{'name': 'showtime', 'description': 'the showtime of the movie', 'datatype': 'Time'}, {'name': 'number_of_tickets', 'description': 'the number of tickets to be reserved', 'datatype': 'Integer'}]","[{'name': 'reservation_status', 'description': 'the status of the ticket reservation', 'datatype': 'String'}]",,
LocateLibrary,LocateLibrary(city) -> library_name,252,This API provides the name of a library in the specified city.,This API provides the name of a library in the specified city.,"[{'name': 'city', 'description': 'the city name', 'datatype': 'String'}]","[{'name': 'library_name', 'description': 'the name of the library', 'datatype': 'String'}]",,
RestaurantLocator,"RestaurantLocator(city, cuisine) -> restaurant",253,This API is to find a specific restaurant by city and cuisine.,This API is to find a specific restaurant by city and cuisine.,"[{'name': 'city', 'description': 'the city where the restaurant is located', 'datatype': 'String'}, {'name': 'cuisine', 'description': 'the type of cuisine the restaurant serves', 'datatype': 'String'}]","[{'name': 'restaurant', 'description': 'the details of the restaurant', 'datatype': 'Object'}]",,
DishFinder,"DishFinder(restaurant, dish) -> dish_details",254,This API is to get information about a specific dish from a particular restaurant.,This API is to get information about a specific dish from a particular restaurant.,"[{'name': 'restaurant', 'description': 'the details of the restaurant', 'datatype': 'Object'}, {'name': 'dish', 'description': 'the name of the dish', 'datatype': 'String'}]","[{'name': 'dish_details', 'description': 'the details of the dish', 'datatype': 'Object'}]",,
FoodReview,FoodReview(dish_details) -> review,255,This API is to get reviews of a particular dish.,This API is to get reviews of a particular dish.,"[{'name': 'dish_details', 'description': 'the details of the dish', 'datatype': 'Object'}]","[{'name': 'review', 'description': 'the reviews of the dish', 'datatype': 'Object'}]",,
FoodFinder,"FoodFinder(cuisine, location) -> restaurant_name",256,This API identifies a specific restaurant serving a certain cuisine in a particular location.,This API identifies a specific restaurant serving a certain cuisine in a particular location.,"[{'name': 'cuisine', 'description': 'the type of cuisine', 'datatype': 'String'}, {'name': 'location', 'description': 'the location of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]",,
MenuDetails,MenuDetails(restaurant_name) -> menu,257,This API provides the menu of a specific restaurant.,This API provides the menu of a specific restaurant.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'menu', 'description': 'the menu of the restaurant', 'datatype': 'String'}]",,
FoodIngredients,"FoodIngredients(dish_name, restaurant_name) -> ingredients",258,This API gives the ingredients of a specific dish from a certain restaurant.,This API gives the ingredients of a specific dish from a certain restaurant.,"[{'name': 'dish_name', 'description': 'the name of the dish', 'datatype': 'String'}, {'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'ingredients', 'description': 'the ingredients of the dish', 'datatype': 'String'}]",,
FindNearestBookStore,FindNearestBookStore(city) -> store_name,259,This API is to find the nearest bookstore based on the user's location.,This API is to find the nearest bookstore based on the user's location.,"[{'name': 'city', 'description': 'the city where the user is located', 'datatype': 'String'}]","[{'name': 'store_name', 'description': 'the name of the nearest bookstore', 'datatype': 'String'}]",,
GetLocalCinema,GetLocalCinema(city) -> cinema_name,260,This API is to find the local cinema based on the user's location.,This API is to find the local cinema based on the user's location.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}]",,
GetCurrentMovies,GetCurrentMovies(cinema_name) -> movie_list,261,This API is to get the list of movies currently being shown in a given cinema.,This API is to get the list of movies currently being shown in a given cinema.,"[{'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}]","[{'name': 'movie_list', 'description': 'a list of movies currently being shown', 'datatype': 'List'}]",,
GetMovieReviews,GetMovieReviews(movie_name) -> reviews,262,This API fetches the reviews of a specific movie.,This API fetches the reviews of a specific movie.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'reviews', 'description': 'the reviews of the movie', 'datatype': 'List'}]",,
GetRestaurantMenu,GetRestaurantMenu(restaurant_id) -> menu_id,263,This API is to get the menu from a specific restaurant.,This API is to get the menu from a specific restaurant.,"[{'name': 'restaurant_id', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]","[{'name': 'menu_id', 'description': 'the ID of the menu', 'datatype': 'Integer'}]",,
GetMovieDetails,GetMovieDetails(movie_name) -> movie_info,264,This API is to get the details of a specific movie.,This API is to get the details of a specific movie.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_info', 'description': 'the details of the movie', 'datatype': 'Object'}]",,
GetActorDetails,GetActorDetails(movie_info) -> actor_info,265,This API is to get the details of actors in a specific movie.,This API is to get the details of actors in a specific movie.,"[{'name': 'movie_info', 'description': 'the details of the movie', 'datatype': 'Object'}]","[{'name': 'actor_info', 'description': 'the details of the actors', 'datatype': 'Object'}]",,
GetMovieRecommendation,GetMovieRecommendation(actor_info) -> movie_recommendation,266,This API is to get movie recommendations based on the actors' performances.,This API is to get movie recommendations based on the actors' performances.,"[{'name': 'actor_info', 'description': 'the details of the actors', 'datatype': 'Object'}]","[{'name': 'movie_recommendation', 'description': 'the recommended movies', 'datatype': 'Object'}]",,
FindOpenHours,FindOpenHours(restaurant_info) -> open_hours,267,This API is used to find the opening hours of the selected restaurant.,This API is used to find the opening hours of the selected restaurant.,"[{'name': 'restaurant_info', 'description': 'information about the restaurant', 'datatype': 'String'}]","[{'name': 'open_hours', 'description': 'the opening hours of the restaurant', 'datatype': 'String'}]",,
MakeReservation,"MakeReservation(open_hours, number_of_people, date_time) -> reservation_info",268,This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.,This API is to make a reservation at a restaurant based on its open hours for a specific number of people at a certain date and time.,"[{'name': 'open_hours', 'description': 'the opening hours of the restaurant', 'datatype': 'String'}, {'name': 'number_of_people', 'description': 'the number of people for the reservation', 'datatype': 'Integer'}, {'name': 'date_time', 'description': 'the date and time for the reservation', 'datatype': 'String'}]","[{'name': 'reservation_info', 'description': 'information about the reservation', 'datatype': 'String'}]",,
CheckFlights,"CheckFlights(source, destination) -> flight",269,This API checks available flights from source to destination.,This API checks available flights from source to destination.,"[{'name': 'source', 'description': 'the source location', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}]","[{'name': 'flight', 'description': 'the available flight details', 'datatype': 'Object'}]",,
PlanItinerary,"PlanItinerary(location, interests) -> itinerary",270,This API plans an itinerary based on the location and the user's interests.,This API plans an itinerary based on the location and the user's interests.,"[{'name': 'location', 'description': 'the location for the itinerary', 'datatype': 'String'}, {'name': 'interests', 'description': ""the user's interests"", 'datatype': 'String'}, {'name': 'flight', 'description': 'the flight details', 'datatype': 'Object'}, {'name': 'hotel', 'description': 'the hotel details', 'datatype': 'Object'}]","[{'name': 'itinerary', 'description': 'the planned itinerary', 'datatype': 'Object'}]",,
FindAddress,FindAddress(contact) -> address,271,This API finds the address of a specific contact.,This API finds the address of a specific contact.,"[{'name': 'contact', 'description': 'the name of the contact', 'datatype': 'String'}]","[{'name': 'address', 'description': 'the address of the contact', 'datatype': 'String'}]",,
CheckTraffic,CheckTraffic(destination) -> traffic_condition,272,This API checks the current traffic condition to a specific destination.,This API checks the current traffic condition to a specific destination.,"[{'name': 'destination', 'description': 'the destination to check traffic condition', 'datatype': 'String'}]","[{'name': 'traffic_condition', 'description': 'the current traffic condition to the destination', 'datatype': 'String'}]",,
GetLocalEvents,"GetLocalEvents(city, date) -> events",273,This API provides a list of local events happening in a specific city on a specific date.,This API provides a list of local events happening in a specific city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for the local events', 'datatype': 'String'}]","[{'name': 'events', 'description': 'a list of local events happening in the specified city and date', 'datatype': 'List'}]",,
PlanOutdoorActivities,"PlanOutdoorActivities(weather, events) -> activities",274,This API plans outdoor activities based on the weather forecast and local events.,This API plans outdoor activities based on the weather forecast and local events.,"[{'name': 'weather', 'description': 'the weather forecast for a specific city and date', 'datatype': 'String'}, {'name': 'events', 'description': 'a list of local events happening in a specific city and date', 'datatype': 'List'}]","[{'name': 'activities', 'description': 'a list of planned outdoor activities based on the weather forecast and local events', 'datatype': 'List'}]",,
FindDoctor,"FindDoctor(specialty, location) -> doctor",275,This API is to find a doctor based on specialty and location.,This API is to find a doctor based on specialty and location.,"[{'name': 'specialty', 'description': 'the specialty of the doctor', 'datatype': 'String'}, {'name': 'location', 'description': 'the location where the doctor is located', 'datatype': 'String'}]","[{'name': 'doctor', 'description': 'the information of the doctor', 'datatype': 'Object'}]",,
GetAppointment,"GetAppointment(doctor_id, date) -> appointment",276,This API is to get an appointment with a specific doctor on a certain date.,This API is to get an appointment with a specific doctor on a certain date.,"[{'name': 'doctor_id', 'description': 'the ID of the doctor', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the appointment', 'datatype': 'Date'}]","[{'name': 'appointment', 'description': 'the information of the appointment', 'datatype': 'Object'}]",,
ConfirmAppointment,ConfirmAppointment(appointment_id) -> confirmation,277,This API is to confirm a specific appointment.,This API is to confirm a specific appointment.,"[{'name': 'appointment_id', 'description': 'the ID of the appointment', 'datatype': 'Integer'}]","[{'name': 'confirmation', 'description': 'the confirmation status of the appointment', 'datatype': 'String'}]",,
BookReservation,"BookReservation(restaurantname, partySize, time) -> reservationStatus",278,This API is to book a reservation at a specific restaurant for a specific party size and time.,This API is to book a reservation at a specific restaurant for a specific party size and time.,"[{'name': 'restaurantname', 'description': 'the name of the specific restaurant', 'datatype': 'String'}, {'name': 'partySize', 'description': 'the size of the party', 'datatype': 'Integer'}, {'name': 'time', 'description': 'the specific time for the reservation', 'datatype': 'Time'}]","[{'name': 'reservationStatus', 'description': 'the status of the reservation', 'datatype': 'String'}]",,
PlanDay,"PlanDay(weatherForecast, clothingRecommendation) -> dayPlan",279,This API is to plan the day's activities and outfits based on the weather and clothing recommendations.,This API is to plan the day's activities and outfits based on the weather and clothing recommendations.,"[{'name': 'weatherForecast', 'description': 'the weather forecast for planning the day', 'datatype': 'String'}, {'name': 'clothingRecommendation', 'description': 'the clothing recommendations for planning the day', 'datatype': 'String'}]","[{'name': 'dayPlan', 'description': ""the plan for the day's activities and outfits"", 'datatype': 'String'}]",,
FindAccommodation,"FindAccommodation(destination, budget) -> accommodation",280,This API is to find accommodation in the destination within the specified budget.,This API is to find accommodation in the destination within the specified budget.,"[{'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}, {'name': 'budget', 'description': 'the budget for accommodation', 'datatype': 'Float'}]","[{'name': 'accommodation', 'description': 'the found accommodation', 'datatype': 'String'}]",,
CreateTravelPlan,"CreateTravelPlan(flight, accommodation) -> travelPlan",281,This API is to create a travel plan including flight and accommodation.,This API is to create a travel plan including flight and accommodation.,"[{'name': 'flight', 'description': 'the booked flight', 'datatype': 'String'}, {'name': 'accommodation', 'description': 'the found accommodation', 'datatype': 'String'}]","[{'name': 'travelPlan', 'description': 'the created travel plan', 'datatype': 'String'}]",,
GetCurrentTemperature,GetCurrentTemperature(city) -> temperature,282,This API is to get the current temperature for a specific city.,This API is to get the current temperature for a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'temperature', 'description': 'the current temperature of the city', 'datatype': 'Float'}]",,
DetermineTemperatureType,DetermineTemperatureType(temperature) -> temperatureType,283,"This API is to determine the type of temperature (Hot, Mild, Cold) based on the current temperature.","This API is to determine the type of temperature (Hot, Mild, Cold) based on the current temperature.","[{'name': 'temperature', 'description': 'the current temperature', 'datatype': 'Float'}]","[{'name': 'temperatureType', 'description': 'the type of temperature (Hot, Mild, Cold)', 'datatype': 'String'}]",,
SuggestClothingOptions,"SuggestClothingOptions(temperatureType, gender) -> clothingOptions",284,This API is to suggest clothing options based on the temperature type and gender.,This API is to suggest clothing options based on the temperature type and gender.,"[{'name': 'temperatureType', 'description': 'the type of temperature (Hot, Mild, Cold)', 'datatype': 'String'}, {'name': 'gender', 'description': 'the gender of the person', 'datatype': 'String'}]","[{'name': 'clothingOptions', 'description': 'the suggested clothing options', 'datatype': 'List'}]",,
GetHealthInformation,"GetHealthInformation(age, gender) -> HealthInformation",285,This API provides general health information based on age and gender.,This API provides general health information based on age and gender.,"[{'name': 'age', 'description': 'the age of the person', 'datatype': 'Integer'}, {'name': 'gender', 'description': 'the gender of the person', 'datatype': 'String'}]","[{'name': 'HealthInformation', 'description': 'the general health information', 'datatype': 'String'}]",,
GetDietPlan,GetDietPlan(HealthInformation) -> DietPlan,286,This API generates a diet plan based on the provided health information.,This API generates a diet plan based on the provided health information.,"[{'name': 'HealthInformation', 'description': 'the general health information', 'datatype': 'String'}]","[{'name': 'DietPlan', 'description': 'the generated diet plan', 'datatype': 'String'}]",,
GetExerciseRoutine,GetExerciseRoutine(HealthInformation) -> ExerciseRoutine,287,This API recommends an exercise routine based on the health information.,This API recommends an exercise routine based on the health information.,"[{'name': 'HealthInformation', 'description': 'the general health information', 'datatype': 'String'}]","[{'name': 'ExerciseRoutine', 'description': 'the recommended exercise routine', 'datatype': 'String'}]",,
CreateWellnessPlan,"CreateWellnessPlan(DietPlan, ExerciseRoutine) -> WellnessPlan",288,This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.,This API creates a comprehensive wellness plan that includes a diet plan and exercise routine.,"[{'name': 'DietPlan', 'description': 'the generated diet plan', 'datatype': 'String'}, {'name': 'ExerciseRoutine', 'description': 'the recommended exercise routine', 'datatype': 'String'}]","[{'name': 'WellnessPlan', 'description': 'the comprehensive wellness plan', 'datatype': 'String'}]",,
FetchMovieDetails,FetchMovieDetails(title) -> MovieDetails,289,This API retrieves the details of a movie by its title.,This API retrieves the details of a movie by its title.,"[{'name': 'title', 'description': 'the title of the movie', 'datatype': 'String'}]","[{'name': 'MovieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]",,
GetDirectorFilmography,GetDirectorFilmography(Directorname) -> DirectorFilmography,290,This API retrieves the filmography of a director by their name.,This API retrieves the filmography of a director by their name.,"[{'name': 'Directorname', 'description': 'the name of the director', 'datatype': 'String'}]","[{'name': 'DirectorFilmography', 'description': 'the filmography of the director', 'datatype': 'Object'}]",,
SuggestSimilarMovies,SuggestSimilarMovies(MovieDetails) -> SimilarMovies,291,This API suggests similar movies based on the given movie details.,This API suggests similar movies based on the given movie details.,"[{'name': 'MovieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]","[{'name': 'SimilarMovies', 'description': 'the list of similar movies', 'datatype': 'Object'}]",,
BuildMoviePlaylist,"BuildMoviePlaylist(MovieDetails, SimilarMovies, DirectorFilmography) -> MoviePlaylist",292,"This API builds a movie playlist including the main movie, similar movies and other movies from the same director.","This API builds a movie playlist including the main movie, similar movies and other movies from the same director.","[{'name': 'MovieDetails', 'description': 'the details of the main movie', 'datatype': 'Object'}, {'name': 'SimilarMovies', 'description': 'the list of similar movies', 'datatype': 'Object'}, {'name': 'DirectorFilmography', 'description': 'the filmography of the director', 'datatype': 'Object'}]","[{'name': 'MoviePlaylist', 'description': 'the movie playlist', 'datatype': 'Object'}]",,
GetBookGenre,GetBookGenre(bookTitle) -> BookGenre,293,This API provides the genre of a specified book.,This API provides the genre of a specified book.,"[{'name': 'bookTitle', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'BookGenre', 'description': 'the genre of the book', 'datatype': 'String'}]",,
GetAuthorDetails,GetAuthorDetails(bookTitle) -> AuthorDetails,294,This API provides the details of the author of the specified book.,This API provides the details of the author of the specified book.,"[{'name': 'bookTitle', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'AuthorDetails', 'description': 'the details of the author', 'datatype': 'String'}]",,
GetSimilarBooks,"GetSimilarBooks(BookGenre, AuthorDetails) -> SimilarBooksList",295,This API provides a list of similar books based on the input of book genre and author details.,This API provides a list of similar books based on the input of book genre and author details.,"[{'name': 'BookGenre', 'description': 'the genre of the book', 'datatype': 'String'}, {'name': 'AuthorDetails', 'description': 'the details of the author', 'datatype': 'String'}]","[{'name': 'SimilarBooksList', 'description': 'a list of similar books', 'datatype': 'List'}]",,
CheckInventory,CheckInventory(productID) -> InventoryStatus,296,This API checks the inventory status of a specific product.,This API checks the inventory status of a specific product.,"[{'name': 'productID', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'InventoryStatus', 'description': 'the inventory status of the product', 'datatype': 'String'}]",,
EstimateDeliveryTime,"EstimateDeliveryTime(productID, location) -> DeliveryTime",297,This API estimates the delivery time for a product to a specific location.,This API estimates the delivery time for a product to a specific location.,"[{'name': 'productID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'location', 'description': 'the location for delivery', 'datatype': 'String'}]","[{'name': 'DeliveryTime', 'description': 'the estimated delivery time for the product', 'datatype': 'String'}]",,
CalculateShippingCost,"CalculateShippingCost(productID, location) -> ShippingCost",298,This API calculates the shipping cost for a product to a specific location.,This API calculates the shipping cost for a product to a specific location.,"[{'name': 'productID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'location', 'description': 'the location for delivery', 'datatype': 'String'}]","[{'name': 'ShippingCost', 'description': 'the calculated shipping cost for the product', 'datatype': 'Float'}]",,
FindFlight,"FindFlight(startPoint, endPoint) -> flight",299,This API is to find the available flights from one point to another.,This API is to find the available flights from one point to another.,"[{'name': 'startPoint', 'description': 'the starting point of the flight', 'datatype': 'String'}, {'name': 'endPoint', 'description': 'the destination of the flight', 'datatype': 'String'}]","[{'name': 'flight', 'description': 'the available flight options', 'datatype': 'List'}]",,
GetFlightPrice,GetFlightPrice(flight) -> price,300,This API is to get the price of a specific flight.,This API is to get the price of a specific flight.,"[{'name': 'flight', 'description': 'the flight option', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the price of the flight', 'datatype': 'Float'}]",,
CheckLuggageAllowance,CheckLuggageAllowance(flight) -> luggage,301,This API is to check the luggage allowance of a specific flight.,This API is to check the luggage allowance of a specific flight.,"[{'name': 'flight', 'description': 'the flight option', 'datatype': 'String'}]","[{'name': 'luggage', 'description': 'the luggage allowance of the flight', 'datatype': 'String'}]",,
GetLuggageFee,"GetLuggageFee(luggage, weight) -> fee",302,This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.,This API is to get the luggage fee based on the luggage allowance and the weight of the luggage.,"[{'name': 'luggage', 'description': 'the luggage allowance of the flight', 'datatype': 'String'}, {'name': 'weight', 'description': 'the weight of the luggage', 'datatype': 'Float'}]","[{'name': 'fee', 'description': 'the luggage fee', 'datatype': 'Float'}]",,
GetHotelRoomRate,GetHotelRoomRate(city) -> roomRate,303,This API is to get the rate of a hotel room in a specific city.,This API is to get the rate of a hotel room in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'roomRate', 'description': 'the rate of the hotel room', 'datatype': 'Float'}]",,
GetMealCost,GetMealCost(city) -> mealCost,304,This API is to get the cost of meals in a specific city.,This API is to get the cost of meals in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'mealCost', 'description': 'the cost of meals', 'datatype': 'Float'}]",,
GetSightSeeingCost,GetSightSeeingCost(city) -> sightSeeingCost,305,This API is to get the cost for sightseeing in a specific city.,This API is to get the cost for sightseeing in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'sightSeeingCost', 'description': 'the cost for sightseeing', 'datatype': 'Float'}]",,
CalculateVacationCost,"CalculateVacationCost(roomRate, mealCost, sightSeeingCost) -> totalCost",306,"This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.","This API is to calculate the total cost of a vacation including hotel room, meals and sightseeing.","[{'name': 'roomRate', 'description': 'the rate of the hotel room', 'datatype': 'Float'}, {'name': 'mealCost', 'description': 'the cost of meals', 'datatype': 'Float'}, {'name': 'sightSeeingCost', 'description': 'the cost for sightseeing', 'datatype': 'Float'}]","[{'name': 'totalCost', 'description': 'the total cost of the vacation', 'datatype': 'Float'}]",,
GetSuitableClothing,GetSuitableClothing(weatherForecast) -> clothing,307,This API is to recommend suitable clothing based on the weather forecast.,This API is to recommend suitable clothing based on the weather forecast.,"[{'name': 'weatherForecast', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'clothing', 'description': 'the recommended clothing based on the weather forecast', 'datatype': 'String'}]",,
GetPackingList,"GetPackingList(destination, clothing, days) -> packingList",308,"This API is to generate a packing list for a trip to a certain destination, based on the clothing needed and the number of days to stay.","This API is to generate a packing list for a trip to a certain destination, based on the clothing needed and the number of days to stay.","[{'name': 'destination', 'description': 'the destination of the trip', 'datatype': 'String'}, {'name': 'clothing', 'description': 'the recommended clothing', 'datatype': 'String'}, {'name': 'days', 'description': 'the number of days to stay', 'datatype': 'Integer'}]","[{'name': 'packingList', 'description': 'the generated packing list', 'datatype': 'String'}]",,
FindOutdoorActivities,"FindOutdoorActivities(city, weatherForecast) -> activities",309,This API is to find suitable outdoor activities based on the city and weather forecast.,This API is to find suitable outdoor activities based on the city and weather forecast.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'weatherForecast', 'description': 'the weather forecast of the city', 'datatype': 'String'}]","[{'name': 'activities', 'description': 'the suitable outdoor activities based on the city and weather forecast', 'datatype': 'List'}]",,
FindRestaurants,"FindRestaurants(city, cuisineType) -> restaurants",310,This API is to find restaurants of a specific cuisine type in a specific city.,This API is to find restaurants of a specific cuisine type in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'cuisineType', 'description': 'the specific cuisine type', 'datatype': 'String'}]","[{'name': 'restaurants', 'description': 'the restaurants of the specific cuisine type in the specific city', 'datatype': 'List'}]",,
PlanDayOut,"PlanDayOut(city, activities, restaurants) -> dayPlan",311,This API is to plan a day out including outdoor activities and restaurants in a specific city.,This API is to plan a day out including outdoor activities and restaurants in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'activities', 'description': 'the suitable outdoor activities', 'datatype': 'List'}, {'name': 'restaurants', 'description': 'the restaurants', 'datatype': 'List'}]","[{'name': 'dayPlan', 'description': 'the plan for a day out including outdoor activities and restaurants', 'datatype': 'String'}]",,
GetPopulation,GetPopulation(location) -> population,312,This API is to get the population of a specific location.,This API is to get the population of a specific location.,"[{'name': 'location', 'description': 'the name of the location', 'datatype': 'String'}]","[{'name': 'population', 'description': 'the population of the location', 'datatype': 'Integer'}]",,
GetActiveCases,GetActiveCases(location) -> activeCases,313,This API is to get the number of active COVID-19 cases in a specific location.,This API is to get the number of active COVID-19 cases in a specific location.,"[{'name': 'location', 'description': 'the name of the location', 'datatype': 'String'}]","[{'name': 'activeCases', 'description': 'the number of active COVID-19 cases', 'datatype': 'Integer'}]",,
CalculateInfectionRate,"CalculateInfectionRate(population, activeCases) -> infectionRate",314,This API is to calculate the infection rate based on the population and the number of active COVID-19 cases.,This API is to calculate the infection rate based on the population and the number of active COVID-19 cases.,"[{'name': 'population', 'description': 'the population of the location', 'datatype': 'Integer'}, {'name': 'activeCases', 'description': 'the number of active COVID-19 cases', 'datatype': 'Integer'}]","[{'name': 'infectionRate', 'description': 'the infection rate', 'datatype': 'Float'}]",,
GetLocalWeather,GetLocalWeather(city) -> weather,315,This API is to get the current weather conditions of a specific city.,This API is to get the current weather conditions of a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the current weather conditions', 'datatype': 'String'}]",,
GetRecommendedClothing,GetRecommendedClothing(weather) -> clothing,316,This API recommends suitable clothing based on the current weather.,This API recommends suitable clothing based on the current weather.,"[{'name': 'weather', 'description': 'the current weather conditions', 'datatype': 'String'}]","[{'name': 'clothing', 'description': 'the recommended clothing', 'datatype': 'String'}]",,
GetDestinationTravelAdvice,"GetDestinationTravelAdvice(city, clothing) -> travelAdvice",317,This API provides travel advice for a specific city depending on the suitable clothing.,This API provides travel advice for a specific city depending on the suitable clothing.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'clothing', 'description': 'the recommended clothing', 'datatype': 'String'}]","[{'name': 'travelAdvice', 'description': 'the travel advice for the city', 'datatype': 'String'}]",,
GetStockPrice,GetStockPrice(stockId) -> price,318,This API is to get the current price of a specific stock.,This API is to get the current price of a specific stock.,"[{'name': 'stockId', 'description': 'the ID of the stock', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the current price of the stock', 'datatype': 'Float'}]",,
PredictFutureStockPrice,"PredictFutureStockPrice(stockId, currentPrice) -> futurePrice",319,This API predicts the future price of a stock based on its current price.,This API predicts the future price of a stock based on its current price.,"[{'name': 'stockId', 'description': 'the ID of the stock', 'datatype': 'String'}, {'name': 'currentPrice', 'description': 'the current price of the stock', 'datatype': 'Float'}]","[{'name': 'futurePrice', 'description': 'the predicted future price of the stock', 'datatype': 'Float'}]",,
SuggestStockAction,"SuggestStockAction(stockId, currentPrice, futurePrice) -> action",320,"This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.","This API suggests whether to buy, sell, or hold a stock based on its current and predicted future price.","[{'name': 'stockId', 'description': 'the ID of the stock', 'datatype': 'String'}, {'name': 'currentPrice', 'description': 'the current price of the stock', 'datatype': 'Float'}, {'name': 'futurePrice', 'description': 'the predicted future price of the stock', 'datatype': 'Float'}]","[{'name': 'action', 'description': 'the suggested action for the stock (buy, sell, or hold)', 'datatype': 'String'}]",,
GetMovieByname,GetMovieByname(moviename) -> movieDetails,321,This API is to get the details of a movie by its name.,This API is to get the details of a movie by its name.,"[{'name': 'moviename', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]",,
FindNearestCinema,FindNearestCinema(movieDetails) -> cinemaLocation,322,This API is to find the nearest cinema that is currently showing the movie.,This API is to find the nearest cinema that is currently showing the movie.,"[{'name': 'movieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]","[{'name': 'cinemaLocation', 'description': 'the location of the nearest cinema', 'datatype': 'String'}]",,
FindTrendingFashion,"FindTrendingFashion(city, season) -> fashion",323,This API is to find the trending fashion in a particular season for a specific city.,This API is to find the trending fashion in a particular season for a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'season', 'description': 'the current season', 'datatype': 'String'}]","[{'name': 'fashion', 'description': 'the trending fashion', 'datatype': 'String'}]",,
GenerateOutfit,"GenerateOutfit(clothing, fashion) -> outfit",324,This API is to generate a stylish outfit based on the recommended clothing and trending fashion.,This API is to generate a stylish outfit based on the recommended clothing and trending fashion.,"[{'name': 'clothing', 'description': 'the recommended clothing', 'datatype': 'String'}, {'name': 'fashion', 'description': 'the trending fashion', 'datatype': 'String'}]","[{'name': 'outfit', 'description': 'the generated outfit', 'datatype': 'String'}]",,
GetLocationData,GetLocationData(Username) -> Location,325,This API retrieves location of a specific user.,This API retrieves location of a specific user.,"[{'name': 'Username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'Location', 'description': 'the location of the user', 'datatype': 'String'}]",,
TrackSpending,TrackSpending(Username) -> SpendingReport,326,This API is used to track the spending of a specific user.,This API is used to track the spending of a specific user.,"[{'name': 'Username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'SpendingReport', 'description': 'the spending report of the user', 'datatype': 'Object'}]",,
CalculateSavings,CalculateSavings(SpendingReport) -> Savings,327,This API calculates the possible savings based on the spending report of a user.,This API calculates the possible savings based on the spending report of a user.,"[{'name': 'SpendingReport', 'description': 'the spending report of the user', 'datatype': 'Object'}]","[{'name': 'Savings', 'description': 'the possible savings of the user', 'datatype': 'Object'}]",,
SuggestInvestment,SuggestInvestment(Savings) -> InvestmentPlan,328,This API suggests an investment plan based on the savings of a user.,This API suggests an investment plan based on the savings of a user.,"[{'name': 'Savings', 'description': 'the possible savings of the user', 'datatype': 'Object'}]","[{'name': 'InvestmentPlan', 'description': 'the suggested investment plan for the user', 'datatype': 'Object'}]",,
RestaurantRecommendations,RestaurantRecommendations(City) -> Recommendations,329,This API fetches restaurant recommendations for a specific city based on user reviews and ratings.,This API fetches restaurant recommendations for a specific city based on user reviews and ratings.,"[{'name': 'City', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'Recommendations', 'description': 'the restaurant recommendations for the city', 'datatype': 'String'}]",,
OptimalTravelDate,"OptimalTravelDate(WeatherForecast, RestaurantRecommendations) -> TravelDate",330,This API calculates the optimal travel date considering both the weather forecast and availability of recommended restaurants.,This API calculates the optimal travel date considering both the weather forecast and availability of recommended restaurants.,"[{'name': 'WeatherForecast', 'description': 'the weather forecast for a specific city', 'datatype': 'String'}, {'name': 'RestaurantRecommendations', 'description': 'the restaurant recommendations for a specific city', 'datatype': 'String'}]","[{'name': 'TravelDate', 'description': 'the optimal travel date', 'datatype': 'String'}]",,
TouristAttractions,TouristAttractions(Location) -> Attractions,331,This API provides the tourist attractions for a specific location.,This API provides the tourist attractions for a specific location.,"[{'name': 'Location', 'description': 'the location for which tourist attractions are needed', 'datatype': 'String'}]","[{'name': 'Attractions', 'description': 'the tourist attractions for the specified location', 'datatype': 'List'}]",,
FindItemInWardrobe,FindItemInWardrobe(outfit) -> location,332,This API is to find a specified outfit in my wardrobe.,This API is to find a specified outfit in my wardrobe.,"[{'name': 'outfit', 'description': 'the outfit to find in the wardrobe', 'datatype': 'String'}]","[{'name': 'location', 'description': 'the location of the specified outfit in the wardrobe', 'datatype': 'String'}]",,
FindClothes,FindClothes(weather) -> outfit,333,This API finds the most appropriate outfit to wear based on the current weather.,This API finds the most appropriate outfit to wear based on the current weather.,"[{'name': 'weather', 'description': 'the current weather', 'datatype': 'String'}]","[{'name': 'outfit', 'description': 'the recommended outfit', 'datatype': 'String'}]",,
PlanOutfit,"PlanOutfit(event, outfit) -> final_outfit",334,This API suggests a final outfit to wear based on the event and recommended outfit based on weather.,This API suggests a final outfit to wear based on the event and recommended outfit based on weather.,"[{'name': 'event', 'description': 'the event for which outfit is required', 'datatype': 'String'}, {'name': 'outfit', 'description': 'the recommended outfit based on weather', 'datatype': 'String'}]","[{'name': 'final_outfit', 'description': 'the final outfit suggestion', 'datatype': 'String'}]",,
FetchIngredients,FetchIngredients(dish_name) -> ingredients,335,This API fetches the list of ingredients required for a particular dish.,This API fetches the list of ingredients required for a particular dish.,"[{'name': 'dish_name', 'description': 'the name of the dish', 'datatype': 'String'}]","[{'name': 'ingredients', 'description': 'the list of ingredients required for the dish', 'datatype': 'List'}]",,
FindGroceryStores,FindGroceryStores(location) -> stores,336,This API finds grocery stores in a given location.,This API finds grocery stores in a given location.,"[{'name': 'location', 'description': 'the location to search for grocery stores', 'datatype': 'String'}]","[{'name': 'stores', 'description': 'the list of grocery stores in the given location', 'datatype': 'List'}]",,
ComparePrices,"ComparePrices(ingredients, stores) -> cheapest_store",337,This API compares the prices of ingredients in different stores and returns the store with the lowest cost.,This API compares the prices of ingredients in different stores and returns the store with the lowest cost.,"[{'name': 'ingredients', 'description': 'the list of ingredients to compare prices', 'datatype': 'List'}, {'name': 'stores', 'description': 'the list of grocery stores to compare prices', 'datatype': 'List'}]","[{'name': 'cheapest_store', 'description': 'the grocery store with the lowest cost for the ingredients', 'datatype': 'String'}]",,
CalculateCalories,CalculateCalories(menu_details) -> calorie_info,338,This API is to calculate the total calories of dishes in the menu.,This API is to calculate the total calories of dishes in the menu.,"[{'name': 'menu_details', 'description': 'details of the menu', 'datatype': 'String'}]","[{'name': 'calorie_info', 'description': 'information about the total calories', 'datatype': 'String'}]",,
SuggestFood,"SuggestFood(menu, dietary_preferences) -> food_suggestion",339,This API is to suggest food from the menu based on dietary preferences.,This API is to suggest food from the menu based on dietary preferences.,"[{'name': 'menu', 'description': 'the menu of the restaurant', 'datatype': 'String'}, {'name': 'dietary_preferences', 'description': 'the dietary preferences', 'datatype': 'String'}]","[{'name': 'food_suggestion', 'description': 'the suggested food', 'datatype': 'String'}]",,
CalculateLuggageWeight,CalculateLuggageWeight(luggage_items) -> luggage_weight,340,This API calculates the total weight of the luggage based on the inputted items.,This API calculates the total weight of the luggage based on the inputted items.,"[{'name': 'luggage_items', 'description': 'the items of luggage', 'datatype': 'List of Strings'}]","[{'name': 'luggage_weight', 'description': 'the total weight of the luggage', 'datatype': 'Float'}]",,
CanCarryLuggage,"CanCarryLuggage(luggage_weight, luggage_allowance) -> permission",341,This API tells if the calculated luggage weight is within the allowed limit or not.,This API tells if the calculated luggage weight is within the allowed limit or not.,"[{'name': 'luggage_weight', 'description': 'the total weight of the luggage', 'datatype': 'Float'}, {'name': 'luggage_allowance', 'description': 'the luggage allowance for the flight', 'datatype': 'String'}]","[{'name': 'permission', 'description': 'the permission to carry the luggage', 'datatype': 'Boolean'}]",,
FindBook,FindBook(title) -> book,342,This API is to find a book based on a specified title.,This API is to find a book based on a specified title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book', 'description': 'the information of the book', 'datatype': 'Object'}]",,
ReadReview,ReadReview(book) -> review,343,This API is to read a review of a specified book.,This API is to read a review of a specified book.,"[{'name': 'book', 'description': 'the information of the book', 'datatype': 'Object'}]","[{'name': 'review', 'description': 'the review of the book', 'datatype': 'String'}]",,
SendReview,"SendReview(contact_info, review) -> sent_confirmation",344,This API is to send the book review to a specified contact.,This API is to send the book review to a specified contact.,"[{'name': 'contact_info', 'description': 'the contact information of the recipient', 'datatype': 'String'}, {'name': 'review', 'description': 'the review of the book', 'datatype': 'String'}]","[{'name': 'sent_confirmation', 'description': 'the confirmation of the review sent', 'datatype': 'String'}]",,
SendTicket,"SendTicket(contact_info, ticket) -> sent_confirmation",345,This API is to send the flight ticket to a specified contact.,This API is to send the flight ticket to a specified contact.,"[{'name': 'contact_info', 'description': 'the contact information', 'datatype': 'String'}, {'name': 'ticket', 'description': 'the flight ticket', 'datatype': 'Object'}]","[{'name': 'sent_confirmation', 'description': 'the confirmation of ticket sent', 'datatype': 'String'}]",,
MovieFinder,MovieFinder(movie_name) -> movie_id,346,This API searches for the movie id of a specific movie name.,This API searches for the movie id of a specific movie name.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_id', 'description': 'the id of the movie', 'datatype': 'Integer'}]",,
MovieRatings,MovieRatings(movie_id) -> ratingScores,347,This API finds the rating scores for a specific movie id.,This API finds the rating scores for a specific movie id.,"[{'name': 'movie_id', 'description': 'the id of the movie', 'datatype': 'Integer'}]","[{'name': 'ratingScores', 'description': 'the rating scores of the movie', 'datatype': 'Float'}]",,
RatingAverage,RatingAverage(ratingScores) -> avgRating,348,This API calculates the average rating of given rating scores.,This API calculates the average rating of given rating scores.,"[{'name': 'ratingScores', 'description': 'the rating scores of the movie', 'datatype': 'Float'}]","[{'name': 'avgRating', 'description': 'the average rating of the movie', 'datatype': 'Float'}]",,
MovieLookup,MovieLookup(movie_name) -> movie_id,349,This API retrieves the movie id of a specific movie name.,This API retrieves the movie id of a specific movie name.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_id', 'description': 'the id of the movie', 'datatype': 'Integer'}]",,
MovieRating,MovieRating(movie_id) -> rating_scores,350,This API retrieves all the rating scores for a specific movie id.,This API retrieves all the rating scores for a specific movie id.,"[{'name': 'movie_id', 'description': 'the id of the movie', 'datatype': 'Integer'}]","[{'name': 'rating_scores', 'description': 'the rating scores for the movie', 'datatype': 'List of Floats'}]",,
HighestRating,HighestRating(rating_scores) -> highest_rating,351,This API retrieves the highest rating score from a list of rating scores.,This API retrieves the highest rating score from a list of rating scores.,"[{'name': 'rating_scores', 'description': 'the rating scores for the movie', 'datatype': 'List of Floats'}]","[{'name': 'highest_rating', 'description': 'the highest rating score', 'datatype': 'Float'}]",,
FlightSearch,"FlightSearch(destination, date) -> flight_id",352,This API searches for flight id for a specific destination on a particular date.,This API searches for flight id for a specific destination on a particular date.,"[{'name': 'destination', 'description': 'the destination of the flight', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the flight', 'datatype': 'String'}]","[{'name': 'flight_id', 'description': 'the ID of the flight', 'datatype': 'Integer'}]",,
SeatSelection,SeatSelection(flight_id) -> seats,353,This API checks the seat availability for a specific flight id.,This API checks the seat availability for a specific flight id.,"[{'name': 'flight_id', 'description': 'the ID of the flight', 'datatype': 'Integer'}]","[{'name': 'seats', 'description': 'the available seats for the flight', 'datatype': 'String'}]",,
UpgradeAvailability,UpgradeAvailability(seats) -> upgradeOptions,354,This API checks if there is any seat upgrade options available for the given seat.,This API checks if there is any seat upgrade options available for the given seat.,"[{'name': 'seats', 'description': 'the seats to check for upgrade options', 'datatype': 'String'}]","[{'name': 'upgradeOptions', 'description': 'the available seat upgrade options', 'datatype': 'String'}]",,
SeatClassAvailability,SeatClassAvailability(flight_id) -> seat_classes,355,This API checks the seat class availability for a specific flight id.,This API checks the seat class availability for a specific flight id.,"[{'name': 'flight_id', 'description': 'the id of the flight', 'datatype': 'Integer'}]","[{'name': 'seat_classes', 'description': 'the available seat classes', 'datatype': 'List'}]",,
BestSeatClass,BestSeatClass(seat_classes) -> bestSeatClass,356,This API finds the best seat class available among the given seat class options.,This API finds the best seat class available among the given seat class options.,"[{'name': 'seat_classes', 'description': 'the available seat classes', 'datatype': 'List'}]","[{'name': 'bestSeatClass', 'description': 'the best seat class', 'datatype': 'String'}]",,
HotelSearch,"HotelSearch(city, check_in_date, check_out_date) -> hotel_id",357,This API searches for hotel id for a specific city between check-in and check-out dates.,This API searches for hotel id for a specific city between check-in and check-out dates.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'check_in_date', 'description': 'the check-in date', 'datatype': 'Date'}, {'name': 'check_out_date', 'description': 'the check-out date', 'datatype': 'Date'}]","[{'name': 'hotel_id', 'description': 'the ID of the hotel', 'datatype': 'Integer'}]",,
RoomAvailability,RoomAvailability(hotel_id) -> rooms,358,This API checks the room availability for a specific hotel id.,This API checks the room availability for a specific hotel id.,"[{'name': 'hotel_id', 'description': 'the ID of the hotel', 'datatype': 'Integer'}]","[{'name': 'rooms', 'description': 'the available rooms', 'datatype': 'List'}]",,
BestRoom,BestRoom(rooms) -> bestRoom,359,This API finds the best room available among the given room options.,This API finds the best room available among the given room options.,"[{'name': 'rooms', 'description': 'the available rooms', 'datatype': 'List'}]","[{'name': 'bestRoom', 'description': 'the best room available', 'datatype': 'String'}]",,
BookSearch,"BookSearch(title, author) -> book_id",360,This API searches for book id for a specific title and author.,This API searches for book id for a specific title and author.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}, {'name': 'author', 'description': 'the author of the book', 'datatype': 'String'}]","[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
BookStoreAvailability,BookStoreAvailability(book_id) -> store_ids,361,This API checks for the store availability for a specific book id.,This API checks for the store availability for a specific book id.,"[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'store_ids', 'description': 'the IDs of the stores where the book is available', 'datatype': 'List of Integers'}]",,
NearestStore,"NearestStore(store_ids, user_location) -> nearest_store",362,This API finds the nearest store among the given store options based on the user's location.,This API finds the nearest store among the given store options based on the user's location.,"[{'name': 'store_ids', 'description': 'the IDs of the stores', 'datatype': 'List of Integers'}, {'name': 'user_location', 'description': 'the location of the user', 'datatype': 'String'}]","[{'name': 'nearest_store', 'description': 'the ID of the nearest store', 'datatype': 'Integer'}]",,
RestaurantSearch,"RestaurantSearch(name, city) -> restaurant_id",363,This API searches for restaurant id for a specific name in a particular city.,This API searches for restaurant id for a specific name in a particular city.,"[{'name': 'name', 'description': 'the name of the restaurant', 'datatype': 'String'}, {'name': 'city', 'description': 'the city where the restaurant is located', 'datatype': 'String'}]","[{'name': 'restaurant_id', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}]",,
TableAvailability,"TableAvailability(restaurant_id, date) -> tables",364,This API checks the table availability for a specific restaurant id on a specific date.,This API checks the table availability for a specific restaurant id on a specific date.,"[{'name': 'restaurant_id', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date for checking table availability', 'datatype': 'Date'}]","[{'name': 'tables', 'description': 'the available tables for the given restaurant and date', 'datatype': 'List'}]",,
BestTable,BestTable(tables) -> bestTable,365,This API finds the best table available among the given table options.,This API finds the best table available among the given table options.,"[{'name': 'tables', 'description': 'the list of available tables', 'datatype': 'List'}]","[{'name': 'bestTable', 'description': 'the best table among the given options', 'datatype': 'Table'}]",,
CurrencyConversion,"CurrencyConversion(from_currency, to_currency) -> conversion_rate",366,This API provides the conversion rate from one currency to another.,This API provides the conversion rate from one currency to another.,"[{'name': 'from_currency', 'description': 'the currency to convert from', 'datatype': 'String'}, {'name': 'to_currency', 'description': 'the currency to convert to', 'datatype': 'String'}]","[{'name': 'conversion_rate', 'description': ""the conversion rate from the 'from_currency' to the 'to_currency'"", 'datatype': 'Float'}]",,
ItemPrice,ItemPrice(item_id) -> price,367,This API provides the price of an item.,This API provides the price of an item.,"[{'name': 'item_id', 'description': 'the ID of the item', 'datatype': 'Integer'}]","[{'name': 'price', 'description': 'the price of the item', 'datatype': 'Float'}]",,
CalculatePrice,"CalculatePrice(price, conversion_rate) -> converted_price",368,This API provides the final price of an item after currency conversion.,This API provides the final price of an item after currency conversion.,"[{'name': 'price', 'description': 'the price of the item', 'datatype': 'Float'}, {'name': 'conversion_rate', 'description': 'the conversion rate from the original currency to the target currency', 'datatype': 'Float'}]","[{'name': 'converted_price', 'description': 'the final price of the item after currency conversion', 'datatype': 'Float'}]",,
CurrentTime,CurrentTime(city) -> time,369,This API provides the current time in a specified city.,This API provides the current time in a specified city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'time', 'description': 'the current time', 'datatype': 'Time'}]",,
OpenMuseums,"OpenMuseums(city, time) -> museums",370,This API provides a list of museums that are currently open in a city at a given time.,This API provides a list of museums that are currently open in a city at a given time.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'time', 'description': 'the specified time', 'datatype': 'Time'}]","[{'name': 'museums', 'description': 'a list of open museums', 'datatype': 'List'}]",,
ArtExhibit,ArtExhibit(museum) -> exhibits,371,This API provides a list of current art exhibits at a specified museum.,This API provides a list of current art exhibits at a specified museum.,"[{'name': 'museum', 'description': 'the name of the museum', 'datatype': 'String'}]","[{'name': 'exhibits', 'description': 'a list of art exhibits', 'datatype': 'List'}]",,
FlightStatus,"FlightStatus(airline, flight_number, date) -> flight_status",372,This API is used to get the status of a specific flight on a certain date.,This API is used to get the status of a specific flight on a certain date.,"[{'name': 'airline', 'description': 'the name of the airline', 'datatype': 'String'}, {'name': 'flight_number', 'description': 'the flight number', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the flight', 'datatype': 'String'}]","[{'name': 'flight_status', 'description': 'the status of the flight, including time', 'datatype': 'String'}]",,
AirportTransportation,"AirportTransportation(city, date, time) -> transportation",373,This API is used to suggest transportation options from the city to the airport on a certain date and time considering the flight status.,This API is used to suggest transportation options from the city to the airport on a certain date and time considering the flight status.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the transportation', 'datatype': 'String'}, {'name': 'time', 'description': 'the time of the transportation', 'datatype': 'String'}]","[{'name': 'transportation', 'description': 'the suggested transportation options', 'datatype': 'String'}]",,
TransportationBooking,"TransportationBooking(city, transportation, date, time) -> booking",374,This API is used to book a specific transportation in a certain city on a specific date and time.,This API is used to book a specific transportation in a certain city on a specific date and time.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'transportation', 'description': 'the transportation option', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the booking', 'datatype': 'String'}, {'name': 'time', 'description': 'the time of the booking', 'datatype': 'String'}]","[{'name': 'booking', 'description': 'the booking status', 'datatype': 'String'}]",,
TableReservation,"TableReservation(weatherDetails, restaurantDetails, num_of_people, date) -> reservationDetails",375,This API is used to reserve a table at a restaurant on a specific date. The API takes into consideration the weather details to suggest indoor or outdoor seating.,This API is used to reserve a table at a restaurant on a specific date. The API takes into consideration the weather details to suggest indoor or outdoor seating.,"[{'name': 'weatherDetails', 'description': 'the details of the weather forecast', 'datatype': 'String'}, {'name': 'restaurantDetails', 'description': 'the details of the searched restaurant', 'datatype': 'String'}, {'name': 'num_of_people', 'description': 'the number of people for the reservation', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the specific date for the reservation', 'datatype': 'String'}]","[{'name': 'reservationDetails', 'description': 'the details of the table reservation', 'datatype': 'String'}]",,
ProductLookup,ProductLookup(product_id) -> product_info,376,This API is to query the product details given a product_id.,This API is to query the product details given a product_id.,"[{'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'String'}]","[{'name': 'product_info', 'description': 'the details of the product', 'datatype': 'Object'}]",,
CustomerPurchase,CustomerPurchase(product_info) -> purchase_info,377,This API fetches the purchase history based on product details.,This API fetches the purchase history based on product details.,"[{'name': 'product_info', 'description': 'the details of the product', 'datatype': 'Object'}]","[{'name': 'purchase_info', 'description': 'the purchase history', 'datatype': 'Object'}]",,
ProductRating,"ProductRating(purchase_info, number_of_ratings) -> ratings",378,This API provides product ratings based on purchase history.,This API provides product ratings based on purchase history.,"[{'name': 'purchase_info', 'description': 'the purchase history', 'datatype': 'Object'}, {'name': 'number_of_ratings', 'description': 'the number of ratings to retrieve', 'datatype': 'Integer'}]","[{'name': 'ratings', 'description': 'the product ratings', 'datatype': 'List'}]",,
BookInfo,BookInfo(title) -> bookdetails,379,This API provides details about a book based on its title.,This API provides details about a book based on its title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'bookdetails', 'description': 'the details of the book', 'datatype': 'Object'}]",,
AuthorBio,AuthorBio(author) -> authorData,380,This API provides information about an author.,This API provides information about an author.,"[{'name': 'author', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'authorData', 'description': 'the information about the author', 'datatype': 'Object'}]",,
ReviewGenerator,"ReviewGenerator(bookdetails, authorData) -> review",381,This API generates a review based on the book and its author details.,This API generates a review based on the book and its author details.,"[{'name': 'bookdetails', 'description': 'the details of the book', 'datatype': 'Object'}, {'name': 'authorData', 'description': 'the information about the author', 'datatype': 'Object'}]","[{'name': 'review', 'description': 'the generated review', 'datatype': 'String'}]",,
CryptoPrice,CryptoPrice(cryptoType) -> price,382,This API gives the current price of a specified cryptocurrency.,This API gives the current price of a specified cryptocurrency.,"[{'name': 'cryptoType', 'description': 'the type of cryptocurrency', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the current price of the cryptocurrency', 'datatype': 'Float'}]",,
StockPrice,StockPrice(stockname) -> price,383,This API gives the current price of a specified stock.,This API gives the current price of a specified stock.,"[{'name': 'stockname', 'description': 'the name of the stock', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the current price of the stock', 'datatype': 'Float'}]",,
InvestmentSuggestion,"InvestmentSuggestion(cryptoPrice, stockPrice) -> suggestion",384,This API suggests where to invest considering the prices of cryptocurrency and stock.,This API suggests where to invest considering the prices of cryptocurrency and stock.,"[{'name': 'cryptoPrice', 'description': 'the current price of the cryptocurrency', 'datatype': 'Float'}, {'name': 'stockPrice', 'description': 'the current price of the stock', 'datatype': 'Float'}]","[{'name': 'suggestion', 'description': 'the investment suggestion', 'datatype': 'String'}]",,
BookTitle,"BookTitle(author, genre) -> title",385,This API retrieves the title of a book given the author and genre.,This API retrieves the title of a book given the author and genre.,"[{'name': 'author', 'description': 'the author of the book', 'datatype': 'String'}, {'name': 'genre', 'description': 'the genre of the book', 'datatype': 'String'}]","[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]",,
BookPrice,BookPrice(title) -> price,386,This API gives the price of the specified book title.,This API gives the price of the specified book title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the price of the book', 'datatype': 'Float'}]",,
ShippingEstimate,"ShippingEstimate(bookPrice, destination) -> estimate",387,This API calculates the estimated shipping cost for the book based on its price and shipping destination.,This API calculates the estimated shipping cost for the book based on its price and shipping destination.,"[{'name': 'bookPrice', 'description': 'the price of the book', 'datatype': 'Float'}, {'name': 'destination', 'description': 'the shipping destination', 'datatype': 'String'}]","[{'name': 'estimate', 'description': 'the estimated shipping cost', 'datatype': 'Float'}]",,
SendInvitation,"SendInvitation(bookingID, email) -> invitationID",388,This API sends an invitation for the booked table to the provided email.,This API sends an invitation for the booked table to the provided email.,"[{'name': 'bookingID', 'description': 'the ID of the table booking', 'datatype': 'Integer'}, {'name': 'email', 'description': 'the email address to send the invitation to', 'datatype': 'String'}]","[{'name': 'invitationID', 'description': 'the ID of the sent invitation', 'datatype': 'Integer'}]",,
MovieSearch,"MovieSearch(city, genre) -> movie",389,This API finds the most popular movie in the specified city of the given genre.,This API finds the most popular movie in the specified city of the given genre.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie', 'description': 'the most popular movie', 'datatype': 'String'}]",,
ShowTiming,"ShowTiming(movie, date) -> showtime",390,This API provides the show timings for the selected movie on the specified date.,This API provides the show timings for the selected movie on the specified date.,"[{'name': 'movie', 'description': 'the selected movie', 'datatype': 'String'}, {'name': 'date', 'description': 'the specified date', 'datatype': 'String'}]","[{'name': 'showtime', 'description': 'the show timings for the movie on the specified date', 'datatype': 'String'}]",,
Weather,Weather(city) -> condition,391,This API gives the current weather conditions for the given city.,This API gives the current weather conditions for the given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'condition', 'description': 'the current weather conditions', 'datatype': 'String'}]",,
FlightDistance,"FlightDistance(origin, destination) -> distance",392,This API provides the flight distance between the origin and destination cities.,This API provides the flight distance between the origin and destination cities.,"[{'name': 'origin', 'description': 'the origin city', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination city', 'datatype': 'String'}]","[{'name': 'distance', 'description': 'the flight distance between the origin and destination cities', 'datatype': 'Float'}]",,
FuelCostPerFlight,"FuelCostPerFlight(distance, weatherCondition) -> cost",393,This API calculates the fuel cost for the flight given the distance and weather conditions.,This API calculates the fuel cost for the flight given the distance and weather conditions.,"[{'name': 'distance', 'description': 'the flight distance', 'datatype': 'Float'}, {'name': 'weatherCondition', 'description': 'the current weather conditions', 'datatype': 'String'}]","[{'name': 'cost', 'description': 'the fuel cost for the flight', 'datatype': 'Float'}]",,
FindRecipe,FindRecipe(dish) -> recipe,394,This API provides the recipe of a specified dish.,This API provides the recipe of a specified dish.,"[{'name': 'dish', 'description': 'the name of the dish', 'datatype': 'String'}]","[{'name': 'recipe', 'description': 'the recipe of the dish', 'datatype': 'String'}]",,
CheckPantry,CheckPantry(recipe) -> available_ingredients,395,This API checks the pantry for available ingredients needed for a certain recipe.,This API checks the pantry for available ingredients needed for a certain recipe.,"[{'name': 'recipe', 'description': 'the recipe of the dish', 'datatype': 'String'}]","[{'name': 'available_ingredients', 'description': 'the available ingredients in the pantry', 'datatype': 'List'}]",,
GroceryList,"GroceryList(available_ingredients, recipe) -> list",396,This API generates a grocery list based on the available ingredients and the recipe.,This API generates a grocery list based on the available ingredients and the recipe.,"[{'name': 'available_ingredients', 'description': 'the available ingredients in the pantry', 'datatype': 'List'}, {'name': 'recipe', 'description': 'the recipe of the dish', 'datatype': 'String'}]","[{'name': 'list', 'description': 'the grocery list', 'datatype': 'List'}]",,
PharmacyLocator,PharmacyLocator(city) -> pharmacies,397,This API locates all the pharmacies in a specific city.,This API locates all the pharmacies in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'pharmacies', 'description': 'a list of pharmacies in the city', 'datatype': 'List'}]",,
MedicineAvailability,"MedicineAvailability(pharmacy, medicine_name) -> medicine_stock",398,This API checks the availability of specific medicine in a given pharmacy.,This API checks the availability of specific medicine in a given pharmacy.,"[{'name': 'pharmacy', 'description': 'the name of the pharmacy', 'datatype': 'String'}, {'name': 'medicine_name', 'description': 'the name of the medicine', 'datatype': 'String'}]","[{'name': 'medicine_stock', 'description': 'the availability of the medicine in the pharmacy', 'datatype': 'Boolean'}]",,
OrderMedicine,"OrderMedicine(pharmacy, medicine_name, quantity) -> order_confirmation",399,This API places an order for a particular medicine at a chosen pharmacy.,This API places an order for a particular medicine at a chosen pharmacy.,"[{'name': 'pharmacy', 'description': 'the name of the pharmacy', 'datatype': 'String'}, {'name': 'medicine_name', 'description': 'the name of the medicine', 'datatype': 'String'}, {'name': 'quantity', 'description': 'the quantity of the medicine to order', 'datatype': 'Integer'}]","[{'name': 'order_confirmation', 'description': 'the confirmation of the order', 'datatype': 'String'}]",,
GetMovie,GetMovie(show) -> movie_info,400,This API is to get the information about a specific movie show.,This API is to get the information about a specific movie show.,"[{'name': 'show', 'description': 'the name of the movie show', 'datatype': 'String'}]","[{'name': 'movie_info', 'description': 'the information about the movie, including the venue', 'datatype': 'String'}]",,
RestaurantRecommendation,RestaurantRecommendation(venue) -> restaurant_list,401,This API recommends restaurants based on the venue.,This API recommends restaurants based on the venue.,"[{'name': 'venue', 'description': 'the name of the venue', 'datatype': 'String'}]","[{'name': 'restaurant_list', 'description': 'a list of recommended restaurants', 'datatype': 'List'}]",,
RestaurantDetails,RestaurantDetails(restaurantname) -> restaurantInfo,402,This API returns information about a certain restaurant.,This API returns information about a certain restaurant.,"[{'name': 'restaurantname', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurantInfo', 'description': 'information about the restaurant', 'datatype': 'Object'}]",,
CuisineRecommendation,CuisineRecommendation(restaurantInfo) -> cuisineRec,403,This API recommends cuisines based on the restaurant's information.,This API recommends cuisines based on the restaurant's information.,"[{'name': 'restaurantInfo', 'description': 'information about the restaurant', 'datatype': 'Object'}]","[{'name': 'cuisineRec', 'description': 'recommended cuisines', 'datatype': 'List'}]",,
MenuSelection,"MenuSelection(restaurantInfo, cuisineRec) -> selectedMenu",404,This API selects a menu based on the restaurant's information and recommended cuisine.,This API selects a menu based on the restaurant's information and recommended cuisine.,"[{'name': 'restaurantInfo', 'description': 'information about the restaurant', 'datatype': 'Object'}, {'name': 'cuisineRec', 'description': 'recommended cuisines', 'datatype': 'List'}]","[{'name': 'selectedMenu', 'description': 'selected menu', 'datatype': 'Object'}]",,
ClothingRecommendation,ClothingRecommendation(weatherForecast) -> clothes,405,This API provides clothing recommendations based on the current weather.,This API provides clothing recommendations based on the current weather.,"[{'name': 'weatherForecast', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'clothes', 'description': 'the recommended clothes', 'datatype': 'String'}]",,
PackItems,"PackItems(clothingRecommendation, tripDuration) -> packedItems",406,This API generates a list of items to pack based on clothing recommendations and the duration of the trip.,This API generates a list of items to pack based on clothing recommendations and the duration of the trip.,"[{'name': 'clothingRecommendation', 'description': 'the recommended clothes', 'datatype': 'String'}, {'name': 'tripDuration', 'description': 'the duration of the trip', 'datatype': 'String'}]","[{'name': 'packedItems', 'description': 'the list of items to pack', 'datatype': 'String'}]",,
CarInfo,"CarInfo(car_name, country) -> carDetails",407,This API retrieves detailed information about a car including its price.,This API retrieves detailed information about a car including its price.,"[{'name': 'car_name', 'description': 'the name of the car', 'datatype': 'String'}, {'name': 'country', 'description': 'the country where the car is being purchased', 'datatype': 'String'}]","[{'name': 'carDetails', 'description': 'detailed information about the car including its price', 'datatype': 'Object'}]",,
CountryTaxRate,CountryTaxRate(country) -> taxRate,408,This API returns the tax rate in a certain country.,This API returns the tax rate in a certain country.,"[{'name': 'country', 'description': 'the country for which the tax rate is being retrieved', 'datatype': 'String'}]","[{'name': 'taxRate', 'description': 'the tax rate in the specified country', 'datatype': 'Float'}]",,
TaxCostCalculator,"TaxCostCalculator(price, tax_rate) -> taxCost",409,This API calculates the tax cost of a certain price.,This API calculates the tax cost of a certain price.,"[{'name': 'price', 'description': 'the price of the item', 'datatype': 'Float'}, {'name': 'tax_rate', 'description': 'the tax rate to be applied', 'datatype': 'Float'}]","[{'name': 'taxCost', 'description': 'the calculated tax cost', 'datatype': 'Float'}]",,
FlightInfo,"FlightInfo(city_from, city_to, date_from, date_to) -> flightDetails",410,This API retrieves detailed information about flights including its cost.,This API retrieves detailed information about flights including its cost.,"[{'name': 'city_from', 'description': 'the city of departure', 'datatype': 'String'}, {'name': 'city_to', 'description': 'the city of arrival', 'datatype': 'String'}, {'name': 'date_from', 'description': 'the start date of the flight', 'datatype': 'Date'}, {'name': 'date_to', 'description': 'the end date of the flight', 'datatype': 'Date'}]","[{'name': 'flightDetails', 'description': 'detailed information about flights including its cost', 'datatype': 'Object'}]",,
CountryWeather,"CountryWeather(city, date) -> weatherDetails",411,This API returns the weather information in a certain city at a certain date.,This API returns the weather information in a certain city at a certain date.,"[{'name': 'city', 'description': 'the city for which weather information is required', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for which weather information is required', 'datatype': 'Date'}]","[{'name': 'weatherDetails', 'description': 'the weather information in a certain city at a certain date', 'datatype': 'Object'}]",,
WeatherEffectPrice,"WeatherEffectPrice(city, date, original_price) -> adjustedPrice",412,This API calculates the potential effects of weather on flight prices.,This API calculates the potential effects of weather on flight prices.,"[{'name': 'city', 'description': 'the city for which weather effects on flight prices are to be calculated', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for which weather effects on flight prices are to be calculated', 'datatype': 'Date'}, {'name': 'original_price', 'description': 'the original price of the flight', 'datatype': 'Float'}]","[{'name': 'adjustedPrice', 'description': 'the potential adjusted price of the flight considering weather effects', 'datatype': 'Float'}]",,
ResturantNearCinema,"ResturantNearCinema(city, cinema_name) -> restaurant",413,This API finds a restaurant near a specific cinema in a city.,This API finds a restaurant near a specific cinema in a city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'cinema_name', 'description': 'the name of the cinema', 'datatype': 'String'}]","[{'name': 'restaurant', 'description': 'the recommended restaurant', 'datatype': 'String'}]",,
TableBooking,"TableBooking(restaurant_name, time) -> booking",414,This API allows users to book a table in a specific restaurant at a specified time.,This API allows users to book a table in a specific restaurant at a specified time.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}, {'name': 'time', 'description': 'the time for table booking', 'datatype': 'Time'}]","[{'name': 'booking', 'description': 'the booking status', 'datatype': 'String'}]",,
HotelFinder,"HotelFinder(city, star_rating) -> hotel_name",415,This API finds all hotels in a particular city with the specified star rating.,This API finds all hotels in a particular city with the specified star rating.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'star_rating', 'description': 'the star rating of the hotel', 'datatype': 'Integer'}]","[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}]",,
RoomBooking,"RoomBooking(hotel_name, number_of_rooms, check_in_date, check_out_date) -> booking_confirmation",416,This API books the specified number of rooms in the given hotel for the duration of stay.,This API books the specified number of rooms in the given hotel for the duration of stay.,"[{'name': 'hotel_name', 'description': 'the name of the hotel', 'datatype': 'String'}, {'name': 'number_of_rooms', 'description': 'the number of rooms to book', 'datatype': 'Integer'}, {'name': 'check_in_date', 'description': 'the check-in date', 'datatype': 'Date'}, {'name': 'check_out_date', 'description': 'the check-out date', 'datatype': 'Date'}]","[{'name': 'booking_confirmation', 'description': 'the booking confirmation', 'datatype': 'String'}]",,
FlightBooking,"FlightBooking(origin, destination, departure_date, return_date) -> flight_details",417,This API books a flight from the origin to the destination for the given dates.,This API books a flight from the origin to the destination for the given dates.,"[{'name': 'origin', 'description': 'the origin of the flight', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination of the flight', 'datatype': 'String'}, {'name': 'departure_date', 'description': 'the departure date', 'datatype': 'Date'}, {'name': 'return_date', 'description': 'the return date', 'datatype': 'Date'}]","[{'name': 'flight_details', 'description': 'the details of the flight', 'datatype': 'String'}]",,
BoatDetail,BoatDetail(boat_id) -> boat_location,418,This API is to query the location information of the boat.,This API is to query the location information of the boat.,"[{'name': 'boat_id', 'description': 'the ID of the boat', 'datatype': 'String'}]","[{'name': 'boat_location', 'description': 'the location of the boat', 'datatype': 'String'}]",,
TideCheck,TideCheck(boat_location) -> tide_status,419,This API is to check the tide status of a location.,This API is to check the tide status of a location.,"[{'name': 'boat_location', 'description': 'the location of the boat', 'datatype': 'String'}]","[{'name': 'tide_status', 'description': 'the tide status of the location', 'datatype': 'String'}]",,
BoatStatus,BoatStatus(boat_id) -> status,420,This API is to check the status of the boat.,This API is to check the status of the boat.,"[{'name': 'boat_id', 'description': 'the ID of the boat', 'datatype': 'String'}]","[{'name': 'status', 'description': 'the status of the boat', 'datatype': 'String'}]",,
CityDetail,CityDetail(city_name) -> city_coordinates,421,This API is to get the coordinates of a city.,This API is to get the coordinates of a city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'city_coordinates', 'description': 'the coordinates of the city', 'datatype': 'String'}]",,
PollutionCheck,PollutionCheck(city_coordinates) -> pollution_index,422,This API is to check the pollution index of a location.,This API is to check the pollution index of a location.,"[{'name': 'city_coordinates', 'description': 'the coordinates of the city', 'datatype': 'String'}]","[{'name': 'pollution_index', 'description': 'the pollution index of the location', 'datatype': 'Integer'}]",,
TrafficStatus,TrafficStatus(city_name) -> traffic_status,423,This API is to check the traffic status in the city.,This API is to check the traffic status in the city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'traffic_status', 'description': 'the traffic status in the city', 'datatype': 'String'}]",,
MovieSchedule,MovieSchedule(movie_id) -> schedule,424,This API is to get the schedule of a movie.,This API is to get the schedule of a movie.,"[{'name': 'movie_id', 'description': 'the id of the movie', 'datatype': 'Integer'}]","[{'name': 'schedule', 'description': 'the schedule of the movie', 'datatype': 'String'}]",,
ClosetCinema,ClosetCinema(schedule) -> cinema_location,425,This API is to get the nearest cinema playing a movie at a given schedule.,This API is to get the nearest cinema playing a movie at a given schedule.,"[{'name': 'schedule', 'description': 'the schedule of the movie', 'datatype': 'String'}]","[{'name': 'cinema_location', 'description': 'the location of the nearest cinema', 'datatype': 'String'}]",,
RestaurantReview,RestaurantReview(restaurant_name) -> review_report,426,This API is to provide the recent reviews of a specific restaurant.,This API is to provide the recent reviews of a specific restaurant.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'review_report', 'description': 'the recent reviews of the restaurant', 'datatype': 'String'}]",,
CuisineRecommendations,"CuisineRecommendations(review_report, dietary_preferences) -> cuisine",427,This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.,This API provides cuisine recommendations based on the reviews and the dietary preferences of the user.,"[{'name': 'review_report', 'description': 'the recent reviews of the restaurant', 'datatype': 'String'}, {'name': 'dietary_preferences', 'description': 'the dietary preferences of the user', 'datatype': 'String'}]","[{'name': 'cuisine', 'description': 'the recommended cuisine', 'datatype': 'String'}]",,
HotelBooking,"HotelBooking(destination, check_in_date, check_out_date) -> hotel_booking",428,This API books a hotel in the specific location for the given dates.,This API books a hotel in the specific location for the given dates.,"[{'name': 'destination', 'description': 'the destination city', 'datatype': 'String'}, {'name': 'check_in_date', 'description': 'the check-in date', 'datatype': 'Date'}, {'name': 'check_out_date', 'description': 'the check-out date', 'datatype': 'Date'}]","[{'name': 'hotel_booking', 'description': 'the booking details of the hotel', 'datatype': 'Object'}]",,
ItineraryPlanner,"ItineraryPlanner(flight_details, hotel_booking) -> itinerary",429,This API plans an itinerary based on the flight and hotel booking details.,This API plans an itinerary based on the flight and hotel booking details.,"[{'name': 'flight_details', 'description': 'the details of available flights', 'datatype': 'List'}, {'name': 'hotel_booking', 'description': 'the booking details of the hotel', 'datatype': 'Object'}]","[{'name': 'itinerary', 'description': 'the planned itinerary', 'datatype': 'Object'}]",,
FoodMenuQuery,FoodMenuQuery(restaurant) -> food_menu,430,This API is used to find out the food menu of a specific restaurant.,This API is used to find out the food menu of a specific restaurant.,"[{'name': 'restaurant', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'food_menu', 'description': 'the menu of the specified restaurant', 'datatype': 'String'}]",,
RestaurantByLocation,RestaurantByLocation(location) -> restaurantData,431,This API provides restaurant information in a specific location.,This API provides restaurant information in a specific location.,"[{'name': 'location', 'description': 'the location where the user is', 'datatype': 'String'}]","[{'name': 'restaurantData', 'description': 'the data of restaurants in the specified location', 'datatype': 'JSON'}]",,
CuisineByRestaurant,CuisineByRestaurant(restaurantData) -> cuisineData,432,This API provides information on the cuisine offered by specific restaurants.,This API provides information on the cuisine offered by specific restaurants.,"[{'name': 'restaurantData', 'description': 'the data of restaurants', 'datatype': 'JSON'}]","[{'name': 'cuisineData', 'description': 'the data of cuisines offered by the restaurants', 'datatype': 'JSON'}]",,
FoodDelivery,FoodDelivery(cuisineData) -> deliveryETA,433,This API provides the estimated time of arrival for food delivery based on restaurant and cuisine details.,This API provides the estimated time of arrival for food delivery based on restaurant and cuisine details.,"[{'name': 'cuisineData', 'description': 'the data of cuisines', 'datatype': 'JSON'}]","[{'name': 'deliveryETA', 'description': 'the estimated time of arrival for food delivery', 'datatype': 'Time'}]",,
RestaurantByname,RestaurantByname(restaurant_name) -> restaurant_info,434,This API provides detailed information about a specific restaurant.,This API provides detailed information about a specific restaurant.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_info', 'description': 'detailed information about the restaurant', 'datatype': 'Object'}]",,
FoodByDietType,FoodByDietType(diet_type) -> food_list,435,This API provides a list of foods based on a specific diet type.,This API provides a list of foods based on a specific diet type.,"[{'name': 'diet_type', 'description': 'the type of diet', 'datatype': 'String'}]","[{'name': 'food_list', 'description': 'a list of foods based on the diet type', 'datatype': 'List'}]",,
BestOrder,"BestOrder(restaurant_info, food_list) -> order_info",436,This API provides the best order suggestion based on the restaurant and diet type.,This API provides the best order suggestion based on the restaurant and diet type.,"[{'name': 'restaurant_info', 'description': 'detailed information about the restaurant', 'datatype': 'Object'}, {'name': 'food_list', 'description': 'a list of foods based on the diet type', 'datatype': 'List'}]","[{'name': 'order_info', 'description': 'the best order suggestion', 'datatype': 'Object'}]",,
EventFinder,"EventFinder(city, date) -> events",437,This API provides information about events happening in a city on a certain date.,This API provides information about events happening in a city on a certain date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for the event search', 'datatype': 'String'}]","[{'name': 'events', 'description': 'a list of events happening in the city on the specified date', 'datatype': 'List'}]",,
TripAdvisor,"TripAdvisor(weather, restaurants, events) -> trip_advice",438,"This API helps in advising your trip by combining weather, restaurants, and events information.","This API helps in advising your trip by combining weather, restaurants, and events information.","[{'name': 'weather', 'description': 'the weather forecast for the city on the specified date', 'datatype': 'String'}, {'name': 'restaurants', 'description': 'a list of recommended restaurants in the city', 'datatype': 'List'}, {'name': 'events', 'description': 'a list of events happening in the city on the specified date', 'datatype': 'List'}]","[{'name': 'trip_advice', 'description': 'advice for your trip based on the weather, restaurants, and events information', 'datatype': 'String'}]",,
SearchMovie,"SearchMovie(genre, location) -> movie_details",439,This API is to search a movie of a specified genre at a specific location.,This API is to search a movie of a specified genre at a specific location.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}, {'name': 'location', 'description': 'the location where the movie is searched', 'datatype': 'String'}]","[{'name': 'movie_details', 'description': 'the details of the movie', 'datatype': 'String'}]",,
CheckShowtimes,"CheckShowtimes(movie_name, date) -> showtime_details",440,This API is to check the showtimes for a specified movie on a certain date.,This API is to check the showtimes for a specified movie on a certain date.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for which showtimes are checked', 'datatype': 'String'}]","[{'name': 'showtime_details', 'description': 'the details of the showtimes', 'datatype': 'String'}]",,
BookTickets,"BookTickets(movie_name, showtime, number_of_tickets) -> booking_status",441,This API is to book a specified number of tickets for a movie at a certain showtime.,This API is to book a specified number of tickets for a movie at a certain showtime.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'showtime', 'description': 'the showtime for which tickets are booked', 'datatype': 'String'}, {'name': 'number_of_tickets', 'description': 'the number of tickets to be booked', 'datatype': 'Integer'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
FindEventCity,FindEventCity(event_name) -> city name,442,This API is to find the city where a specific event will take place.,This API is to find the city where a specific event will take place.,"[{'name': 'event_name', 'description': 'the name of the event', 'datatype': 'String'}]","[{'name': 'city name', 'description': 'the name of the city where the event will take place', 'datatype': 'String'}]",,
FindEventDate,FindEventDate(event_name) -> date,443,This API is to find the date when a specific event will take place.,This API is to find the date when a specific event will take place.,"[{'name': 'event_name', 'description': 'the name of the event', 'datatype': 'String'}]","[{'name': 'date', 'description': 'the date when the event will take place', 'datatype': 'Date'}]",,
FindRoomType,"FindRoomType(hotelname, guestNumber) -> room type",444,This API is used to find suitable room type in a hotel for specific number of guests.,This API is used to find suitable room type in a hotel for specific number of guests.,"[{'name': 'hotelname', 'description': 'the name of the hotel', 'datatype': 'String'}, {'name': 'guestNumber', 'description': 'the number of guests', 'datatype': 'Integer'}]","[{'name': 'room type', 'description': 'the type of the hotel room', 'datatype': 'String'}]",,
CreateAppointment,"CreateAppointment(doctorId, patientId, date, time) -> appointment status",445,This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.,This API is used to create an appointment with a specific doctor for a specific patient at a certain date and time.,"[{'name': 'doctorId', 'description': 'the ID of the doctor', 'datatype': 'Integer'}, {'name': 'patientId', 'description': 'the ID of the patient', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the appointment', 'datatype': 'String'}, {'name': 'time', 'description': 'the time of the appointment', 'datatype': 'String'}]","[{'name': 'appointment status', 'description': 'the status of the appointment', 'datatype': 'String'}]",,
FindPatient,FindPatient(patientname) -> patient id,446,This API is used to find a patient based on patient name.,This API is used to find a patient based on patient name.,"[{'name': 'patientname', 'description': 'the name of the patient', 'datatype': 'String'}]","[{'name': 'patient id', 'description': 'the ID of the patient', 'datatype': 'Integer'}]",,
GetLunchRecommendation,GetLunchRecommendation(weather_info) -> food_recommendation,447,This API is to get lunch recommendation based on the weather.,This API is to get lunch recommendation based on the weather.,"[{'name': 'weather_info', 'description': 'the weather information', 'datatype': 'String'}]","[{'name': 'food_recommendation', 'description': 'the lunch recommendation', 'datatype': 'String'}]",,
FindShowtime,"FindShowtime(movie_name, location, date) -> showtime",448,This API is to find the showtime for a specific movie in a given location on a specific date.,This API is to find the showtime for a specific movie in a given location on a specific date.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'location', 'description': 'the location where the movie is available', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for which the showtime is required', 'datatype': 'String'}]","[{'name': 'showtime', 'description': 'the showtime of the movie', 'datatype': 'String'}]",,
BookMovieTicket,"BookMovieTicket(movie_name, showtime, number_of_tickets) -> booking confirmation",449,This API is to book movie tickets for a specific movie at a specific showtime.,This API is to book movie tickets for a specific movie at a specific showtime.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}, {'name': 'showtime', 'description': 'the showtime of the movie', 'datatype': 'String'}, {'name': 'number_of_tickets', 'description': 'the number of tickets to be booked', 'datatype': 'Integer'}]","[{'name': 'booking confirmation', 'description': 'the confirmation of the booking', 'datatype': 'String'}]",,
FetchUserDetails,FetchUserDetails(user_id) -> user_details,450,This API is to fetch user details based on the user_id.,This API is to fetch user details based on the user_id.,"[{'name': 'user_id', 'description': 'the ID of the user', 'datatype': 'String'}]","[{'name': 'user_details', 'description': 'the details of the user', 'datatype': 'Object'}]",,
GenerateOrderSummary,GenerateOrderSummary(order_id) -> order_summary,451,This API is to generate a summary of the order using the order_id.,This API is to generate a summary of the order using the order_id.,"[{'name': 'order_id', 'description': 'the ID of the order', 'datatype': 'String'}]","[{'name': 'order_summary', 'description': 'the summary of the order', 'datatype': 'Object'}]",,
EmailUser,"EmailUser(user_details, message) -> email_status",452,This API is to send an email to a user.,This API is to send an email to a user.,"[{'name': 'user_details', 'description': 'the details of the user', 'datatype': 'Object'}, {'name': 'message', 'description': 'the message to be sent', 'datatype': 'String'}]","[{'name': 'email_status', 'description': 'the status of the email', 'datatype': 'String'}]",,
FoodOrder,"FoodOrder(user_ID, restaurant_ID, food_item) -> order_status",453,This API is to order food.,This API is to order food.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'restaurant_ID', 'description': 'the ID of the restaurant', 'datatype': 'Integer'}, {'name': 'food_item', 'description': 'the name of the food item', 'datatype': 'String'}]","[{'name': 'order_status', 'description': 'the status of the food order', 'datatype': 'String'}]",,
Bookname2ISBN,Bookname2ISBN(book_name) -> isbn,454,This API is to convert book name to book ISBN.,This API is to convert book name to book ISBN.,"[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'isbn', 'description': 'the ISBN of the book', 'datatype': 'String'}]",,
Library2ID,Library2ID(library_name) -> library_id,455,This API is to convert library name to library ID.,This API is to convert library name to library ID.,"[{'name': 'library_name', 'description': 'the name of the library', 'datatype': 'String'}]","[{'name': 'library_id', 'description': 'the ID of the library', 'datatype': 'Integer'}]",,
Storename2ID,Storename2ID(store_name) -> store_ID,456,This API is to convert store name to store ID.,This API is to convert store name to store ID.,"[{'name': 'store_name', 'description': 'the name of the store', 'datatype': 'String'}]","[{'name': 'store_ID', 'description': 'the ID of the store', 'datatype': 'Integer'}]",,
AddProductToStore,"AddProductToStore(product_ID, store_ID, quantity) -> status",457,This API is to add a product to a store.,This API is to add a product to a store.,"[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'store_ID', 'description': 'the ID of the store', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the product to add', 'datatype': 'Integer'}]","[{'name': 'status', 'description': 'the status of the operation', 'datatype': 'String'}]",,
BookTitle2ISBN,BookTitle2ISBN(book_title) -> ISBN,458,This API is to convert book title to book ISBN.,This API is to convert book title to book ISBN.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]",,
BuyBook,"BuyBook(user_ID, ISBN) -> purchase_status",459,This API is to purchase a book for a user.,This API is to purchase a book for a user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'String'}, {'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'purchase_status', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
Recipename2ID,Recipename2ID(recipe_name) -> recipe_ID,460,This API is to convert recipe name to recipe ID.,This API is to convert recipe name to recipe ID.,"[{'name': 'recipe_name', 'description': 'the name of the recipe', 'datatype': 'String'}]","[{'name': 'recipe_ID', 'description': 'the ID of the recipe', 'datatype': 'Integer'}]",,
Ingredientname2ID,Ingredientname2ID(ingredient_name) -> ingredient_ID,461,This API is to convert ingredient name to ingredient ID.,This API is to convert ingredient name to ingredient ID.,"[{'name': 'ingredient_name', 'description': 'the name of the ingredient', 'datatype': 'String'}]","[{'name': 'ingredient_ID', 'description': 'the ID of the ingredient', 'datatype': 'Integer'}]",,
GetRecipe,"GetRecipe(Recipe_ID, Ingredient_ID) -> recipe",462,This API is to get a recipe.,This API is to get a recipe.,"[{'name': 'recipe_ID', 'description': 'the ID of the recipe', 'datatype': 'Integer'}, {'name': 'ingredient_ID', 'description': 'the ID of the ingredient', 'datatype': 'Integer'}]","[{'name': 'recipe', 'description': 'the recipe details', 'datatype': 'String'}]",,
LocateBook,"LocateBook(Book_ID, Author_ID) -> location",463,This API is to locate a book in the library.,This API is to locate a book in the library.,"[{'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}, {'name': 'author_ID', 'description': 'the ID of the author', 'datatype': 'Integer'}]","[{'name': 'location', 'description': 'the location of the book in the library', 'datatype': 'String'}]",,
CuisineType2ID,CuisineType2ID(cuisine_type) -> Cuisine_ID,464,This API is to convert cuisine type to cuisine ID.,This API is to convert cuisine type to cuisine ID.,"[{'name': 'cuisine_type', 'description': 'the type of cuisine', 'datatype': 'String'}]","[{'name': 'Cuisine_ID', 'description': 'the ID of the cuisine', 'datatype': 'Integer'}]",,
UserEmail2UserId,UserEmail2UserId(user_email) -> user_id,465,This API is to convert user email to user ID.,This API is to convert user email to user ID.,"[{'name': 'user_email', 'description': 'the email of the user', 'datatype': 'String'}]","[{'name': 'user_id', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
MovieTitle2MovieId,MovieTitle2MovieId(movie_title) -> movie_id,466,This API is to convert movie title to movie ID.,This API is to convert movie title to movie ID.,"[{'name': 'movie_title', 'description': 'the title of the movie', 'datatype': 'String'}]","[{'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
GetUserIDByUser,GetUserIDByUser(user_name) -> user_ID,467,This API is to convert user name to user ID.,This API is to convert user name to user ID.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]",,
GetBookIDByTitle,GetBookIDByTitle(book_title) -> book_ID,468,This API is to convert book title to book ID.,This API is to convert book title to book ID.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]",,
RecommendBookByGenre,"RecommendBookByGenre(user_ID, genre) -> recommended_book",469,This API is to recommend a book based on genre.,This API is to recommend a book based on genre.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'genre', 'description': 'the genre of the book', 'datatype': 'String'}]","[{'name': 'recommended_book', 'description': 'the recommended book', 'datatype': 'String'}]",,
GetUserFavouriteGenre,GetUserFavouriteGenre(user_ID) -> genre,470,This API is to get the favourite genre of a user.,This API is to get the favourite genre of a user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'genre', 'description': 'the favourite genre of the user', 'datatype': 'String'}]",,
FindMovieByGenre,FindMovieByGenre(genre) -> movie_ID,471,This API is to find a movie by genre.,This API is to find a movie by genre.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
GetUserCar,GetUserCar(user_name) -> car_id,472,This API is to get the car ID of a user.,This API is to get the car ID of a user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'car_id', 'description': ""the ID of the user's car"", 'datatype': 'Integer'}]",,
GetServiceStationNearMe,GetServiceStationNearMe(user_location) -> service_station_id,473,This API is to get the nearest service station based on user location.,This API is to get the nearest service station based on user location.,"[{'name': 'user_location', 'description': 'the location of the user', 'datatype': 'String'}]","[{'name': 'service_station_id', 'description': 'the ID of the nearest service station', 'datatype': 'Integer'}]",,
BookCarService,"BookCarService(car_id, service_station_id, user_name) -> booking_status",474,This API is to book a car service at a service station.,This API is to book a car service at a service station.,"[{'name': 'car_id', 'description': 'the ID of the car', 'datatype': 'Integer'}, {'name': 'service_station_id', 'description': 'the ID of the service station', 'datatype': 'Integer'}, {'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
Favoritename2ID,Favoritename2ID(favorite_name) -> favorite_ID,475,This API is to convert favorite name to favorite ID.,This API is to convert favorite name to favorite ID.,"[{'name': 'favorite_name', 'description': 'the name of the favorite list', 'datatype': 'String'}]","[{'name': 'favorite_ID', 'description': 'the ID of the favorite list', 'datatype': 'Integer'}]",,
AddMovieToFavorites,"AddMovieToFavorites(favorite_ID, movie_ID) -> status",476,This API is to add a movie to a favorite list.,This API is to add a movie to a favorite list.,"[{'name': 'favorite_ID', 'description': 'the ID of the favorite list', 'datatype': 'Integer'}, {'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]","[{'name': 'status', 'description': 'the status of adding the movie to the favorite list', 'datatype': 'String'}]",,
ReadingListname2ID,ReadingListname2ID(readinglist_name) -> readinglist_ID,477,This API is to convert reading list name to reading list ID.,This API is to convert reading list name to reading list ID.,"[{'name': 'readinglist_name', 'description': 'the name of the reading list', 'datatype': 'String'}]","[{'name': 'readinglist_ID', 'description': 'the ID of the reading list', 'datatype': 'Integer'}]",,
GetDueDate,"GetDueDate(user_ID, book_ID) -> due_date",478,This API is to get the due date of a book.,This API is to get the due date of a book.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'book_ID', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'due_date', 'description': 'the due date of the book', 'datatype': 'Date'}]",,
UserIdToname,UserIdToname(userId) -> user_name,479,This API is to convert user ID to user name.,This API is to convert user ID to user name.,"[{'name': 'userId', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]",,
RouteToLocation,RouteToLocation(route) -> location_coordinates,480,This API is to convert route name to location coordinates.,This API is to convert route name to location coordinates.,"[{'name': 'route', 'description': 'the name of the bus route', 'datatype': 'String'}]","[{'name': 'location_coordinates', 'description': 'the coordinates of the bus route location', 'datatype': 'String'}]",,
CheckBusSchedule,"CheckBusSchedule(location_coordinates, date, time) -> bus_schedule_info",481,This API is to check the bus schedule.,This API is to check the bus schedule.,"[{'name': 'location_coordinates', 'description': 'the coordinates of the bus route location', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the bus schedule', 'datatype': 'Date'}, {'name': 'time', 'description': 'the time of the bus schedule', 'datatype': 'Time'}]","[{'name': 'bus_schedule_info', 'description': 'the information of the bus schedule', 'datatype': 'String'}]",,
BookBusSeat,"BookBusSeat(user_name, bus_schedule_info) -> booking_status",482,This API is to book a bus seat.,This API is to book a bus seat.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}, {'name': 'bus_schedule_info', 'description': 'the information of the bus schedule', 'datatype': 'String'}]","[{'name': 'booking_status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
Address2Coordinates,Address2Coordinates(address) -> coordinates,483,This API is to convert address to coordinates.,This API is to convert address to coordinates.,"[{'name': 'address', 'description': 'the address of the location', 'datatype': 'String'}]","[{'name': 'coordinates', 'description': 'the coordinates of the location', 'datatype': 'String'}]",,
Libraryname2ID,Libraryname2ID(library_name) -> library_ID,484,This API is to convert library name to library ID.,This API is to convert library name to library ID.,"[{'name': 'library_name', 'description': 'the name of the library', 'datatype': 'String'}]","[{'name': 'library_ID', 'description': 'the ID of the library', 'datatype': 'Integer'}]",,
RecommendAttire,RecommendAttire(weather) -> attire,485,This API is to recommend attire based on the weather.,This API is to recommend attire based on the weather.,"[{'name': 'weather', 'description': 'the weather information', 'datatype': 'String'}]","[{'name': 'attire', 'description': 'the recommended attire', 'datatype': 'String'}]",,
ActorExtractor,ActorExtractor(movie_id) -> actor_name,486,This API is to extract the actor name from the movie ID.,This API is to extract the actor name from the movie ID.,"[{'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'String'}]","[{'name': 'actor_name', 'description': 'the name of the actor', 'datatype': 'String'}]",,
MovieDatabase,"MovieDatabase(title, year) -> movie_id",487,This API is to retrieve the movie information based on the title and year.,This API is to retrieve the movie information based on the title and year.,"[{'name': 'title', 'description': 'the title of the movie', 'datatype': 'String'}, {'name': 'year', 'description': 'the year of the movie', 'datatype': 'Integer'}]","[{'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'String'}]",,
MovieRatingChecker,"MovieRatingChecker(actor_name, movie_id) -> rating",488,This API is to check the rating of a movie.,This API is to check the rating of a movie.,"[{'name': 'actor_name', 'description': 'the name of the actor', 'datatype': 'String'}, {'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'String'}]","[{'name': 'rating', 'description': 'the rating of the movie', 'datatype': 'Float'}]",,
GetLocalTheater,GetLocalTheater(city) -> theater_name,489,This API is to get the nearest theater in a specific city.,This API is to get the nearest theater in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'theater_name', 'description': 'the name of the theater', 'datatype': 'String'}]",,
GetCurrentPlays,GetCurrentPlays(theater_name) -> play_name,490,This API is to get the currently performed plays at a specific theater.,This API is to get the currently performed plays at a specific theater.,"[{'name': 'theater_name', 'description': 'the name of the theater', 'datatype': 'String'}]","[{'name': 'play_name', 'description': 'the name of the play', 'datatype': 'String'}]",,
GetPlayReviews,GetPlayReviews(play_name) -> reviews,491,This API is to get the reviews for a specific play.,This API is to get the reviews for a specific play.,"[{'name': 'play_name', 'description': 'the name of the play', 'datatype': 'String'}]","[{'name': 'reviews', 'description': 'the reviews for the play', 'datatype': 'List'}]",,
GetLocalMusicStore,GetLocalMusicStore(city) -> store_name,492,This API is to get the nearest music store in a specific city.,This API is to get the nearest music store in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'store_name', 'description': 'the name of the music store', 'datatype': 'String'}]",,
GetCurrentAlbums,GetCurrentAlbums(store_name) -> album_name,493,This API is to get the currently playing albums at a music store.,This API is to get the currently playing albums at a music store.,"[{'name': 'store_name', 'description': 'the name of the music store', 'datatype': 'String'}]","[{'name': 'album_name', 'description': 'the name of the album', 'datatype': 'String'}]",,
GetAlbumReviews,GetAlbumReviews(album_name) -> reviews,494,This API is to get the reviews for a specific album.,This API is to get the reviews for a specific album.,"[{'name': 'album_name', 'description': 'the name of the album', 'datatype': 'String'}]","[{'name': 'reviews', 'description': 'the reviews for the album', 'datatype': 'List of Strings'}]",,
GetLocalMuseum,GetLocalMuseum(city) -> museum_name,495,This API is to get the local museum in a specific city.,This API is to get the local museum in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'museum_name', 'description': 'the name of the museum', 'datatype': 'String'}]",,
GetCurrentExhibitions,GetCurrentExhibitions(museum_name) -> exhibition_name,496,This API is to get the current exhibitions being showcased at a museum.,This API is to get the current exhibitions being showcased at a museum.,"[{'name': 'museum_name', 'description': 'the name of the museum', 'datatype': 'String'}]","[{'name': 'exhibition_name', 'description': 'the name of the exhibition', 'datatype': 'String'}]",,
GetExhibitionReviews,GetExhibitionReviews(exhibition_name) -> reviews,497,This API is to get the reviews for a specific exhibition.,This API is to get the reviews for a specific exhibition.,"[{'name': 'exhibition_name', 'description': 'the name of the exhibition', 'datatype': 'String'}]","[{'name': 'reviews', 'description': 'the reviews for the exhibition', 'datatype': 'List of Strings'}]",,
CheckLibraryAvailability,CheckLibraryAvailability(bookDetails) -> libraryStatus,498,This API is to check the availability of a book in the library.,This API is to check the availability of a book in the library.,"[{'name': 'bookDetails', 'description': 'the details of the book', 'datatype': 'Object'}]","[{'name': 'libraryStatus', 'description': 'the availability status of the book in the library', 'datatype': 'String'}]",,
FetchParts,FetchParts(item) -> parts,499,This API is to fetch parts for a specific item.,This API is to fetch parts for a specific item.,"[{'name': 'item', 'description': 'the item for which parts need to be fetched', 'datatype': 'String'}]","[{'name': 'parts', 'description': 'a list of parts for the specified item', 'datatype': 'List'}]",,
FindElectronicsStores,FindElectronicsStores(location) -> stores,500,This API is to find electronics stores in a specific location.,This API is to find electronics stores in a specific location.,"[{'name': 'location', 'description': 'the location for which electronics stores need to be found', 'datatype': 'String'}]","[{'name': 'stores', 'description': 'a list of electronics stores in the specified location', 'datatype': 'List'}]",,
FetchComponents,FetchComponents(product) -> components,501,This API is to fetch components for a bicycle.,This API is to fetch components for a bicycle.,"[{'name': 'product', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'components', 'description': 'a list of components for the product', 'datatype': 'List'}]",,
FindSportingGoodsStores,FindSportingGoodsStores(location) -> stores,502,This API is to find sporting goods stores in a specific location.,This API is to find sporting goods stores in a specific location.,"[{'name': 'location', 'description': 'the location to search for sporting goods stores', 'datatype': 'String'}]","[{'name': 'stores', 'description': 'a list of sporting goods stores in the location', 'datatype': 'List'}]",,
FetchBooks,FetchBooks(course_name) -> books,503,This API is to fetch books based on a specific course.,This API is to fetch books based on a specific course.,"[{'name': 'course_name', 'description': 'the name of the course', 'datatype': 'String'}]","[{'name': 'books', 'description': 'a list of books related to the course', 'datatype': 'List'}]",,
FindBookStores,FindBookStores(location) -> bookstores,504,This API is to find bookstores in a specific location.,This API is to find bookstores in a specific location.,"[{'name': 'location', 'description': 'the location to search for bookstores', 'datatype': 'String'}]","[{'name': 'bookstores', 'description': 'a list of bookstores in the location', 'datatype': 'List'}]",,
FetchSupplies,FetchSupplies(class_name) -> supplies_list,505,This API is to fetch supplies for a specific class.,This API is to fetch supplies for a specific class.,"[{'name': 'class_name', 'description': 'the name of the class', 'datatype': 'String'}]","[{'name': 'supplies_list', 'description': 'a list of supplies for the class', 'datatype': 'List'}]",,
FindArtSuppliesStores,FindArtSuppliesStores(location) -> store_list,506,This API is to find art supplies stores in a specific location.,This API is to find art supplies stores in a specific location.,"[{'name': 'location', 'description': 'the location to search for art supplies stores', 'datatype': 'String'}]","[{'name': 'store_list', 'description': 'a list of art supplies stores in the location', 'datatype': 'List'}]",,
ProductSearch,ProductSearch(product_name) -> product_id,507,This API is to search for a product by its name.,This API is to search for a product by its name.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'Integer'}]",,
ProductReviews,ProductReviews(product_id) -> review_scores,508,This API is to get the reviews of a product.,This API is to get the reviews of a product.,"[{'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'review_scores', 'description': 'the scores of the reviews', 'datatype': 'List of Float'}]",,
ReviewAverage,ReviewAverage(review_scores) -> average_score,509,This API is to calculate the average review score.,This API is to calculate the average review score.,"[{'name': 'review_scores', 'description': 'the scores of the reviews', 'datatype': 'List of Float'}]","[{'name': 'average_score', 'description': 'the average review score', 'datatype': 'Float'}]",,
AverageRating,AverageRating(ratingScores) -> average_rating,510,This API is to calculate the average rating of a movie.,This API is to calculate the average rating of a movie.,"[{'name': 'ratingScores', 'description': 'the ratings of the movie', 'datatype': 'List of Float'}]","[{'name': 'average_rating', 'description': 'the average rating of the movie', 'datatype': 'Float'}]",,
AverageReview,AverageReview(reviewScores) -> averageReview,511,This API is to calculate the average review score.,This API is to calculate the average review score.,"[{'name': 'reviewScores', 'description': 'the review scores for the product', 'datatype': 'List of Float'}]","[{'name': 'averageReview', 'description': 'the average review score', 'datatype': 'Float'}]",,
FoodFestival,FoodFestival(park),512,This API is to get the food festivals currently open in parks in a specific city.,This API is to get the food festivals currently open in parks in a specific city.,"[{'name': 'park', 'description': 'the name of the park', 'datatype': 'String'}]","[{'name': 'food_festivals', 'description': 'a list of food festivals', 'datatype': 'List'}]",,
OpenParks,"OpenParks(city, time)",513,This API is to get the list of open parks in a specific city at the current time.,This API is to get the list of open parks in a specific city at the current time.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'time', 'description': 'the current time', 'datatype': 'Time'}]","[{'name': 'open_parks', 'description': 'a list of open parks', 'datatype': 'List'}]",,
TheatrePlay,TheatrePlay(theatre),514,This API is to get the theatre plays currently showing in theatres in a specific city.,This API is to get the theatre plays currently showing in theatres in a specific city.,"[{'name': 'theatre', 'description': 'the name of the theatre', 'datatype': 'String'}]","[{'name': 'theatre_plays', 'description': 'a list of theatre plays', 'datatype': 'List'}]",,
OpenTheatres,"OpenTheatres(city, time)",515,This API is to get the list of open theatres in a specific city at the current time.,This API is to get the list of open theatres in a specific city at the current time.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'time', 'description': 'the current time', 'datatype': 'Time'}]","[{'name': 'open_theatres', 'description': 'a list of open theatres', 'datatype': 'List'}]",,
TrainSchedule,"TrainSchedule(source, destination, date) -> train_details",516,This API is to get the train schedule from source to destination on a specific date.,This API is to get the train schedule from source to destination on a specific date.,"[{'name': 'source', 'description': 'the source city', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of travel', 'datatype': 'Date'}]","[{'name': 'train_details', 'description': 'the details of the train schedule', 'datatype': 'Object'}]",,
PackageBooking,"PackageBooking(trainDetails, hotelDetails, num_of_people) -> booking_status",517,This API is to book a package including train and hotel for a specific number of people.,This API is to book a package including train and hotel for a specific number of people.,"[{'name': 'trainDetails', 'description': 'the details of the train schedule', 'datatype': 'Object'}, {'name': 'hotelDetails', 'description': 'the details of the available hotels', 'datatype': 'Object'}, {'name': 'num_of_people', 'description': 'the number of people for the package', 'datatype': 'Integer'}]","[{'name': 'booking_status', 'description': 'the status of the package booking', 'datatype': 'String'}]",,
WeatherInquiry,"WeatherInquiry(location, date) -> weather_info",518,This API is to inquire about the weather in a specific location on a specific date.,This API is to inquire about the weather in a specific location on a specific date.,"[{'name': 'location', 'description': 'the location to inquire about the weather', 'datatype': 'String'}, {'name': 'date', 'description': 'the date to inquire about the weather', 'datatype': 'Date'}]","[{'name': 'weather_info', 'description': 'the weather information for the specified location and date', 'datatype': 'String'}]",,
RestaurantSelection,"RestaurantSelection(cuisine, location) -> restaurant_details",519,This API is to select a restaurant based on cuisine and location.,This API is to select a restaurant based on cuisine and location.,"[{'name': 'cuisine', 'description': 'the cuisine type to search for', 'datatype': 'String'}, {'name': 'location', 'description': 'the location to search for the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_details', 'description': 'the details of the selected restaurant', 'datatype': 'Object'}]",,
WeatherVerification,"WeatherVerification(location, date) -> weather_status",520,This API is to verify the weather in a specific location on a specific date.,This API is to verify the weather in a specific location on a specific date.,"[{'name': 'location', 'description': 'the location to verify the weather', 'datatype': 'String'}, {'name': 'date', 'description': 'the date to verify the weather', 'datatype': 'Date'}]","[{'name': 'weather_status', 'description': 'the status of the weather', 'datatype': 'String'}]",,
DinnerReservation,"DinnerReservation(restaurant, time) -> reservation_status",521,This API is to book a table for dinner.,This API is to book a table for dinner.,"[{'name': 'restaurant', 'description': 'the recommended restaurant', 'datatype': 'String'}, {'name': 'time', 'description': 'the reservation time', 'datatype': 'Time'}]","[{'name': 'reservation_status', 'description': 'the status of the reservation', 'datatype': 'String'}]",,
UserEmailRetriever,UserEmailRetriever(username) -> userEmail,522,This API is to retrieve the email of a user based on their username.,This API is to retrieve the email of a user based on their username.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'userEmail', 'description': 'the email of the user', 'datatype': 'String'}]",,
EmailCompose,"EmailCompose(userEmail, subject, body) -> email",523,This API is to compose an email with a subject and body.,This API is to compose an email with a subject and body.,"[{'name': 'userEmail', 'description': 'the email of the user', 'datatype': 'String'}, {'name': 'subject', 'description': 'the subject of the email', 'datatype': 'String'}, {'name': 'body', 'description': 'the body of the email', 'datatype': 'String'}]","[{'name': 'email', 'description': 'the composed email', 'datatype': 'Email'}]",,
EmailSender,EmailSender(email) -> status,524,This API is to send an email to a user.,This API is to send an email to a user.,"[{'name': 'email', 'description': 'the email to be sent', 'datatype': 'Email'}]","[{'name': 'status', 'description': 'the status of the email sending', 'datatype': 'String'}]",,
FindTransport,"FindTransport(BusStation, Destination) -> Transportation",525,This API is to find the optimal way to get to a destination from a bus station.,This API is to find the optimal way to get to a destination from a bus station.,"[{'name': 'BusStation', 'description': 'the name of the bus station', 'datatype': 'String'}, {'name': 'Destination', 'description': 'the destination to be reached', 'datatype': 'API: RestaurantFinder'}]","[{'name': 'Transportation', 'description': 'the optimal transportation method to reach the destination', 'datatype': 'String'}]",,
RestaurantFinder,"RestaurantFinder(Cityname, CuisineType) -> Restaurantname",526,This API is to find a restaurant based on the city name and cuisine type.,This API is to find a restaurant based on the city name and cuisine type.,"[{'name': 'Cityname', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'CuisineType', 'description': 'the type of cuisine', 'datatype': 'String'}]","[{'name': 'Restaurantname', 'description': 'the name of the restaurant', 'datatype': 'String'}]",,
CinemaLocation,"CinemaLocation(Cityname, ShowTime) -> Cinemaname",527,This API is to convert city name to cinema location.,This API is to convert city name to cinema location.,"[{'name': 'Cityname', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'ShowTime', 'description': 'the showtime of the movie', 'datatype': 'Time'}]","[{'name': 'Cinemaname', 'description': 'the name of the cinema', 'datatype': 'String'}]",,
FetchMovie,FetchMovie(Moviename) -> ShowTime,528,This API is to fetch movie details.,This API is to fetch movie details.,"[{'name': 'Moviename', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'ShowTime', 'description': 'the showtime of the movie', 'datatype': 'Time'}]",,
FindNutritionalInfo,FindNutritionalInfo(MenuItems='MenuItems') -> NutritionalInfo,529,This API is to find the nutritional information for menu items.,This API is to find the nutritional information for menu items.,"[{'name': 'MenuItems', 'description': 'the list of menu items', 'datatype': 'List'}]","[{'name': 'NutritionalInfo', 'description': 'the nutritional information for the menu items', 'datatype': 'Dictionary'}]",,
FindClothingType,FindClothingType(WeatherCondition) -> clothing_type,530,This API is to find the appropriate clothing type based on the weather condition.,This API is to find the appropriate clothing type based on the weather condition.,"[{'name': 'weather_condition', 'description': 'the current weather condition', 'datatype': 'String'}]","[{'name': 'clothing_type', 'description': 'the recommended clothing type', 'datatype': 'String'}]",,
FindStore,"FindStore(ClothingType, location) -> store_list",531,This API is to find the stores where the clothing type can be purchased.,This API is to find the stores where the clothing type can be purchased.,"[{'name': 'ClothingType', 'description': 'the recommended clothing type', 'datatype': 'String'}, {'name': 'location', 'description': 'the name of the location', 'datatype': 'String'}]","[{'name': 'store_list', 'description': 'a list of stores where the clothing type can be purchased', 'datatype': 'List'}]",,
GetShoppingSites,GetShoppingSites(ClothesList),532,This API is to get the shopping sites where clothing can be purchased.,This API is to get the shopping sites where clothing can be purchased.,"[{'name': 'ClothesList', 'description': 'the list of recommended clothing', 'datatype': 'List'}]","[{'name': 'ShoppingSites', 'description': 'the list of shopping sites', 'datatype': 'List'}]",,
GetIngredientsList,GetIngredientsList(Recipe),533,This API is to get the list of ingredients for a specific recipe.,This API is to get the list of ingredients for a specific recipe.,"[{'name': 'Recipe', 'description': 'the recipe for the dish', 'datatype': 'String'}]","[{'name': 'IngredientsList', 'description': 'the list of ingredients for the recipe', 'datatype': 'List'}]",,
GetGroceryStores,GetGroceryStores(IngredientsList),534,This API is to get the nearest grocery stores where ingredients can be found.,This API is to get the nearest grocery stores where ingredients can be found.,"[{'name': 'IngredientsList', 'description': 'the list of ingredients', 'datatype': 'List'}]","[{'name': 'GroceryStores', 'description': 'the nearest grocery stores', 'datatype': 'List'}]",,
GetBookDetails,GetBookDetails(BookID) -> BookDetails,535,This API is to get the details of a book by its ID.,This API is to get the details of a book by its ID.,"[{'name': 'BookID', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'BookDetails', 'description': 'the details of the book', 'datatype': 'String'}]",,
ConvertToAudio,"ConvertToAudio(BookDetails, Language) -> AudioFile",536,This API is to convert book details to audio in a specific language.,This API is to convert book details to audio in a specific language.,"[{'name': 'BookDetails', 'description': 'the details of the book', 'datatype': 'String'}, {'name': 'Language', 'description': 'the language to convert the audio to', 'datatype': 'String'}]","[{'name': 'AudioFile', 'description': 'the audio file of the book details in the specified language', 'datatype': 'File'}]",,
ReserveAirportTransport,"ReserveAirportTransport(flightDetails, hotelConfirmation) -> reservation_confirmation",537,This API is to reserve airport transportation based on flight details and hotel confirmation.,This API is to reserve airport transportation based on flight details and hotel confirmation.,"[{'name': 'flightDetails', 'description': 'the details of the flight', 'datatype': 'String'}, {'name': 'hotelConfirmation', 'description': 'the confirmation details of the hotel reservation', 'datatype': 'String'}]","[{'name': 'reservation_confirmation', 'description': 'the confirmation details of the airport transportation reservation', 'datatype': 'String'}]",,
BookReviews,"BookReviews(author_info, num_of_reviews) -> reviews",538,This API is to book reviews for a book.,This API is to book reviews for a book.,"[{'name': 'author_info', 'description': 'the information of the author', 'datatype': 'AuthorInfo'}, {'name': 'num_of_reviews', 'description': 'the number of reviews needed', 'datatype': 'Integer'}]","[{'name': 'reviews', 'description': 'a list of reviews', 'datatype': 'List'}]",,
AuthorInfo,AuthorInfo(book_details) -> author_info,539,This API is to get the information of an author.,This API is to get the information of an author.,"[{'name': 'book_details', 'description': 'the details of the book', 'datatype': 'BookSearch'}]","[{'name': 'author_info', 'description': 'the information of the author', 'datatype': 'Author'}]",,
TripPlan,"TripPlan(city, hotel, location) -> itinerary",540,This API is to organize a travel itinerary for a trip.,This API is to organize a travel itinerary for a trip.,"[{'name': 'city', 'description': 'the city of the trip', 'datatype': 'String'}, {'name': 'hotel', 'description': 'the information of the hotel', 'datatype': 'HotelInfo'}, {'name': 'location', 'description': 'the location of the restaurant', 'datatype': 'RestaurantLocation'}]","[{'name': 'itinerary', 'description': 'the travel itinerary', 'datatype': 'String'}]",,
HotelInfo,HotelInfo(city) -> hotel_info,541,This API is to get information about a top-rated hotel in a city.,This API is to get information about a top-rated hotel in a city.,"[{'name': 'city', 'description': 'the city of the hotel', 'datatype': 'String'}]","[{'name': 'hotel_info', 'description': 'the information of the hotel', 'datatype': 'String'}]",,
RestaurantLocation,RestaurantLocation(city) -> restaurant_location,542,This API is to get the location of a renowned restaurant in a city.,This API is to get the location of a renowned restaurant in a city.,"[{'name': 'city', 'description': 'the city of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_location', 'description': 'the location of the restaurant', 'datatype': 'String'}]",,
GetCityByZip,GetCityByZip(zip_code) -> city,543,This API retrieves the city given a zip code.,This API retrieves the city given a zip code.,"[{'name': 'zip_code', 'description': 'the zip code', 'datatype': 'String'}]","[{'name': 'city', 'description': 'the city corresponding to the zip code', 'datatype': 'String'}]",,
GetOutfitStore,"GetOutfitStore(city, outfit) -> store_name",544,This API finds stores in a given city where the recommended outfit can be purchased.,This API finds stores in a given city where the recommended outfit can be purchased.,"[{'name': 'city', 'description': 'the city for which stores are to be found', 'datatype': 'String'}, {'name': 'outfit', 'description': 'the recommended outfit', 'datatype': 'String'}]","[{'name': 'store_name', 'description': 'the name of the store where the recommended outfit can be purchased', 'datatype': 'String'}]",,
GetClothing,GetClothing(weather_status) -> clothing_suggestion,545,This API suggests clothing based on the current weather status.,This API suggests clothing based on the current weather status.,"[{'name': 'weather_status', 'description': 'the current weather status', 'datatype': 'String'}]","[{'name': 'clothing_suggestion', 'description': 'the suggested clothing', 'datatype': 'String'}]",,
GetIngredients,GetIngredients(recipe_name) -> ingredients,546,This API provides the list of ingredients required for a given recipe.,This API provides the list of ingredients required for a given recipe.,"[{'name': 'recipe_name', 'description': 'the name of the recipe', 'datatype': 'String'}]","[{'name': 'ingredients', 'description': 'the list of ingredients required for the recipe', 'datatype': 'List of Strings'}]",,
CheckStock,CheckStock(product_ID) -> stock_status,547,This API checks the stock status of a product.,This API checks the stock status of a product.,"[{'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'stock_status', 'description': 'the stock status of the product', 'datatype': 'String'}]",,
PurchaseItem,"PurchaseItem(user_ID, product_ID, quantity) -> purchase_status",548,This API is to purchase a product.,This API is to purchase a product.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'product_ID', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'quantity', 'description': 'the quantity of the product to purchase', 'datatype': 'Integer'}]","[{'name': 'purchase_status', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
GetMovieTimes,GetMovieTimes(movie_name) -> showtimes,549,This API is to get the showtimes for a specific movie.,This API is to get the showtimes for a specific movie.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'showtimes', 'description': 'the showtimes for the movie', 'datatype': 'List'}]",,
BookMovieTickets,BookMovieTickets(showtime) -> ticket,550,This API is to book movie tickets for a specific showtime.,This API is to book movie tickets for a specific showtime.,"[{'name': 'showtime', 'description': 'the showtime for the movie', 'datatype': 'String'}]","[{'name': 'ticket', 'description': 'the ticket for the movie', 'datatype': 'String'}]",,
GetCityLocation,"GetCityLocation(city_name) -> latitude, longitude",551,This API is to find the geographical location of a city.,This API is to find the geographical location of a city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'latitude', 'description': 'the latitude of the city', 'datatype': 'Float'}, {'name': 'longitude', 'description': 'the longitude of the city', 'datatype': 'Float'}]",,
GetUserAge,GetUserAge(username) -> age,552,This API is to get the user's age based on their username.,This API is to get the user's age based on their username.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'age', 'description': 'the age of the user', 'datatype': 'Integer'}]",,
GetDailyCalorieIntake,GetDailyCalorieIntake(age) -> recommended daily calorie intake,553,This API is to find the appropriate daily calorie intake for someone of a specific age.,This API is to find the appropriate daily calorie intake for someone of a specific age.,"[{'name': 'age', 'description': 'the age of the person', 'datatype': 'Integer'}]","[{'name': 'recommended daily calorie intake', 'description': 'the recommended daily calorie intake for the person', 'datatype': 'Integer'}]",,
GetNutritionPlan,GetNutritionPlan(calorie_intake) -> nutrition plan,554,This API is to generate a nutrition plan based on a certain calorie intake.,This API is to generate a nutrition plan based on a certain calorie intake.,"[{'name': 'calorie_intake', 'description': 'the calorie intake for the nutrition plan', 'datatype': 'Integer'}]","[{'name': 'nutrition plan', 'description': 'the generated nutrition plan', 'datatype': 'String'}]",,
LocatePharmacy,"LocatePharmacy(city, drug) -> pharmacy_name",555,This API locates a pharmacy in a given city that has a certain drug in stock.,This API locates a pharmacy in a given city that has a certain drug in stock.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'drug', 'description': 'the name of the drug', 'datatype': 'String'}]","[{'name': 'pharmacy_name', 'description': 'the name of the pharmacy', 'datatype': 'String'}]",,
ReserveMedicine,"ReserveMedicine(pharmacy_name, drug, patient_name) -> reservation_status",556,This API allows the user to reserve a medicine in a specific pharmacy.,This API allows the user to reserve a medicine in a specific pharmacy.,"[{'name': 'pharmacy_name', 'description': 'the name of the pharmacy', 'datatype': 'String'}, {'name': 'drug', 'description': 'the name of the drug', 'datatype': 'String'}, {'name': 'patient_name', 'description': 'the name of the patient', 'datatype': 'String'}]","[{'name': 'reservation_status', 'description': 'the reservation status of the medicine', 'datatype': 'String'}]",,
GetFlightNumber,GetFlightNumber(person_ID) -> flight_number,557,This API retrieves the flight number a certain person booked.,This API retrieves the flight number a certain person booked.,"[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}]","[{'name': 'flight_number', 'description': 'the number of the flight', 'datatype': 'String'}]",,
CheckBaggageAllowance,CheckBaggageAllowance(airline) -> baggage_allowance,558,This API is to check the baggage allowance of a specific airline.,This API is to check the baggage allowance of a specific airline.,"[{'name': 'airline', 'description': 'the specific airline', 'datatype': 'String'}]","[{'name': 'baggage_allowance', 'description': 'the baggage allowance of the airline', 'datatype': 'Object'}]",,
SuggestLuggage,"SuggestLuggage(baggage_allowance, trip_duration) -> luggage_suggestions",559,This API is to suggest the type and amount of luggage based on baggage allowance and trip duration.,This API is to suggest the type and amount of luggage based on baggage allowance and trip duration.,"[{'name': 'baggage_allowance', 'description': 'the baggage allowance of the airline', 'datatype': 'Object'}, {'name': 'trip_duration', 'description': 'the duration of the trip', 'datatype': 'Integer'}]","[{'name': 'luggage_suggestions', 'description': 'the suggested type and amount of luggage', 'datatype': 'Object'}]",,
GetExchangeRate,"GetExchangeRate(from_currency, to_currency) -> exchange_rate",560,This API is to get the exchange rate from one currency to another.,This API is to get the exchange rate from one currency to another.,"[{'name': 'from_currency', 'description': 'the currency to convert from', 'datatype': 'String'}, {'name': 'to_currency', 'description': 'the currency to convert to', 'datatype': 'String'}]","[{'name': 'exchange_rate', 'description': 'the exchange rate from the from_currency to the to_currency', 'datatype': 'Float'}]",,
CalculateCost,"CalculateCost(price, exchange_rate) -> cost",561,This API is to calculate the cost of a product in a different currency.,This API is to calculate the cost of a product in a different currency.,"[{'name': 'price', 'description': 'the price of the product', 'datatype': 'Float'}, {'name': 'exchange_rate', 'description': 'the exchange rate from the currency of the price to the desired currency', 'datatype': 'Float'}]","[{'name': 'cost', 'description': 'the cost of the product in the desired currency', 'datatype': 'Float'}]",,
GetTravelTime,"GetTravelTime(source,destination) -> travel_time",562,This API is to get the approximate travel time between two locations.,This API is to get the approximate travel time between two locations.,"[{'name': 'source', 'description': 'the starting location', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}]","[{'name': 'travel_time', 'description': 'the approximate travel time between the two locations', 'datatype': 'String'}]",,
SearchMovieDatabase,SearchMovieDatabase(movie) -> movie_details,563,This API is to search for the details of a specified movie.,This API is to search for the details of a specified movie.,"[{'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'movie_details', 'description': 'the details of the movie', 'datatype': 'String'}]",,
CheckCinemaSchedule,CheckCinemaSchedule(movie_details) -> schedule,564,This API is used to check the schedule of the specified movie in the nearest cinemas.,This API is used to check the schedule of the specified movie in the nearest cinemas.,"[{'name': 'movie_details', 'description': 'the details of the movie', 'datatype': 'String'}]","[{'name': 'schedule', 'description': 'the schedule of the movie in the nearest cinemas', 'datatype': 'String'}]",,
FindBookStore,FindBookStore(book_information) -> bookstore_location,565,This API is to find a bookstore that has the searched book in stock.,This API is to find a bookstore that has the searched book in stock.,"[{'name': 'book_information', 'description': 'information about the book', 'datatype': 'String'}]","[{'name': 'bookstore_location', 'description': 'location of the bookstore', 'datatype': 'String'}]",,
GetDirections,GetDirections(destination) -> direction_information,566,This API is to generate directions to a specified destination.,This API is to generate directions to a specified destination.,"[{'name': 'destination', 'description': 'the destination to get directions to', 'datatype': 'String'}]","[{'name': 'direction_information', 'description': 'information about the directions', 'datatype': 'String'}]",,
BuyTickets,"BuyTickets(showtime, number_of_tickets) -> ticket_confirmation",567,This API is to buy a specified number of tickets for a specified showtime.,This API is to buy a specified number of tickets for a specified showtime.,"[{'name': 'showtime', 'description': 'the showtime of the movie', 'datatype': 'String'}, {'name': 'number_of_tickets', 'description': 'the number of tickets to buy', 'datatype': 'Integer'}]","[{'name': 'ticket_confirmation', 'description': 'the confirmation of the ticket purchase', 'datatype': 'String'}]",,
RestaurantReviews,RestaurantReviews(restaurant_id) -> reviewScores,568,This API finds the review scores for a specific restaurant id.,This API finds the review scores for a specific restaurant id.,"[{'name': 'restaurant_id', 'description': 'the id of the restaurant', 'datatype': 'Integer'}]","[{'name': 'reviewScores', 'description': 'the review scores of the restaurant', 'datatype': 'List'}]",,
AverageScore,AverageScore(reviewScores) -> avgScore,569,This API calculates the average score of given review scores.,This API calculates the average score of given review scores.,"[{'name': 'reviewScores', 'description': 'the review scores of the restaurant', 'datatype': 'List'}]","[{'name': 'avgScore', 'description': 'the average score of the review scores', 'datatype': 'Float'}]",,
Reservation,"Reservation(table_id, date, time) -> confirmation",570,This API reserves a table at the given date and time and returns a confirmation.,This API reserves a table at the given date and time and returns a confirmation.,"[{'name': 'table_id', 'description': 'the ID of the table', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the reservation', 'datatype': 'Date'}, {'name': 'time', 'description': 'the time of the reservation', 'datatype': 'Time'}]","[{'name': 'confirmation', 'description': 'the confirmation of the reservation', 'datatype': 'String'}]",,
GetHotelDetails,"GetHotelDetails(city, date) -> hotel",571,This API provides hotel availability and pricing in a specific city on a specific date.,This API provides hotel availability and pricing in a specific city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the hotel booking', 'datatype': 'Date'}]","[{'name': 'hotel', 'description': 'the details of the hotel', 'datatype': 'Object'}]",,
CarRentalSearch,"CarRentalSearch(city, date) -> rentalCarDetails",572,This API is used to search for cars available for rent in a certain city on a specific date.,This API is used to search for cars available for rent in a certain city on a specific date.,"[{'name': 'city', 'description': 'the city where the car rental is being searched', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date for the car rental search', 'datatype': 'Date'}]","[{'name': 'rentalCarDetails', 'description': 'the details of the available rental cars', 'datatype': 'List'}]",,
CinemaFinder,CinemaFinder(movieDetails) -> cinemaLocations,573,This API finds the cinemas where the searched movie is being shown.,This API finds the cinemas where the searched movie is being shown.,"[{'name': 'movieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]","[{'name': 'cinemaLocations', 'description': 'the locations of the cinemas', 'datatype': 'Object'}]",,
ShowtimeCheck,"ShowtimeCheck(cinemaLocations, movieDetails) -> showTimes",574,This API checks the showtimes for a specific movie at the found cinemas.,This API checks the showtimes for a specific movie at the found cinemas.,"[{'name': 'cinemaLocations', 'description': 'the locations of the cinemas', 'datatype': 'Object'}, {'name': 'movieDetails', 'description': 'the details of the movie', 'datatype': 'Object'}]","[{'name': 'showTimes', 'description': 'the showtimes of the movie at the cinemas', 'datatype': 'Object'}]",,
StoreLocator,StoreLocator(productDetails) -> storeLocations,575,This API finds the store where the searched product is available.,This API finds the store where the searched product is available.,"[{'name': 'productDetails', 'description': 'the details of the product', 'datatype': 'String'}]","[{'name': 'storeLocations', 'description': 'the locations of the stores where the product is available', 'datatype': 'String'}]",,
StoreWorkingHours,StoreWorkingHours(storeLocations) -> workingHours,576,This API provides the working hours of the selected store.,This API provides the working hours of the selected store.,"[{'name': 'storeLocations', 'description': 'the locations of the stores', 'datatype': 'String'}]","[{'name': 'workingHours', 'description': 'the working hours of the store', 'datatype': 'String'}]",,
CarRentalService,CarRentalService(hotelBookingConfirmation) -> carRentalConfirmation,577,This API books a car rental service based on the hotel booking confirmation.,This API books a car rental service based on the hotel booking confirmation.,"[{'name': 'hotelBookingConfirmation', 'description': 'the confirmation of the hotel booking', 'datatype': 'String'}]","[{'name': 'carRentalConfirmation', 'description': 'the confirmation of the car rental service', 'datatype': 'String'}]",,
GetMovieTime,GetMovieTime(movie_name) -> ShowTime,578,This API gets the showtime for a specific movie.,This API gets the showtime for a specific movie.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'ShowTime', 'description': 'the showtime for the movie', 'datatype': 'Time'}]",,
FindClothing,FindClothing(WeatherStatus) -> ClothingRecommendation,579,This API recommends the clothing based on the weather status.,This API recommends the clothing based on the weather status.,"[{'name': 'WeatherStatus', 'description': 'the weather status', 'datatype': 'String'}]","[{'name': 'ClothingRecommendation', 'description': 'the recommended clothing', 'datatype': 'String'}]",,
CheckFlight,CheckFlight(flight_number) -> ArrivalTime,580,This API checks the arrival time for a specific flight.,This API checks the arrival time for a specific flight.,"[{'name': 'flight_number', 'description': 'the number of the flight', 'datatype': 'String'}]","[{'name': 'ArrivalTime', 'description': 'the arrival time of the flight', 'datatype': 'Time'}]",,
FindTaxi,FindTaxi(ArrivalTime) -> TaxiInfo,581,This API finds a taxi available for the specific arrival time.,This API finds a taxi available for the specific arrival time.,"[{'name': 'ArrivalTime', 'description': 'the arrival time of the flight', 'datatype': 'Time'}]","[{'name': 'TaxiInfo', 'description': 'information about the available taxi', 'datatype': 'String'}]",,
CalculateFare,"CalculateFare(TaxiInfo, destination) -> Fare",582,This API calculates the fare for the taxi ride based on taxi information and destination.,This API calculates the fare for the taxi ride based on taxi information and destination.,"[{'name': 'TaxiInfo', 'description': 'information about the available taxi', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination of the taxi ride', 'datatype': 'String'}]","[{'name': 'Fare', 'description': 'the fare for the taxi ride', 'datatype': 'Float'}]",,
MovieFinderAPI,"MovieFinderAPI(Genre, Year) -> MovieList",583,This API provides a list of movies based on genre and the year of release.,This API provides a list of movies based on genre and the year of release.,"[{'name': 'Genre', 'description': 'the genre of the movie', 'datatype': 'String'}, {'name': 'Year', 'description': 'the year of release of the movie', 'datatype': 'Integer'}]","[{'name': 'MovieList', 'description': 'a list of movies', 'datatype': 'List'}]",,
MovieRatingAPI,MovieRatingAPI(Moviename) -> MovieRating,584,This API provides the rating for a specific movie.,This API provides the rating for a specific movie.,"[{'name': 'Moviename', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'MovieRating', 'description': 'the rating of the movie', 'datatype': 'Float'}]",,
MovieSuggestionAPI,"MovieSuggestionAPI(MovieList, MovieRating) -> MovieSuggestion",585,This API suggests a movie to watch based on the movie list and highest movie rating.,This API suggests a movie to watch based on the movie list and highest movie rating.,"[{'name': 'MovieList', 'description': 'a list of movies', 'datatype': 'List'}, {'name': 'MovieRating', 'description': 'the rating of the movie', 'datatype': 'Float'}]","[{'name': 'MovieSuggestion', 'description': 'the suggested movie', 'datatype': 'String'}]",,
ConvertToCurrency,"ConvertToCurrency(Price, Currency) -> Amount",586,This API converts a book price into a specific currency.,This API converts a book price into a specific currency.,"[{'name': 'Price', 'description': 'the price of the book', 'datatype': 'Float'}, {'name': 'Currency', 'description': 'the target currency', 'datatype': 'String'}]","[{'name': 'Amount', 'description': 'the converted price in the target currency', 'datatype': 'Float'}]",,
PageCount,PageCount(Title) -> Pages,587,This API fetches the number of pages in a book using its title.,This API fetches the number of pages in a book using its title.,"[{'name': 'Title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'Pages', 'description': 'the number of pages in the book', 'datatype': 'Integer'}]",,
ReadingTime,ReadingTime(Pages) -> Time,588,This API estimates the time it will take to read a book based on the number of pages.,This API estimates the time it will take to read a book based on the number of pages.,"[{'name': 'Pages', 'description': 'the number of pages in the book', 'datatype': 'Integer'}]","[{'name': 'Time', 'description': 'the estimated time to read the book', 'datatype': 'String'}]",,
OutfitSuggestion,OutfitSuggestion(WeatherCondition) -> Outfit,589,This API suggests an outfit based on the weather condition.,This API suggests an outfit based on the weather condition.,"[{'name': 'WeatherCondition', 'description': 'the current weather condition', 'datatype': 'String'}]","[{'name': 'Outfit', 'description': 'the suggested outfit', 'datatype': 'String'}]",,
Shop,Shop(Outfit) -> Stores,590,This API finds stores that have the suggested outfit in stock.,This API finds stores that have the suggested outfit in stock.,"[{'name': 'Outfit', 'description': 'the suggested outfit', 'datatype': 'String'}]","[{'name': 'Stores', 'description': 'the stores that have the suggested outfit in stock', 'datatype': 'List'}]",,
AlbumArtist,AlbumArtist(album_name) -> artist,591,This API is to query the artist who created a certain album.,This API is to query the artist who created a certain album.,"[{'name': 'album_name', 'description': 'the name of the album', 'datatype': 'String'}]","[{'name': 'artist', 'description': 'the artist who created the album', 'datatype': 'String'}]",,
ArtistGenre,ArtistGenre(artist_name) -> genre,592,This API is to query the genre of a certain artist.,This API is to query the genre of a certain artist.,"[{'name': 'artist_name', 'description': 'the name of the artist', 'datatype': 'String'}]","[{'name': 'genre', 'description': 'the genre of the artist', 'datatype': 'String'}]",,
MusicRecommend,"MusicRecommend(artist, genre, year) -> music",593,"This API recommends music based on the certain artist, genre and year.","This API recommends music based on the certain artist, genre and year.","[{'name': 'artist', 'description': 'the artist of the song', 'datatype': 'String'}, {'name': 'genre', 'description': 'the genre of the song', 'datatype': 'String'}, {'name': 'year', 'description': 'the year of the song', 'datatype': 'Integer'}]","[{'name': 'music', 'description': 'the recommended music', 'datatype': 'String'}]",,
BookAuthor,BookAuthor(book_name) -> author,594,This API is to query the author information of a book.,This API is to query the author information of a book.,"[{'name': 'book_name', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'author', 'description': 'the author of the book', 'datatype': 'String'}]",,
AuthorBirthplace,AuthorBirthplace(author) -> birthplace,595,This API retrieves the birthplace of a specific author.,This API retrieves the birthplace of a specific author.,"[{'name': 'author', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'birthplace', 'description': 'the birthplace of the author', 'datatype': 'String'}]",,
FoodCuisine,FoodCuisine(food_name) -> cuisine,596,This API retrieves the cuisine of a particular food.,This API retrieves the cuisine of a particular food.,"[{'name': 'food_name', 'description': 'the name of the food', 'datatype': 'String'}]","[{'name': 'cuisine', 'description': 'the cuisine of the food', 'datatype': 'String'}]",,
CuisineOrigin,CuisineOrigin(cuisine) -> country,597,This API provides the origin country of a specific cuisine.,This API provides the origin country of a specific cuisine.,"[{'name': 'cuisine', 'description': 'the cuisine', 'datatype': 'String'}]","[{'name': 'country', 'description': 'the origin country of the cuisine', 'datatype': 'String'}]",,
CountryCapital,CountryCapital(country) -> capital,598,This API retrieves the capital city of a specific country.,This API retrieves the capital city of a specific country.,"[{'name': 'country', 'description': 'the country', 'datatype': 'String'}]","[{'name': 'capital', 'description': 'the capital city of the country', 'datatype': 'String'}]",,
UserSearch,UserSearch(username) -> user_details,599,This API is used to find the details of the user.,This API is used to find the details of the user.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'user_details', 'description': 'the details of the user', 'datatype': 'Object'}]",,
OrderHistory,OrderHistory(user_id) -> order_history,600,This API is used to find out the order history of a user.,This API is used to find out the order history of a user.,"[{'name': 'user_id', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'order_history', 'description': 'the order history of the user', 'datatype': 'List'}]",,
OrderSearch,OrderSearch(order_id) -> order_details,601,This API is used to find the details of the specific order.,This API is used to find the details of the specific order.,"[{'name': 'order_id', 'description': 'the ID of the order', 'datatype': 'Integer'}]","[{'name': 'order_details', 'description': 'the details of the order', 'datatype': 'Object'}]",,
UserProfile,UserProfile(username) -> user profile,602,This API is used to find user's profile.,This API is used to find user's profile.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'user profile', 'description': 'the profile of the user', 'datatype': 'Object'}]",,
CalculateCalorie,CalculateCalorie(food) -> calorie,603,This API calculates calorie of a given food.,This API calculates calorie of a given food.,"[{'name': 'food', 'description': 'the name of the food', 'datatype': 'String'}]","[{'name': 'calorie', 'description': 'the calorie count of the food', 'datatype': 'Integer'}]",,
MealSuggestion,"MealSuggestion(calorie, dietary_restrictions) -> suggested meals",604,This API suggests meals based on calorie count and dietary restrictions.,This API suggests meals based on calorie count and dietary restrictions.,"[{'name': 'calorie', 'description': 'the calorie count', 'datatype': 'Integer'}, {'name': 'dietary_restrictions', 'description': 'the dietary restrictions', 'datatype': 'String'}]","[{'name': 'suggested meals', 'description': 'the suggested meals', 'datatype': 'List'}]",,
GetCurrentWeather,GetCurrentWeather(location) -> current_weather,605,This API retrieves the current weather for a given location.,This API retrieves the current weather for a given location.,"[{'name': 'location', 'description': 'the location for which to retrieve the current weather', 'datatype': 'String'}]","[{'name': 'current_weather', 'description': 'the current weather for the given location', 'datatype': 'String'}]",,
CompareWeather,"CompareWeather(current_weather, weather_forecast) -> weather_comparison",606,This API compares the current weather with the forecasted weather.,This API compares the current weather with the forecasted weather.,"[{'name': 'current_weather', 'description': 'the current weather for a location', 'datatype': 'String'}, {'name': 'weather_forecast', 'description': 'the weather forecast for the next seven days for a location', 'datatype': 'String'}]","[{'name': 'weather_comparison', 'description': 'the comparison result of the current weather with the forecasted weather', 'datatype': 'String'}]",,
RestaurantRecommend,"RestaurantRecommend(city, cuisine, weather) -> restaurants",607,This API recommends restaurants in a certain city that serve a particular cuisine depending on the weather.,This API recommends restaurants in a certain city that serve a particular cuisine depending on the weather.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'cuisine', 'description': 'the type of cuisine', 'datatype': 'String'}, {'name': 'weather', 'description': 'the weather forecast information', 'datatype': 'String'}]","[{'name': 'restaurants', 'description': 'the recommended restaurants', 'datatype': 'String'}]",,
EventSearch,"EventSearch(city, date) -> event",608,This API provides details on events happening in the specified city on a given date.,This API provides details on events happening in the specified city on a given date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the event', 'datatype': 'Date'}]","[{'name': 'event', 'description': 'the details of the event', 'datatype': 'Object'}]",,
CityGuide,"CityGuide(restaurant, event) -> guide",609,This API creates a guide containing restaurant and event information.,This API creates a guide containing restaurant and event information.,"[{'name': 'restaurant', 'description': 'the details of the restaurant', 'datatype': 'Object'}, {'name': 'event', 'description': 'the details of the event', 'datatype': 'Object'}]","[{'name': 'guide', 'description': 'the guide containing restaurant and event information', 'datatype': 'Object'}]",,
TravelPlan,"TravelPlan(weather, restaurant) -> plan",610,This API generates a travel plan based on the weather and restaurant recommendation.,This API generates a travel plan based on the weather and restaurant recommendation.,"[{'name': 'weather', 'description': 'the weather forecast', 'datatype': 'String'}, {'name': 'restaurant', 'description': 'the recommended restaurant', 'datatype': 'String'}]","[{'name': 'plan', 'description': 'the generated travel plan', 'datatype': 'String'}]",,
NewsHeadlines,NewsHeadlines(company) -> news,611,This API gives the most recent news headlines about the specified company.,This API gives the most recent news headlines about the specified company.,"[{'name': 'company', 'description': 'the name of the company', 'datatype': 'String'}]","[{'name': 'news', 'description': 'the most recent news headlines about the company', 'datatype': 'String'}]",,
InvestmentStrategy,"InvestmentStrategy(stockPrice, news) -> strategy",612,This API generates an investment strategy based on the stock price and news headlines.,This API generates an investment strategy based on the stock price and news headlines.,"[{'name': 'stockPrice', 'description': ""the current price of the company's stock"", 'datatype': 'Float'}, {'name': 'news', 'description': 'the most recent news headlines about the company', 'datatype': 'String'}]","[{'name': 'strategy', 'description': 'the generated investment strategy', 'datatype': 'String'}]",,
RestaurantRating,"RestaurantRating(city, restaurant) -> rating",613,This API gives the current rating of a restaurant in a specified city.,This API gives the current rating of a restaurant in a specified city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'restaurant', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'rating', 'description': 'the current rating of the restaurant', 'datatype': 'Float'}]",,
RestaurantPriceRange,"RestaurantPriceRange(city, restaurant) -> priceRange",614,This API gives the price range for a restaurant in the specified city.,This API gives the price range for a restaurant in the specified city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'restaurant', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'priceRange', 'description': 'the price range of the restaurant', 'datatype': 'String'}]",,
TransportFare,"TransportFare(city, destination) -> fare",615,This API gives the one-way transportation fare to the destination in a specified city.,This API gives the one-way transportation fare to the destination in a specified city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination', 'datatype': 'String'}]","[{'name': 'fare', 'description': 'the one-way transportation fare', 'datatype': 'Float'}]",,
TotalDinnerCost,"TotalDinnerCost(restaurantPriceRange, transportFare) -> totalCost",616,This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.,This API calculates the total cost of dinner including the price range of the restaurant and transportation fare.,"[{'name': 'restaurantPriceRange', 'description': 'the price range of the restaurant', 'datatype': 'String'}, {'name': 'transportFare', 'description': 'the one-way transportation fare', 'datatype': 'Float'}]","[{'name': 'totalCost', 'description': 'the total cost of dinner', 'datatype': 'Float'}]",,
ClothingSuggestion,ClothingSuggestion(weather) -> clothes,617,This API suggests suitable clothing based on the weather.,This API suggests suitable clothing based on the weather.,"[{'name': 'weather', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'clothes', 'description': 'the suggested clothing based on the weather', 'datatype': 'String'}]",,
FashionStore,"FashionStore(clothes, location) -> price",618,This API gives the price of suggested clothing in the local stores of the given location.,This API gives the price of suggested clothing in the local stores of the given location.,"[{'name': 'clothes', 'description': 'the suggested clothing', 'datatype': 'String'}, {'name': 'location', 'description': 'the location for which price is required', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the price of suggested clothing in the local stores', 'datatype': 'Float'}]",,
DistanceCalculator,"DistanceCalculator(origin, destination) -> distance",619,This API calculates the distance between two locations.,This API calculates the distance between two locations.,"[{'name': 'origin', 'description': 'the starting location', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}]","[{'name': 'distance', 'description': 'the calculated distance', 'datatype': 'Float'}]",,
TrafficEstimator,TrafficEstimator(distance) -> traffic,620,This API estimates the traffic based on the distance.,This API estimates the traffic based on the distance.,"[{'name': 'distance', 'description': 'the distance between two locations', 'datatype': 'Float'}]","[{'name': 'traffic', 'description': 'the estimated traffic', 'datatype': 'String'}]",,
TimeCalculator,"TimeCalculator(traffic, modeOfTransport) -> time",621,This API calculates the time taken to travel based on the traffic and mode of transport.,This API calculates the time taken to travel based on the traffic and mode of transport.,"[{'name': 'traffic', 'description': 'the estimated traffic', 'datatype': 'String'}, {'name': 'modeOfTransport', 'description': 'the mode of transport', 'datatype': 'String'}]","[{'name': 'time', 'description': 'the calculated time taken to travel', 'datatype': 'String'}]",,
CalculateTime,"CalculateTime(distance, speed) -> time",622,This API calculates the travel time based on distance and speed.,This API calculates the travel time based on distance and speed.,"[{'name': 'distance', 'description': 'the distance of the journey', 'datatype': 'Float'}, {'name': 'speed', 'description': 'the average speed of the journey', 'datatype': 'Integer'}]","[{'name': 'time', 'description': 'the estimated travel time', 'datatype': 'Float'}]",,
RoutePlanner,"RoutePlanner(origin, destination, distance, time) -> route",623,This API provides a travel route plan from origin to destination with distance and estimated time.,This API provides a travel route plan from origin to destination with distance and estimated time.,"[{'name': 'origin', 'description': 'the starting point of the journey', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination point of the journey', 'datatype': 'String'}, {'name': 'distance', 'description': 'the distance of the journey', 'datatype': 'Float'}, {'name': 'time', 'description': 'the estimated travel time', 'datatype': 'Float'}]","[{'name': 'route', 'description': 'the travel route plan', 'datatype': 'String'}]",,
UserLocation,UserLocation(userID) -> location,624,This API gets the location of a specific user.,This API gets the location of a specific user.,"[{'name': 'userID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'location', 'description': 'the location of the user', 'datatype': 'String'}]",,
WeatherCheck,WeatherCheck(location) -> weather,625,This API checks the weather of a specific location.,This API checks the weather of a specific location.,"[{'name': 'location', 'description': 'the location to check the weather', 'datatype': 'String'}]","[{'name': 'weather', 'description': 'the weather of the location', 'datatype': 'String'}]",,
DressSuggestion,DressSuggestion(weather) -> dress,626,This API suggests a dress based on the weather.,This API suggests a dress based on the weather.,"[{'name': 'weather', 'description': 'the weather to suggest a dress', 'datatype': 'String'}]","[{'name': 'dress', 'description': 'the suggested dress based on the weather', 'datatype': 'String'}]",,
OutdoorActivityRecommend,"OutdoorActivityRecommend(city, weather) -> activity",627,This API recommends outdoor activities based on the weather and city.,This API recommends outdoor activities based on the weather and city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'weather', 'description': 'the weather forecast for the city', 'datatype': 'String'}]","[{'name': 'activity', 'description': 'the recommended outdoor activity based on the weather and city', 'datatype': 'String'}]",,
BusSchedule,BusSchedule(bus_number) -> bus_info,628,This API is to query the schedule and route details of a specific bus.,This API is to query the schedule and route details of a specific bus.,"[{'name': 'bus_number', 'description': 'the number of the bus', 'datatype': 'String'}]","[{'name': 'bus_info', 'description': 'the schedule and route details of the bus', 'datatype': 'String'}]",,
ParkRecommend,"ParkRecommend(city, weather) -> parks",629,This API recommends parks in a city that are suitable for particular weather.,This API recommends parks in a city that are suitable for particular weather.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'weather', 'description': 'the weather condition', 'datatype': 'String'}]","[{'name': 'parks', 'description': 'the recommended parks in the city', 'datatype': 'List'}]",,
MenuGetter,MenuGetter(restaurant) -> menu,630,This API is used to get the menu from a specified restaurant.,This API is used to get the menu from a specified restaurant.,"[{'name': 'restaurant', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'menu', 'description': 'the menu of the restaurant', 'datatype': 'String'}]",,
FootballTeamInfo,FootballTeamInfo(team_name) -> team_info,631,This API is to query the detailed information of the football team.,This API is to query the detailed information of the football team.,"[{'name': 'team_name', 'description': 'the name of the football team', 'datatype': 'String'}]","[{'name': 'team_info', 'description': 'the detailed information of the football team', 'datatype': 'String'}]",,
GameSchedule,GameSchedule(team_info) -> game_schedule,632,This API provides a schedule for the team's games based on the team information.,This API provides a schedule for the team's games based on the team information.,"[{'name': 'team_info', 'description': 'the detailed information of the football team', 'datatype': 'String'}]","[{'name': 'game_schedule', 'description': ""the schedule for the team's games"", 'datatype': 'String'}]",,
TicketPrice,TicketPrice(game_schedule) -> ticket_price,633,This API calculates the ticket price based on the game schedule.,This API calculates the ticket price based on the game schedule.,"[{'name': 'game_schedule', 'description': ""the schedule for the team's games"", 'datatype': 'String'}]","[{'name': 'ticket_price', 'description': ""the price for watching the team's games"", 'datatype': 'Float'}]",,
GetMovieRatings,GetMovieRatings(movie) -> rating_info,634,This API returns the rating information of a specific movie.,This API returns the rating information of a specific movie.,"[{'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'rating_info', 'description': 'the rating information of the movie', 'datatype': 'String'}]",,
FindMovieGenre,FindMovieGenre(movie) -> genre,635,This API finds out the genre of a specific movie.,This API finds out the genre of a specific movie.,"[{'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]",,
BookDetails,BookDetails(title) -> bookInfo,636,This API returns details about a certain book.,This API returns details about a certain book.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'bookInfo', 'description': 'the information about the book', 'datatype': 'Object'}]",,
AuthorInformation,AuthorInformation(author) -> authorBio,637,This API provides information about an author.,This API provides information about an author.,"[{'name': 'author', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'authorBio', 'description': 'the information about the author', 'datatype': 'Object'}]",,
ReadingSuggestion,"ReadingSuggestion(bookInfo, authorBio) -> readingPlan",638,This API generates a reading plan based on book and author information.,This API generates a reading plan based on book and author information.,"[{'name': 'bookInfo', 'description': 'the information about the book', 'datatype': 'Object'}, {'name': 'authorBio', 'description': 'the information about the author', 'datatype': 'Object'}]","[{'name': 'readingPlan', 'description': 'the generated reading plan', 'datatype': 'Object'}]",,
HotelReservation,"HotelReservation(city, date) -> hotelInfo",639,This API returns information about hotel reservations in a certain city on a particular date.,This API returns information about hotel reservations in a certain city on a particular date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the hotel reservation', 'datatype': 'String'}]","[{'name': 'hotelInfo', 'description': 'information about hotel reservations', 'datatype': 'String'}]",,
EventSuggestions,"EventSuggestions(city, date) -> eventDetails",640,This API provides suggestions for events happening in a certain city on a specific date.,This API provides suggestions for events happening in a certain city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the event suggestions', 'datatype': 'String'}]","[{'name': 'eventDetails', 'description': 'suggestions for events happening in the city', 'datatype': 'String'}]",,
FuelConsumption,"FuelConsumption(flightID, distance) -> fuelAmount",641,This API estimates the fuel amount consumed by a certain flight on a certain distance.,This API estimates the fuel amount consumed by a certain flight on a certain distance.,"[{'name': 'flightID', 'description': 'the ID of the flight', 'datatype': 'Integer'}, {'name': 'distance', 'description': 'the distance of the flight', 'datatype': 'Float'}]","[{'name': 'fuelAmount', 'description': 'the estimated fuel amount consumed by the flight', 'datatype': 'Float'}]",,
OutfitStoreSearch,"OutfitStoreSearch(clothing, city) -> store",642,This API searches for stores that sell the recommended clothing in the city.,This API searches for stores that sell the recommended clothing in the city.,"[{'name': 'clothing', 'description': 'the recommended clothing', 'datatype': 'String'}, {'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'store', 'description': 'the stores that sell the recommended clothing', 'datatype': 'String'}]",,
CityPopulation,CityPopulation(city) -> population,643,This API retrieves the population of a given city.,This API retrieves the population of a given city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'population', 'description': 'the population of the city', 'datatype': 'Integer'}]",,
WeatherImpactOnPopulation,"WeatherImpactOnPopulation(weather, population) -> impact",644,This API estimates the impact of weather conditions on the population.,This API estimates the impact of weather conditions on the population.,"[{'name': 'weather', 'description': 'the current weather conditions', 'datatype': 'String'}, {'name': 'population', 'description': 'the population of the city', 'datatype': 'Integer'}]","[{'name': 'impact', 'description': 'the estimated impact of weather conditions on the population', 'datatype': 'String'}]",,
MovieRecommender,MovieRecommender(genre) -> movie,645,This API recommends a movie based on a specific genre.,This API recommends a movie based on a specific genre.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie', 'description': 'the recommended movie', 'datatype': 'String'}]",,
ReservationMaker,"ReservationMaker(restaurant_name, time) -> reservation",646,This API makes a reservation at a specific restaurant for a certain time.,This API makes a reservation at a specific restaurant for a certain time.,"[{'name': 'restaurant_name', 'description': 'the name of the restaurant', 'datatype': 'String'}, {'name': 'time', 'description': 'the time of the reservation', 'datatype': 'String'}]","[{'name': 'reservation', 'description': 'the reservation details', 'datatype': 'String'}]",,
MovieDetails,MovieDetails(movie_title) -> movie_id,647,This API is to get the movie ID using the movie title.,This API is to get the movie ID using the movie title.,"[{'name': 'movie_title', 'description': 'the title of the movie', 'datatype': 'String'}]","[{'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
MovieReviews,MovieReviews(movie_id) -> reviews,648,This API is to gather reviews of a movie using the movie ID.,This API is to gather reviews of a movie using the movie ID.,"[{'name': 'movie_id', 'description': 'the ID of the movie', 'datatype': 'Integer'}]","[{'name': 'reviews', 'description': 'the reviews of the movie', 'datatype': 'String'}]",,
SentimentAnalysis,SentimentAnalysis(reviews) -> sentiment,649,This API is to perform sentiment analysis on a set of reviews to determine public opinion about a movie.,This API is to perform sentiment analysis on a set of reviews to determine public opinion about a movie.,"[{'name': 'reviews', 'description': 'the set of reviews', 'datatype': 'String'}]","[{'name': 'sentiment', 'description': 'the public sentiment about the movie', 'datatype': 'String'}]",,
Bookname,Bookname(ISBN) -> title,650,This API is used to get the title of the book given its ISBN.,This API is used to get the title of the book given its ISBN.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]",,
Authorname,Authorname(title) -> author,651,This API is used to fetch the name of the author of a book given its title.,This API is used to fetch the name of the author of a book given its title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'author', 'description': 'the name of the author', 'datatype': 'String'}]",,
Publisher,Publisher(author) -> publisher,652,This API is used to get the publisher of the book given its author.,This API is used to get the publisher of the book given its author.,"[{'name': 'author', 'description': 'the name of the author', 'datatype': 'String'}]","[{'name': 'publisher', 'description': 'the publisher of the book', 'datatype': 'String'}]",,
TrainInfo,"TrainInfo(train_name, city) -> train_station",653,This API is to query the location information of the train station.,This API is to query the location information of the train station.,"[{'name': 'train_name', 'description': 'the name of the train', 'datatype': 'String'}, {'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'train_station', 'description': 'the location information of the train station', 'datatype': 'String'}]",,
StoreFinder,"StoreFinder(zip_code, store_type) -> store_location",654,This API is to find the nearest store of a given type located in the given zip code.,This API is to find the nearest store of a given type located in the given zip code.,"[{'name': 'zip_code', 'description': 'the zip code of the location', 'datatype': 'String'}, {'name': 'store_type', 'description': 'the type of the store', 'datatype': 'String'}]","[{'name': 'store_location', 'description': 'the location of the store', 'datatype': 'String'}]",,
StoreRating,StoreRating(store_location) -> store_rating,655,This API is to find the customer rating of a particular store.,This API is to find the customer rating of a particular store.,"[{'name': 'store_location', 'description': 'the location of the store', 'datatype': 'String'}]","[{'name': 'store_rating', 'description': 'the rating of the store', 'datatype': 'Float'}]",,
ProductPriceQuery,"ProductPriceQuery(store_location, product_name) -> product_price",656,This API is to find the price of a specific product in the given store.,This API is to find the price of a specific product in the given store.,"[{'name': 'store_location', 'description': 'the location of the store', 'datatype': 'String'}, {'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_price', 'description': 'the price of the product', 'datatype': 'Float'}]",,
ConnectivityCheck,"ConnectivityCheck(origin, destination) -> connection_status",657,This API checks the internet connectivity status between the origin and destination.,This API checks the internet connectivity status between the origin and destination.,"[{'name': 'origin', 'description': 'the origin location', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}]","[{'name': 'connection_status', 'description': 'the status of the internet connectivity', 'datatype': 'String'}]",,
SpeedTest,SpeedTest(connection_status) -> speed_details,658,This API performs a speed test for the connection and provides the details.,This API performs a speed test for the connection and provides the details.,"[{'name': 'connection_status', 'description': 'the status of the internet connectivity', 'datatype': 'String'}]","[{'name': 'speed_details', 'description': 'the details of the internet connection speed', 'datatype': 'String'}]",,
FileTransfer,"FileTransfer(speed_details, file_size) -> transfer_time",659,This API calculates the time required to transfer a file of a certain size over the input internet connection speed.,This API calculates the time required to transfer a file of a certain size over the input internet connection speed.,"[{'name': 'speed_details', 'description': 'the details of the internet connection speed', 'datatype': 'String'}, {'name': 'file_size', 'description': 'the size of the file to be transferred', 'datatype': 'String'}]","[{'name': 'transfer_time', 'description': 'the time required to transfer the file', 'datatype': 'String'}]",,
ActivitySuggestion,ActivitySuggestion(weather_condition) -> activity_type,660,This API suggests suitable activities based on the weather condition.,This API suggests suitable activities based on the weather condition.,"[{'name': 'weather_condition', 'description': 'the weather condition', 'datatype': 'String'}]","[{'name': 'activity_type', 'description': 'the suggested activity type', 'datatype': 'String'}]",,
PlacesRecommender,"PlacesRecommender(city, activity_type) -> place_name",661,This API recommends places to do the suggested activity in the city.,This API recommends places to do the suggested activity in the city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'activity_type', 'description': 'the suggested activity type', 'datatype': 'String'}]","[{'name': 'place_name', 'description': 'the recommended place name', 'datatype': 'String'}]",,
WeatherForecaster,"WeatherForecaster(city, date) -> weather_condition",662,This API provides the weather condition of a city on a specific date.,This API provides the weather condition of a city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date', 'datatype': 'String'}]","[{'name': 'weather_condition', 'description': 'the weather condition', 'datatype': 'String'}]",,
OutfitRecommender,OutfitRecommender(weather_condition) -> outfit,663,This API suggests an appropriate outfit based on the weather condition.,This API suggests an appropriate outfit based on the weather condition.,"[{'name': 'weather_condition', 'description': 'the weather condition', 'datatype': 'String'}]","[{'name': 'outfit', 'description': 'the recommended outfit', 'datatype': 'String'}]",,
ShoppingAssistant,"ShoppingAssistant(outfit, city) -> store_address",664,This API locates the nearest store where the recommended outfit can be purchased.,This API locates the nearest store where the recommended outfit can be purchased.,"[{'name': 'outfit', 'description': 'the recommended outfit', 'datatype': 'String'}, {'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'store_address', 'description': 'the address of the nearest store', 'datatype': 'String'}]",,
CarRentalAvailability,"CarRentalAvailability(city, date) -> available_cars",665,This API provides information about the availability of rental cars in a city on a certain date.,This API provides information about the availability of rental cars in a city on a certain date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for car rental availability', 'datatype': 'String'}]","[{'name': 'available_cars', 'description': 'the information about the availability of rental cars in the city on the specified date', 'datatype': 'String'}]",,
ConferenceDetails,ConferenceDetails(city) -> conferences,666,This API provides information about conferences in a city.,This API provides information about conferences in a city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'conferences', 'description': 'the information about conferences in the city', 'datatype': 'String'}]",,
BusinessTripPlanner,"BusinessTripPlanner(weather, available_cars, conferences) -> business_plan",667,"This API helps in planning your business trip by combining weather, car rental, and conference information.","This API helps in planning your business trip by combining weather, car rental, and conference information.","[{'name': 'weather', 'description': 'the weather forecast for the city on the specified date', 'datatype': 'String'}, {'name': 'available_cars', 'description': 'the information about the availability of rental cars in the city on the specified date', 'datatype': 'String'}, {'name': 'conferences', 'description': 'the information about conferences in the city', 'datatype': 'String'}]","[{'name': 'business_plan', 'description': 'the business trip plan combining weather, car rental, and conference information', 'datatype': 'String'}]",,
OutdoorActivities,"OutdoorActivities(city, weather_forecast) -> activities",668,This API provides information about possible outdoor activities in a city based on the weather forecast.,This API provides information about possible outdoor activities in a city based on the weather forecast.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'weather_forecast', 'description': 'the weather forecast for the city', 'datatype': 'String'}]","[{'name': 'activities', 'description': 'the possible outdoor activities in the city based on the weather forecast', 'datatype': 'String'}]",,
RestaurantSuggestion,"RestaurantSuggestion(city, food_preference) -> suggested_restaurant",669,This API provides suggestions for restaurants based on food preferences in a city.,This API provides suggestions for restaurants based on food preferences in a city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'food_preference', 'description': 'the food preference', 'datatype': 'String'}]","[{'name': 'suggested_restaurant', 'description': 'the suggested restaurant based on food preferences in the city', 'datatype': 'String'}]",,
TripPlanner,"TripPlanner(weather_forecast, activities, suggested_restaurant) -> trip_plan",670,"This API helps in planning your trip by combining weather forecast, outdoor activities and restaurant suggestions.","This API helps in planning your trip by combining weather forecast, outdoor activities and restaurant suggestions.","[{'name': 'weather_forecast', 'description': 'the weather forecast for the city', 'datatype': 'String'}, {'name': 'activities', 'description': 'the possible outdoor activities in the city based on the weather forecast', 'datatype': 'String'}, {'name': 'suggested_restaurant', 'description': 'the suggested restaurant based on food preferences in the city', 'datatype': 'String'}]","[{'name': 'trip_plan', 'description': 'the trip plan combining weather forecast, outdoor activities and restaurant suggestions', 'datatype': 'String'}]",,
GetAuthor,GetAuthor(book_id) -> author_name,671,This API is used to get the author name of a specific book.,This API is used to get the author name of a specific book.,"[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'author_name', 'description': 'the name of the author', 'datatype': 'String'}]",,
GetFlightID,"GetFlightID(flight_options, weather_status) -> flight_id",672,This API returns the flight id considering the weather status.,This API returns the flight id considering the weather status.,"[{'name': 'flight_options', 'description': 'the available flight options', 'datatype': 'List'}, {'name': 'weather_status', 'description': 'the current weather status', 'datatype': 'String'}]","[{'name': 'flight_id', 'description': 'the id of the flight', 'datatype': 'String'}]",,
SearchFare,"SearchFare(src, dest, date) -> fare_id",673,This API is used to search for the fare between source and destination on a particular date.,This API is used to search for the fare between source and destination on a particular date.,"[{'name': 'src', 'description': 'the source location', 'datatype': 'String'}, {'name': 'dest', 'description': 'the destination location', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of travel', 'datatype': 'String'}]","[{'name': 'fare_id', 'description': 'the ID of the fare', 'datatype': 'Integer'}]",,
CheckDiscount,"CheckDiscount(coupon, fare_id) -> discount_amount",674,This API is used to check the discount available on a particular fare using a coupon.,This API is used to check the discount available on a particular fare using a coupon.,"[{'name': 'coupon', 'description': 'the coupon code', 'datatype': 'String'}, {'name': 'fare_id', 'description': 'the ID of the fare', 'datatype': 'Integer'}]","[{'name': 'discount_amount', 'description': 'the amount of discount', 'datatype': 'Float'}]",,
CalculateFinalFare,"CalculateFinalFare(fare_id, discount_amount) -> final_fare",675,This API calculates the final fare after applying the discount.,This API calculates the final fare after applying the discount.,"[{'name': 'fare_id', 'description': 'the ID of the fare', 'datatype': 'Integer'}, {'name': 'discount_amount', 'description': 'the amount of discount', 'datatype': 'Float'}]","[{'name': 'final_fare', 'description': 'the final fare after applying the discount', 'datatype': 'Float'}]",,
SearchProduct,SearchProduct(productId) -> product details,676,This API is to search for a product based on its ID.,This API is to search for a product based on its ID.,"[{'name': 'productId', 'description': 'the ID of the product', 'datatype': 'String'}]","[{'name': 'product details', 'description': 'the details of the product', 'datatype': 'Object'}]",,
GetLocation,GetLocation(product) -> location,677,This API is to fetch the location where the product is available.,This API is to fetch the location where the product is available.,"[{'name': 'product', 'description': 'the product details', 'datatype': 'Object'}]","[{'name': 'location', 'description': 'the location where the product is available', 'datatype': 'String'}]",,
GetOutdoorActivity,GetOutdoorActivity(weather_forecast) -> activity,678,This API is to suggest an outdoor activity based on the weather forecast.,This API is to suggest an outdoor activity based on the weather forecast.,"[{'name': 'weather_forecast', 'description': 'the forecast of the weather', 'datatype': 'String'}]","[{'name': 'activity', 'description': 'the suggested outdoor activity', 'datatype': 'String'}]",,
IdentifyBook,IdentifyBook(title) -> book_details,679,This API is to find the book details when the user specifies a book title.,This API is to find the book details when the user specifies a book title.,"[{'name': 'title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'book_details', 'description': 'the details of the book', 'datatype': 'Object'}]",,
BookStore,BookStore(book_id) -> availability,680,This API checks the availability of the book in the store given a book id.,This API checks the availability of the book in the store given a book id.,"[{'name': 'book_id', 'description': 'the id of the book', 'datatype': 'Integer'}]","[{'name': 'availability', 'description': 'the availability of the book', 'datatype': 'String'}]",,
SearchFilm,SearchFilm(title) -> film_id,681,This API is to find the film id when the user specifies a film title.,This API is to find the film id when the user specifies a film title.,"[{'name': 'title', 'description': 'the title of the film', 'datatype': 'String'}]","[{'name': 'film_id', 'description': 'the id of the film', 'datatype': 'Integer'}]",,
ShowTimes,"ShowTimes(film_id, date) -> show_times",682,This API returns the available show times for a specific film on a specific date.,This API returns the available show times for a specific film on a specific date.,"[{'name': 'film_id', 'description': 'the id of the film', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the show', 'datatype': 'String'}]","[{'name': 'show_times', 'description': 'the available show times', 'datatype': 'List'}]",,
BookMovie,"BookMovie(film_id, date, show_time) -> booking confirmation",683,"This API is to book movie tickets for a specific film, date and show time.","This API is to book movie tickets for a specific film, date and show time.","[{'name': 'film_id', 'description': 'the id of the film', 'datatype': 'Integer'}, {'name': 'date', 'description': 'the date of the show', 'datatype': 'String'}, {'name': 'show_time', 'description': 'the show time', 'datatype': 'String'}]","[{'name': 'booking confirmation', 'description': 'the confirmation of the booking', 'datatype': 'String'}]",,
GetBookISBN,GetBookISBN(book_title) -> ISBN,684,This API retrieves the ISBN of a specific book title.,This API retrieves the ISBN of a specific book title.,"[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]","[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]",,
GetAvailability,GetAvailability(ISBN) -> availability,685,This API checks the availability of a book by its ISBN.,This API checks the availability of a book by its ISBN.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'availability', 'description': 'the availability of the book', 'datatype': 'String'}]",,
FetchStockData,FetchStockData(stock_symbol) -> stock_data,686,This API is to retrieve real-time stock data for a given stock symbol.,This API is to retrieve real-time stock data for a given stock symbol.,"[{'name': 'stock_symbol', 'description': 'the symbol of the stock', 'datatype': 'String'}]","[{'name': 'stock_data', 'description': 'the real-time stock data', 'datatype': 'Object'}]",,
BasicDataAnalysis,BasicDataAnalysis(stock_data) -> analyzed_data,687,This API performs a basic data analysis on the input stock data.,This API performs a basic data analysis on the input stock data.,"[{'name': 'stock_data', 'description': 'the real-time stock data', 'datatype': 'Object'}]","[{'name': 'analyzed_data', 'description': 'the analyzed stock data', 'datatype': 'Object'}]",,
GenerateReport,"GenerateReport(analyzed_data, template) -> report",688,This API generates a stock analysis report based on the analyzed data and a specific template.,This API generates a stock analysis report based on the analyzed data and a specific template.,"[{'name': 'analyzed_data', 'description': 'the analyzed stock data', 'datatype': 'Object'}, {'name': 'template', 'description': 'the specific template for the report', 'datatype': 'String'}]","[{'name': 'report', 'description': 'the generated stock analysis report', 'datatype': 'Object'}]",,
FetchProductDetails,FetchProductDetails(product_id) -> product_info,689,This API fetches the product details using product id.,This API fetches the product details using product id.,"[{'name': 'product_id', 'description': 'the id of the product', 'datatype': 'String'}]","[{'name': 'product_info', 'description': 'the details of the product', 'datatype': 'Object'}]",,
CreateShoppingCart,"CreateShoppingCart(user_id, product_info) -> shopping_cart_id",690,This API creates a shopping cart with the provided user id and product info.,This API creates a shopping cart with the provided user id and product info.,"[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'String'}, {'name': 'product_info', 'description': 'the details of the product', 'datatype': 'Object'}]","[{'name': 'shopping_cart_id', 'description': 'the id of the shopping cart', 'datatype': 'String'}]",,
CheckoutShoppingCart,CheckoutShoppingCart(shopping_cart_id) -> checkout_status,691,This API checks out the shopping cart and completes the purchase.,This API checks out the shopping cart and completes the purchase.,"[{'name': 'shopping_cart_id', 'description': 'the id of the shopping cart', 'datatype': 'String'}]","[{'name': 'checkout_status', 'description': 'the status of the checkout', 'datatype': 'String'}]",,
GetPassengerId,"GetPassengerId(name, dob) -> passenger_id",692,This API is to get the passenger id using the name and date of birth.,This API is to get the passenger id using the name and date of birth.,"[{'name': 'name', 'description': 'the name of the passenger', 'datatype': 'String'}, {'name': 'dob', 'description': 'the date of birth of the passenger', 'datatype': 'Date'}]","[{'name': 'passenger_id', 'description': 'the ID of the passenger', 'datatype': 'Integer'}]",,
SearchLocation,SearchLocation(person) -> location,693,This API is to find the location based on person's name.,This API is to find the location based on person's name.,"[{'name': 'person', 'description': 'the name of the person', 'datatype': 'String'}]","[{'name': 'location', 'description': 'the location of the person', 'datatype': 'String'}]",,
SuggestClothing,SuggestClothing(weather_status) -> clothing_suggestion,694,This API is to suggest clothing based on the weather status.,This API is to suggest clothing based on the weather status.,"[{'name': 'weather_status', 'description': 'the status of the weather', 'datatype': 'String'}]","[{'name': 'clothing_suggestion', 'description': 'suggested clothing based on the weather status', 'datatype': 'String'}]",,
BookAvailability,BookAvailability(book_id) -> availability,695,This API is to check the availability of a book by its ID.,This API is to check the availability of a book by its ID.,"[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'availability', 'description': 'the availability status of the book', 'datatype': 'String'}]",,
BookLocation,BookLocation(book_availability) -> location,696,This API is to find the location of a book in the library.,This API is to find the location of a book in the library.,"[{'name': 'book_availability', 'description': 'the availability status of the book', 'datatype': 'String'}]","[{'name': 'location', 'description': 'the location of the book in the library', 'datatype': 'String'}]",,
FilmFinder,"FilmFinder(genre, location) -> film_id",697,This API is to find the film ID based on genre and location.,This API is to find the film ID based on genre and location.,"[{'name': 'genre', 'description': 'the genre of the film', 'datatype': 'String'}, {'name': 'location', 'description': 'the location where film is played', 'datatype': 'String'}]","[{'name': 'film_id', 'description': 'the ID of the film', 'datatype': 'Integer'}]",,
TicketBooking,"TicketBooking(eventDetails, num_of_tickets) -> booking confirmation.",698,This API is to book tickets for an event.,This API is to book tickets for an event.,"[{'name': 'eventDetails', 'description': 'the details of the event', 'datatype': 'String'}, {'name': 'num_of_tickets', 'description': 'the number of tickets to book', 'datatype': 'Integer'}]","[{'name': 'booking confirmation', 'description': 'the confirmation of the booking', 'datatype': 'String'}]",,
ReservationBooking,"ReservationBooking(hotelDetails, restaurantLocations) -> booking status",699,This API is to book a hotel and a restaurant.,This API is to book a hotel and a restaurant.,"[{'name': 'hotelDetails', 'description': 'the details of the hotel', 'datatype': 'Object'}, {'name': 'restaurantLocations', 'description': 'the locations of the restaurants', 'datatype': 'Object'}]","[{'name': 'booking status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
WeatherAPI,WeatherAPI(City) -> WeatherConditions,700,This API is to get the current weather conditions of a specified city.,This API is to get the current weather conditions of a specified city.,"[{'name': 'City', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'WeatherConditions', 'description': 'the current weather conditions of the city', 'datatype': 'String'}]",,
PackingListGenerator,"PackingListGenerator(numberOfDays, Clothes) -> Packing List",701,This API is to generate a packing list for a trip.,This API is to generate a packing list for a trip.,"[{'name': 'numberOfDays', 'description': 'the number of the days of the trip', 'datatype': 'String'}, {'name': 'Clothes', 'description': 'the suggestion of clothes', 'datatype': 'String'}]","[{'name': 'Packing List', 'description': 'the generated packing list for the trip', 'datatype': 'String'}]",,
IPGeolocation,IPGeolocation(ip) -> location,702,This API is to get the location based on the IP address.,This API is to get the location based on the IP address.,"[{'name': 'ip', 'description': 'the IP address', 'datatype': 'String'}]","[{'name': 'location', 'description': 'the location of the IP address', 'datatype': 'String'}]",,
AuthorDetails,AuthorDetails(book_details) -> author_info,703,This API is to get the details of an author from a book.,This API is to get the details of an author from a book.,"[{'name': 'book_details', 'description': 'the details of the book', 'datatype': 'Object'}]","[{'name': 'author_info', 'description': 'the information of the author', 'datatype': 'Object'}]",,
TopBooks,"TopBooks(author_info, num_of_books) -> Top_Books",704,This API is to get the top rated books of an author.,This API is to get the top rated books of an author.,"[{'name': 'author_info', 'description': 'the information of the author', 'datatype': 'Object'}, {'name': 'num_of_books', 'description': 'the number of top rated books to retrieve', 'datatype': 'Integer'}]","[{'name': 'Top_Books', 'description': 'the list of top rated books of the author', 'datatype': 'List'}]",,
DirectorDetails,DirectorDetails(movie_info) -> director_info,705,This API is to get the details about a director based on a movie's information.,This API is to get the details about a director based on a movie's information.,"[{'name': 'movie_info', 'description': 'The information about the movie, including director information', 'datatype': 'Object'}]","[{'name': 'director_info', 'description': 'The information about the director', 'datatype': 'Object'}]",,
TopMovies,"TopMovies(director_info, num_of_movies) -> top_movies",706,This API is to get the top movies directed by a specific director.,This API is to get the top movies directed by a specific director.,"[{'name': 'director_info', 'description': 'The information about the director', 'datatype': 'Object'}, {'name': 'num_of_movies', 'description': 'The number of top movies to recommend', 'datatype': 'Integer'}]","[{'name': 'top_movies', 'description': 'A list of the top movies directed by the director', 'datatype': 'List'}]",,
RealEstatePrice,"RealEstatePrice(city, propertyType) -> propertyPrice",707,This API is to get the price of a specific type of property in a specific city.,This API is to get the price of a specific type of property in a specific city.,"[{'name': 'city', 'description': 'the city where the property is located', 'datatype': 'String'}, {'name': 'propertyType', 'description': 'the type of the property', 'datatype': 'String'}]","[{'name': 'propertyPrice', 'description': 'the price of the specific property', 'datatype': 'Float'}]",,
MortgageCalculator,"MortgageCalculator(propertyPrice, downPayment, interestRate, term) -> mortgagePayment",708,"This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.","This API is to calculate the mortgage payment based on property price, down payment, interest rate and term.","[{'name': 'propertyPrice', 'description': 'the price of the property', 'datatype': 'Float'}, {'name': 'downPayment', 'description': 'the down payment for the property', 'datatype': 'Float'}, {'name': 'interestRate', 'description': 'the interest rate of the mortgage', 'datatype': 'Float'}, {'name': 'term', 'description': 'the term of the mortgage', 'datatype': 'Integer'}]","[{'name': 'mortgagePayment', 'description': 'the mortgage payment', 'datatype': 'Float'}]",,
TaxEstimator,"TaxEstimator(propertyPrice, city) -> tax",709,This API is to estimate the tax based on property price and city.,This API is to estimate the tax based on property price and city.,"[{'name': 'propertyPrice', 'description': 'the price of the property', 'datatype': 'Float'}, {'name': 'city', 'description': 'the city where the property is located', 'datatype': 'String'}]","[{'name': 'tax', 'description': 'the estimated tax', 'datatype': 'Float'}]",,
PropertyOwnershipCost,"PropertyOwnershipCost(mortgagePayment, tax) -> ownershipCost",710,This API is to calculate the overall cost of property ownership including mortgage payment and tax.,This API is to calculate the overall cost of property ownership including mortgage payment and tax.,"[{'name': 'mortgagePayment', 'description': 'the mortgage payment', 'datatype': 'Float'}, {'name': 'tax', 'description': 'the property tax', 'datatype': 'Float'}]","[{'name': 'ownershipCost', 'description': 'the overall cost of property ownership', 'datatype': 'Float'}]",,
HotelAvailability,"HotelAvailability(city, date) -> hotel",711,This API is to check the availability of hotels in a specific city on a specific date.,This API is to check the availability of hotels in a specific city on a specific date.,"[{'name': 'city', 'description': 'the city where the hotel is located', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for checking the hotel availability', 'datatype': 'Date'}]","[{'name': 'hotel', 'description': 'the available hotels', 'datatype': 'String'}]",,
BookTrip,"BookTrip(flight, hotel) -> booking status.",712,This API is to book a trip including flight and hotel.,This API is to book a trip including flight and hotel.,"[{'name': 'flight', 'description': 'the flight to be booked', 'datatype': 'String'}, {'name': 'hotel', 'description': 'the hotel to be booked', 'datatype': 'String'}]","[{'name': 'booking status', 'description': 'the status of the booking', 'datatype': 'String'}]",,
FindFlights,"FindFlights(city1, city2, date) -> flight",713,This API is to find flights between two cities on a specific date.,This API is to find flights between two cities on a specific date.,"[{'name': 'city1', 'description': 'the departure city', 'datatype': 'String'}, {'name': 'city2', 'description': 'the destination city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of the flight', 'datatype': 'Date'}]","[{'name': 'flight', 'description': 'the flight details', 'datatype': 'String'}]",,
FlightDetails,"FlightDetails(destination, departure_date) -> flight_info",714,This API is to get the flight details.,This API is to get the flight details.,"[{'name': 'destination', 'description': 'The destination of the trip', 'datatype': 'String'}, {'name': 'departure_date', 'description': 'The departure date of the flight', 'datatype': 'Date'}]","[{'name': 'flight_info', 'description': 'Information of the flight to the destination on the specified date', 'datatype': 'Object'}]",,
ActivityPlanning,"ActivityPlanning(hotel_reservation, destination) -> activity_plan",715,This API is to plan activities.,This API is to plan activities.,"[{'name': 'hotel_reservation', 'description': 'Information of the hotel reservation', 'datatype': 'Object'}, {'name': 'destination', 'description': 'The destination of the trip', 'datatype': 'String'}]","[{'name': 'activity_plan', 'description': 'Plan of activities at the destination', 'datatype': 'Object'}]",,
ClothingSuggestionAPI,ClothingSuggestionAPI(weather) -> clothing_info,716,This API is to recommend clothing based on the weather.,This API is to recommend clothing based on the weather.,"[{'name': 'weather', 'description': 'the weather condition', 'datatype': 'String'}]","[{'name': 'clothing_info', 'description': 'the information of recommended clothing', 'datatype': 'String'}]",,
StoreSearchAPI,"StoreSearchAPI(city, clothing_info) -> store_info",717,This API is to find the store based on city and recommended clothing.,This API is to find the store based on city and recommended clothing.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'clothing_info', 'description': 'the information of recommended clothing', 'datatype': 'String'}]","[{'name': 'store_info', 'description': 'the information of the store', 'datatype': 'String'}]",,
BuyOnlineAPI,BuyOnlineAPI(store_info) -> purchase_status,718,This API is to purchase clothing online from the recommended store.,This API is to purchase clothing online from the recommended store.,"[{'name': 'store_info', 'description': 'the information of the store', 'datatype': 'String'}]","[{'name': 'purchase_status', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
BookValue,"BookValue(ISBN, authorDetails) -> book_value",719,This API is to get the value of a book.,This API is to get the value of a book.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}, {'name': 'authorDetails', 'description': 'the details of the author of the book', 'datatype': 'String'}]","[{'name': 'book_value', 'description': 'the value of the book', 'datatype': 'Float'}]",,
MovieRecommendation,MovieRecommendation(genre) -> movie_name,720,This API is to recommend a movie based on genre.,This API is to recommend a movie based on genre.,"[{'name': 'genre', 'description': 'the genre of the movie', 'datatype': 'String'}]","[{'name': 'movie_name', 'description': 'the name of the recommended movie', 'datatype': 'String'}]",,
GameDetails,GameDetails(game_title) -> game_id,721,This API is to get the details of a game using the game title.,This API is to get the details of a game using the game title.,"[{'name': 'game_title', 'description': 'The title of the video game', 'datatype': 'String'}]","[{'name': 'game_id', 'description': 'The unique identifier of the game', 'datatype': 'Integer'}]",,
GameReviews,GameReviews(game_id) -> reviews,722,This API is to get the reviews of a game using the game id.,This API is to get the reviews of a game using the game id.,"[{'name': 'game_id', 'description': 'The unique identifier of the game', 'datatype': 'Integer'}]","[{'name': 'reviews', 'description': 'The reviews of the game', 'datatype': 'String'}]",,
DocumentaryDetails,DocumentaryDetails(doc_title) -> doc_id,723,This API is to get details of a documentary.,This API is to get details of a documentary.,"[{'name': 'doc_title', 'description': 'the title of the documentary', 'datatype': 'String'}]","[{'name': 'doc_id', 'description': 'the ID of the documentary', 'datatype': 'Integer'}]",,
DocumentaryReviews,DocumentaryReviews(doc_id) -> reviews,724,This API is to retrieve reviews of a documentary.,This API is to retrieve reviews of a documentary.,"[{'name': 'doc_id', 'description': 'the ID of the documentary', 'datatype': 'Integer'}]","[{'name': 'reviews', 'description': 'the reviews of the documentary', 'datatype': 'String'}]",,
BestTravelTime,"BestTravelTime(weather_condition, attraction) -> best_time",725,This API is to get the most favourable time to visit a certain attraction given the weather condition.,This API is to get the most favourable time to visit a certain attraction given the weather condition.,"[{'name': 'weather_condition', 'description': 'the weather condition of the city where the attraction is located', 'datatype': 'String'}, {'name': 'attraction', 'description': 'the name of the attraction', 'datatype': 'String'}]","[{'name': 'best_time', 'description': 'the most favourable time to visit the attraction', 'datatype': 'String'}]",,
AuthorOfBook,AuthorOfBook(book_id) -> author_id,726,This API is to find the author's ID by the book's ID.,This API is to find the author's ID by the book's ID.,"[{'name': 'book_id', 'description': 'the ID of the book', 'datatype': 'Integer'}]","[{'name': 'author_id', 'description': 'the ID of the author', 'datatype': 'Integer'}]",,
BooksByAuthor,BooksByAuthor(author_id) -> book_list,727,This API is to find the books written by the author.,This API is to find the books written by the author.,"[{'name': 'author_id', 'description': 'the ID of the author', 'datatype': 'Integer'}]","[{'name': 'book_list', 'description': 'the list of books written by the author', 'datatype': 'List of Strings'}]",,
MovieTheaterLocator,MovieTheaterLocator(city) -> theater_address,728,This API locates the movie theaters in a given city.,This API locates the movie theaters in a given city.,"[{'name': 'city', 'description': 'the city where the user wants to find a movie theater', 'datatype': 'String'}]","[{'name': 'theater_address', 'description': 'the address of the located movie theater in the given city', 'datatype': 'String'}]",,
GetMovieTheater,GetMovieTheater(movie_name) -> theater_name,729,This API is to get the theater where the movie is showing.,This API is to get the theater where the movie is showing.,"[{'name': 'movie_name', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'theater_name', 'description': 'the name of the theater', 'datatype': 'String'}]",,
GetTheaterLocation,GetTheaterLocation(theater_name) -> location,730,This API is to get the location of the theater.,This API is to get the location of the theater.,"[{'name': 'theater_name', 'description': 'the name of the theater', 'datatype': 'String'}]","[{'name': 'location', 'description': 'the location of the theater', 'datatype': 'String'}]",,
WeatherInCity,"WeatherInCity(city, date) -> weather",731,This API is to determine the weather in a specific city.,This API is to determine the weather in a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for weather forecast', 'datatype': 'Date'}]","[{'name': 'weather', 'description': 'the weather condition in the city', 'datatype': 'String'}]",,
NearbyHospitalQuery,NearbyHospitalQuery(coordinate_position) -> hospital,732,This API is to find a hospital near a given location.,This API is to find a hospital near a given location.,"[{'name': 'coordinate_position', 'description': 'the coordinates of the location', 'datatype': 'Coordinate'}]","[{'name': 'hospital', 'description': 'the name of the nearby hospital', 'datatype': 'String'}]",,
DoctorAvailabilityQuery,"DoctorAvailabilityQuery(hospital, specialty) -> availability",733,This API is to check the availability of a doctor at a given hospital.,This API is to check the availability of a doctor at a given hospital.,"[{'name': 'hospital', 'description': 'the name of the hospital', 'datatype': 'String'}, {'name': 'specialty', 'description': 'the specialty of the doctor', 'datatype': 'String'}]","[{'name': 'availability', 'description': 'the availability of the doctor', 'datatype': 'Boolean'}]",,
NearbyFarmersMarketQuery,NearbyFarmersMarketQuery(coordinate_position) -> farmers_market,734,This API is to find a nearby farmers market based on the coordinate position of a grocery store.,This API is to find a nearby farmers market based on the coordinate position of a grocery store.,"[{'name': 'coordinate_position', 'description': 'the coordinate position of the grocery store', 'datatype': 'CoordinatePosition'}]","[{'name': 'farmers_market', 'description': 'the nearby farmers market', 'datatype': 'FarmersMarket'}]",,
GroceryStoreDetail,"GroceryStoreDetail(store_name, city) -> coordinate_position",735,This API is to get the details of a grocery store.,This API is to get the details of a grocery store.,"[{'name': 'store_name', 'description': 'the name of the grocery store', 'datatype': 'String'}, {'name': 'city', 'description': 'the city where the grocery store is located', 'datatype': 'String'}]","[{'name': 'coordinate_position', 'description': 'the coordinate position of the grocery store', 'datatype': 'CoordinatePosition'}]",,
ProduceAvailabilityQuery,"ProduceAvailabilityQuery(farmers_market, produce_type) -> availability_status",736,This API is to check the availability of a produce at a farmers market.,This API is to check the availability of a produce at a farmers market.,"[{'name': 'farmers_market', 'description': 'the farmers market to check', 'datatype': 'FarmersMarket'}, {'name': 'produce_type', 'description': 'the type of produce to check', 'datatype': 'String'}]","[{'name': 'availability_status', 'description': 'the availability status of the produce', 'datatype': 'String'}]",,
OpenVenues,"OpenVenues(city, time) -> venues",737,This API is to get a list of open venues in a specific city at the current time.,This API is to get a list of open venues in a specific city at the current time.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'time', 'description': 'the current time in the city', 'datatype': 'Time'}]","[{'name': 'venues', 'description': 'a list of open venues in the city', 'datatype': 'List'}]",,
MusicConcert,MusicConcert(venue) -> concerts,738,This API is to get a list of music concerts happening in specific venues.,This API is to get a list of music concerts happening in specific venues.,"[{'name': 'venue', 'description': 'the name of the venue', 'datatype': 'String'}]","[{'name': 'concerts', 'description': 'a list of music concerts happening in the venue', 'datatype': 'List'}]",,
HotelInformation,HotelInformation(city) -> hotelDetails,739,This API provides information about hotels in a given city.,This API provides information about hotels in a given city.,"[{'name': 'city', 'description': 'The city where the user wants to find a hotel', 'datatype': 'String'}]","[{'name': 'hotelDetails', 'description': 'Details of selected hotels in the specified city', 'datatype': 'String'}]",,
TravelItinerary,"TravelItinerary(hotelDetails, restaurantChoices) -> itinerary",740,This API creates a travel itinerary based on hotel details and restaurant choices.,This API creates a travel itinerary based on hotel details and restaurant choices.,"[{'name': 'hotelDetails', 'description': 'Details of the selected hotels', 'datatype': 'String'}, {'name': 'restaurantChoices', 'description': 'List of selected restaurants', 'datatype': 'String'}]","[{'name': 'itinerary', 'description': 'A travel itinerary based on the provided hotel details and restaurant choices', 'datatype': 'String'}]",,
WeatherQuery,"WeatherQuery(city, date) -> weather",741,This API is to provide the weather in a specific city on a specific date.,This API is to provide the weather in a specific city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date to check the weather', 'datatype': 'Date'}]","[{'name': 'weather', 'description': 'the weather of the city on the specific date', 'datatype': 'String'}]",,
WeatherInformation,"WeatherInformation(city, date) -> weather_info",742,This API is to provide weather information for a specific city and date.,This API is to provide weather information for a specific city and date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the date for which weather information is required', 'datatype': 'Date'}]","[{'name': 'weather_info', 'description': 'the weather information for the specified city and date', 'datatype': 'String'}]",,
BookStoreLocator,BookStoreLocator(city) -> bookstore_address,743,This API is to find the closest bookstore in a specific city.,This API is to find the closest bookstore in a specific city.,"[{'name': 'city', 'description': 'the city where the user is currently located', 'datatype': 'String'}]","[{'name': 'bookstore_address', 'description': 'the address of the nearest bookstore', 'datatype': 'String'}]",,
BookRecommender,BookRecommender(bookstore_address) -> book_genre,744,This API is to recommend books based on the bookstore location.,This API is to recommend books based on the bookstore location.,"[{'name': 'bookstore_address', 'description': 'the address of the bookstore', 'datatype': 'String'}]","[{'name': 'book_genre', 'description': 'the genre of the books', 'datatype': 'String'}]",,
BestSeller,BestSeller(book_genre) -> best_selling_book,745,This API is to find the most popular book in a specific genre.,This API is to find the most popular book in a specific genre.,"[{'name': 'book_genre', 'description': 'the genre of the book', 'datatype': 'String'}]","[{'name': 'best_selling_book', 'description': 'the most popular book in a specific genre', 'datatype': 'String'}]",,
Username2Id,Username2Id(username) -> user_id,746,This API converts username to user id.,This API converts username to user id.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'Integer'}]",,
Id2AllergyList,Id2AllergyList(user_id) -> allergy_list,747,This API finds the allergy list of a user based on its Id.,This API finds the allergy list of a user based on its Id.,"[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'Integer'}]","[{'name': 'allergy_list', 'description': 'the list of allergies of the user', 'datatype': 'List'}]",,
Productname2Ingredients,Productname2Ingredients(product_name) -> ingredients,748,This API finds the ingredients of a product.,This API finds the ingredients of a product.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'ingredients', 'description': 'the list of ingredients of the product', 'datatype': 'List'}]",,
Disease2Symptoms,Disease2Symptoms(disease_name) -> symptoms_list,749,This API is to convert a disease name to its symptom list.,This API is to convert a disease name to its symptom list.,"[{'name': 'disease_name', 'description': 'the name of the disease', 'datatype': 'String'}]","[{'name': 'symptoms_list', 'description': 'a list of symptoms related to the disease', 'datatype': 'List'}]",,
Symptoms2Diagnosis,Symptoms2Diagnosis(symptoms) -> potential_diseases,750,This API is to convert a list of symptoms to potential related diseases.,This API is to convert a list of symptoms to potential related diseases.,"[{'name': 'symptoms', 'description': 'a list of symptoms', 'datatype': 'List'}]","[{'name': 'potential_diseases', 'description': 'a list of potential diseases related to the symptoms', 'datatype': 'List'}]",,
Diagnosis2Treatment,Diagnosis2Treatment(disease) -> treatment_plan,751,This API is to convert a disease name to its treatment plan.,This API is to convert a disease name to its treatment plan.,"[{'name': 'disease', 'description': 'the name of the disease', 'datatype': 'String'}]","[{'name': 'treatment_plan', 'description': 'the treatment plan for the disease', 'datatype': 'String'}]",,
GetReview,GetReview(bookname) -> review,752,This API gets the review of a book.,This API gets the review of a book.,"[{'name': 'bookname', 'description': 'the name of the book', 'datatype': 'String'}]","[{'name': 'review', 'description': 'the review of the book', 'datatype': 'String'}]",,
ISBN2BookTitle,ISBN2BookTitle(ISBN) -> book_title,753,This API is to convert an ISBN to its corresponding book title.,This API is to convert an ISBN to its corresponding book title.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'book_title', 'description': 'the title of the book', 'datatype': 'String'}]",,
NotifyUser,"NotifyUser(person_ID, message) -> Notification status",754,This API is to send a notification to the user.,This API is to send a notification to the user.,"[{'name': 'person_ID', 'description': 'the ID of the person', 'datatype': 'Integer'}, {'name': 'message', 'description': 'the notification message', 'datatype': 'String'}]","[{'name': 'Notification status', 'description': 'the status of the notification', 'datatype': 'String'}]",,
ReserveHotel,"ReserveHotel(city, date, weather_status) -> reservation_status",755,This API allows the user to reserve a hotel in a certain city considering the weather status on a specific date.,This API allows the user to reserve a hotel in a certain city considering the weather status on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date', 'datatype': 'Date'}, {'name': 'weather_status', 'description': 'the weather status', 'datatype': 'String'}]","[{'name': 'reservation_status', 'description': 'the reservation status', 'datatype': 'String'}]",,
GetCountryCurrency,GetCountryCurrency(country) -> currency,756,This API provides the official currency of a specific country.,This API provides the official currency of a specific country.,"[{'name': 'country', 'description': 'the name of the country', 'datatype': 'String'}]","[{'name': 'currency', 'description': 'the official currency of the country', 'datatype': 'String'}]",,
CurrencyConverter,"CurrencyConverter(base_currency, target_currency, amount) -> converted_amount",757,This API provides a conversion tool from one currency to another.,This API provides a conversion tool from one currency to another.,"[{'name': 'base_currency', 'description': 'the base currency to convert from', 'datatype': 'String'}, {'name': 'target_currency', 'description': 'the target currency to convert to', 'datatype': 'String'}, {'name': 'amount', 'description': 'the amount to convert', 'datatype': 'Float'}]","[{'name': 'converted_amount', 'description': 'the converted amount in the target currency', 'datatype': 'Float'}]",,
CountryBudgetPlanner,"CountryBudgetPlanner(country, budget) -> plan",758,This API helps to generate a budget plan for a country based on the provided budget in the country's currency.,This API helps to generate a budget plan for a country based on the provided budget in the country's currency.,"[{'name': 'country', 'description': 'the name of the country', 'datatype': 'String'}, {'name': 'budget', 'description': 'the budget for the trip', 'datatype': 'Float'}]","[{'name': 'plan', 'description': 'the budget plan for the trip', 'datatype': 'String'}]",,
RestaurantDetail,"RestaurantDetail(city_name, cuisine_type) -> restaurant_list",759,This API is to query the restaurant information of a specific cuisine type in a city.,This API is to query the restaurant information of a specific cuisine type in a city.,"[{'name': 'city_name', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'cuisine_type', 'description': 'the type of cuisine', 'datatype': 'String'}]","[{'name': 'restaurant_list', 'description': 'a list of restaurants', 'datatype': 'List'}]",,
MealPlan,"MealPlan(restaurant_list, preferences) -> meal_plan",760,This API provides a meal plan based on the restaurant list and user preferences.,This API provides a meal plan based on the restaurant list and user preferences.,"[{'name': 'restaurant_list', 'description': 'a list of restaurants', 'datatype': 'List'}, {'name': 'preferences', 'description': 'user preferences', 'datatype': 'String'}]","[{'name': 'meal_plan', 'description': 'a meal plan', 'datatype': 'List'}]",,
BookingMake,"BookingMake(meal_plan, date_time) -> booking_confirmation",761,This API makes a booking based on the meal plan and the preferred date and time.,This API makes a booking based on the meal plan and the preferred date and time.,"[{'name': 'meal_plan', 'description': 'a meal plan', 'datatype': 'List'}, {'name': 'date_time', 'description': 'preferred date and time', 'datatype': 'DateTime'}]","[{'name': 'booking_confirmation', 'description': 'booking confirmation', 'datatype': 'String'}]",,
BookReviewRating,"BookReviewRating(bookInformation, authorBio) -> reviewRating",762,This API generates a review and rating based on the book's information and author's bio.,This API generates a review and rating based on the book's information and author's bio.,"[{'name': 'bookInformation', 'description': 'information about the book', 'datatype': 'String'}, {'name': 'authorBio', 'description': 'biography of the author', 'datatype': 'String'}]","[{'name': 'reviewRating', 'description': 'review and rating of the book', 'datatype': 'String'}]",,
MovieInfo,MovieInfo(title) -> movieDetails,763,This API retrieves detailed information about a movie.,This API retrieves detailed information about a movie.,"[{'name': 'title', 'description': 'the title of the movie', 'datatype': 'String'}]","[{'name': 'movieDetails', 'description': 'detailed information about the movie', 'datatype': 'Object'}]",,
CinemaShowtimes,"CinemaShowtimes(cinema, movieDetails) -> showtimes",764,This API retrieves the showtimes of a movie in a specific cinema.,This API retrieves the showtimes of a movie in a specific cinema.,"[{'name': 'cinema', 'description': 'the name of the cinema', 'datatype': 'String'}, {'name': 'movieDetails', 'description': 'detailed information about the movie', 'datatype': 'Object'}]","[{'name': 'showtimes', 'description': 'the showtimes of the movie in the cinema', 'datatype': 'List'}]",,
TicketAvailability,"TicketAvailability(cinema, showtimes) -> ticketStatus",765,This API checks the availability of tickets for a showtime in a cinema.,This API checks the availability of tickets for a showtime in a cinema.,"[{'name': 'cinema', 'description': 'the name of the cinema', 'datatype': 'String'}, {'name': 'showtimes', 'description': 'the showtimes of the movie in the cinema', 'datatype': 'List'}]","[{'name': 'ticketStatus', 'description': 'the availability status of tickets', 'datatype': 'String'}]",,
CreateInvoice,"CreateInvoice(customer_id, product_id, quantity) -> invoice",766,"This API is to create an invoice based on the customer ID, product ID and the quantity purchased.","This API is to create an invoice based on the customer ID, product ID and the quantity purchased.","[{'name': 'customer_id', 'description': 'the ID of the customer', 'datatype': 'String'}, {'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'String'}, {'name': 'quantity', 'description': 'the quantity purchased', 'datatype': 'Integer'}]","[{'name': 'invoice', 'description': 'the created invoice', 'datatype': 'Object'}]",,
CalculateTotal,CalculateTotal(invoice) -> total_cost,767,This API is to calculate the total cost of the items in the invoice.,This API is to calculate the total cost of the items in the invoice.,"[{'name': 'invoice', 'description': 'the invoice object', 'datatype': 'Object'}]","[{'name': 'total_cost', 'description': 'the total cost of the items in the invoice', 'datatype': 'Float'}]",,
UsernameToId,UsernameToId(user_name) -> User_Id,768,This API is to convert user name to its Id.,This API is to convert user name to its Id.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'User_Id', 'description': 'the Id of the user', 'datatype': 'Integer'}]",,
UserShoppingHistory,UserShoppingHistory(user_id) -> shopping_history,769,API to get the shopping history of a user.,API to get the shopping history of a user.,"[{'name': 'user_id', 'description': 'the Id of the user', 'datatype': 'Integer'}]","[{'name': 'shopping_history', 'description': 'the shopping history of the user', 'datatype': 'List'}]",,
ProductPriceHistory,ProductPriceHistory(product_id) -> price_history,770,API to get the price history of a product.,API to get the price history of a product.,"[{'name': 'product_id', 'description': 'the Id of the product', 'datatype': 'Integer'}]","[{'name': 'price_history', 'description': 'the price history of the product', 'datatype': 'List'}]",,
User2Age,User2Age(user_name) -> user_age,771,This API generates the age of a specific user through its user name.,This API generates the age of a specific user through its user name.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_age', 'description': 'the age of the user', 'datatype': 'Integer'}]",,
BuyAlcohol,BuyAlcohol(user_age) -> purchase_status,772,This API allows the user to purchase alcohol if their age is over the legal limit.,This API allows the user to purchase alcohol if their age is over the legal limit.,"[{'name': 'user_age', 'description': 'the age of the user', 'datatype': 'Integer'}]","[{'name': 'purchase_status', 'description': 'the status of the purchase', 'datatype': 'String'}]",,
RecommendDrink,RecommendDrink(user_preference) -> drink,773,This API suggests a type of drink according to user preference.,This API suggests a type of drink according to user preference.,"[{'name': 'user_preference', 'description': 'the preference of the user', 'datatype': 'String'}]","[{'name': 'drink', 'description': 'the suggested drink', 'datatype': 'String'}]",,
UserPreference,UserPreference(user_name) -> user_preference,774,This API will provide the preferred type of drink of the specified user.,This API will provide the preferred type of drink of the specified user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'user_preference', 'description': 'the preferred type of drink', 'datatype': 'String'}]",,
FindNearbyRestaurant,FindNearbyRestaurant(user_location) -> restaurant,775,This API finds a nearby restaurant based on the user's current location.,This API finds a nearby restaurant based on the user's current location.,"[{'name': 'user_location', 'description': 'the current location of the user', 'datatype': 'String'}]","[{'name': 'restaurant', 'description': 'the nearby restaurant', 'datatype': 'String'}]",,
GetUserDietaryRestrictions,GetUserDietaryRestrictions(user_name) -> restrictions,776,This API returns the user's dietary restrictions.,This API returns the user's dietary restrictions.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'restrictions', 'description': 'the dietary restrictions of the user', 'datatype': 'String'}]",,
FilterRestaurantByDietaryRestrictions,"FilterRestaurantByDietaryRestrictions(restaurant, restrictions) -> filtered_restaurant",777,This API filters the restaurant options based on dietary restrictions.,This API filters the restaurant options based on dietary restrictions.,"[{'name': 'restaurant', 'description': 'the nearby restaurant', 'datatype': 'String'}, {'name': 'restrictions', 'description': 'the dietary restrictions of the user', 'datatype': 'String'}]","[{'name': 'filtered_restaurant', 'description': 'the filtered restaurant options', 'datatype': 'String'}]",,
GetUserNextMeeting,GetUserNextMeeting(user_name) -> next_meeting,778,This API returns the next scheduled meeting of a user.,This API returns the next scheduled meeting of a user.,"[{'name': 'user_name', 'description': 'the name of the user', 'datatype': 'String'}]","[{'name': 'next_meeting', 'description': 'the next scheduled meeting', 'datatype': 'Time'}]",,
Meeting2TimeZone,Meeting2TimeZone(meeting) -> timezone,779,This API converts a meeting to the timezone where it will be held.,This API converts a meeting to the timezone where it will be held.,"[{'name': 'meeting', 'description': 'the meeting to be converted', 'datatype': 'Time'}]","[{'name': 'timezone', 'description': 'the timezone where the meeting will be held', 'datatype': 'String'}]",,
ConvertTime,"ConvertTime(time, source_timezone, target_timezone) -> converted_time",780,This API converts a specific time from the source timezone to the target timezone.,This API converts a specific time from the source timezone to the target timezone.,"[{'name': 'time', 'description': 'the specific time to be converted', 'datatype': 'Time'}, {'name': 'source_timezone', 'description': 'the source timezone of the time', 'datatype': 'String'}, {'name': 'target_timezone', 'description': 'the target timezone to convert the time to', 'datatype': 'String'}]","[{'name': 'converted_time', 'description': 'the converted time in the target timezone', 'datatype': 'Time'}]",,
AvailabilityCheck,AvailabilityCheck(ISBN) -> availability_status,781,This API checks the availability of a book using its ISBN.,This API checks the availability of a book using its ISBN.,"[{'name': 'ISBN', 'description': 'the ISBN of the book', 'datatype': 'String'}]","[{'name': 'availability_status', 'description': 'the availability status of the book', 'datatype': 'String'}]",,
GetUserLocationByUsername,GetUserLocationByUsername(username) -> user_location,782,This API is used to get a user's location based on their username.,This API is used to get a user's location based on their username.,"[{'name': 'username', 'description': 'the username of the user', 'datatype': 'String'}]","[{'name': 'user_location', 'description': 'the location of the user', 'datatype': 'String'}]",,
GetTimeZoneByLocation,GetTimeZoneByLocation(location) -> timezone,783,This API is used to determine the timezone based on a given location.,This API is used to determine the timezone based on a given location.,"[{'name': 'location', 'description': 'the location', 'datatype': 'String'}]","[{'name': 'timezone', 'description': 'the timezone', 'datatype': 'String'}]",,
ScheduleMeeting,"ScheduleMeeting(user_email, start_time, end_time, timezone) -> meeting_status",784,This API schedules a meeting.,This API schedules a meeting.,"[{'name': 'user_email', 'description': 'the email of the user', 'datatype': 'String'}, {'name': 'start_time', 'description': 'the start time of the meeting', 'datatype': 'Time'}, {'name': 'end_time', 'description': 'the end time of the meeting', 'datatype': 'Time'}, {'name': 'timezone', 'description': 'the timezone of the meeting', 'datatype': 'String'}]","[{'name': 'meeting_status', 'description': 'the status of the meeting', 'datatype': 'String'}]",,
GetPriceByID,GetPriceByID(product_id) -> product_price,785,This API retrieves the price for a product by its ID.,This API retrieves the price for a product by its ID.,"[{'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'Integer'}]","[{'name': 'product_price', 'description': 'the price of the product', 'datatype': 'Float'}]",,
GetDiscount,"GetDiscount(product_id, coupon_code) -> discount_price",786,This API gives the discounted price of the product after applying a coupon code.,This API gives the discounted price of the product after applying a coupon code.,"[{'name': 'product_id', 'description': 'the ID of the product', 'datatype': 'Integer'}, {'name': 'coupon_code', 'description': 'the coupon code', 'datatype': 'String'}]","[{'name': 'discount_price', 'description': 'the discounted price of the product', 'datatype': 'Float'}]",,
FindRestaurantByname,FindRestaurantByname(name) -> restaurant_ID,787,This API returns the id of a restaurant by its name.,This API returns the id of a restaurant by its name.,"[{'name': 'name', 'description': 'the name of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_ID', 'description': 'the id of the restaurant', 'datatype': 'Integer'}]",,
FindProductId,FindProductId(product_name) -> product_id,788,This API returns the id of a product.,This API returns the id of a product.,"[{'name': 'product_name', 'description': 'the name of the product', 'datatype': 'String'}]","[{'name': 'product_id', 'description': 'the id of the product', 'datatype': 'Integer'}]",,
GetCustomerID,GetCustomerID(name) -> customer_ID,789,This API returns the id of a customer.,This API returns the id of a customer.,"[{'name': 'name', 'description': 'the name of the customer', 'datatype': 'String'}]","[{'name': 'customer_ID', 'description': 'the id of the customer', 'datatype': 'Integer'}]",,
CheckOutCart,CheckOutCart(customer_ID) -> checkout_status,790,This API checks out a customer's cart.,This API checks out a customer's cart.,"[{'name': 'customer_ID', 'description': 'the id of the customer', 'datatype': 'Integer'}]","[{'name': 'checkout_status', 'description': 'the status of the checkout', 'datatype': 'String'}]",,
GetRoomType,"GetRoomType(hotel_ID, room_type) -> room_ID",791,This API returns the ID of a specific room type in a particular hotel.,This API returns the ID of a specific room type in a particular hotel.,"[{'name': 'hotel_ID', 'description': 'the ID of the hotel', 'datatype': 'Integer'}, {'name': 'room_type', 'description': 'the type of the room', 'datatype': 'String'}]","[{'name': 'room_ID', 'description': 'the ID of the room', 'datatype': 'Integer'}]",,
MovieTitle2ID,MovieTitle2ID(movie_title) -> movie_ID,792,This API converts a movie title to its ID.,This API converts a movie title to its ID.,"[{'name': 'movie_title', 'description': 'the title of the movie', 'datatype': 'String'}]","[{'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]",,
AddToWatchlist,"AddToWatchlist(user_ID, movie_ID) -> Watchlist status",793,This API adds a movie to a user's watchlist.,This API adds a movie to a user's watchlist.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'movie_ID', 'description': 'the ID of the movie', 'datatype': 'Integer'}]","[{'name': 'Watchlist status', 'description': 'the status of adding the movie to the watchlist', 'datatype': 'String'}]",,
EmailNotification,"EmailNotification(user_ID, message) -> Notification status",794,This API sends a notification email to the user.,This API sends a notification email to the user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}, {'name': 'message', 'description': 'the notification message', 'datatype': 'String'}]","[{'name': 'Notification status', 'description': 'the status of sending the notification email', 'datatype': 'String'}]",,
GetBoardingPass,"GetBoardingPass(reservation_id, email) -> boarding_pass",795,This API generates a boarding pass for a confirmed reservation and sends it to a specified email.,This API generates a boarding pass for a confirmed reservation and sends it to a specified email.,"[{'name': 'reservation_id', 'description': 'the ID of the confirmed reservation', 'datatype': 'Integer'}, {'name': 'email', 'description': 'the email address to which the boarding pass will be sent', 'datatype': 'String'}]","[{'name': 'boarding_pass', 'description': 'the generated boarding pass', 'datatype': 'String'}]",,
FindNutritionInfo,FindNutritionInfo(menu_item) -> nutrition_details,796,This API is to find the nutritional information of a specific menu item.,This API is to find the nutritional information of a specific menu item.,"[{'name': 'menu_item', 'description': 'the name of the menu item', 'datatype': 'String'}]","[{'name': 'nutrition_details', 'description': 'the nutritional information of the menu item', 'datatype': 'String'}]",,
GetCalories,GetCalories(menu_item) -> calories,797,This API is to get the calories of a specific menu item.,This API is to get the calories of a specific menu item.,"[{'name': 'menu_item', 'description': 'the specific menu item', 'datatype': 'String'}]","[{'name': 'calories', 'description': 'the calories of the menu item', 'datatype': 'Integer'}]",,
GetRestaurantDetails,GetRestaurantDetails(location) -> restaurant_info,798,This API is to get the restaurant details of a specific location.,This API is to get the restaurant details of a specific location.,"[{'name': 'location', 'description': 'the location of the restaurant', 'datatype': 'String'}]","[{'name': 'restaurant_info', 'description': 'the details of the restaurant', 'datatype': 'Object'}]",,
GetRestaurantReview,GetRestaurantReview(restaurant_info) -> restaurant_review,799,This API is to get reviews of a specific restaurant.,This API is to get reviews of a specific restaurant.,"[{'name': 'restaurant_info', 'description': 'the details of the restaurant', 'datatype': 'Object'}]","[{'name': 'restaurant_review', 'description': 'the reviews of the restaurant', 'datatype': 'Object'}]",,
GetCuisineRecommendation,GetCuisineRecommendation(restaurant_review) -> cuisine_recommendation,800,This API is to get cuisine recommendation based on the restaurant review.,This API is to get cuisine recommendation based on the restaurant review.,"[{'name': 'restaurant_review', 'description': 'the reviews of the restaurant', 'datatype': 'Object'}]","[{'name': 'cuisine_recommendation', 'description': 'the cuisine recommendation', 'datatype': 'Object'}]",,
RetrieveLocalTrafficInfo,RetrieveLocalTrafficInfo(city) -> traffic_info,801,This API is to get real-time traffic information on the roads of a specific city.,This API is to get real-time traffic information on the roads of a specific city.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}]","[{'name': 'traffic_info', 'description': 'the real-time traffic information', 'datatype': 'String'}]",,
FetchNextBus,"FetchNextBus(travel_time, bus_route) -> bus_info",802,This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.,This API is to fetch the timing of the next bus on a specific route based on the estimated travel time.,"[{'name': 'travel_time', 'description': 'the calculated travel time', 'datatype': 'Time'}, {'name': 'bus_route', 'description': 'the specific bus route', 'datatype': 'String'}]","[{'name': 'bus_info', 'description': 'the timing of the next bus on the specific route', 'datatype': 'String'}]",,
SearchEvent,"SearchEvent(city, type) -> event",803,This API searches for a specific type of event in a certain city.,This API searches for a specific type of event in a certain city.,"[{'name': 'city', 'description': 'the city where the event is searched', 'datatype': 'String'}, {'name': 'type', 'description': 'the type of event to search', 'datatype': 'String'}]","[{'name': 'event', 'description': 'the specific event found', 'datatype': 'String'}]",,
FindTickets,"FindTickets(event, number) -> tickets",804,This API finds the required number of tickets for a specific event.,This API finds the required number of tickets for a specific event.,"[{'name': 'event', 'description': 'the specific event to find tickets for', 'datatype': 'String'}, {'name': 'number', 'description': 'the number of tickets required', 'datatype': 'Integer'}]","[{'name': 'tickets', 'description': 'the required number of tickets', 'datatype': 'String'}]",,
ArrangeTransportation,"ArrangeTransportation(city, date) -> transportation",805,This API arranges transportation to a specific city on a certain date.,This API arranges transportation to a specific city on a certain date.,"[{'name': 'city', 'description': 'the specific city to arrange transportation to', 'datatype': 'String'}, {'name': 'date', 'description': 'the date of transportation', 'datatype': 'Date'}]","[{'name': 'transportation', 'description': 'the arranged transportation', 'datatype': 'String'}]",,
GetEventCalendar,GetEventCalendar(user_id) -> event,806,This API retrieves the user's event calendar based on their user id.,This API retrieves the user's event calendar based on their user id.,"[{'name': 'user_id', 'description': 'the id of the user', 'datatype': 'String'}]","[{'name': 'event', 'description': ""the user's event calendar"", 'datatype': 'List'}]",,
FindTravelTime,"FindTravelTime(start_location, end_location) -> travel_time",807,This API finds the estimated travel time between two locations.,This API finds the estimated travel time between two locations.,"[{'name': 'start_location', 'description': 'the starting location', 'datatype': 'String'}, {'name': 'end_location', 'description': 'the ending location', 'datatype': 'String'}]","[{'name': 'travel_time', 'description': 'the estimated travel time', 'datatype': 'Time'}]",,
GetAvailableFlights,"GetAvailableFlights(origin, destination) -> flights",808,This API is to get available flights from an origin to a destination.,This API is to get available flights from an origin to a destination.,"[{'name': 'origin', 'description': 'the origin location', 'datatype': 'String'}, {'name': 'destination', 'description': 'the destination location', 'datatype': 'String'}]","[{'name': 'flights', 'description': 'a list of available flights', 'datatype': 'List'}]",,
FindCheapestFlight,FindCheapestFlight(flights) -> cheapestFlight,809,This API is to find the cheapest flight from the list of available flights.,This API is to find the cheapest flight from the list of available flights.,"[{'name': 'flights', 'description': 'a list of available flights', 'datatype': 'List'}]","[{'name': 'cheapestFlight', 'description': 'the cheapest flight from the list', 'datatype': 'Flight'}]",,
GetTicketPrice,"GetTicketPrice(cinema, movie) -> price",810,This API is to get the ticket price of a specific movie at a specific cinema.,This API is to get the ticket price of a specific movie at a specific cinema.,"[{'name': 'cinema', 'description': 'the name of the cinema', 'datatype': 'String'}, {'name': 'movie', 'description': 'the name of the movie', 'datatype': 'String'}]","[{'name': 'price', 'description': 'the ticket price', 'datatype': 'Float'}]",,
CalculateTotalMovieOutingTime,"CalculateTotalMovieOutingTime(travelTime, movieLength) -> totalOutingTime",811,This API is to calculate the total time of the movie outing considering the travel time and the movie length.,This API is to calculate the total time of the movie outing considering the travel time and the movie length.,"[{'name': 'travelTime', 'description': 'the estimated travel time', 'datatype': 'Time'}, {'name': 'movieLength', 'description': 'the length of the movie', 'datatype': 'String'}]","[{'name': 'totalOutingTime', 'description': 'the total time of the movie outing', 'datatype': 'Time'}]",,
SuggestMealType,SuggestMealType(weather_forecast) -> meal_type,812,This API is to suggest a meal type based on the weather forecast.,This API is to suggest a meal type based on the weather forecast.,"[{'name': 'weather_forecast', 'description': 'the weather forecast', 'datatype': 'String'}]","[{'name': 'meal_type', 'description': 'the suggested meal type', 'datatype': 'String'}]",,
LibraryHours,"LibraryHours(city, date) -> hours",813,This API is used to check the opening hours of a library in a certain city on a specific date.,This API is used to check the opening hours of a library in a certain city on a specific date.,"[{'name': 'city', 'description': 'the name of the city', 'datatype': 'String'}, {'name': 'date', 'description': 'the specific date', 'datatype': 'Date'}]","[{'name': 'hours', 'description': 'the opening hours of the library', 'datatype': 'String'}]",,
FetchFlightID,FetchFlightID(flight_name) -> flight_ID,814,This API retrieves the flight ID using the flight name.,This API retrieves the flight ID using the flight name.,"[{'name': 'flight_name', 'description': 'the name of the flight', 'datatype': 'String'}]","[{'name': 'flight_ID', 'description': 'the ID of the flight', 'datatype': 'Integer'}]",,
FetchCity,FetchCity(user_ID) -> city,815,This API will return the city of the user based on user ID.,This API will return the city of the user based on user ID.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'city', 'description': 'the city of the user', 'datatype': 'String'}]",,
Plate2VehicleID,Plate2VehicleID(plate_number) -> vehicle_ID,816,This API is to convert a vehicle's plate number to vehicle ID.,This API is to convert a vehicle's plate number to vehicle ID.,"[{'name': 'plate_number', 'description': 'the plate number of the vehicle', 'datatype': 'String'}]","[{'name': 'vehicle_ID', 'description': 'the ID of the vehicle', 'datatype': 'Integer'}]",,
CurrentLocation,CurrentLocation(vehicle_ID) -> location_info,817,This API gives the current location of a vehicle based on vehicle ID.,This API gives the current location of a vehicle based on vehicle ID.,"[{'name': 'vehicle_ID', 'description': 'the ID of the vehicle', 'datatype': 'Integer'}]","[{'name': 'location_info', 'description': 'the current location information of the vehicle', 'datatype': 'String'}]",,
NotifyOwner,"NotifyOwner(vehicle_ID, message) -> Notification status",818,This API is to send a notification to the vehicle's owner.,This API is to send a notification to the vehicle's owner.,"[{'name': 'vehicle_ID', 'description': 'the ID of the vehicle', 'datatype': 'Integer'}, {'name': 'message', 'description': 'the notification message', 'datatype': 'String'}]","[{'name': 'Notification status', 'description': 'the status of the notification', 'datatype': 'String'}]",,
CalculateDistances,"CalculateDistances(city_from, city_to) -> distance between cities",819,This API is to calculate the distance between two cities.,This API is to calculate the distance between two cities.,"[{'name': 'city_from', 'description': 'the name of the starting city', 'datatype': 'String'}, {'name': 'city_to', 'description': 'the name of the destination city', 'datatype': 'String'}]","[{'name': 'distance between cities', 'description': 'the distance between the two cities', 'datatype': 'Float'}]",,
GetFlightDuration,"GetFlightDuration(city_from, city_to) -> flight duration",820,This API is to get the flight duration between two cities.,This API is to get the flight duration between two cities.,"[{'name': 'city_from', 'description': 'the name of the starting city', 'datatype': 'String'}, {'name': 'city_to', 'description': 'the name of the destination city', 'datatype': 'String'}]","[{'name': 'flight duration', 'description': 'the duration of the flight between the two cities', 'datatype': 'Time'}]",,
GetCurrencyExchangeRate,"GetCurrencyExchangeRate(currency_from, currency_to) -> exchange rate",821,This API is to get the exchange rate between two currencies.,This API is to get the exchange rate between two currencies.,"[{'name': 'currency_from', 'description': 'the currency to convert from', 'datatype': 'String'}, {'name': 'currency_to', 'description': 'the currency to convert to', 'datatype': 'String'}]","[{'name': 'exchange rate', 'description': 'the exchange rate between the two currencies', 'datatype': 'Float'}]",,
FetchUserPlaylist,FetchUserPlaylist(user_id) -> playlist,822,This API allows the user to fetch a playlist of a certain user.,This API allows the user to fetch a playlist of a certain user.,"[{'name': 'user_id', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'playlist', 'description': 'the playlist of the user', 'datatype': 'List'}]",,
GetUserPreferences,GetUserPreferences(user_ID) -> movie_genre,823,This API returns the preferred movie genre of a certain user.,This API returns the preferred movie genre of a certain user.,"[{'name': 'user_ID', 'description': 'the ID of the user', 'datatype': 'Integer'}]","[{'name': 'movie_genre', 'description': 'the preferred movie genre', 'datatype': 'String'}]",,
